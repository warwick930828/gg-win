var window = window || global;
var document = document || (window.document = {});
/***********************************/
/*http://www.layabox.com  2017/3/23*/
/***********************************/
var Laya=window.Laya=(function(window,document){
	var Laya={
		__internals:[],
		__packages:{},
		__classmap:{'Object':Object,'Function':Function,'Array':Array,'String':String},
		__sysClass:{'object':'Object','array':'Array','string':'String','dictionary':'Dictionary'},
		__propun:{writable: true,enumerable: false,configurable: true},
		__presubstr:String.prototype.substr,
		__substr:function(ofs,sz){return arguments.length==1?Laya.__presubstr.call(this,ofs):Laya.__presubstr.call(this,ofs,sz>0?sz:(this.length+sz));},
		__init:function(_classs){_classs.forEach(function(o){o.__init$ && o.__init$();});},
		__isClass:function(o){return o && (o.__isclass || o==Object || o==String || o==Array);},
		__newvec:function(sz,value){
			var d=[];
			d.length=sz;
			for(var i=0;i<sz;i++) d[i]=value;
			return d;
		},
		__extend:function(d,b){
			for (var p in b){
				if (!b.hasOwnProperty(p)) continue;
				var gs=Object.getOwnPropertyDescriptor(b, p);
				var g = gs.get, s = gs.set; 
				if ( g || s ) {
					if ( g && s)
						Object.defineProperty(d,p,gs);
					else{
						g && Object.defineProperty(d, p, g);
						s && Object.defineProperty(d, p, s);
					}
				}
				else d[p] = b[p];
			}
			function __() { Laya.un(this,'constructor',d); }__.prototype=b.prototype;d.prototype=new __();Laya.un(d.prototype,'__imps',Laya.__copy({},b.prototype.__imps));
		},
		__copy:function(dec,src){
			if(!src) return null;
			dec=dec||{};
			for(var i in src) dec[i]=src[i];
			return dec;
		},
		__package:function(name,o){
			if(Laya.__packages[name]) return;
			Laya.__packages[name]=true;
			var p=window,strs=name.split('.');
			if(strs.length>1){
				for(var i=0,sz=strs.length-1;i<sz;i++){
					var c=p[strs[i]];
					p=c?c:(p[strs[i]]={});
				}
			}
			p[strs[strs.length-1]] || (p[strs[strs.length-1]]=o||{});
		},
		__hasOwnProperty:function(name,o){
			o=o ||this;
		    function classHas(name,o){
				if(Object.hasOwnProperty.call(o.prototype,name)) return true;
				var s=o.prototype.__super;
				return s==null?null:classHas(name,s);
			}
			return (Object.hasOwnProperty.call(o,name)) || classHas(name,o.__class);
		},
		__typeof:function(o,value){
			if(!o || !value) return false;
			if(value===String) return (typeof o==='string');
			if(value===Number) return (typeof o==='number');
			if(value.__interface__) value=value.__interface__;
			else if(typeof value!='string')  return (o instanceof value);
			return (o.__imps && o.__imps[value]) || (o.__class==value);
		},
		__as:function(value,type){
			return (this.__typeof(value,type))?value:null;
		},		
		interface:function(name,_super){
			Laya.__package(name,{});
			var ins=Laya.__internals;
			var a=ins[name]=ins[name] || {self:name};
			if(_super)
			{
				var supers=_super.split(',');
				a.extend=[];
				for(var i=0;i<supers.length;i++){
					var nm=supers[i];
					ins[nm]=ins[nm] || {self:nm};
					a.extend.push(ins[nm]);
				}
			}
			var o=window,words=name.split('.');
			for(var i=0;i<words.length-1;i++) o=o[words[i]];
			o[words[words.length-1]]={__interface__:name};
		},
		class:function(o,fullName,_super,miniName){
			_super && Laya.__extend(o,_super);
			if(fullName){
				Laya.__package(fullName,o);
				Laya.__classmap[fullName]=o;
				if(fullName.indexOf('.')>0){
					if(fullName.indexOf('laya.')==0){
						var paths=fullName.split('.');
						miniName=miniName || paths[paths.length-1];
						if(Laya[miniName]) console.log("Warning!,this class["+miniName+"] already exist:",Laya[miniName]);
						Laya[miniName]=o;
					}
				}
				else {
					if(fullName=="Main")
						window.Main=o;
					else{
						if(Laya[fullName]){
							console.log("Error!,this class["+fullName+"] already exist:",Laya[fullName]);
						}
						Laya[fullName]=o;
					}
				}
			}
			var un=Laya.un,p=o.prototype;
			un(p,'hasOwnProperty',Laya.__hasOwnProperty);
			un(p,'__class',o);
			un(p,'__super',_super);
			un(p,'__className',fullName);
			un(o,'__super',_super);
			un(o,'__className',fullName);
			un(o,'__isclass',true);
			un(o,'super',function(o){this.__super.call(o);});
		},
		imps:function(dec,src){
			if(!src) return null;
			var d=dec.__imps|| Laya.un(dec,'__imps',{});
			function __(name){
				var c,exs;
				if(! (c=Laya.__internals[name]) ) return;
				d[name]=true;
				if(!(exs=c.extend)) return;
				for(var i=0;i<exs.length;i++){
					__(exs[i].self);
				}
			}
			for(var i in src) __(i);
		},
		getset:function(isStatic,o,name,getfn,setfn){
			if(!isStatic){
				getfn && Laya.un(o,'_$get_'+name,getfn);
				setfn && Laya.un(o,'_$set_'+name,setfn);
			}
			else{
				getfn && (o['_$GET_'+name]=getfn);
				setfn && (o['_$SET_'+name]=setfn);
			}
			if(getfn && setfn) 
				Object.defineProperty(o,name,{get:getfn,set:setfn,enumerable:false});
			else{
				getfn && Object.defineProperty(o,name,{get:getfn,enumerable:false});
				setfn && Object.defineProperty(o,name,{set:setfn,enumerable:false});
			}
		},
		static:function(_class,def){
				for(var i=0,sz=def.length;i<sz;i+=2){
					if(def[i]=='length') 
						_class.length=def[i+1].call(_class);
					else{
						function tmp(){
							var name=def[i];
							var getfn=def[i+1];
							Object.defineProperty(_class,name,{
								get:function(){delete this[name];return this[name]=getfn.call(this);},
								set:function(v){delete this[name];this[name]=v;},enumerable: true,configurable: true});
						}
						tmp();
					}
				}
		},		
		un:function(obj,name,value){
			value || (value=obj[name]);
			Laya.__propun.value=value;
			Object.defineProperty(obj, name, Laya.__propun);
			return value;
		},
		uns:function(obj,names){
			names.forEach(function(o){Laya.un(obj,o)});
		}
	};

	window.console=window.console || ({log:function(){}});
	window.trace=window.console.log;
	Error.prototype.throwError=function(){throw arguments;};
	//String.prototype.substr=Laya.__substr;
	Object.defineProperty(Array.prototype,'fixed',{enumerable: false});

	return Laya;
})(window,document);

(function(window,document,Laya){
	var __un=Laya.un,__uns=Laya.uns,__static=Laya.static,__class=Laya.class,__getset=Laya.getset,__newvec=Laya.__newvec;
	Laya.interface('fairygui.IUISource');
	Laya.interface('fairygui.IColorGear');
	Laya.interface('laya.runtime.IMarket');
	Laya.interface('laya.filters.IFilter');
	Laya.interface('laya.display.ILayout');
	Laya.interface('laya.resource.IDispose');
	Laya.interface('laya.runtime.IConchNode');
	Laya.interface('fairygui.IAnimationGear');
	Laya.interface('laya.webgl.submit.ISubmit');
	Laya.interface('laya.filters.IFilterAction');
	Laya.interface('laya.runtime.ICPlatformClass');
	Laya.interface('laya.webgl.canvas.save.ISaveData');
	Laya.interface('laya.webgl.resource.IMergeAtlasBitmap');
	Laya.interface('laya.filters.IFilterActionGL','laya.filters.IFilterAction');
	//class Laya
	var ___Laya=(function(){
		//function Laya(){};
		/**
		*表示是否捕获全局错误并弹出提示。默认为false。
		*适用于移动设备等不方便调试的时候，设置为true后，如有未知错误，可以弹窗抛出详细错误堆栈。
		*/
		__getset(1,Laya,'alertGlobalError',null,function(value){
			var erralert=0;
			if (value){
				Browser.window.onerror=function (msg,url,line,column,detail){
					if (erralert++< 5 && detail)
						alert("出错啦，请把此信息截图给研发商\n"+msg+"\n"+detail.stack||detail);
				}
				}else {
				Browser.window.onerror=null;
			}
		});

		Laya.init=function(width,height,__plugins){
			var plugins=[];for(var i=2,sz=arguments.length;i<sz;i++)plugins.push(arguments[i]);
			if (Laya._isinit)return;
			ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice=Laya._arrayBufferSlice);
			Laya._isinit=true;
			Browser.__init__();
			Context.__init__();
			Graphics.__init__();
			Laya.timer=new Timer();
			Laya.scaleTimer=new Timer();
			Laya.loader=new LoaderManager();
			WeakObject.__init__();
			for (var i=0,n=plugins.length;i < n;i++){
				if (plugins[i].enable)plugins[i].enable();
			}
			Font.__init__();
			Style.__init__();
			ResourceManager.__init__();
			CacheManager.beginCheck();
			Laya._currentStage=Laya.stage=new Stage();
			Laya.stage.conchModel && Laya.stage.conchModel.setRootNode();
			Laya.getUrlPath();
			Laya.render=new Render(0,0);
			Laya.stage.size(width,height);
			RenderSprite.__init__();
			KeyBoardManager.__init__();
			MouseManager.instance.__init__(Laya.stage,Render.canvas);
			Input.__init__();
			SoundManager.autoStopMusic=true;
			LocalStorage.__init__();
			return Render.canvas;
		}

		Laya.getUrlPath=function(){
			var location=Browser.window.location;
			var pathName=location.pathname;
			pathName=pathName.charAt(2)==':' ? pathName.substring(1):pathName;
			URL.rootPath=URL.basePath=URL.getPath(location.protocol=="file:" ? pathName :location.protocol+"//"+location.host+location.pathname);
		}

		Laya._arrayBufferSlice=function(start,end){
			var arr=this;
			var arrU8List=new Uint8Array(arr,start,end-start);
			var newU8List=new Uint8Array(arrU8List.length);
			newU8List.set(arrU8List);
			return newU8List.buffer;
		}

		Laya._runScript=function(script){
			return Browser.window["e"+String.fromCharCode(100+10+8)+"a"+"l"](script);
		}

		Laya.stage=null;
		Laya.timer=null;
		Laya.scaleTimer=null;
		Laya.loader=null;
		Laya.version="1.7.18";
		Laya.render=null
		Laya._currentStage=null
		Laya._isinit=false;
		Laya.MiniAdpter={init:function(){if (window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf("MiniGame")>-1)console.error("请先引用小游戏适配库laya.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0")}}
		__static(Laya,
		['conchMarket',function(){return this.conchMarket=window.conch?conchMarket:null;},'PlatformClass',function(){return this.PlatformClass=window.PlatformClass;}
		]);
		return Laya;
	})()


	//class fairygui.GObject
	var GObject=(function(){
		function GObject(){
			this.data=null;
			this.packageItem=null;
			this._x=0;
			this._y=0;
			this._alpha=1;
			this._rotation=0;
			this._visible=true;
			this._touchable=true;
			this._grayed=false;
			this._draggable=false;
			this._scaleX=1;
			this._scaleY=1;
			this._skewX=0;
			this._skewY=0;
			this._pivotX=0;
			this._pivotY=0;
			this._pivotAsAnchor=false;
			this._pivotOffsetX=0;
			this._pivotOffsetY=0;
			this._sortingOrder=0;
			this._internalVisible=true;
			this._handlingController=false;
			this._focusable=false;
			this._tooltips=null;
			this._pixelSnapping=false;
			this._relations=null;
			this._group=null;
			this._gears=null;
			this._dragBounds=null;
			this._displayObject=null;
			this._yOffset=0;
			this._sizeImplType=0;
			this.minWidth=0;
			this.minHeight=0;
			this.maxWidth=0;
			this.maxHeight=0;
			this.sourceWidth=0;
			this.sourceHeight=0;
			this.initWidth=0;
			this.initHeight=0;
			this._parent=null;
			this._width=0;
			this._height=0;
			this._rawWidth=0;
			this._rawHeight=0;
			this._id=null;
			this._name=null;
			this._underConstruct=false;
			this._gearLocked=false;
			this._sizePercentInGroup=0;
			this._touchDownPoint=null;
			;
			this._id=""+fairygui.GObject._gInstanceCounter++;
			this._name="";
			this.createDisplayObject();
			this._relations=new Relations(this);
			this._gears=__newvec(8,null);
		}

		__class(GObject,'fairygui.GObject');
		var __proto=GObject.prototype;
		__proto.setXY=function(xv,yv){
			if(this._x !=xv || this._y !=yv){
				var dx=xv-this._x;
				var dy=yv-this._y;
				this._x=xv;
				this._y=yv;
				this.handleXYChanged();
				if((this instanceof fairygui.GGroup ))
					(this).moveChildren(dx,dy);
				this.updateGear(1);
				if(this._parent && !((this._parent instanceof fairygui.GList ))){
					this._parent.setBoundsChangedFlag();
					if (this._group !=null)
						this._group.setBoundsChangedFlag();
					this.displayObject.event("fui_xy_changed");
				}
				if (GObject.draggingObject==this && !GObject.sUpdateInDragging)
					this.localToGlobalRect(0,0,this.width,this.height,GObject.sGlobalRect);
			}
		}

		__proto.center=function(restraint){
			(restraint===void 0)&& (restraint=false);
			var r;
			if(this._parent !=null)
				r=this.parent;
			else
			r=this.root;
			this.setXY((r.width-this.width)/ 2,(r.height-this.height)/ 2);
			if(restraint){
				this.addRelation(r,3);
				this.addRelation(r,10);
			}
		}

		__proto.setSize=function(wv,hv,ignorePivot){
			(ignorePivot===void 0)&& (ignorePivot=false);
			if(this._rawWidth !=wv || this._rawHeight !=hv){
				this._rawWidth=wv;
				this._rawHeight=hv;
				if(wv<this.minWidth)
					wv=this.minWidth;
				if(hv<this.minHeight)
					hv=this.minHeight;
				if(this.maxWidth>0 && wv>this.maxWidth)
					wv=this.maxWidth;
				if(this.maxHeight>0 && hv>this.maxHeight)
					hv=this.maxHeight;
				var dWidth=wv-this._width;
				var dHeight=hv-this._height;
				this._width=wv;
				this._height=hv;
				this.handleSizeChanged();
				if(this._pivotX !=0 || this._pivotY !=0){
					if(!this._pivotAsAnchor){
						if(!ignorePivot)
							this.setXY(this.x-this._pivotX *dWidth,this.y-this._pivotY *dHeight);
						this.updatePivotOffset();
					}
					else
					this.applyPivot();
				}
				if ((this instanceof fairygui.GGroup ))
					(this).resizeChildren(dWidth,dHeight);
				this.updateGear(2);
				if(this._parent){
					this._relations.onOwnerSizeChanged(dWidth,dHeight);
					this._parent.setBoundsChangedFlag();
					if (this._group !=null)
						this._group.setBoundsChangedFlag(true);
				}
				this.displayObject.event("fui_size_changed");
			}
		}

		__proto.ensureSizeCorrect=function(){}
		__proto.setScale=function(sx,sy){
			if(this._scaleX !=sx || this._scaleY !=sy){
				this._scaleX=sx;
				this._scaleY=sy;
				this.handleScaleChanged();
				this.applyPivot();
				this.updateGear(2);
			}
		}

		__proto.setSkew=function(sx,sy){
			if(this._skewX !=sx || this._skewY !=sy){
				this._skewX=sx;
				this._skewY=sy;
				if(this._displayObject!=null){
					this._displayObject.skew(-sx,sy);
					this.applyPivot();
				}
			}
		}

		__proto.setPivot=function(xv,yv,asAnchor){
			(yv===void 0)&& (yv=0);
			(asAnchor===void 0)&& (asAnchor=false);
			if(this._pivotX !=xv || this._pivotY !=yv || this._pivotAsAnchor!=asAnchor){
				this._pivotX=xv;
				this._pivotY=yv;
				this._pivotAsAnchor=asAnchor;
				this.updatePivotOffset();
				this.handleXYChanged();
			}
		}

		__proto.internalSetPivot=function(xv,yv,asAnchor){
			this._pivotX=xv;
			this._pivotY=yv;
			this._pivotAsAnchor=asAnchor;
			if(this._pivotAsAnchor)
				this.handleXYChanged();
		}

		__proto.updatePivotOffset=function(){
			if(this._displayObject!=null){
				if(this._displayObject.transform && (this._pivotX!=0 || this._pivotY!=0)){
					if(this._sizeImplType==0){
						fairygui.GObject.sHelperPoint.x=this._pivotX*this._width;
						fairygui.GObject.sHelperPoint.y=this._pivotY*this._height;
					}
					else {
						fairygui.GObject.sHelperPoint.x=this._pivotX*this.sourceWidth;
						fairygui.GObject.sHelperPoint.y=this._pivotY*this.sourceHeight;
					};
					var pt=this._displayObject.transform.transformPoint(fairygui.GObject.sHelperPoint);
					this._pivotOffsetX=this._pivotX*this._width-pt.x;
					this._pivotOffsetY=this._pivotY*this._height-pt.y;
				}
				else{
					this._pivotOffsetX=0;
					this._pivotOffsetY=0;
				}
			}
		}

		__proto.applyPivot=function(){
			if(this._pivotX !=0 || this._pivotY !=0){
				this.updatePivotOffset();
				this.handleXYChanged();
			}
		}

		__proto.requestFocus=function(){
			var p=this;
			while (p && !p._focusable)
			p=p.parent;
			if (p !=null)
				this.root.focus=p;
		}

		__proto.getGear=function(index){
			var gear=this._gears[index];
			if (gear==null){
				switch (index){
					case 0:
						gear=new GearDisplay(this);
						break ;
					case 1:
						gear=new GearXY(this);
						break ;
					case 2:
						gear=new GearSize(this);
						break ;
					case 3:
						gear=new GearLook(this);
						break ;
					case 4:
						gear=new GearColor(this);
						break ;
					case 5:
						gear=new GearAnimation(this);
						break ;
					case 6:
						gear=new GearText(this);
						break ;
					case 7:
						gear=new GearIcon(this);
						break ;
					default :
						throw new Error("FairyGUI: invalid gear index!");
					}
				this._gears[index]=gear;
			}
			return gear;
		}

		__proto.updateGear=function(index){
			if(this._underConstruct || this._gearLocked)
				return;
			var gear=this._gears[index];
			if (gear!=null && gear.controller!=null)
				gear.updateState();
		}

		__proto.checkGearController=function(index,c){
			return this._gears[index] !=null && this._gears[index].controller==c;
		}

		__proto.updateGearFromRelations=function(index,dx,dy){
			if (this._gears[index] !=null)
				this._gears[index].updateFromRelations(dx,dy);
		}

		__proto.addDisplayLock=function(){
			var gearDisplay=(this._gears[0]);
			if(gearDisplay && gearDisplay.controller){
				var ret=gearDisplay.addLock();
				this.checkGearDisplay();
				return ret;
			}
			else
			return 0;
		}

		__proto.releaseDisplayLock=function(token){
			var gearDisplay=(this._gears[0]);
			if(gearDisplay && gearDisplay.controller){
				gearDisplay.releaseLock(token);
				this.checkGearDisplay();
			}
		}

		__proto.checkGearDisplay=function(){
			if(this._handlingController)
				return;
			var connected=this._gears[0]==null || (this._gears[0]).connected;
			if(connected!=this._internalVisible){
				this._internalVisible=connected;
				if(this._parent)
					this._parent.childStateChanged(this);
			}
		}

		__proto.addRelation=function(target,relationType,usePercent){
			(usePercent===void 0)&& (usePercent=false);
			this._relations.add(target,relationType,usePercent);
		}

		__proto.removeRelation=function(target,relationType){
			(relationType===void 0)&& (relationType=0);
			this._relations.remove(target,relationType);
		}

		__proto.removeFromParent=function(){
			if (this._parent)
				this._parent.removeChild(this);
		}

		__proto.dispose=function(){
			this.removeFromParent();
			this._relations.dispose();
			this._displayObject.destroy();
		}

		__proto.onClick=function(thisObj,listener,args){
			this.on("click",thisObj,listener,args);
		}

		__proto.offClick=function(thisObj,listener){
			this.off("click",thisObj,listener);
		}

		__proto.hasClickListener=function(){
			return this._displayObject.hasListener("click");
		}

		__proto.on=function(type,thisObject,listener,args){
			this._displayObject.on(type,thisObject,listener,args);
		}

		__proto.off=function(type,thisObject,listener){
			this._displayObject.off(type,thisObject,listener);
		}

		__proto.startDrag=function(touchPointID){
			(touchPointID===void 0)&& (touchPointID=-1);
			if (this._displayObject.stage==null)
				return;
			this.dragBegin();
		}

		__proto.stopDrag=function(){
			this.dragEnd();
		}

		__proto.localToGlobal=function(ax,ay,resultPoint){
			(ax===void 0)&& (ax=0);
			(ay===void 0)&& (ay=0);
			if(this._pivotAsAnchor){
				ax+=this._pivotX*this._width;
				ay+=this._pivotY*this._height;
			}
			if(!resultPoint){
				resultPoint=fairygui.GObject.sHelperPoint;
				resultPoint.x=ax;
				resultPoint.y=ay;
				return this._displayObject.localToGlobal(resultPoint,true);
			}
			else{
				resultPoint.x=ax;
				resultPoint.y=ay;
				return this._displayObject.localToGlobal(resultPoint,false);
			}
		}

		__proto.globalToLocal=function(ax,ay,resultPoint){
			(ax===void 0)&& (ax=0);
			(ay===void 0)&& (ay=0);
			if(!resultPoint){
				resultPoint=fairygui.GObject.sHelperPoint;
				resultPoint.x=ax;
				resultPoint.y=ay;
				resultPoint=this._displayObject.globalToLocal(resultPoint,true);
			}
			else{
				resultPoint.x=ax;
				resultPoint.y=ay;
				this._displayObject.globalToLocal(resultPoint,false);
			}
			if(this._pivotAsAnchor){
				resultPoint.x-=this._pivotX*this._width;
				resultPoint.y-=this._pivotY*this._height;
			}
			return resultPoint;
		}

		__proto.localToGlobalRect=function(ax,ay,aWidth,aHeight,resultRect){
			(ax===void 0)&& (ax=0);
			(ay===void 0)&& (ay=0);
			(aWidth===void 0)&& (aWidth=0);
			(aHeight===void 0)&& (aHeight=0);
			if(resultRect==null)
				resultRect=new Rectangle();
			var pt=this.localToGlobal(ax,ay);
			resultRect.x=pt.x;
			resultRect.y=pt.y;
			pt=this.localToGlobal(ax+aWidth,ay+aHeight);
			resultRect.width=pt.x-resultRect.x;
			resultRect.height=pt.y-resultRect.y;
			return resultRect;
		}

		__proto.globalToLocalRect=function(ax,ay,aWidth,aHeight,resultRect){
			(ax===void 0)&& (ax=0);
			(ay===void 0)&& (ay=0);
			(aWidth===void 0)&& (aWidth=0);
			(aHeight===void 0)&& (aHeight=0);
			if(resultRect==null)
				resultRect=new Rectangle();
			var pt=this.globalToLocal(ax,ay);
			resultRect.x=pt.x;
			resultRect.y=pt.y;
			pt=this.globalToLocal(ax+aWidth,ay+aHeight);
			resultRect.width=pt.x-resultRect.x;
			resultRect.height=pt.y-resultRect.y;
			return resultRect;
		}

		__proto.handleControllerChanged=function(c){
			this._handlingController=true;
			for (var i=0;i < 8;i++){
				var gear=this._gears[i];
				if (gear !=null && gear.controller==c)
					gear.apply();
			}
			this._handlingController=false;
			this.checkGearDisplay();
		}

		__proto.createDisplayObject=function(){
			this._displayObject=new Sprite();
			this._displayObject["$owner"]=this;
		}

		__proto.handleXYChanged=function(){
			var xv=this._x;
			var yv=this._y+this._yOffset;
			if(this._pivotAsAnchor){
				xv-=this._pivotX*this._width;
				yv-=this._pivotY*this._height;
			}
			if(this._pixelSnapping){
				xv=Math.round(xv);
				yv=Math.round(yv);
			}
			this._displayObject.pos(xv+this._pivotOffsetX,yv+this._pivotOffsetY);
		}

		__proto.handleSizeChanged=function(){
			if(this._displayObject!=null){
				if(this._sizeImplType==0 || this.sourceWidth==0 || this.sourceHeight==0)
					this._displayObject.size(this._width,this._height);
				else
				this._displayObject.scale(this._width/this.sourceWidth*this._scaleX,
				this._height/this.sourceHeight*this._scaleY);
			}
		}

		__proto.handleScaleChanged=function(){
			if(this._displayObject!=null){
				if(this._sizeImplType==0 || this.sourceWidth==0 || this.sourceHeight==0)
					this._displayObject.scale(this._scaleX,this._scaleY);
				else
				this._displayObject.scale(this._width/this.sourceWidth*this._scaleX,
				this._height/this.sourceHeight*this._scaleY);
			}
		}

		__proto.handleGrayedChanged=function(){
			if(this._displayObject){
				if(this._grayed){
					if(GObject.grayFilter==null)
						GObject.grayFilter=new ColorFilter([0.3086,0.6094,0.082,0,0,0.3086,0.6094,0.082,0,0,0.3086,0.6094,0.082,0,0,0,0,0,1,0]);
					this._displayObject.filters=[GObject.grayFilter];
				}
				else
				this._displayObject.filters=null;
			}
		}

		__proto.handleAlphaChanged=function(){
			if(this._displayObject)
				this._displayObject.alpha=this._alpha;
		}

		__proto.handleVisibleChanged=function(){
			if(this._displayObject)
				this._displayObject.visible=this.internalVisible2;
		}

		__proto.constructFromResource=function(){}
		__proto.setup_beforeAdd=function(xml){
			var str;
			var arr;
			this._id=xml.getAttribute("id");
			this._name=xml.getAttribute("name");
			str=xml.getAttribute("xy");
			arr=str.split(",");
			this.setXY(parseInt(arr[0]),parseInt(arr[1]));
			str=xml.getAttribute("size");
			if (str){
				arr=str.split(",");
				this.initWidth=parseInt(arr[0]);
				this.initHeight=parseInt(arr[1]);
				this.setSize(this.initWidth,this.initHeight,true);
			}
			str=xml.getAttribute("restrictSize");
			if(str){
				arr=str.split(",");
				this.minWidth=parseInt(arr[0]);
				this.maxWidth=parseInt(arr[1]);
				this.minHeight=parseInt(arr[2]);
				this.maxHeight=parseInt(arr[3]);
			}
			str=xml.getAttribute("scale");
			if(str){
				arr=str.split(",");
				this.setScale(parseFloat(arr[0]),parseFloat(arr[1]));
			}
			str=xml.getAttribute("skew");
			if(str){
				arr=str.split(",");
				this.setSkew(parseFloat(arr[0]),parseFloat(arr[1]));
			}
			str=xml.getAttribute("rotation");
			if (str)
				this.rotation=parseInt(str);
			str=xml.getAttribute("pivot");
			if (str){
				arr=str.split(",");
				str=xml.getAttribute("anchor");
				this.setPivot(parseFloat(arr[0]),parseFloat(arr[1]),str=="true");
			}
			str=xml.getAttribute("alpha");
			if (str)
				this.alpha=parseFloat(str);
			if(xml.getAttribute("touchable")=="false")
				this.touchable=false;
			if(xml.getAttribute("visible")=="false")
				this.visible=false;
			if(xml.getAttribute("grayed")=="true")
				this.grayed=true;
			this.tooltips=xml.getAttribute("tooltips");
			str=xml.getAttribute("blend");
			if (str)
				this.blendMode=str;
			str=xml.getAttribute('filter');
			if (str){
				switch (str){
					case "color":
						str=xml.getAttribute('filterData');
						arr=str.split(",");
						var cm=new ColorMatrix();
						cm.adjustBrightness(parseFloat(arr[0]));
						cm.adjustContrast(parseFloat(arr[1]));
						cm.adjustSaturation(parseFloat(arr[2]));
						cm.adjustHue(parseFloat(arr[3]));
						var cf=new ColorFilter(cm);
						this.filters=[cf];
						break ;
					}
			}
		}

		__proto.setup_afterAdd=function(xml){
			var str=xml.getAttribute("group");
			if (str)
				this._group=this._parent.getChildById(str);
			var col=xml.childNodes;
			var length1=col.length;
			for (var i1=0;i1 < length1;i1++){
				var cxml=col[i1];
				if(cxml.nodeType!=1)
					continue ;
				var index=fairygui.GObject.GearXMLKeys[cxml.nodeName];
				if(index!=undefined)
					this.getGear(index).setup(cxml);
			}
		}

		__proto.initDrag=function(){
			if (this._draggable)
				this.on("mousedown",this,this.__begin);
			else
			this.off("mousedown",this,this.__begin);
		}

		__proto.dragBegin=function(){
			if (fairygui.GObject.draggingObject !=null)
				fairygui.GObject.draggingObject.stopDrag();
			fairygui.GObject.sGlobalDragStart.x=Laya.stage.mouseX;
			fairygui.GObject.sGlobalDragStart.y=Laya.stage.mouseY;
			this.localToGlobalRect(0,0,this.width,this.height,fairygui.GObject.sGlobalRect);
			fairygui.GObject.draggingObject=this;
			Laya.stage.on("mousemove",this,this.__moving2);
			Laya.stage.on("mouseup",this,this.__end2);
		}

		__proto.dragEnd=function(){
			if (fairygui.GObject.draggingObject==this){
				Laya.stage.off("mousemove",this,this.__moving2);
				Laya.stage.off("mouseup",this,this.__end2);
				fairygui.GObject.draggingObject=null;
			}
			fairygui.GObject.sDraggingQuery=false;
		}

		__proto.reset=function(){
			Laya.stage.off("mousemove",this,this.__moving);
			Laya.stage.off("mouseup",this,this.__end);
		}

		__proto.__begin=function(){
			if(this._touchDownPoint==null)
				this._touchDownPoint=new Point();
			this._touchDownPoint.x=Laya.stage.mouseX;
			this._touchDownPoint.y=Laya.stage.mouseY;
			Laya.stage.on("mousemove",this,this.__moving);
			Laya.stage.on("mouseup",this,this.__end);
		}

		__proto.__end=function(){
			this.reset();
		}

		__proto.__moving=function(evt){
			var sensitivity=UIConfig$1.touchDragSensitivity;
			if(this._touchDownPoint !=null
				&& Math.abs(this._touchDownPoint.x-Laya.stage.mouseX)< sensitivity
			&& Math.abs(this._touchDownPoint.y-Laya.stage.mouseY)< sensitivity)
			return;
			this.reset();
			fairygui.GObject.sDraggingQuery=true;
			Events.dispatch("fui_drag_start",this._displayObject,evt);
			if (fairygui.GObject.sDraggingQuery)
				this.dragBegin();
		}

		__proto.__moving2=function(evt){
			var xx=Laya.stage.mouseX-fairygui.GObject.sGlobalDragStart.x+fairygui.GObject.sGlobalRect.x;
			var yy=Laya.stage.mouseY-fairygui.GObject.sGlobalDragStart.y+fairygui.GObject.sGlobalRect.y;
			if(this._dragBounds !=null){
				var rect=GRoot.inst.localToGlobalRect(this._dragBounds.x,this._dragBounds.y,
				this._dragBounds.width,this._dragBounds.height,fairygui.GObject.sDragHelperRect);
				if(xx < rect.x)
					xx=rect.x;
				else if(xx+fairygui.GObject.sGlobalRect.width > rect.right){
					xx=rect.right-fairygui.GObject.sGlobalRect.width;
					if(xx < rect.x)
						xx=rect.x;
				}
				if(yy < rect.y)
					yy=rect.y;
				else if(yy+fairygui.GObject.sGlobalRect.height > rect.bottom){
					yy=rect.bottom-fairygui.GObject.sGlobalRect.height;
					if(yy < rect.y)
						yy=rect.y;
				}
			}
			GObject.sUpdateInDragging=true;
			var pt=this.parent.globalToLocal(xx,yy,fairygui.GObject.sHelperPoint);
			this.setXY(Math.round(pt.x),Math.round(pt.y));
			GObject.sUpdateInDragging=false;
			Events.dispatch("fui_drag_move",this._displayObject,evt);
		}

		__proto.__end2=function(evt){
			if (fairygui.GObject.draggingObject==this){
				this.stopDrag();
				Events.dispatch("fui_drag_end",this._displayObject,evt);
			}
		}

		__getset(0,__proto,'actualHeight',function(){
			return this.height *Math.abs(this._scaleY);
		});

		__getset(0,__proto,'id',function(){
			return this._id;
		});

		__getset(0,__proto,'name',function(){
			return this._name;
			},function(value){
			this._name=value;
		});

		__getset(0,__proto,'rotation',function(){
			return this._rotation;
			},function(value){
			if(this._rotation !=value){
				this._rotation=value;
				if(this._displayObject!=null){
					this._displayObject.rotation=this.normalizeRotation;
					this.applyPivot();
				}
				this.updateGear(3);
			}
		});

		__getset(0,__proto,'width',function(){
			this.ensureSizeCorrect();
			if(this._relations.sizeDirty)
				this._relations.ensureRelationsSizeCorrect();
			return this._width;
			},function(value){
			this.setSize(value,this._rawHeight);
		});

		__getset(0,__proto,'x',function(){
			return this._x;
			},function(value){
			this.setXY(value,this._y);
		});

		__getset(0,__proto,'draggable',function(){
			return this._draggable;
			},function(value){
			if (this._draggable !=value){
				this._draggable=value;
				this.initDrag();
			}
		});

		__getset(0,__proto,'y',function(){
			return this._y;
			},function(value){
			this.setXY(this._x,value);
		});

		__getset(0,__proto,'pixelSnapping',function(){
			return this._pixelSnapping;
			},function(value){
			if(this._pixelSnapping!=value){
				this._pixelSnapping=value;
				this.handleXYChanged();
			}
		});

		__getset(0,__proto,'height',function(){
			this.ensureSizeCorrect();
			if(this._relations.sizeDirty)
				this._relations.ensureRelationsSizeCorrect();
			return this._height;
			},function(value){
			this.setSize(this._rawWidth,value);
		});

		__getset(0,__proto,'asButton',function(){
			return this;
		});

		__getset(0,__proto,'actualWidth',function(){
			return this.width *Math.abs(this._scaleX);
		});

		__getset(0,__proto,'blendMode',function(){
			return this._displayObject.blendMode;
			},function(value){
			this._displayObject.blendMode=value;
		});

		__getset(0,__proto,'scaleX',function(){
			return this._scaleX;
			},function(value){
			this.setScale(value,this._scaleY);
		});

		__getset(0,__proto,'scaleY',function(){
			return this._scaleY;
			},function(value){
			this.setScale(this._scaleX,value);
		});

		__getset(0,__proto,'skewX',function(){
			return this._skewX;
			},function(value){
			this.setSkew(value,this._skewY);
		});

		__getset(0,__proto,'skewY',function(){
			return this._skewY;
			},function(value){
			this.setSkew(this._skewX,value);
		});

		__getset(0,__proto,'pivotX',function(){
			return this._pivotX;
			},function(value){
			this.setPivot(value,this._pivotY);
		});

		__getset(0,__proto,'asLoader',function(){
			return this;
		});

		__getset(0,__proto,'asTextInput',function(){
			return this;
		});

		__getset(0,__proto,'displayObject',function(){
			return this._displayObject;
		});

		__getset(0,__proto,'normalizeRotation',function(){
			var rot=this._rotation % 360;
			if(rot > 180)
				rot=rot-360;
			else if(rot <-180)
			rot=360+rot;
			return rot;
		});

		__getset(0,__proto,'pivotY',function(){
			return this._pivotY;
			},function(value){
			this.setPivot(this._pivotX,value);
		});

		__getset(0,__proto,'touchable',function(){
			return this._touchable;
			},function(value){
			if(this._touchable!=value){
				this._touchable=value;
				this.updateGear(3);
				if(((this instanceof fairygui.GImage ))|| ((this instanceof fairygui.GMovieClip ))
					|| ((this instanceof fairygui.GTextField ))&& !((this instanceof fairygui.GTextInput ))&& !((this instanceof fairygui.GRichTextField )))
				return;
				if(this._displayObject !=null)
					this._displayObject.mouseEnabled=this._touchable;
			}
		});

		__getset(0,__proto,'alpha',function(){
			return this._alpha;
			},function(value){
			if(this._alpha!=value){
				this._alpha=value;
				this.handleAlphaChanged();
				this.updateGear(3);
			}
		});

		__getset(0,__proto,'grayed',function(){
			return this._grayed;
			},function(value){
			if(this._grayed !=value){
				this._grayed=value;
				this.handleGrayedChanged();
				this.updateGear(3);
			}
		});

		__getset(0,__proto,'dragBounds',function(){
			return this._dragBounds;
			},function(value){
			this._dragBounds=value;
		});

		__getset(0,__proto,'asProgress',function(){
			return this;
		});

		__getset(0,__proto,'enabled',function(){
			return !this._grayed && this._touchable;
			},function(value){
			this.grayed=!value;
			this.touchable=value;
		});

		__getset(0,__proto,'sortingOrder',function(){
			return this._sortingOrder;
			},function(value){
			if (value < 0)
				value=0;
			if (this._sortingOrder !=value){
				var old=this._sortingOrder;
				this._sortingOrder=value;
				if (this._parent !=null)
					this._parent.childSortingOrderChanged(this,old,this._sortingOrder);
			}
		});

		__getset(0,__proto,'visible',function(){
			return this._visible;
			},function(value){
			if (this._visible !=value){
				this._visible=value;
				this.handleVisibleChanged();
				if (this._parent)
					this._parent.setBoundsChangedFlag();
			}
		});

		__getset(0,__proto,'internalVisible',function(){
			return this._internalVisible && (!this._group || this._group.internalVisible)
			&& !this._displayObject._$P["maskParent"];
		});

		__getset(0,__proto,'icon',function(){
			return null;
			},function(value){
		});

		__getset(0,__proto,'internalVisible2',function(){
			return this._visible && (!this._group || this._group.internalVisible2);
		});

		__getset(0,__proto,'asGraph',function(){
			return this;
		});

		__getset(0,__proto,'gearSize',function(){
			return (this.getGear(2));
		});

		__getset(0,__proto,'focusable',function(){
			return this._focusable;
			},function(value){
			this._focusable=value;
		});

		__getset(0,__proto,'focused',function(){
			return this.root.focus==this;
		});

		__getset(0,__proto,'tooltips',function(){
			return this._tooltips;
			},function(value){
			this._tooltips=value;
		});

		__getset(0,__proto,'dragging',function(){
			return fairygui.GObject.draggingObject==this;
		});

		__getset(0,__proto,'group',function(){
			return this._group;
			},function(value){
			if (this._group !=value){
				if (this._group !=null)
					this._group.setBoundsChangedFlag(true);
				this._group=value;
				if (this._group !=null)
					this._group.setBoundsChangedFlag(true);
			}
		});

		__getset(0,__proto,'filters',function(){
			return this._displayObject.filters;
			},function(value){
			this._displayObject.filters=value;
		});

		__getset(0,__proto,'inContainer',function(){
			return this._displayObject !=null && this._displayObject.parent !=null;
		});

		__getset(0,__proto,'resourceURL',function(){
			if (this.packageItem !=null)
				return "ui://"+this.packageItem.owner.id+this.packageItem.id;
			else
			return null;
		});

		__getset(0,__proto,'onStage',function(){
			return this._displayObject !=null && this._displayObject.stage !=null;
		});

		__getset(0,__proto,'gearXY',function(){
			return (this.getGear(1));
		});

		__getset(0,__proto,'root',function(){
			if((this instanceof fairygui.GRoot ))
				return (this);
			var p=this._parent;
			while (p){
				if ((p instanceof fairygui.GRoot ))
					return (p);
				p=p.parent;
			}
			return GRoot.inst;
		});

		__getset(0,__proto,'gearLook',function(){
			return (this.getGear(3));
		});

		__getset(0,__proto,'asCom',function(){
			return this;
		});

		__getset(0,__proto,'relations',function(){
			return this._relations;
		});

		__getset(0,__proto,'parent',function(){
			return this._parent;
			},function(val){
			this._parent=val;
		});

		__getset(0,__proto,'asLabel',function(){
			return this;
		});

		__getset(0,__proto,'asImage',function(){
			return this;
		});

		__getset(0,__proto,'asTextField',function(){
			return this;
		});

		__getset(0,__proto,'asGroup',function(){
			return this;
		});

		__getset(0,__proto,'asRichTextField',function(){
			return this;
		});

		__getset(0,__proto,'asList',function(){
			return this;
		});

		__getset(0,__proto,'asSlider',function(){
			return this;
		});

		__getset(0,__proto,'asComboBox',function(){
			return this;
		});

		__getset(0,__proto,'asMovieClip',function(){
			return this;
		});

		__getset(0,__proto,'text',function(){
			return null;
			},function(value){
		});

		GObject.cast=function(sprite){
			return (sprite["$owner"]);
		}

		GObject.draggingObject=null
		GObject._gInstanceCounter=0;
		GObject.grayFilter=null;
		GObject.sDraggingQuery=false;
		GObject.sUpdateInDragging=false;
		__static(GObject,
		['GearXMLKeys',function(){return this.GearXMLKeys={
				"gearDisplay":0,
				"gearXY":1,
				"gearSize":2,
				"gearLook":3,
				"gearColor":4,
				"gearAni":5,
				"gearText":6,
				"gearIcon":7
		};},'sGlobalDragStart',function(){return this.sGlobalDragStart=new Point();},'sGlobalRect',function(){return this.sGlobalRect=new Rectangle();},'sHelperPoint',function(){return this.sHelperPoint=new Point();},'sDragHelperRect',function(){return this.sDragHelperRect=new Rectangle();}

		]);
		return GObject;
	})()


	//class laya.events.EventDispatcher
	var EventDispatcher=(function(){
		var EventHandler;
		function EventDispatcher(){
			this._events=null;
		}

		__class(EventDispatcher,'laya.events.EventDispatcher');
		var __proto=EventDispatcher.prototype;
		/**
		*检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。
		*@param type 事件的类型。
		*@return 如果指定类型的侦听器已注册，则值为 true；否则，值为 false。
		*/
		__proto.hasListener=function(type){
			var listener=this._events && this._events[type];
			return !!listener;
		}

		/**
		*派发事件。
		*@param type 事件类型。
		*@param data （可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。
		*@return 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。
		*/
		__proto.event=function(type,data){
			if (!this._events || !this._events[type])return false;
			var listeners=this._events[type];
			if (listeners.run){
				if (listeners.once)delete this._events[type];
				data !=null ? listeners.runWith(data):listeners.run();
				}else {
				for (var i=0,n=listeners.length;i < n;i++){
					var listener=listeners[i];
					if (listener){
						(data !=null)? listener.runWith(data):listener.run();
					}
					if (!listener || listener.once){
						listeners.splice(i,1);
						i--;
						n--;
					}
				}
				if (listeners.length===0 && this._events)delete this._events[type];
			}
			return true;
		}

		/**
		*使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。
		*@param type 事件的类型。
		*@param caller 事件侦听函数的执行域。
		*@param listener 事件侦听函数。
		*@param args （可选）事件侦听函数的回调参数。
		*@return 此 EventDispatcher 对象。
		*/
		__proto.on=function(type,caller,listener,args){
			return this._createListener(type,caller,listener,args,false);
		}

		/**
		*使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。
		*@param type 事件的类型。
		*@param caller 事件侦听函数的执行域。
		*@param listener 事件侦听函数。
		*@param args （可选）事件侦听函数的回调参数。
		*@return 此 EventDispatcher 对象。
		*/
		__proto.once=function(type,caller,listener,args){
			return this._createListener(type,caller,listener,args,true);
		}

		/**@private */
		__proto._createListener=function(type,caller,listener,args,once,offBefore){
			(offBefore===void 0)&& (offBefore=true);
			offBefore && this.off(type,caller,listener,once);
			var handler=EventHandler.create(caller || this,listener,args,once);
			this._events || (this._events={});
			var events=this._events;
			if (!events[type])events[type]=handler;
			else {
				if (!events[type].run)events[type].push(handler);
				else events[type]=[events[type],handler];
			}
			return this;
		}

		/**
		*从 EventDispatcher 对象中删除侦听器。
		*@param type 事件的类型。
		*@param caller 事件侦听函数的执行域。
		*@param listener 事件侦听函数。
		*@param onceOnly （可选）如果值为 true ,则只移除通过 once 方法添加的侦听器。
		*@return 此 EventDispatcher 对象。
		*/
		__proto.off=function(type,caller,listener,onceOnly){
			(onceOnly===void 0)&& (onceOnly=false);
			if (!this._events || !this._events[type])return this;
			var listeners=this._events[type];
			if (listener !=null){
				if (listeners.run){
					if ((!caller || listeners.caller===caller)&& listeners.method===listener && (!onceOnly || listeners.once)){
						delete this._events[type];
						listeners.recover();
					}
					}else {
					var count=0;
					for (var i=0,n=listeners.length;i < n;i++){
						var item=listeners[i];
						if (item && (!caller || item.caller===caller)&& item.method===listener && (!onceOnly || item.once)){
							count++;
							listeners[i]=null;
							item.recover();
						}
					}
					if (count===n)delete this._events[type];
				}
			}
			return this;
		}

		/**
		*从 EventDispatcher 对象中删除指定事件类型的所有侦听器。
		*@param type （可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。
		*@return 此 EventDispatcher 对象。
		*/
		__proto.offAll=function(type){
			var events=this._events;
			if (!events)return this;
			if (type){
				this._recoverHandlers(events[type]);
				delete events[type];
				}else {
				for (var name in events){
					this._recoverHandlers(events[name]);
				}
				this._events=null;
			}
			return this;
		}

		__proto._recoverHandlers=function(arr){
			if (!arr)return;
			if (arr.run){
				arr.recover();
				}else {
				for (var i=arr.length-1;i >-1;i--){
					if (arr[i]){
						arr[i].recover();
						arr[i]=null;
					}
				}
			}
		}

		/**
		*检测指定事件类型是否是鼠标事件。
		*@param type 事件的类型。
		*@return 如果是鼠标事件，则值为 true;否则，值为 false。
		*/
		__proto.isMouseEvent=function(type){
			return EventDispatcher.MOUSE_EVENTS[type];
		}

		EventDispatcher.MOUSE_EVENTS={"rightmousedown":true,"rightmouseup":true,"rightclick":true,"mousedown":true,"mouseup":true,"mousemove":true,"mouseover":true,"mouseout":true,"click":true,"doubleclick":true};
		EventDispatcher.__init$=function(){
			Object.defineProperty(laya.events.EventDispatcher.prototype,"_events",{enumerable:false,writable:true});
			/**@private */
			//class EventHandler extends laya.utils.Handler
			EventHandler=(function(_super){
				function EventHandler(caller,method,args,once){
					EventHandler.__super.call(this,caller,method,args,once);
				}
				__class(EventHandler,'',_super);
				var __proto=EventHandler.prototype;
				__proto.recover=function(){
					if (this._id > 0){
						this._id=0;
						EventHandler._pool.push(this.clear());
					}
				}
				EventHandler.create=function(caller,method,args,once){
					(once===void 0)&& (once=true);
					if (EventHandler._pool.length)return EventHandler._pool.pop().setTo(caller,method,args,once);
					return new EventHandler(caller,method,args,once);
				}
				EventHandler._pool=[];
				return EventHandler;
			})(Handler)
		}

		return EventDispatcher;
	})()


	//class core.DataMgr
	var DataMgr=(function(){
		function DataMgr(obj){
			this.commonTypeListVo=null;
			this.zoomPickerVo=null;
			this.betDetailPanelVo=null;
			this.groupVipVo=null;
			this.userAccountOfLottery="";
			this.configFileData=null;
			this.ALL_TXT="全部";
			this.gameTypeConfigData=null;
			this.balanceChangeTypeConfigData=null;
			this.lotteryGameTypeConfigData=null;
			this.bankListConfigData=null;
			this.numberGamesConfigData=null;
			this.numberGamePlayConfigData=null;
			this.numberGameLotteryGameConfigData=null;
			this.numberGameBonusConfigData=null;
			this.langConfigData=null;
			this.errorCodeData=null;
			this.betPercentTypeConfigData=null;
			this.iconConfigData=null;
			this.questionData=null;
			this.questionId=null;
			this.playerInfoData=null;
			this.userInfoData=null;
			this.bonesRangData=null;
			this.bonesRangPanelName="";
			this.userBalanceData=null;
			this.userBalancePanelName="";
			this.userBankAccountData=null;
			this.userBankAccountPanelName="";
			this.myFavorites=[];
			this.recentGameList=[];
			this.lastPlayGameId="1";
			this.favoriteLotteryData=null;
			this.favoriteLotteryPanelName="";
			this.lotteryGameListData=null;
			this.zhuDanZhuangTaiConfigData=["等待开奖","已过账","用户撤单","系统撤单"];
			this.bankConfigData=["中国银行(尾号6602)","中国农业银行(尾号8888)"];
			this.curTabTime=0;
			this.tabTimeData=["今天","昨天","最近七天"];
			this.curTabProcessState=0;
			this.tabProcessStateData=["全部状态","已成功","未处理"];
			this.curTransfer=0;
			this.tabTransferData=["全部方式","微信扫码","银行转账"];
			this.tabOrderStateData=["全部状态","未开奖","已中奖","未中奖","追中撤单","个人撤单","空开撤单"];
			this.tabAddtoNumTypeData=["追号/非追号","仅追号单","仅非追号单"];
			this.tabStatisticsAccountData=["团队","个人"];
			this.tabChooseAccountData=["个人"];
			this.tabChooseAccountData1=["代理"];
			this.tabTimeData2=["今天","前日","本月"];
			this.jinduData=["充值进度","转账进度","提现进度"];
			this.curGameType=0;
			this.curGameType2=0;
			this.curOrderType=0;
			this.curLettoryType=0;
			this.curZhuDanMoShi=0;
			this.curTargetSeachRange=0;
			this.curZhuDanZhuangTai=0;
			this.curAccountChangeType=0;
			this.curBonus=0;
			this.curBank=0;
			this.curBankType=0;
			this.curNumberGamePlayConfigType=0;
			this.commonTypeListVo=new CommonTypeListVo();
			this.zoomPickerVo=new ZoomPickerVo();
		}

		__class(DataMgr,'core.DataMgr');
		var __proto=DataMgr.prototype;
		/**
		*初始化，我的最近游戏列表
		*/
		__proto.initRecentGameList=function(){
			var mylastStr=LocalStorage.getItem(DataMgr.LocalStorage_Key_RecentGameList);
			if(mylastStr!=null)
				this.recentGameList=mylastStr.split(",");
		}

		__proto.saveRecentGameList=function(){
			var mylastStr=this.recentGameList.join(",");
			LocalStorage.setItem(DataMgr.LocalStorage_Key_RecentGameList,mylastStr);
		}

		/**
		*添加最近游戏
		*/
		__proto.addRecentGameList=function(gId){
			console.log("添加最近游戏：",gId);
			this.recentGameList.unshift(gId);
			if(this.recentGameList.length > GameUtil.RECENT_GAME_MAX)
				this.recentGameList.splice(this.recentGameList.length-1,1);
			this.saveRecentGameList();
		}

		__proto.loginState=function(){
			if(this.playerInfoData==null)
				return DataMgr.LoginState_NoLogin;
			if(this.playerInfoData.is_beta==1)
				return DataMgr.LoginState_TryPlay;
			return DataMgr.LoginState_Account;
		}

		DataMgr.get=function(){
			if(DataMgr.Ins==null)
				DataMgr.Ins=new DataMgr(new Object());
			return DataMgr.Ins;
		}

		DataMgr.Ins=null;
		DataMgr.GameType_Lottery_ID="1";
		DataMgr.LocalStorage_Key_RecentGameList="GameGaming_RecentGameList";
		DataMgr.LoginState_NoLogin=0;
		DataMgr.LoginState_TryPlay=1;
		DataMgr.LoginState_Account=2;
		return DataMgr;
	})()


	//class core.GameUIBuilderBridge
	var GameUIBuilderBridge=(function(){
		function GameUIBuilderBridge(){
			this.commandMap=null;
			this.stageUIModel=null;
			this.publicModel=null;
			this.panelComponentDic=null;
			this.panelPackageDic=null;
			this.promptTextPool=null;
			this.__tipArr=[];
			this.commandMap=CommandMap.getInstance();
			this.stageUIModel=Injector.getInstance().getSingleton(StageUIModel);
			this.publicModel=Injector.getInstance().getSingleton(PublicModel);
			this.promptTextPool=new GObjectPool();
			this.panelComponentDic=new Dictionary();
			this.panelPackageDic=new Dictionary();
			this.panelPackageDic.set(GameUtil.PANEL_DATALOADING,GameUtil.Res_Loading_Package);
			this.panelPackageDic.set(GameUtil.PANEL_LOADING,GameUtil.Res_Loading_Package);
			this.panelPackageDic.set(GameUtil.PANEL_HALL,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_MC_BONUS_OVERVIEW,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_MC_WIN_LOST,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_MC_STATISTICAL_ANALYSIS,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_MC_GAME_RECORD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_MC_BET_RECORD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_MC_BET_RECORD_2,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_MC_BET_RECORD_Detail,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_STATISTICAL_ANALYSIS,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_WIN_LOST,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_ACCOUNTCHANGE_DETAIL,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_GAME_RECORD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_BET_RECORD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_BET_RECORD2,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_INCOME,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_VIP_MANAGE,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_VIP_DETAIL,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_ACCOUNT_TRANSFER_MONNEY,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_GROUP_NEW_ACCOUNT_MANAGE,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_FM_TRANSFER_ACCOUNTS,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_FM_VALID_PWD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_FM_DRAW_MONEY_CENTER,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_FM_QUESTION_CENTER,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_FM_QUESTION_DETAIL,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_FM_TOPUP_MONEY_RECORD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_MODIFY_PASSWORD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_BINDING_BANK_CARD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_MY_BANK_CARD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_SET_BANK_PWD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_INPUT_BANK_PWD,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_SET_FAVORITE,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_INBOX,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_SET,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_SET_ACCOUNT,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_SET_ACCOUNT_MORE,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_SET_PHONE,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_SET_SAFE,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_SET_VOICE,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_SYS_ABOUT,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_ZOOM_PICKER,GameUtil.Res_Hall_Package);
			this.panelPackageDic.set(GameUtil.PANEL_NUMBERS,GameUtil.Res_Numbers_Package);
			Laya.stage.on("resize",this,this.onResize);
		}

		__class(GameUIBuilderBridge,'core.GameUIBuilderBridge');
		var __proto=GameUIBuilderBridge.prototype;
		__proto.onResize=function(){
			console.log("GameUIBuilderBridge onResize");
			console.log(this.stageUIModel.pageStage.x,this.stageUIModel.pageStage.y,this.stageUIModel.pageStage.width,this.stageUIModel.pageStage.height);
		}

		/**
		*打开界面
		*@param _viewClass
		*
		*/
		__proto.openPage=function(_packageName,_viewClass,_initWidth,_initHeight){
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			var baseUISprite=new _viewClass(_packageName,null,false,_initWidth,_initHeight);
			var currentView=baseUISprite.view;
			this.panelComponentDic[_viewClass.name]=baseUISprite;
			this.stageUIModel.pageStage.addChild(currentView);
		}

		/**
		*打开新的应用
		*@param _packageName
		*@param _viewClass
		*
		*/
		__proto.openApp=function(_packageName,_viewClass){
			var baseUISprite=new _viewClass(_packageName);
			var currentView=baseUISprite.view;
			this.stageUIModel.appStage.addChild(currentView);
		}

		__proto.showPage=function(panelName,layer){
			(layer===void 0)&& (layer=0);
			var baseUISprite;
			if(this.panelComponentDic[panelName]==null){
				var cls=ViewClassMap.getInstance().getViewClass(panelName);
				baseUISprite=new cls(this.panelPackageDic.get(panelName),null,false)
				this.panelComponentDic[panelName]=baseUISprite;
				}else{
				baseUISprite=this.panelComponentDic[panelName];
			};
			var layerComponent=this.getLayer(layer);
			layerComponent.addChild(baseUISprite.view);
		}

		__proto.hidePage=function(panelName,isRemove){
			(isRemove===void 0)&& (isRemove=false);
			var baseUISprite;
			if(this.panelComponentDic[panelName] !=null){
				baseUISprite=this.panelComponentDic[panelName];
				if(baseUISprite.view)baseUISprite.view.removeFromParent();
				if(isRemove)
					delete this.panelComponentDic[panelName];
			}
		}

		__proto.showPage3=function(panelData){
			var baseUISprite;
			if(this.panelComponentDic[panelData.openPanelName]==null){
				var cls=ViewClassMap.getInstance().getViewClass(panelData.openPanelName);
				baseUISprite=new cls(this.panelPackageDic.get(panelData.openPanelName),null,false)
				this.panelComponentDic[panelData.openPanelName]=baseUISprite;
				}else{
				baseUISprite=this.panelComponentDic[panelData.openPanelName];
			}
			if(baseUISprite.view){
				this.getLayer(panelData.openPanelLayer).addChild(baseUISprite.view);
				this.playViewAni(baseUISprite.view,panelData.openPanelAniType,true);
			}
			if(panelData.closePanelName !="" && this.panelComponentDic[panelData.closePanelName] !=null){
				baseUISprite=this.panelComponentDic[panelData.closePanelName];
				if(baseUISprite.view){
					this.playViewAni(baseUISprite.view,panelData.closePanelAniType,panelData.closePanelIfRemoveFromState);
				}
			}
		}

		__proto.hidePage3=function(panelData){
			var baseUISprite;
			if(this.panelComponentDic[panelData.openPanelName]==null){
				var cls=ViewClassMap.getInstance().getViewClass(panelData.openPanelName);
				baseUISprite=new cls(this.panelPackageDic.get(panelData.openPanelName),null,false)
				this.panelComponentDic[panelData.openPanelName]=baseUISprite;
				}else{
				baseUISprite=this.panelComponentDic[panelData.openPanelName];
			}
			if(baseUISprite.view){
				this.playViewAni(baseUISprite.view,panelData.openPanelAniType,true);
				this.getLayer(panelData.openPanelLayer).addChild(baseUISprite.view);
			}
			if(this.panelComponentDic[panelData.closePanelName] !=null){
				baseUISprite=this.panelComponentDic[panelData.closePanelName];
				if(baseUISprite.view){
					this.playViewAni(baseUISprite.view,panelData.closePanelAniType,panelData.closePanelIfRemoveFromState);
					this.getLayer(panelData.openPanelLayer).addChild(baseUISprite.view);
				}
			}
		}

		__proto.getLayer=function(layer){
			switch(layer){
				case StageUIModel.Layer_Buttom:
					return this.stageUIModel.pageStage;
				case StageUIModel.Layer_Middle:
					return this.stageUIModel.pageWindowStage;
				case StageUIModel.Layer_Top:
					return this.stageUIModel.tipsStage;
				}
			return this.stageUIModel.pageStage;
		}

		__proto.playViewAni=function(view,aniType,closePanelIfRemoveFromState){
			switch(aniType){
				case GameUtil.PANEL_ANI_FROM_RIGHT:{
						view.x=GRoot.inst.width;
						Tween.to(view,{x:0},GameUtil.Time_Panel_Ani,Ease.cubicInOut);
						break ;
					}
				case GameUtil.PANEL_ANI_FROM_LEFT:{
						view.x=-GRoot.inst.width *.5;
						Tween.to(view,{x:0},GameUtil.Time_Panel_Ani,Ease.cubicInOut);
						break ;
					}
				case GameUtil.PANEL_ANI_TO_LEFT:{
						view.x=0;
						Tween.to(view,{x:-GRoot.inst.width *.5},GameUtil.Time_Panel_Ani,Ease.cubicInOut,Handler.create(this,function(){if(closePanelIfRemoveFromState)view.removeFromParent();}));
						break ;
					}
				case GameUtil.PANEL_ANI_TO_RIGHT:{
						view.x=0;
						Tween.to(view,{x:GRoot.inst.width},GameUtil.Time_Panel_Ani,Ease.cubicInOut,Handler.create(this,function(){if(closePanelIfRemoveFromState)view.removeFromParent();}));
						break ;
					}
				}
		}

		/**
		*打开windows窗口
		*@param _packageName
		*@param _viewClass
		*@param _multiOpenBol
		*
		*/
		__proto.openWindow=function(_packageName,_viewClass){
			var currentView=(new _viewClass(_packageName,null,false)).view;
			this.stageUIModel.pageWindowStage.addChild(currentView);
		}

		/**
		*弹窗
		*@param _txt
		*@param _cmd
		*
		*/
		__proto.showAlert=function(_alertWindowVo){
			var alertWindow=new AlertWindow("Alert");
			var alertWindowComp=alertWindow.view;
			this.stageUIModel.tipsStage.addChild(alertWindowComp);
			alertWindow.bindViewVo(_alertWindowVo);
			this.publicModel.alertWindowVoArr.push(_alertWindowVo);
		}

		/**
		*关闭Alert
		*
		*/
		__proto.closeAlert=function(_areaIndex){
			for(var i=0;i < this.publicModel.alertWindowVoArr.length;i++){
				if(this.publicModel.alertWindowVoArr[i].alertVo.areaIndex==_areaIndex){
					this.publicModel.alertWindowVoArr[i].status="Remove_Status";
					this.publicModel.alertWindowVoArr.splice(i,1);
					break ;
				}
			}
		}

		__proto.showPromptText=function(text,type,_backCmd){
			(type===void 0)&& (type=1);
			(_backCmd===void 0)&& (_backCmd="");
			if(type==2){
				var url="ui://"+GameUtil.Res_Hall_Package+"/PromptTextItme";
				var promptTextItme=this.promptTextPool.getObject(url);
				if(promptTextItme==null)
					promptTextItme=UIPackage.createObjectFromURL(url);
				promptTextItme.setName(text);
				promptTextItme.x=0;
				promptTextItme.y=GRoot.inst.height*0.5+100;
				this.getLayer(StageUIModel.Layer_Top).addChild(promptTextItme);
				Tween.to(promptTextItme,{y:GRoot.inst.height*0.5-220},1000,Ease.linearNone,Handler.create(this,function(){
					promptTextItme.removeFromParent();
					this.promptTextPool.returnObject(promptTextItme);
				}));
			}
			else if(type==1){
				var url2="ui://Alert/Tips";
				var tips=this.promptTextPool.getObject(url2);
				tips.text=text;
				tips.x=(GRoot.inst.width-tips.width)/ 2;
				tips.y=(GRoot.inst.height-tips.height)/ 2;
				this.getLayer(StageUIModel.Layer_Top).addChild(tips);
				this.__tipArr.push([tips,_backCmd]);
				tips.getTransition("t0").play(new Handler(this,this.playTipsComplete));
			}
		}

		/**
		*tips播放完畢,刪除tips并且回调
		*
		*/
		__proto.playTipsComplete=function(){
			this.__tipArr[0][0].removeFromParent();
			this.promptTextPool.returnObject(this.__tipArr[0][0]);
			if(this.__tipArr[0][1]){
				this.sendNotification(this.__tipArr[0][1]);
			}
			this.__tipArr.shift();
		}

		/**
		*发送消息
		*@param _notificationVo
		*
		*/
		__proto.sendNotification=function(_cmd,_data){
			var notificationVo=new NotificationVo();
			notificationVo.cmd=_cmd;
			notificationVo.data=_data;
			this.commandMap.sendNotification(notificationVo);
		}

		GameUIBuilderBridge.LoginPanel="";
		return GameUIBuilderBridge;
	})()


	//class core.LotteryBet
	var LotteryBet=(function(){
		function LotteryBet(){}
		__class(LotteryBet,'core.LotteryBet');
		var __proto=LotteryBet.prototype;
		/**
		*根据游戏类型获得第一级玩法类型
		*@param _gameType
		*@return
		*
		*/
		__proto.getFirstPlayType=function(_gameType){
			var funcName="lotteryGameBetController"+_gameType+".gameTypeTabConfig";
			var fistPlayTypeObj=getFirstPlayType(funcName);
			return fistPlayTypeObj;
		}

		/**
		*根据第一级游戏玩法的类型找到第二级玩法类型
		*@return
		*
		*/
		__proto.getSecoundPlayType=function(_gameType,_firstPlayType){
			var funcName="lotteryGameBetController"+_gameType+".gameTypeConfig";
			var secoundPlayTypeObj=getSecoundPlayType(funcName);
			return secoundPlayTypeObj[_firstPlayType];
		}

		/**
		*获取二级玩法的信息
		*
		*/
		__proto.getSecoundTypeInfo=function(_gameType,_secoundPlayType){
			var funcName="lotteryGameBetController"+_gameType+".gameTypeBetConfig";
			var secoundPlayTypeObj=getSecoundTypeInfo(funcName);
			return secoundPlayTypeObj[_secoundPlayType];
		}

		/**
		*检查数量
		*@param _index check的索引
		*@param _betData 选取的号码，暂时为二维数组
		*
		*/
		__proto.checkCount=function(_baseGame,_checkId,_betData){
			var funcName="onChangeCheck"+_baseGame+".check_"+_checkId;
			var count=0;
			try{
				count=checkCount(funcName,_betData);
			}
			catch(e){
				count=0;
			}
			return count;
		}

		return LotteryBet;
	})()


	//class core.ResManager
	var ResManager=(function(){
		function ResManager(){
			this.version=0;
			this.serverUrl=null;
			this.displayUpdateInfoBol=false;
			this.updateInfo=null;
			this.__gameConfigVersion=0;
		}

		__class(ResManager,'core.ResManager');
		var __proto=ResManager.prototype;
		/**
		*获取带版本号的链接
		*@param _url
		*@return
		*
		*/
		__proto.getVersionUrl=function(_url){
			return _url;
		}

		/**
		*获取资源
		*@return
		*
		*/
		__proto.getRes=function(_url){
			return Laya.loader.getRes(_url);
		}

		ResManager.appInfoObj=null
		return ResManager;
	})()


	//class game.numberGame.m.gameConfig.NumberGamesConfigModel
	var NumberGamesConfigModel=(function(){
		function NumberGamesConfigModel(){
			this.staticPlayType=null;
			this.digitalIdArr=null;
			this.pk10DigitalIdArr=null;
			this.pk10DragonTigerArr=null;
			this.hk6hDigitalIdArr=null;
			this.tmsxIdArr=null;
			this.tmbs1IdArr=null;
			this.tmbs2IdArr=null;
			this.tmbs3IdArr=null;
			this.tmbs4IdArr=null;
			this.zuXuanHeZhiPlayIdArr=null;
			this.selectBoxIdArr=null;
			this.baoDanPlayIdArr=null;
			this.renErZuXuanIdFuShiArr=null;
			this.renErZuXuanIdHeZhiArr=null;
			this.danTuoIdArr=null;
			this.inputIdArr=null;
			this.inputRxIdArr=null;
			this.bjkl8rx=null;
			this.jsk33thdx=null;
			this.jsk32thfx=null;
			this.jsk32thdx=null;
			this.gamesInfoVoArr=[];
			this.gamePlayTypeInfoObj=new Object();
			this.shuZiPanConfigVo=new ShuZiPanConfigVo();
		}

		__class(NumberGamesConfigModel,'game.numberGame.m.gameConfig.NumberGamesConfigModel');
		return NumberGamesConfigModel;
	})()


	//class game.numberGame.m.gameConfig.NumberGamesFirstPlayTypeVo
	var NumberGamesFirstPlayTypeVo=(function(){
		function NumberGamesFirstPlayTypeVo(){
			this.playTypeName=null;
			this.firstPlayType=0;
			this.baseGame=null;
			this.secoundPlayTypeVoArr=[];
		}

		__class(NumberGamesFirstPlayTypeVo,'game.numberGame.m.gameConfig.NumberGamesFirstPlayTypeVo');
		return NumberGamesFirstPlayTypeVo;
	})()


	//class game.numberGame.m.gameConfig.NumberGamesGameInfoVo
	var NumberGamesGameInfoVo=(function(){
		function NumberGamesGameInfoVo(){
			this.name=null;
			this.id=0;
			this.apiValue="";
			this.originalBonusArr=null;
			this.baseGame=null;
			this.chooseMoneyArr=null;
			this.firstPlayTypeVoArr=[];
		}

		__class(NumberGamesGameInfoVo,'game.numberGame.m.gameConfig.NumberGamesGameInfoVo');
		return NumberGamesGameInfoVo;
	})()


	//class game.numberGame.m.gameConfig.NumberGamesSecoundPlayTypeVo
	var NumberGamesSecoundPlayTypeVo=(function(){
		function NumberGamesSecoundPlayTypeVo(){
			this.playTypeName=null;
			this.help=null;
			this.how=null;
			this.reward=NaN;
			this.sample=null;
			this.title=null;
			this.playType=null;
			this.setSort=false;
			this.numberCount=0;
			this.baseGame=null;
			this.checkId=0;
			this.openBol=true;
			this.numberValueArr=[];
			this.oneListNameArr=[];
			this.betMoneyArr=[];
		}

		__class(NumberGamesSecoundPlayTypeVo,'game.numberGame.m.gameConfig.NumberGamesSecoundPlayTypeVo');
		return NumberGamesSecoundPlayTypeVo;
	})()


	//class game.numberGame.m.gameConfig.ShuZiPanConfigVo
	var ShuZiPanConfigVo=(function(){
		function ShuZiPanConfigVo(){
			this.shuZiPanOneGameConfigObj=new Object();
		}

		__class(ShuZiPanConfigVo,'game.numberGame.m.gameConfig.ShuZiPanConfigVo');
		return ShuZiPanConfigVo;
	})()


	//class game.numberGame.m.player.NumberGamesPlayerModel
	var NumberGamesPlayerModel=(function(){
		function NumberGamesPlayerModel(){
			this.currentGameInfoVo=null;
			this.currentFirstPlayTypeVo=null;
			this.currentSecoundPlayTypeVo=null;
		}

		__class(NumberGamesPlayerModel,'game.numberGame.m.player.NumberGamesPlayerModel');
		return NumberGamesPlayerModel;
	})()


	//class game.numberGame.m.ui.betHistory.NumberGamesOneBetHistoryVo
	var NumberGamesOneBetHistoryVo=(function(){
		function NumberGamesOneBetHistoryVo(){
			this.index=0;
			this.winIndex=0;
			this.gameName=null;
			this.playType=null;
			this.betInfo=null;
			this.betType=null;
			this.totalPrice=null;
			this.lotteryTime=null;
			this.betId=null;
			this.number=null;
			this.rewards=null;
			this.betTime=null;
		}

		__class(NumberGamesOneBetHistoryVo,'game.numberGame.m.ui.betHistory.NumberGamesOneBetHistoryVo');
		return NumberGamesOneBetHistoryVo;
	})()


	//class game.numberGame.m.ui.history.OneGameHistoryVo
	var OneGameHistoryVo=(function(){
		function OneGameHistoryVo(){
			this.colorIndex=0;
			this.time=null;
			this.numberArr=null;
		}

		__class(OneGameHistoryVo,'game.numberGame.m.ui.history.OneGameHistoryVo');
		return OneGameHistoryVo;
	})()


	//class game.numberGame.m.ui.menu.game.NumberGamesGameMenuOneGameTypeVo
	var NumberGamesGameMenuOneGameTypeVo=(function(){
		function NumberGamesGameMenuOneGameTypeVo(){
			this.baseGame=null;
			this.lotteryType=null;
			this.openBol=false;
			this.gameMenuOneGameVoArr=[];
		}

		__class(NumberGamesGameMenuOneGameTypeVo,'game.numberGame.m.ui.menu.game.NumberGamesGameMenuOneGameTypeVo');
		return NumberGamesGameMenuOneGameTypeVo;
	})()


	//class game.numberGame.m.ui.menu.game.NumberGamesGameMenuOneGameVo
	var NumberGamesGameMenuOneGameVo=(function(){
		function NumberGamesGameMenuOneGameVo(){
			this.gameName=null;
			this.gameId=0;
			this.chooseIndex=0;
		}

		__class(NumberGamesGameMenuOneGameVo,'game.numberGame.m.ui.menu.game.NumberGamesGameMenuOneGameVo');
		return NumberGamesGameMenuOneGameVo;
	})()


	//class game.numberGame.m.ui.menu.playType.NumberGamesOnePlayTypeBtnVo
	var NumberGamesOnePlayTypeBtnVo=(function(){
		function NumberGamesOnePlayTypeBtnVo(){
			this.playTypeName=null;
			this.firstTypeName=null;
			this.checkId=0;
			this.chooseBol=false;
		}

		__class(NumberGamesOnePlayTypeBtnVo,'game.numberGame.m.ui.menu.playType.NumberGamesOnePlayTypeBtnVo');
		return NumberGamesOnePlayTypeBtnVo;
	})()


	//class game.numberGame.m.ui.menu.playType.NumberGamesOnePlayTypeVo
	var NumberGamesOnePlayTypeVo=(function(){
		function NumberGamesOnePlayTypeVo(){
			this.playTypeName=null;
			this.offBol=false;
			this.chooseBol=false;
			this.onePlayTypeBtnVoArr=[];
		}

		__class(NumberGamesOnePlayTypeVo,'game.numberGame.m.ui.menu.playType.NumberGamesOnePlayTypeVo');
		return NumberGamesOnePlayTypeVo;
	})()


	//class game.numberGame.m.ui.number.boxType.NumberGamesSelectBoxNumbersVo
	var NumberGamesSelectBoxNumbersVo=(function(){
		function NumberGamesSelectBoxNumbersVo(){
			this.singleBol=false;
			this.numberCount=0;
			this.title=null;
			this.lotteryNumbersVoArr=[];
		}

		__class(NumberGamesSelectBoxNumbersVo,'game.numberGame.m.ui.number.boxType.NumberGamesSelectBoxNumbersVo');
		return NumberGamesSelectBoxNumbersVo;
	})()


	//class game.numberGame.m.ui.number.boxType.NumberGamesSelectBoxNumberVo
	var NumberGamesSelectBoxNumberVo=(function(){
		function NumberGamesSelectBoxNumberVo(){
			this.value=null;
			this.chooseBol=false;
		}

		__class(NumberGamesSelectBoxNumberVo,'game.numberGame.m.ui.number.boxType.NumberGamesSelectBoxNumberVo');
		return NumberGamesSelectBoxNumberVo;
	})()


	//class game.numberGame.m.ui.number.numbersType.LotteryNumbersVo
	var LotteryNumbersVo$1=(function(){
		function LotteryNumbersVo(){
			this.resetBol=false;
			this.numberCount=0;
			this.wei=null;
			this.title=null;
			this.numberVoArr=[];
			;
		}

		__class(LotteryNumbersVo,'game.numberGame.m.ui.number.numbersType.LotteryNumbersVo',null,'LotteryNumbersVo$1');
		return LotteryNumbersVo;
	})()


	//class game.numberGame.m.ui.number.numbersType.LotteryNumberVo
	var LotteryNumberVo$1=(function(){
		function LotteryNumberVo(){
			this.value=0;
			this.chooseBol=false;
			this.danBol=false;
			this.skinIndex=0;
			;
		}

		__class(LotteryNumberVo,'game.numberGame.m.ui.number.numbersType.LotteryNumberVo',null,'LotteryNumberVo$1');
		return LotteryNumberVo;
	})()


	//class game.numberGame.m.ui.number.pk10DragonTiger.PK10OneDragonTigerVo
	var PK10OneDragonTigerVo=(function(){
		function PK10OneDragonTigerVo(){
			this.title=null;
			this.value=null;
		}

		__class(PK10OneDragonTigerVo,'game.numberGame.m.ui.number.pk10DragonTiger.PK10OneDragonTigerVo');
		return PK10OneDragonTigerVo;
	})()


	//class game.numberGame.m.ui.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiNumbersVo
	var NumberGamesZuXuanHeZhiNumbersVo=(function(){
		function NumberGamesZuXuanHeZhiNumbersVo(){
			this.numberCount=0;
			this.title=null;
			this.zuXuanHeZhiVoArr=[];
		}

		__class(NumberGamesZuXuanHeZhiNumbersVo,'game.numberGame.m.ui.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiNumbersVo');
		NumberGamesZuXuanHeZhiNumbersVo.UPDATE_LIST_STATUS="Update_List_Status";
		return NumberGamesZuXuanHeZhiNumbersVo;
	})()


	//class game.numberGame.m.ui.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiNumberVo
	var NumberGamesZuXuanHeZhiNumberVo=(function(){
		function NumberGamesZuXuanHeZhiNumberVo(){
			this.value=0;
			this.chooseBol=false;
			this.skinIndex=0;
		}

		__class(NumberGamesZuXuanHeZhiNumberVo,'game.numberGame.m.ui.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiNumberVo');
		return NumberGamesZuXuanHeZhiNumberVo;
	})()


	//class game.numberGame.m.ui.NumberGamesUIModel
	var NumberGamesUIModel=(function(){
		function NumberGamesUIModel(){
			this.numberGamesVo=new NumberGamesVo();
		}

		__class(NumberGamesUIModel,'game.numberGame.m.ui.NumberGamesUIModel');
		return NumberGamesUIModel;
	})()


	//class game.numberGame.m.ui.shuZiPan.OneShuZiPanMenuBtnVo
	var OneShuZiPanMenuBtnVo=(function(){
		function OneShuZiPanMenuBtnVo(){
			this.name="";
			this.type=0;
			this.chooseBol=false;
		}

		__class(OneShuZiPanMenuBtnVo,'game.numberGame.m.ui.shuZiPan.OneShuZiPanMenuBtnVo');
		return OneShuZiPanMenuBtnVo;
	})()


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanBetWindowOneBetVo
	var ShuZiPanBetWindowOneBetVo=(function(){
		function ShuZiPanBetWindowOneBetVo(){
			this.gameName=null;
			this.type=null;
			this.number=null;
			this.money=0;
		}

		__class(ShuZiPanBetWindowOneBetVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanBetWindowOneBetVo');
		return ShuZiPanBetWindowOneBetVo;
	})()


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanOneNumberVo
	var ShuZiPanOneNumberVo=(function(){
		function ShuZiPanOneNumberVo(){
			this.game_type_id=null;
			this.gameName=null;
			this.typeName=null;
			this.name=null;
			this.betInfo=null;
			this.value=null;
			this.chooseIndex=0;
		}

		__class(ShuZiPanOneNumberVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanOneNumberVo');
		return ShuZiPanOneNumberVo;
	})()


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanOneTypeVo
	var ShuZiPanOneTypeVo=(function(){
		function ShuZiPanOneTypeVo(){
			this.index=0;
			this.type=1;
			this.title=null;
			this.oneNumberVoArr=[];
		}

		__class(ShuZiPanOneTypeVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanOneTypeVo');
		return ShuZiPanOneTypeVo;
	})()


	//class game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoBetOneVo
	var NumberGamesZhuiHaoBetOneVo=(function(){
		function NumberGamesZhuiHaoBetOneVo(){
			this.name=null;
			this.id=0;
			this.playType=null;
			this.time=null;
			this.bei=0;
			this.onePrice=0;
			this.totalPrice=NaN;
			this.numbers=null;
			this.postData=null;
		}

		__class(NumberGamesZhuiHaoBetOneVo,'game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoBetOneVo');
		return NumberGamesZhuiHaoBetOneVo;
	})()


	//class game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoOneVo
	var NumberGamesZhuiHaoOneVo=(function(){
		function NumberGamesZhuiHaoOneVo(){
			this.id=0;
			this.time=null;
			this.startTime=0;
			this.endTime=0;
			this.leftTime=0;
			this.bei=0;
			this.money=null;
			this.chooseBol=false;
		}

		__class(NumberGamesZhuiHaoOneVo,'game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoOneVo');
		return NumberGamesZhuiHaoOneVo;
	})()


	//class robotLegs.Plugin
	var Plugin=(function(){
		function Plugin(){
			this.injector=null;
			this.viewClassMap=null;
			this.timerManager=null;
			this.commandMap=null;
			this.injector=Injector.getInstance();
			this.viewClassMap=ViewClassMap.getInstance();
			this.commandMap=CommandMap.getInstance();
		}

		__class(Plugin,'robotLegs.Plugin');
		var __proto=Plugin.prototype;
		/**
		*初始化配置
		*
		*/
		__proto.configure=function(){
			this.injector.map(AnimationModel);
			this.injector.map(SoundSessionModel);
			this.injector.map(CommandDelayRun);
			this.commandMap.mapAll(AniCommand);
			this.commandMap.mapAll(SoundCommand);
		}

		/**
		*开始
		*
		*/
		__proto.start=function(){}
		/**
		*发送消息
		*@param _notificationVo
		*
		*/
		__proto.sendNotification=function(_cmd,_data){
			var notificationVo=new NotificationVo();
			notificationVo.cmd=_cmd;
			notificationVo.data=_data;
			this.commandMap.sendNotification(notificationVo);
		}

		/**
		*关闭
		*
		*/
		__proto.close=function(){}
		return Plugin;
	})()


	/**
	*棋牌游戏H5版
	*@author bingqimao
	*/
	//class Main
	var Main=(function(){
		function Main(){
			UITypeConfig.UI_TYPE=uiType;
			var url=window.location.href;
			UITypeConfig.WEB_VIEW_BOL=url.indexOf("webview")>-1 ? true :false;
			Laya.init(GameUtil.Design_Width,GameUtil.Design_Height,WebGL);
			Laya.stage.bgColor="#FFFFFF";
			Laya.stage.frameRate="fast";
			GameUtil.updateResize();
			if(UITypeConfig.WEB_VIEW_BOL){
				var startIosHandle=new Handler(this,this.appIosStart);
				var startAndroidHandle=new Handler(this,this.appAndroidStart);
				setIosStartHandle(startIosHandle);
				setAndroidStartHandle(startAndroidHandle);
			}
			else{
				Laya.timer.once(300,this,this.start);
			}
		}

		__class(Main,'Main');
		var __proto=Main.prototype;
		__proto.onResize=function(e){}
		/**
		*iso app启动
		*
		*/
		__proto.appIosStart=function(_info){
			ResManager.appInfoObj=_info;
			this.start();
		}

		/**
		*安卓app启动
		*@param _updateBol
		*@param _apiUrl
		*@param _content
		*
		*/
		__proto.appAndroidStart=function(_infoObj){
			ResManager.appInfoObj=_infoObj;
			this.start();
		}

		__proto.start=function(){
			console.log("启动项目");
			ResourceVersion.type=2;
			var dateTime=new Date();
			dateTime.time=Laya.timer.currTimer;
			dateTime.setMinutes(Math.floor(dateTime.getMinutes()/ 5)*5);
			dateTime.setSeconds(0);
			console.log(dateTime.getMinutes(),Math.floor(dateTime.getTime()/ 1000));
			ResourceVersion.enable("version.json?v="+Math.floor(dateTime.getTime()/ 1000),Handler.create(this,this.beginLoad));
		}

		__proto.beginLoad=function(){
			Injector.getInstance().map(ContextMain);
			var contextMain=Injector.getInstance().getSingleton(ContextMain);
			contextMain.configure(GameStartPlugin).start();
		}

		return Main;
	})()


	//class modules.hall.m.BoardcastTextVo
	var BoardcastTextVo=(function(){
		function BoardcastTextVo(){
			this.id=0;
			this.news_title=null;
			this.news_info=null;
			this.time=null;
		}

		__class(BoardcastTextVo,'modules.hall.m.BoardcastTextVo');
		return BoardcastTextVo;
	})()


	//class modules.hall.m.EventsUIModel
	var EventsUIModel=(function(){
		function EventsUIModel(){
			this.newPlayerEventsVo=new NewPlayerEventsVo();
			this.dailyEventWindowVo=new DailyEventWindowVo();
		}

		__class(EventsUIModel,'modules.hall.m.EventsUIModel');
		return EventsUIModel;
	})()


	//class modules.hall.m.GroupVipVo
	var GroupVipVo=(function(){
		function GroupVipVo(){
			this.create_time=null;
			this.id=null;
			this.is_active=null;
			this.is_proxy_count=null;
			this.is_proxy_name=null;
			this.is_proxy=false;
			this.last_login=null;
			this.operate=null;
			this.parent_tree=null;
			this.percent_id=null;
			this.percent_tree=null;
			this.user_account=null;
			this.user_balance=null;
			this.user_level=null;
			this.user_percent=null;
			this.user_team_balance=null;
			this.user_team_bonus_point=null;
			this.really_user_percent=null;
			this.user_nickname=null;
			this.isDailyPay=false;
		}

		__class(GroupVipVo,'modules.hall.m.GroupVipVo');
		var __proto=GroupVipVo.prototype;
		__proto.decode=function(obj){
			this.create_time=obj.create_time;
			this.id=obj.id;
			this.is_active=obj.is_active;
			this.is_proxy_count=obj.is_proxy_count;
			this.is_proxy_name=obj.is_proxy_name;
			this.is_proxy=obj.is_proxy=="1" ? true :false;
			this.last_login=obj.last_login;
			this.operate=obj.operate;
			this.parent_tree=obj.parent_tree;
			this.percent_id=obj.percent_id;
			this.percent_tree=obj.percent_tree;
			this.user_account=obj.user_account;
			this.user_balance=obj.user_balance;
			this.user_level=obj.user_level;
			this.user_percent=obj.user_percent;
			this.user_team_balance=obj.user_team_balance;
			this.user_team_bonus_point=obj.user_team_bonus_point;
			this.really_user_percent=obj.really_user_percent;
			this.user_nickname=obj.user_nickname;
		}

		return GroupVipVo;
	})()


	//class modules.hall.m.HallUIModel
	var HallUIModel=(function(){
		function HallUIModel(){
			this.isInitHall=false;
			this.gameId=0;
			this.forwordMineCenterMark=null;
			this.forwordMcBonusOverviewMark=null;
			this.forwordMineManageMark=null;
			this.lastHidePanels=[];
			this.hallVo=new HallVo();
			this.mineVo=new MineVo();
			this.mineCenterPanelVo=new MineCenterPanelVo();
			this.mcBonusOverviewVo=new McBonusOverviewVo();
			this.mcWinLostVo=new McWinLostVo();
			this.mcStatisticalAnalysisVo=new McStatisticalAnalysisVo();
			this.mcGameRecordVo=new McGameRecordVo();
			this.mcAccountChangeDetailVo=new McAccountChangeDetailVo();
			this.mcBetRecord2Vo=new McBetRecord2Vo();
			this.mineManagePanelVo=new MineManagePanelVo();
			this.groupStatisticalAnalysisVo=new GroupStatisticalAnalysisVo();
			this.groupWinLostVo=new GroupWinLostVo();
			this.groupAccountChangeDetailVo=new GroupAccountChangeDetailVo();
			this.groupGameRecordVo=new GroupGameRecordVo();
			this.groupNewAccountManagePanelVo=new GroupNewAccountManagePanelVo();
			this.groupVipManagerPanelVo=new GroupVipManagerPanelVo();
			this.groupVipDetailPanelVo=new GroupVipDetailPanelVo();
			this.groupAccountTransferMoneyPanelVo=new GroupAccountTransferMoneyPanelVo();
			this.groupBetRecord2Vo=new GroupBetRecord2Vo();
			this.hallEventVo=new HallEventVo();
			this.hallSignEventVo=new HallSignEventVo();
			this.fmTopUpMoneyRechargeModeCComponentVo=new FmTopUpMoneyRechargeModeCComponentVo();
			this.fmTopUpMoneyRechargeModeEComponentVo=new FmTopUpMoneyRechargeModeEComponentVo();
			this.fmTopUpMoneyRechargeModeDComponentVo=new FmTopUpMoneyRechargeModeDComponentVo();
			this.settingModifyPasswordPanelVo=new SettingModifyPasswordPanelVo();
			this.settingModifyPasswordPanelVo2=new SettingModifyPasswordPanelVo();
			this.sysMyBankCardPanelVo=new SysMyBankCardPanelVo();
			this.sysBindingBankCardPanelVo=new SysBindingBankCardPanelVo();
			this.sysSetFavoritePanelVo=new SysSetFavoritePanelVo();
			this.sysSetPanelVo=new SysSetPanelVo();
			this.sysSetAccountPanelVo=new SysSetAccountPanelVo();
			this.sysSetVoicePanelVo=new SysSetVoicePanelVo();
			this.fmTopUpMoneyVo=new FmTopUpMoneyVo();
			this.qrCodeVo=new FmQrCodeVo();
			this.fmTransferAccountsPanelVo=new FmTransferAccountsPanelVo();
			this.fmDrawMoneyCenterPanelVo=new FmDrawMoneyCenterPanelVo();
			this.fmValidPwdPanelVo=new FmValidPwdPanelVo();
			this.fmTopUpMoneyRecordPanelVo=new FmTopUpMoneyRecordPanelVo();
			this.fmTopUpRecordPanelVo=new FmTopUpRecordPanelVo();
		}

		__class(HallUIModel,'modules.hall.m.HallUIModel');
		return HallUIModel;
	})()


	//class modules.hall.m.Icon1Vo
	var Icon1Vo=(function(){
		function Icon1Vo(){
			this.id=0;
			this.name=null;
			this.icon=null;
		}

		__class(Icon1Vo,'modules.hall.m.Icon1Vo');
		return Icon1Vo;
	})()


	//class modules.hall.m.OneDailyEventVo
	var OneDailyEventVo=(function(){
		function OneDailyEventVo(){
			this.eventName=null;
			this.completeCount=0;
			this.totalCount=0;
			this.activity=0;
		}

		__class(OneDailyEventVo,'modules.hall.m.OneDailyEventVo');
		return OneDailyEventVo;
	})()


	//class modules.hall.m.OneDailyTypeInfoVo
	var OneDailyTypeInfoVo=(function(){
		function OneDailyTypeInfoVo(){
			this.activityId=0;
			this.currentActivity=0;
			this.totalActivity=0;
			this.startTime=null;
			this.endTime=null;
			this.oneDailyEventVoArr=[];
			this.claimStatusArr=[];
			this.rewardArr=[];
			this.activityValueArr=[];
		}

		__class(OneDailyTypeInfoVo,'modules.hall.m.OneDailyTypeInfoVo');
		return OneDailyTypeInfoVo;
	})()


	//class modules.hall.m.OneDaySignVo
	var OneDaySignVo=(function(){
		function OneDaySignVo(){
			this.id=0;
			this.dayCount=0;
			this.dayStaus=null;
			this.betNeeded=null;
			this.bonus=null;
		}

		__class(OneDaySignVo,'modules.hall.m.OneDaySignVo');
		return OneDaySignVo;
	})()


	//class modules.hall.m.OneHallEventVo
	var OneHallEventVo=(function(){
		function OneHallEventVo(){
			this.id=0;
			this.name=null;
			this.date=null;
			this.bannerUrl=null;
			this.bigBanner=null;
		}

		__class(OneHallEventVo,'modules.hall.m.OneHallEventVo');
		return OneHallEventVo;
	})()


	//class modules.login.m.LoginUIModel
	var LoginUIModel=(function(){
		function LoginUIModel(){
			this.tokenData=new TokenData();
			this.loginVo=new LoginVo();
			;
		}

		__class(LoginUIModel,'modules.login.m.LoginUIModel');
		return LoginUIModel;
	})()


	//class modules.registered.m.RegisterUIModel
	var RegisterUIModel=(function(){
		function RegisterUIModel(){
			this.registeredVo=new RegisteredVo();
			this.loginVo=new LoginVo$1();
		}

		__class(RegisterUIModel,'modules.registered.m.RegisterUIModel');
		return RegisterUIModel;
	})()


	//class publics.m.chip.ChipManagerVo
	var ChipManagerVo=(function(){
		function ChipManagerVo(){
			this.buildNewChipIconVoArr=[];
			this.chipIconVoObj=new Object();
		}

		__class(ChipManagerVo,'publics.m.chip.ChipManagerVo');
		var __proto=ChipManagerVo.prototype;
		/**
		*获取我所有的下注额度
		*@return
		*/
		__proto.getMyAllDownClip=function(){
			var myDownClip=0;
			var chipIconVo=null;
			for(var i in this.chipIconVoObj){
				chipIconVo=this.chipIconVoObj[i];
				if(chipIconVo==null)continue ;
				if(chipIconVo.clientSeatId !=0)continue ;
				myDownClip+=chipIconVo.chipValue;
			}
			return myDownClip;
		}

		return ChipManagerVo;
	})()


	//class publics.m.ConfigFileData
	var ConfigFileData=(function(){
		function ConfigFileData(){
			this.items=null;
			this.typeObj=new Object();
			this.items=[];
		}

		__class(ConfigFileData,'publics.m.ConfigFileData');
		var __proto=ConfigFileData.prototype;
		__proto.setTypeObj=function(obj){
			for(var i=0;i < obj["data"].length;i++){
				this.typeObj[obj["data"][i]["id"]]=obj["data"][i]["text"];
			}
		}

		__proto.decode=function(data){
			var item;
			for(var $each_item in data.files){
				item=data.files[$each_item];
				this.addItem(item);
			}
		}

		__proto.addItem=function(data){
			if(data["name"].indexOf("numberGamesLotteryBonus")>-1)
				return;
			var configFileVo=new ConfigFileVo();
			configFileVo.decode(data);
			this.items.push(configFileVo);
		}

		__proto.getItem=function(name){
			for (var i=0;i < this.items.length;i++){
				if(this.items[i].name==name)
					return this.items[i];
			}
			return null;
		}

		ConfigFileData.File_gameTypesConfig="gameTypesConfig";
		ConfigFileData.File_balanceChangeTypeConfig="balanceChangeTypeConfig";
		ConfigFileData.File_orderTypeConfig="orderTypeConfig";
		ConfigFileData.File_betPercentTypeConfig="betPercentTypeConfig";
		ConfigFileData.File_lotteryGameConfig="lotteryGameConfig";
		ConfigFileData.File_bankListConfig="bankListConfig";
		ConfigFileData.File_numberGamesConfig="numberGamesConfig";
		ConfigFileData.File_numberGamePlayConfig="numberGamePlayConfig";
		ConfigFileData.File_numberGameBonunsConfig="numberGamesLotteryBonus";
		ConfigFileData.File_numberGamesLotteryGameConfig="numberGamesLotteryGame";
		ConfigFileData.File_langConfig="langConfig";
		ConfigFileData.File_errorCodeConfig="errorCodeConfig";
		return ConfigFileData;
	})()


	//class publics.m.ConfigFileVo
	var ConfigFileVo=(function(){
		function ConfigFileVo(){
			this.name=null;
			this.type=null;
			this.version=null;
			this.url=null;
		}

		__class(ConfigFileVo,'publics.m.ConfigFileVo');
		var __proto=ConfigFileVo.prototype;
		__proto.decode=function(data){
			this.name=data.name;
			this.type=data.type;
			this.version=data.version;
			this.url=this.name+"."+this.type+"?v="+this.version;
		}

		return ConfigFileVo;
	})()


	//class publics.m.IconConfigData
	var IconConfigData=(function(){
		function IconConfigData(){
			this.mineIconConfigData=null;
			this.setIconConfigData=null;
			this.groupIconConfigData=null;
		}

		__class(IconConfigData,'publics.m.IconConfigData');
		var __proto=IconConfigData.prototype;
		__proto.decodeIcon1Arr=function(arr){
			this.mineIconConfigData=[];
			for (var i=0;i < arr.length;i++){
				var icon1Vo=new Icon1Vo();
				icon1Vo.id=parseInt(arr[i].id);
				icon1Vo.icon=arr[i].icon;
				icon1Vo.name=arr[i].name;
				this.mineIconConfigData.push(icon1Vo);
			}
		}

		__proto.getIcon1Vo=function(id){
			for (var i=0;i < this.mineIconConfigData.length;i++){
				if(this.mineIconConfigData[i].id==id){
					return this.mineIconConfigData[i];
				}
			}
			return null;
		}

		__proto.decodeIcon2Arr=function(arr){
			this.setIconConfigData=[];
			for (var i=0;i < arr.length;i++){
				var icon1Vo=new Icon1Vo();
				icon1Vo.id=parseInt(arr[i].id);
				icon1Vo.icon=arr[i].icon;
				icon1Vo.name=arr[i].name;
				this.setIconConfigData.push(icon1Vo);
			}
		}

		__proto.getIcon2Vo=function(id){
			for (var i=0;i < this.setIconConfigData.length;i++){
				if(this.setIconConfigData[i].id==id){
					return this.setIconConfigData[i];
				}
			}
			return null;
		}

		__proto.decodeIcon3Arr=function(arr){
			this.groupIconConfigData=[];
			for (var i=0;i < arr.length;i++){
				var icon1Vo=new Icon1Vo();
				icon1Vo.id=parseInt(arr[i].id);
				icon1Vo.icon=arr[i].icon;
				icon1Vo.name=arr[i].name;
				this.groupIconConfigData.push(icon1Vo);
			}
		}

		__proto.getIcon3Vo=function(id){
			for (var i=0;i < this.groupIconConfigData.length;i++){
				if(this.groupIconConfigData[i].id==id){
					return this.groupIconConfigData[i];
				}
			}
			return null;
		}

		return IconConfigData;
	})()


	//class publics.m.LocalInfo
	var LocalInfo=(function(){
		function LocalInfo(){
			this._rememberPassword=null;
			this._loginAccount="";
			this._loginPassword="";
			this._testLoginAccount="";
			this._testLoginPassword="";
			this._color=1;
			this.GAME_NAME="GameGaming";
			this.USER_ID="";
			this.GAME_NAME=UITypeConfig.UI_TYPE;
			this._loginAccount=LocalStorage.getItem(this.GAME_NAME+"loginAccount")|| "";
			this._loginPassword=LocalStorage.getItem(this.GAME_NAME+"loginPassword")|| "";
			this._testLoginAccount=LocalStorage.getItem(this.GAME_NAME+"testLoginAccount")|| "";
			this._testLoginPassword=LocalStorage.getItem(this.GAME_NAME+"testLoginPassword")|| "";
			this._rememberPassword=LocalStorage.getItem(this.GAME_NAME+"rememberPasswordBol")|| "0";
		}

		__class(LocalInfo,'publics.m.LocalInfo');
		var __proto=LocalInfo.prototype;
		__proto.setUid=function(uid){
			this.USER_ID=uid;
			this._color=parseInt(LocalStorage.getItem(this.GAME_NAME+this.USER_ID+"color"))|| 1;
		}

		/**
		*获取玩法缓存的信息
		*@return
		*
		*/
		__proto.getPlayTypeInfoObj=function(){
			var playTypeInfo=JSON.parse(LocalStorage.getItem(this.GAME_NAME+"rememberPlayTypeInfoObj_"+this._loginAccount));
			return playTypeInfo;
		}

		/**
		*设置玩法的缓存信息
		*@param _playTypeInfoObj
		*
		*/
		__proto.savePlayTypeInfoObj=function(_playTypeInfoArr){
			var infoObj=this.getPlayTypeInfoObj();
			if(!infoObj){
				infoObj=new Object();
			}
			infoObj[_playTypeInfoArr[0]]=[_playTypeInfoArr[1],_playTypeInfoArr[2]]
			LocalStorage.setItem(this.GAME_NAME+"rememberPlayTypeInfoObj_"+this._loginAccount,JSON.stringify(infoObj));
		}

		__getset(0,__proto,'closeVoice',function(){
			return LocalStorage.getItem(this.GAME_NAME+this.USER_ID+"voice");
			},function(_closeVoice){
			LocalStorage.setItem(this.GAME_NAME+this.USER_ID+"voice",_closeVoice);
		});

		__getset(0,__proto,'testLoginPassword',function(){
			return this._testLoginPassword;
			},function(value){
			this._testLoginPassword=value;
			LocalStorage.setItem(this.GAME_NAME+"testLoginPassword",this._testLoginPassword);
		});

		__getset(0,__proto,'loginPassword',function(){
			return this._loginPassword;
			},function(value){
			this._loginPassword=value;
			LocalStorage.setItem(this.GAME_NAME+"loginPassword",this._loginPassword);
		});

		__getset(0,__proto,'rememberPassword',function(){
			return this._rememberPassword;
			},function(value){
			this._rememberPassword=value;
			LocalStorage.setItem(this.GAME_NAME+"rememberPasswordBol",this._rememberPassword);
		});

		__getset(0,__proto,'testLoginAccount',function(){
			return this._testLoginAccount;
			},function(value){
			this._testLoginAccount=value;
			LocalStorage.setItem(this.GAME_NAME+"testLoginAccount",this._testLoginAccount);
		});

		__getset(0,__proto,'loginAccount',function(){
			return this._loginAccount;
			},function(value){
			this._loginAccount=value;
			LocalStorage.setItem(this.GAME_NAME+"loginAccount",this._loginAccount);
		});

		//设置账号信息
		//获取账号信息
		__getset(0,__proto,'loginAccountInfoObj',function(){
			return JSON.parse(LocalStorage.getItem(this.GAME_NAME+"rememberLoginAccountInfo"));
			},function(_loginAccountInfoObj){
			LocalStorage.setItem(this.GAME_NAME+"rememberLoginAccountInfo",JSON.stringify(_loginAccountInfoObj));
		});

		__getset(0,__proto,'color',function(){
			return this._color;
			},function(value){
			this._color=value;
			LocalStorage.setItem(this.GAME_NAME+this.USER_ID+"color",this._loginAccount);
		});

		return LocalInfo;
	})()


	//class publics.m.PanelData
	var PanelData=(function(){
		function PanelData(){
			this.openPanelName=null;
			this.openPanelLayer=0;
			this.openPanelAniType=0;
			this.closePanelName=null;
			this.closePanelAniType=0;
			this.closePanelIfRemoveFromState=true;
			this.openPanelName=""
			this.openPanelLayer=0;
			this.openPanelAniType=0;
			this.closePanelName="";
			this.closePanelAniType=0;
			this.closePanelIfRemoveFromState=true;
		}

		__class(PanelData,'publics.m.PanelData');
		var __proto=PanelData.prototype;
		__proto.setOpenData=function(name,layer,aniType){
			(layer===void 0)&& (layer=0);
			(aniType===void 0)&& (aniType=0);
			this.openPanelName=name
			this.openPanelLayer=layer;
			this.openPanelAniType=aniType;
			return this;
		}

		__proto.setOpenData2=function(name,aniType){
			(aniType===void 0)&& (aniType=0);
			this.openPanelName=name
			this.openPanelLayer=StageUIModel.Layer_Buttom;
			this.openPanelAniType=aniType;
			return this;
		}

		__proto.setOpenData3=function(aniType){
			(aniType===void 0)&& (aniType=0);
			this.openPanelLayer=StageUIModel.Layer_Buttom;
			this.openPanelAniType=aniType;
			return this;
		}

		/**
		*@param name
		*@param aniType
		*@param closePanelIfRemoveFromState 关闭面板时候是否移除舞台，默认true移除舞台
		*@return
		*/
		__proto.setCloseData=function(name,aniType,closePanelIfRemoveFromState){
			(aniType===void 0)&& (aniType=0);
			(closePanelIfRemoveFromState===void 0)&& (closePanelIfRemoveFromState=true);
			this.closePanelName=name;
			this.closePanelAniType=aniType;
			this.closePanelIfRemoveFromState=closePanelIfRemoveFromState;
			return this;
		}

		return PanelData;
	})()


	//class publics.m.PlayerInfoModel
	var PlayerInfoModel=(function(){
		function PlayerInfoModel(){
			this.currentGameName="";
			this.playerInfoVo=new PlayerInfoData();
			this.localInfo=new LocalInfo();
		}

		__class(PlayerInfoModel,'publics.m.PlayerInfoModel');
		PlayerInfoModel.Panel_Login="Panel_Login";
		PlayerInfoModel.Panel_Hall="Panel_Hall";
		PlayerInfoModel.Panel_Lottery="Panel_Lottery";
		return PlayerInfoModel;
	})()


	//class publics.m.PublicModel
	var PublicModel=(function(){
		function PublicModel(){
			this.loadingVo=new LoadingVo();
			this.chipManagerVo=new ChipManagerVo();
			this.alertWindowVoArr=[];
			this.voiceWindowVo=new VoiceWindowVo();
			this.errorCodeData=new ErrorCodeData();
		}

		__class(PublicModel,'publics.m.PublicModel');
		return PublicModel;
	})()


	//class publics.m.QuestionData
	var QuestionData=(function(){
		function QuestionData(){
			this.titles=null;
			this.titleSeconds=null;
			this.contents=null;
		}

		__class(QuestionData,'publics.m.QuestionData');
		var __proto=QuestionData.prototype;
		__proto.decode=function(data){
			this.titles=[];
			var questionItem;
			var key;
			for (key in data.title){
				questionItem=new QuestionItem();
				questionItem.decode(data.title[key]);
				this.titles.push(questionItem);
			}
			this.titleSeconds=[];
			for (key in data.titleSecond){
				questionItem=new QuestionItem();
				questionItem.decode(data.titleSecond[key]);
				this.titleSeconds.push(questionItem);
			}
			this.contents=[];
			for (key in data.content){
				questionItem=new QuestionItem();
				questionItem.decode(data.content[key]);
				this.contents.push(questionItem);
			}
		}

		__proto.getTitleSecondsById=function(titleId){
			var items=[];
			for (var i=0;i < this.titleSeconds.length;i++){
				if(this.titleSeconds[i].parentId==titleId)
					items.push(this.titleSeconds[i]);
			}
			return items;
		}

		__proto.getTitleSecondById=function(titleId){
			for (var i=0;i < this.titleSeconds.length;i++){
				if(this.titleSeconds[i].titleId==titleId)
					return this.titleSeconds[i];
			}
			return null;
		}

		__proto.getContentParentById=function(titleId){
			for (var i=0;i < this.contents.length;i++){
				if(this.contents[i].parentId==titleId)
					return this.contents[i];
			}
			return null;
		}

		return QuestionData;
	})()


	//class publics.m.QuestionItem
	var QuestionItem=(function(){
		function QuestionItem(){
			this.titleId=null;
			this.parentId=null;
			this.title=null;
			this.content=null;
		}

		__class(QuestionItem,'publics.m.QuestionItem');
		var __proto=QuestionItem.prototype;
		__proto.decode=function(data){
			this.titleId=data.titleId;
			this.parentId=data.parentId;
			this.title=data.title;
			this.content=data.content;
		}

		return QuestionItem;
	})()


	//class publics.m.StageUIModel
	var StageUIModel=(function(){
		function StageUIModel(){
			this.pageStage=new GComponent();
			this.appStage=new GComponent();
			this.pageWindowStage=new GComponent();
			this.tipsStage=new GComponent();
			this.openAppPageVo=new OpenAppPageVo();
		}

		__class(StageUIModel,'publics.m.StageUIModel');
		StageUIModel.Layer_Buttom=0;
		StageUIModel.Layer_Middle=1;
		StageUIModel.Layer_Top=2;
		return StageUIModel;
	})()


	//class publics.m.ZoomPickerVo
	var ZoomPickerVo=(function(){
		function ZoomPickerVo(){
			this.title="";
			this.dataArr=null;
			this.selectIndex=0;
			this.handler=null;
			this.title="";
			this.dataArr=[];
		}

		__class(ZoomPickerVo,'publics.m.ZoomPickerVo');
		var __proto=ZoomPickerVo.prototype;
		__proto.run=function(){
			if(this.handler!=null)this.handler.run();
		}

		return ZoomPickerVo;
	})()


	//class publics.protodata.BonesRangData
	var BonesRangData=(function(){
		function BonesRangData(){
			this.delayData=null;
			this.itemDic=new Dictionary();
		}

		__class(BonesRangData,'publics.protodata.BonesRangData');
		var __proto=BonesRangData.prototype;
		__proto.decode=function(data){
			for (var key in data.range_list){
				var items=[];
				var itemArr=data.range_list[key];
				for (var i=0;i < itemArr.length;i++){
					var item=new BonesRangItem();
					item.decode(itemArr[i]);
					items.push(item);
				}
				items.reverse();
				this.itemDic.set(key,items);
			}
		}

		__proto.decode2=function(data){
			var items=[];
			data.target_dailypay_min;
			data.target_dailypay_max;
			var min=Math.round(Number(data.target_dailypay_min *100));
			var max=Math.round(Number(data.target_dailypay_max *100));
			for (var i=0;i <=max-min;i++){
				var item=new BonesRangItem();
				item.display="";
				item.value=Number(Number(data.target_dailypay_min)+Number(i *0.01)).toFixed(2);
				items.push(item);
			}
			this.itemDic.set("99999",items);
		}

		__proto.getVectorById=function(id){
			return this.itemDic.get(id);
		}

		__getset(0,__proto,'lotteryList',function(){
			return this.itemDic.get(DataMgr.GameType_Lottery_ID);
		});

		return BonesRangData;
	})()


	//class publics.protodata.BonesRangItem
	var BonesRangItem=(function(){
		function BonesRangItem(){
			this.display=null;
			this.value=null;
		}

		__class(BonesRangItem,'publics.protodata.BonesRangItem');
		var __proto=BonesRangItem.prototype;
		__proto.decode=function(data){
			this.display=data.display;
			this.value=data.value;
		}

		__proto.getShowText=function(){
			return this.display+" - "+this.value+"%"
		}

		__getset(0,__proto,'displayValue',function(){
			var d=this.display.replace(",","")
			return parseInt(d);
		});

		return BonesRangItem;
	})()


	//class publics.protodata.cfg.BalanceChangeTypeConfigData
	var BalanceChangeTypeConfigData=(function(){
		function BalanceChangeTypeConfigData(){
			this.items=[];
			this.itemDic=new Dictionary();
		}

		__class(BalanceChangeTypeConfigData,'publics.protodata.cfg.BalanceChangeTypeConfigData');
		var __proto=BalanceChangeTypeConfigData.prototype;
		__proto.decode=function(obj){
			var itemArr=obj;
			var item;
			for (var i=0;i < itemArr.length;i++){
				item=new BalanceChangeTypeItem();
				item.decode(itemArr[i]);
				this.items.push(item);
				this.itemDic.set(item.id,i);
			}
		}

		__proto.getItem=function(key){
			var index=this.itemDic.get(key);
			return this.items[index];
		}

		return BalanceChangeTypeConfigData;
	})()


	//class publics.protodata.cfg.BalanceChangeTypeItem
	var BalanceChangeTypeItem=(function(){
		function BalanceChangeTypeItem(){
			this.id=0;
			this.text=null;
		}

		__class(BalanceChangeTypeItem,'publics.protodata.cfg.BalanceChangeTypeItem');
		var __proto=BalanceChangeTypeItem.prototype;
		__proto.decode=function(obj){
			this.id=obj.id;
			this.text=obj.name;
		}

		return BalanceChangeTypeItem;
	})()


	//class publics.protodata.cfg.BankListConfigData
	var BankListConfigData=(function(){
		function BankListConfigData(){
			this.itemDic=new Dictionary();
			this.items=[];
		}

		__class(BankListConfigData,'publics.protodata.cfg.BankListConfigData');
		var __proto=BankListConfigData.prototype;
		__proto.decode=function(obj){
			var itemArr=obj.data;
			for (var i=0;i < itemArr.length;i++){
				var item=new BankListItem();
				item.decode(itemArr[i]);
				this.itemDic.set(item.id,i);
				this.items.push(item);
			}
		}

		return BankListConfigData;
	})()


	//class publics.protodata.cfg.BankListItem
	var BankListItem=(function(){
		function BankListItem(){
			this.id=null;
			this.bank_name=null;
			this.bank_code=null;
			this.bank_code_ips=0;
			this.bank_code_dubow=0;
		}

		__class(BankListItem,'publics.protodata.cfg.BankListItem');
		var __proto=BankListItem.prototype;
		__proto.decode=function(data){
			this.id=data.id;
			this.bank_name=data.bank_name;
			this.bank_code=data.bank_code;
			this.bank_code_ips=data.bank_code_ips==""?0:parseInt(data.bank_code_ips);
			this.bank_code_dubow=data.bank_code_dubow==""?0:parseInt(data.bank_code_dubow);
		}

		return BankListItem;
	})()


	//class publics.protodata.cfg.BetPercentTypeConfigData
	var BetPercentTypeConfigData=(function(){
		function BetPercentTypeConfigData(){
			this.data=new Object();
		}

		__class(BetPercentTypeConfigData,'publics.protodata.cfg.BetPercentTypeConfigData');
		var __proto=BetPercentTypeConfigData.prototype;
		__proto.decode=function(obj){
			for(var id in obj.lottery_data){
				this.data[id]=obj.lottery_data[id].length;
			}
		}

		return BetPercentTypeConfigData;
	})()


	//class publics.protodata.cfg.ErrorCodeData
	var ErrorCodeData=(function(){
		function ErrorCodeData(){
			this.status_code=0;
			this.status_msg=null;
			this.errorDic=null;
		}

		__class(ErrorCodeData,'publics.protodata.cfg.ErrorCodeData');
		var __proto=ErrorCodeData.prototype;
		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.status_msg=data.status_msg;
			this.errorDic=new Dictionary();
			var dataList=data.data;
			for (var key in dataList){
				this.errorDic.set(key,dataList[key].error_msg);
			}
		}

		//trace("ErrorCodeData :",this);
		__proto.getMsg=function(key){
			if(this.errorDic[key])
				return this.errorDic[key];
			return "";
		}

		return ErrorCodeData;
	})()


	//class publics.protodata.cfg.GameTypeConfigData
	var GameTypeConfigData=(function(){
		function GameTypeConfigData(){
			this.items=[];
			this.itemDic=new Dictionary();
			this.mobileItems=[];
			this.mobileItemDic=new Dictionary();
			this.baoBiaoItems=[];
			this.baoBiaoItemDic=new Dictionary();
			this.activeItems=[];
			this.activeItemDic=new Dictionary();
		}

		__class(GameTypeConfigData,'publics.protodata.cfg.GameTypeConfigData');
		var __proto=GameTypeConfigData.prototype;
		__proto.decode2=function(obj){
			this.items=[];
			this.itemDic=new Dictionary();
			this.mobileItems=[];
			this.mobileItemDic=new Dictionary();
			this.baoBiaoItems=[];
			this.baoBiaoItemDic=new Dictionary();
			var itemObj=obj.info;
			var item;
			var mobileItem;
			var activeItem;
			var baoBiaoIndex=0;
			var itemIndex=0;
			var mobileitemIndex=0;
			var activeItemIndex=0;
			for (var id in itemObj){
				itemObj[id]["id"]=id;
				if(id=="1" || (itemObj[id]["is_balance"]==1 && itemObj[id]["is_mobile_show"]==1)){
					item=new GameTypeItem();
					item.decode(itemObj[id]);
					this.items.push(item);
					this.itemDic.set(item.id,itemIndex);
					itemIndex++;
				}
				if(itemObj[id]["is_mobile_show"]==1){
					mobileItem=new GameTypeItem();
					mobileItem.decode(itemObj[id]);
					this.mobileItems.push(mobileItem);
					this.mobileItemDic.set(mobileItem.id,mobileitemIndex);
					mobileitemIndex++;
				}
				if(itemObj[id]["is_active"]==1){
					activeItem=new GameTypeItem();
					activeItem.decode(itemObj[id]);
					this.activeItems.push(activeItem);
					this.activeItemDic.set(activeItem.id,activeItemIndex);
					activeItemIndex++;
				};
				var baoBiaoItem=new GameTypeItem();
				baoBiaoItem.decode(itemObj[id]);
				this.baoBiaoItems.push(baoBiaoItem);
				this.baoBiaoItemDic.set(baoBiaoItem.id,baoBiaoIndex);
				baoBiaoIndex++;
			}
		}

		__proto.decode=function(obj){
			var itemArr=obj.data;
			var item;
			var mobileItem;
			var itemIndex=0;
			var mobileitemIndex=0;
			for (var i=0;i < itemArr.length;i++){
				if(itemArr[i]["id"]==1 || (itemArr[i]["is_balance"]==1 && itemArr[i]["is_mobile_show"]==1)){
					item=new GameTypeItem();
					item.decode(itemArr[i]);
					this.items.push(item);
					this.itemDic.set(item.id,itemIndex);
					itemIndex++;
				}
				if(itemArr[i]["is_mobile_show"]==1){
					mobileItem=new GameTypeItem();
					mobileItem.decode(itemArr[i]);
					this.mobileItems.push(mobileItem);
					this.mobileItemDic.set(mobileItem.id,mobileitemIndex);
					mobileitemIndex++;
				};
				var baoBiaoItem=new GameTypeItem();
				baoBiaoItem.decode(itemArr[i]);
				this.baoBiaoItems.push(baoBiaoItem);
				this.baoBiaoItemDic.set(baoBiaoItem.id,i);
			}
		}

		__proto.getMobileItem=function(key){
			var index=this.mobileItemDic.get(key);
			return this.mobileItems[index];
		}

		__proto.getItem=function(key){
			var index=this.itemDic.get(key);
			return this.items[index];
		}

		__proto.getBaoBiaoItem=function(key){
			var index=this.baoBiaoItemDic.get(key);
			return this.baoBiaoItems[index];
		}

		__proto.getActiveItem=function(key){
			var index=this.activeItemDic.get(key);
			return this.activeItems[index];
		}

		return GameTypeConfigData;
	})()


	//class publics.protodata.cfg.GameTypeItem
	var GameTypeItem=(function(){
		function GameTypeItem(){
			this.id=0;
			this.cn=null;
			this.en=null;
			this.fullBol=false;
		}

		__class(GameTypeItem,'publics.protodata.cfg.GameTypeItem');
		var __proto=GameTypeItem.prototype;
		__proto.decode=function(obj){
			this.id=obj.id;
			if(obj.cn){
				this.cn=obj.cn;
				this.en=obj.en;
			}
			else{
				this.cn=obj.display_name;
				this.en=obj.product_name;
			}
		}

		return GameTypeItem;
	})()


	//class publics.protodata.cfg.LangConfigData
	var LangConfigData=(function(){
		function LangConfigData(){
			this.lang_order_status=new Dictionary();
			this.lang_order_type=new Dictionary();
			this.lang_bet_mode=new Dictionary();
			this.lang_bet_percent_type=new Dictionary();
			this.lang_recharge_status=new Dictionary();
			this.lang_target_seach_range=new Dictionary();
		}

		__class(LangConfigData,'publics.protodata.cfg.LangConfigData');
		var __proto=LangConfigData.prototype;
		__proto.decode=function(obj){
			var itemArr;
			var item;
			var i=0;
			itemArr=obj.lang_order_status;
			for (i=0;i < itemArr.length;i++){
				this.lang_order_status.set(itemArr[i].id,itemArr[i].name);
			}
			itemArr=obj.lang_order_type;
			for (i=0;i < itemArr.length;i++){
				this.lang_order_type.set(itemArr[i].id,itemArr[i].name);
			}
			itemArr=obj.lang_bet_mode;
			for (i=0;i < itemArr.length;i++){
				this.lang_bet_mode.set(itemArr[i].id,itemArr[i].name);
			}
			itemArr=obj.lang_bet_percent_type;
			for (i=0;i < itemArr.length;i++){
				this.lang_bet_percent_type.set(itemArr[i].id,itemArr[i].name);
			}
			itemArr=obj.lang_recharge_status;
			for (i=0;i < itemArr.length;i++){
				this.lang_recharge_status.set(itemArr[i].id,itemArr[i].name);
			}
			itemArr=obj.lang_target_seach_range;
			for (i=0;i < itemArr.length;i++){
				this.lang_target_seach_range.set(itemArr[i].id,itemArr[i].name);
			}
		}

		return LangConfigData;
	})()


	//class publics.protodata.cfg.LangItem
	var LangItem=(function(){
		function LangItem(){
			this.id=null;
			this.test=null;
		}

		__class(LangItem,'publics.protodata.cfg.LangItem');
		var __proto=LangItem.prototype;
		__proto.decode=function(data){
			this.id=data.id;
			this.test=data.test;
		}

		return LangItem;
	})()


	//class publics.protodata.cfg.LotteryGameItem
	var LotteryGameItem=(function(){
		function LotteryGameItem(){
			this.id=0;
			this.game_value=null;
			this.api_value=null;
			this.base_game=null;
		}

		__class(LotteryGameItem,'publics.protodata.cfg.LotteryGameItem');
		var __proto=LotteryGameItem.prototype;
		__proto.decode=function(data){
			this.id=data.id;
			this.game_value=data.game_value;
			this.api_value=data.api_value;
			this.base_game=data.base_game;
		}

		return LotteryGameItem;
	})()


	//class publics.protodata.cfg.LotteryGameTypeConfigData
	var LotteryGameTypeConfigData=(function(){
		function LotteryGameTypeConfigData(){
			this.items=[];
			this.itemDic=new Dictionary();
			this.openItems=[];
			this.openItemDic=new Dictionary();
		}

		__class(LotteryGameTypeConfigData,'publics.protodata.cfg.LotteryGameTypeConfigData');
		var __proto=LotteryGameTypeConfigData.prototype;
		__proto.decode=function(obj){
			var itemArr=obj.data;
			for (var i=0;i < itemArr.length;i++){
				var item=new LotteryGameItem();
				item.decode(itemArr[i]);
				this.items.push(item);
				this.itemDic.set(item.id,i);
			}
		}

		__proto.getItem=function(gId){
			var i=this.itemDic.get(gId);
			return this.items[i];
		}

		return LotteryGameTypeConfigData;
	})()


	//class publics.protodata.cfg.NumberGameBonusConfigData
	var NumberGameBonusConfigData=(function(){
		function NumberGameBonusConfigData(){
			this.data=null;
		}

		__class(NumberGameBonusConfigData,'publics.protodata.cfg.NumberGameBonusConfigData');
		var __proto=NumberGameBonusConfigData.prototype;
		__proto.decode=function(obj){
			this.data=obj;
		}

		return NumberGameBonusConfigData;
	})()


	//class publics.protodata.cfg.NumberGameLotteryGameConfigData
	var NumberGameLotteryGameConfigData=(function(){
		function NumberGameLotteryGameConfigData(){
			this.data=null;
		}

		__class(NumberGameLotteryGameConfigData,'publics.protodata.cfg.NumberGameLotteryGameConfigData');
		var __proto=NumberGameLotteryGameConfigData.prototype;
		__proto.decode=function(obj){
			this.data=obj;
		}

		return NumberGameLotteryGameConfigData;
	})()


	//class publics.protodata.cfg.NumberGamePlayConfigData
	var NumberGamePlayConfigData=(function(){
		function NumberGamePlayConfigData(){
			this.data=null;
			this.itemDic=new Dictionary();
		}

		__class(NumberGamePlayConfigData,'publics.protodata.cfg.NumberGamePlayConfigData');
		var __proto=NumberGamePlayConfigData.prototype;
		__proto.decode=function(obj){
			console.log(1);
			if(obj["data"])
				this.data=obj["data"];
			else
			this.data=obj;
			for(var key in obj){
				var itemObj=obj[key].game_type;
				var arr=[];
				for(var key2 in itemObj){
					arr.push(itemObj[key2]);
				}
				this.itemDic.set(key,arr);
			}
		}

		// }
		__proto.getItems=function(id){
			return this.itemDic.get(id);
		}

		return NumberGamePlayConfigData;
	})()


	//class publics.protodata.cfg.NumberGamesConfigData
	var NumberGamesConfigData=(function(){
		function NumberGamesConfigData(){
			this.data=null;
			this.itemDic=new Dictionary();
		}

		__class(NumberGamesConfigData,'publics.protodata.cfg.NumberGamesConfigData');
		var __proto=NumberGamesConfigData.prototype;
		__proto.decode=function(obj){
			this.data=obj;
			for (var key in obj.info){
				var obj2=obj.info[key];
				var itemDic2=new Dictionary();
				for (var key2 in obj2){
					var numberGamesItem=new NumberGamesItem();
					numberGamesItem.decode(obj2[key2]);
					itemDic2.set(key2,numberGamesItem);
				}
				this.itemDic.set(key,itemDic2);
			}
		}

		NumberGamesConfigData.NumberGamesType_BJKL8="BJKL8";
		NumberGamesConfigData.NumberGamesType_BJPK10="BJPK10";
		NumberGamesConfigData.NumberGamesType_CQSSC="CQSSC";
		NumberGamesConfigData.NumberGamesType_FC3D="FC3D";
		NumberGamesConfigData.NumberGamesType_GD11X5="GD11X5";
		NumberGamesConfigData.NumberGamesType_HK6="HK6";
		NumberGamesConfigData.NumberGamesType_JSK3="JSK3";
		__static(NumberGamesConfigData,
		['NumberGamesTypes',function(){return this.NumberGamesTypes=[
			NumberGamesConfigData.NumberGamesType_BJKL8,NumberGamesConfigData.NumberGamesType_BJPK10,NumberGamesConfigData.NumberGamesType_CQSSC,NumberGamesConfigData.NumberGamesType_FC3D,NumberGamesConfigData.NumberGamesType_GD11X5,
			NumberGamesConfigData.NumberGamesType_HK6,NumberGamesConfigData.NumberGamesType_JSK3];}
		]);
		return NumberGamesConfigData;
	})()


	//class publics.protodata.cfg.NumberGamesItem
	var NumberGamesItem=(function(){
		function NumberGamesItem(){
			this.help=null;
			this.how=null;
			this.type=null;
			this.no1=null;
			this.no2=null;
			this.no3=null;
			this.no4=null;
			this.no5=null;
			this.isButton=false;
			this.noBigIndex=0;
			this.posSelect=false;
			this.reward=null;
			this.sample=null;
			this.title1=null;
			this.title2=null;
			this.title3=null;
			this.title4=null;
			this.title5=null;
		}

		__class(NumberGamesItem,'publics.protodata.cfg.NumberGamesItem');
		var __proto=NumberGamesItem.prototype;
		__proto.decode=function(data){
			this.help=data.help;
			this.how=data.how;
			this.type=data.type;
			this.no1=data.no1;
			this.no2=data.no2;
			this.no3=data.no3;
			this.no4=data.no4;
			this.no5=data.no5;
			this.isButton=data.isButton=="true";
			this.noBigIndex=data.noBigIndex;
			this.posSelect=data.posSelect=="true";
			this.reward=data.reward;
			this.sample=data.sample;
			this.title1=data.title1;
			this.title2=data.title2;
			this.title3=data.title3;
			this.title4=data.title4;
			this.title5=data.title5;
		}

		return NumberGamesItem;
	})()


	//class publics.protodata.FavoriteLotteryData
	var FavoriteLotteryData=(function(){
		function FavoriteLotteryData(){
			this.itemDic=new Dictionary();
		}

		__class(FavoriteLotteryData,'publics.protodata.FavoriteLotteryData');
		var __proto=FavoriteLotteryData.prototype;
		__proto.decode=function(data){
			for (var key in data){
				var favoriteLotteryItem=new FavoriteLotteryItem();
				favoriteLotteryItem.decode(data[key]);
				this.itemDic.set(key,favoriteLotteryItem);
			};
			var dataMgr=DataMgr.get();
			var items=dataMgr.lotteryGameTypeConfigData.items;
			var itemDic2=dataMgr.lotteryGameTypeConfigData.itemDic;
			var deleteItemArr=[];
			for(var i=0;i < items.length;i++){
				var checkHasBol=false
				for(var ii=0;ii < this.itemDic.keys.length;ii++){
					key=this.itemDic.keys[ii];
					favoriteLotteryItem=this.itemDic.get(key);
					var line=favoriteLotteryItem.line;
					for(var iii=0;iii < line.length;iii++){
						if(items[i].game_value==line[iii].name){
							checkHasBol=true;
							break ;
						}
					}
				}
				if(!checkHasBol)
					deleteItemArr.push(items[i].game_value);
			}
			for(i=0;i < items.length;i++){
				var checkOpenBol=true;
				for(ii=0;ii < deleteItemArr.length;ii++){
					if(items[i].game_value==deleteItemArr[ii]){
						checkOpenBol=false;
						break ;
					}
				}
				if(checkOpenBol){
					dataMgr.lotteryGameTypeConfigData.openItems.push(items[i]);
					dataMgr.lotteryGameTypeConfigData.openItemDic.set(items[i].id,dataMgr.lotteryGameTypeConfigData.openItems.length-1);
				}
			}
		}

		return FavoriteLotteryData;
	})()


	//class publics.protodata.FavoriteLotteryItem
	var FavoriteLotteryItem=(function(){
		function FavoriteLotteryItem(){
			this.isShow=false;
			this.title=null;
			this.line=[];
			this.lineDic=new Dictionary();
			this.openLine=[];
			this.openLineDic=new Dictionary();
		}

		__class(FavoriteLotteryItem,'publics.protodata.FavoriteLotteryItem');
		var __proto=FavoriteLotteryItem.prototype;
		__proto.decode=function(data){
			this.title=data.title;
			var i=0;
			var openIndex=0;
			for(var dataKey in data.line){
				var obj=data.line[dataKey]["row"];
				for (var key in obj){
					if(!obj[key]["id"])
						continue ;
					var favoriteLotteryItem2=new FavoriteLotteryItem2();
					favoriteLotteryItem2.decode(obj[key]);
					this.line.push(favoriteLotteryItem2);
					this.lineDic.set(favoriteLotteryItem2.id,i);
					i++;
					if(obj[key]["is_active"]=="1"){
						var favoriteLotteryItem3=new FavoriteLotteryItem2();
						favoriteLotteryItem3.decode(obj[key]);
						this.openLine.push(favoriteLotteryItem3);
						this.openLineDic.set(favoriteLotteryItem3.id,openIndex);
						openIndex++;
					}
				}
			}
		}

		return FavoriteLotteryItem;
	})()


	//class publics.protodata.FavoriteLotteryItem2
	var FavoriteLotteryItem2=(function(){
		function FavoriteLotteryItem2(){
			this.id=null;
			this.name=null;
			this.hot=null;
			this.is_active=false;
			this.is_favorite=null;
			this.method=null;
		}

		__class(FavoriteLotteryItem2,'publics.protodata.FavoriteLotteryItem2');
		var __proto=FavoriteLotteryItem2.prototype;
		__proto.decode=function(data){
			this.id=data.id;
			this.name=data.name;
			this.hot=data.hot;
			this.is_active=data.is_active=="0" ? false :true;
			this.is_favorite=data.is_favorite;
			this.method=data.method;
		}

		return FavoriteLotteryItem2;
	})()


	//class publics.protodata.GroupStatisticalAnalysisSearchData
	var GroupStatisticalAnalysisSearchData=(function(){
		function GroupStatisticalAnalysisSearchData(){
			this.range_commission=NaN;
			this.range_recharge=NaN;
			this.range_withdraw=NaN;
			this.total_balance=NaN;
			this.range_bet=NaN;
			this.range_reward=NaN;
			this.range_result=NaN;
			this.range_income=NaN;
			this.total_member=NaN;
			this.total_online=NaN;
			this.range_register=NaN;
			this.today_login=NaN;
			this.balance_lt_10=NaN;
			this.balance_gt_10=NaN;
			this.days_offline_30=NaN;
			this.days_offline_60=NaN;
			this.x_data=null;
			this.y_data=null;
		}

		__class(GroupStatisticalAnalysisSearchData,'publics.protodata.GroupStatisticalAnalysisSearchData');
		var __proto=GroupStatisticalAnalysisSearchData.prototype;
		__proto.decode=function(obj){
			var data=obj.data;
			this.range_commission=data["range_commission"];
			this.range_recharge=data["range_recharge"];
			this.range_withdraw=data["range_withdraw"];
			this.total_balance=data["total_balance"];
			this.range_bet=data["range_bet"];
			this.range_reward=data["range_reward"];
			this.range_result=data["range_result"];
			this.range_income=data["range_income"];
			this.total_member=data["total_member"];
			this.total_online=data["total_online"];
			this.range_register=data["range_register"];
			this.today_login=data["today_login"];
			this.balance_lt_10=data["balance_lt_10"];
			this.balance_gt_10=data["balance_gt_10"];
			this.days_offline_30=data["30_days_offline"];
			this.days_offline_60=data["60_days_offline"];
			this.x_data=obj["x_data"];
			this.y_data=obj["y_data"];
		}

		return GroupStatisticalAnalysisSearchData;
	})()


	//class publics.protodata.GroupWinLostData
	var GroupWinLostData=(function(){
		function GroupWinLostData(){
			this.current=null;
			this.next=null;
			this.page_row=null;
			this.pages=null;
			this.prev=null;
			this.total=null;
			this.itemDic=new Dictionary();
			this.items=[];
		}

		__class(GroupWinLostData,'publics.protodata.GroupWinLostData');
		var __proto=GroupWinLostData.prototype;
		__proto.decode=function(data){
			for (var key in data.data){
				var item=new GroupWinLostItem();
				item.decode(data.data[key]);
				this.items.push(item);
				this.itemDic[key]=this.items.length;
			}
			this.current=data.page.current;
			this.next=data.page.next;
			this.page_row=data.page.page_row;
			this.pages=data.page.pages;
			this.prev=data.page.prev;
			this.total=data.page.total;
		}

		return GroupWinLostData;
	})()


	//class publics.protodata.GroupWinLostItem
	var GroupWinLostItem=(function(){
		function GroupWinLostItem(){
			this.income_balance=NaN;
			this.is_active=NaN;
			this.is_important=NaN;
			this.percent_tree=null;
			this.team_user_count=NaN;
			this.user_account=null;
			this.user_id=0;
			this.user_percent=null;
			this.total_commission_balance=NaN;
			this.total_dailypay_balance=NaN;
			this.total_promotion_balance=NaN;
			this.total_bet_balance=NaN;
			this.total_real_bet_balance=NaN;
			this.total_recharge_balance=NaN;
			this.total_result_balance=NaN;
			this.total_result_self_balance=NaN;
			this.total_reward_balance=NaN;
			this.total_withdraw_balance=NaN;
		}

		__class(GroupWinLostItem,'publics.protodata.GroupWinLostItem');
		var __proto=GroupWinLostItem.prototype;
		__proto.decode=function(data){
			this.income_balance=data.income_balance;
			this.is_active=data.is_active;
			this.is_important=data.is_important;
			this.percent_tree=data.percent_tree;
			this.team_user_count=data.team_user_count;
			this.user_account=data.user_account;
			this.user_id=data.user_id;
			this.user_percent=data.user_percent;
			this.total_commission_balance=data.total_commission_balance;
			this.total_dailypay_balance=data.total_dailypay_balance;
			this.total_promotion_balance=data.total_promotion_balance;
			this.total_bet_balance=data.total_bet_balance;
			this.total_real_bet_balance=data.total_real_bet_balance;
			this.total_recharge_balance=data.total_recharge_balance;
			this.total_result_balance=data.total_result_balance;
			this.total_result_self_balance=data.total_result_self_balance;
			this.total_reward_balance=data.total_reward_balance;
			this.total_withdraw_balance=data.total_withdraw_balance;
		}

		return GroupWinLostItem;
	})()


	//class publics.protodata.HotGameItemData
	var HotGameItemData=(function(){
		function HotGameItemData(){
			this.game_id=0;
			this.name=null;
			this.product_id=0;
		}

		__class(HotGameItemData,'publics.protodata.HotGameItemData');
		var __proto=HotGameItemData.prototype;
		__proto.decode=function(data){
			this.game_id=data.game_id;
			this.name=data.name;
			this.product_id=data.product_id;
		}

		return HotGameItemData;
	})()


	//class publics.protodata.HotGameListData
	var HotGameListData=(function(){
		function HotGameListData(){
			this.status_code=0;
			this.status_msg=null;
			this.list=[];
		}

		__class(HotGameListData,'publics.protodata.HotGameListData');
		var __proto=HotGameListData.prototype;
		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.status_msg=data.status_msg;
			var hotGameItemData=new HotGameItemData();
			hotGameItemData.game_id=999;
			hotGameItemData.name="圣光女神";
			hotGameItemData.product_id=999
			this.list.push(hotGameItemData);
			var item;
			for(var $each_item in data.hot_games){
				item=data.hot_games[$each_item];
				hotGameItemData=new HotGameItemData();
				hotGameItemData.decode(item);
				this.list.push(hotGameItemData);
			}
			console.log("HotGameListData:",this);
		}

		return HotGameListData;
	})()


	//class publics.protodata.LotteryGameItemData
	var LotteryGameItemData=(function(){
		function LotteryGameItemData(){
			this.api_value=null;
			this.base_game=null;
			this.catch_url=null;
			this.game_config=null;
			this.game_value=null;
			this.id=0;
			this.is_active=false;
			this.is_auto_catch=false;
			this.is_high=false;
			this.is_hot=false;
			this.is_open=false;
			this.logo_url=null;
			this.order_by=null;
			this.percent_different=0;
			this.result_source=null;
			this.time_different=0;
		}

		__class(LotteryGameItemData,'publics.protodata.LotteryGameItemData');
		var __proto=LotteryGameItemData.prototype;
		__proto.decode=function(data){
			this.api_value=data.api_value;
			this.base_game=data.base_game;
			this.catch_url=data.catch_url;
			this.game_config=data.game_config;
			this.game_value=data.game_value;
			this.id=data.id;
			this.is_active=data.is_active;
			this.is_auto_catch=data.is_auto_catch;
			this.is_high=data.is_high;
			this.is_hot=data.is_hot;
			this.is_open=data.is_open;
			this.logo_url=data.logo_url;
			this.order_by=data.order_by;
			this.percent_different=data.percent_different;
			this.result_source=data.result_source;
			this.time_different=data.time_different;
		}

		return LotteryGameItemData;
	})()


	//class publics.protodata.LotteryGameListData
	var LotteryGameListData=(function(){
		function LotteryGameListData(){
			this.status_code=0;
			this.status_msg=null;
			this.hotList=[];
			this.ggList=[];
			this.lgList=[];
		}

		__class(LotteryGameListData,'publics.protodata.LotteryGameListData');
		var __proto=LotteryGameListData.prototype;
		__proto.clone=function(){
			var lotteryGameListData=new LotteryGameListData();
			lotteryGameListData.hotList=this.hotList.concat();
			lotteryGameListData.ggList=this.ggList.concat();
			lotteryGameListData.lgList=this.lgList.concat();
			return lotteryGameListData;
		}

		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.status_msg=data.status_msg;
			var item;
			for(var $each_item in data.game_list){
				item=data.game_list[$each_item];
				var lotteryGameItemData=new LotteryGameItemData();
				lotteryGameItemData.decode(item);
				if(lotteryGameItemData.is_active){
					this.ggList.push(lotteryGameItemData);
					if(lotteryGameItemData.is_hot){
						this.hotList.push(lotteryGameItemData);
					}
				}
			}
			console.log("LotteryGameListData:",this);
		}

		__proto.initTempTop=function(){
			var lotteryGameItemData=new LotteryGameItemData();
			lotteryGameItemData.game_value="全部";
			this.ggList.unshift(lotteryGameItemData);
		}

		__proto.getLotteryGameItem=function(id){
			for (var i=0;i < this.ggList.length;i++){
				if(this.ggList[i].id==id)
					return this.ggList[i];
			}
			return null;
		}

		__proto.getLotteryGameItemIndex=function(id){
			for (var i=0;i < this.ggList.length;i++){
				if(this.ggList[i].id==id)
					return i;
			}
			return 0;
		}

		return LotteryGameListData;
	})()


	//class publics.protodata.McAccountSearchData
	var McAccountSearchData=(function(){
		function McAccountSearchData(){
			this.page_sum_add_balance=null;
			this.page_sum_add_balance_display=null;
			this.page_sum_sub_balance=null;
			this.page_sum_sub_balance_display=null;
			this.add_balance=null;
			this.add_balance_display=null;
			this.sub_balance=null;
			this.sub_balance_display=null;
			this.current=null;
			this.next=null;
			this.page_row=null;
			this.pages=null;
			this.prev=null;
			this.total=null;
			this.items=[];
		}

		__class(McAccountSearchData,'publics.protodata.McAccountSearchData');
		var __proto=McAccountSearchData.prototype;
		__proto.decode=function(data){
			var log_list=data.log_list;
			for (var i=0;i < log_list.length;i++){
				var mcAccountSearchItme=new McAccountSearchItme();
				mcAccountSearchItme.decode(log_list[i]);
				this.items.push(mcAccountSearchItme);
			}
			this.page_sum_add_balance=data.page_sum.add_balance;
			this.page_sum_add_balance_display=data.page_sum.add_balance_display;
			this.page_sum_sub_balance=data.page_sum.sub_balance;
			this.page_sum_sub_balance_display=data.page_sum.sub_balance_display;
			this.add_balance=data.log_sum.add_balance;
			this.add_balance_display=data.log_sum.add_balance_display;
			this.sub_balance=data.log_sum.sub_balance;
			this.sub_balance_display=data.log_sum.sub_balance_display;
			this.current=data.page.current;
			this.next=data.page.next;
			this.page_row=data.page.page_row;
			this.pages=data.page.pages;
			this.prev=data.page.prev;
			this.total=data.page.total;
		}

		return McAccountSearchData;
	})()


	//class publics.protodata.McAccountSearchItme
	var McAccountSearchItme=(function(){
		function McAccountSearchItme(){
			this.product_id=null;
			this.id=0;
			this.user_id=0;
			this.change_type=null;
			this.change_item_id=null;
			this.change_balance=NaN;
			this.change_before=NaN;
			this.change_after=NaN;
			this.change_ip=null;
			this.is_beta=0;
			this.create_time=null;
			this.user_account=null;
			this.type=null;
			this.change_item_name=null;
			this.change_balance_display=null;
			this.change_after_display=null;
			this.change_before_display=null;
		}

		__class(McAccountSearchItme,'publics.protodata.McAccountSearchItme');
		var __proto=McAccountSearchItme.prototype;
		__proto.decode=function(data){
			this.product_id=data.product_id;
			this.id=data.id;
			this.user_id=data.user_id;
			this.change_type=data.change_type;
			this.change_item_id=data.change_item_id;
			this.change_balance=parseFloat(data.change_balance);
			this.change_before=data.change_before;
			this.change_after=data.change_after;
			this.change_ip=data.change_ip;
			this.is_beta=data.is_beta;
			this.create_time=data.create_time;
			this.user_account=data.user_account;
			this.type=data.type;
			this.change_item_name=data.change_item_name;
			this.change_balance_display=data.change_balance_display;
			this.change_after_display=data.change_after_display;
			this.change_before_display=data.change_before_display;
		}

		return McAccountSearchItme;
	})()


	//class publics.protodata.MineCenterTodayData
	var MineCenterTodayData=(function(){
		function MineCenterTodayData(){
			this.status_code=0;
			this.status_msg=null;
			this.income_balance=NaN;
			this.total_bet_balance=NaN;
			this.total_commission_balance=NaN;
			this.total_promotion_balance=NaN;
			this.total_recharge_balance=NaN;
			this.total_result_balance=NaN;
			this.total_reward_balance=NaN;
			this.total_withdraw_balance=NaN;
			this.x_data=null;
			this.y_data=null;
		}

		__class(MineCenterTodayData,'publics.protodata.MineCenterTodayData');
		var __proto=MineCenterTodayData.prototype;
		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.status_msg=data.status_msg;
			var total_count_obj=data.total_count;
			this.income_balance=total_count_obj.income_balance;
			this.total_bet_balance=total_count_obj.total_bet_balance;
			this.total_commission_balance=total_count_obj.total_commission_balance;
			this.total_promotion_balance=total_count_obj.total_promotion_balance;
			this.total_recharge_balance=total_count_obj.total_recharge_balance;
			this.total_result_balance=total_count_obj.total_result_balance;
			this.total_reward_balance=total_count_obj.total_reward_balance;
			this.total_withdraw_balance=total_count_obj.total_withdraw_balance;
		}

		return MineCenterTodayData;
	})()


	//class publics.protodata.MineStatisticsData
	var MineStatisticsData=(function(){
		function MineStatisticsData(){
			this.status_code=0;
			this.status_msg=null;
			this.high_lottery=null;
			this.low_lottery=null;
			this.pk_lottery_percent=null;
			this.pk_lottery=null;
			this.service_live_link=null;
			this.backwaterLottery=null;
			this.items=[];
		}

		__class(MineStatisticsData,'publics.protodata.MineStatisticsData');
		var __proto=MineStatisticsData.prototype;
		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.status_msg=data.status_msg;
			var data_Arr=data.data;
			for (var i=0;i < data_Arr.length;i++){
				var item=new MineStatisticsItem();
				item.decode(data_Arr[i]);
				this.items.push(item);
			};
			var system_config=data.system_config;
			this.high_lottery=system_config.high_lottery.value;
			this.low_lottery=system_config.low_lottery.value;
			this.pk_lottery_percent=system_config.pk_lottery_percent.value;
			this.pk_lottery=system_config.pk_lottery.value;
			this.service_live_link=system_config.service_live_link.value;
			var product_bouns=data.product_bouns;
			this.backwaterLottery=product_bouns.Lottery;
		}

		return MineStatisticsData;
	})()


	//class publics.protodata.MineStatisticsItem
	var MineStatisticsItem=(function(){
		function MineStatisticsItem(){
			this.base_game=null;
			this.bonus=null;
			this.game_id=0;
			this.game_type_id=0;
			this.game_type_name=null;
			this.id=0;
			this.is_active=false;
			this.max_bet_count=0;
			this.max_num_row=null;
			this.name=null;
			this.original_bonus=null;
			this.percent=0;
		}

		__class(MineStatisticsItem,'publics.protodata.MineStatisticsItem');
		var __proto=MineStatisticsItem.prototype;
		__proto.decode=function(data){
			this.base_game=data.base_game;
			this.bonus=data.bonus;
			this.game_id=data.game_id;
			this.game_type_id=data.game_type_id;
			this.game_type_name=data.game_type_name;
			this.id=data.id;
			this.is_active=data.is_active;
			this.max_bet_count=data.max_bet_count;
			this.max_num_row=data.max_num_row;
			this.name=data.name;
			this.original_bonus=data.original_bonus;
			this.percent=data.percent;
		}

		return MineStatisticsItem;
	})()


	//class publics.protodata.MineWinLostData
	var MineWinLostData=(function(){
		function MineWinLostData(){
			this.status_code=0;
			this.status_msg=null;
			this.game_record=null;
			this.game_record_total=null;
			this.parent_name=null;
			this.product_name_lang=null;
			this.user_dailypayObj=null;
			this.user_percent=null;
			this.user_record=null;
			this.income_balance=NaN;
			this.income_balance_display=NaN;
			this.total_bet_balance=NaN;
			this.total_bet_balance_display=NaN;
			this.total_real_bet_balance=NaN;
			this.total_real_bet_balance_display=NaN;
			this.total_recharge_balance=NaN;
			this.total_recharge_balance_display=NaN;
			this.total_result_balance=NaN;
			this.total_result_balance_display=NaN;
			this.total_result_self_balance=NaN;
			this.total_result_self_balance_display=NaN;
			this.total_reward_balance=NaN;
			this.total_reward_balance_display=NaN;
			this.total_withdraw_balance=NaN;
			this.total_withdraw_balance_display=NaN;
			this.dailypay_tree=null;
			this.id=0;
			this.is_active=false;
			this.last_edit=null;
			this.user_dailypay=0;
			this.user_id=0;
			this.ur_total_commission_balance_display=NaN;
			this.ur_total_dailypay_balance_display=NaN;
			this.ur_total_promotion_balance_display=NaN;
			this.ur_total_recharge_balance_display=NaN;
			this.ur_total_withdraw_balance_display=NaN;
			this.gameRecords=[];
		}

		__class(MineWinLostData,'publics.protodata.MineWinLostData');
		var __proto=MineWinLostData.prototype;
		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.status_msg=data.status_msg;
			if(this.status_code==1){
				this.game_record=data.game_record;
				this.game_record_total=data.game_record_total;
				this.parent_name=data.parent_name;
				this.product_name_lang=data.product_name_lang;
				this.user_dailypayObj=data.user_dailypay;
				this.user_percent=data.user_percent;
				this.user_record=data.user_record;
				for (var key in this.game_record){
					var item=new MineWinLostGameRecordItem();
					item.gameId=key;
					item.decode(this.game_record[key]);
					this.gameRecords.push(item);
				}
				this.income_balance=this.game_record_total.income_balance;
				this.income_balance_display=this.game_record_total.income_balance_display;
				this.total_bet_balance=this.game_record_total.total_bet_balance;
				this.total_bet_balance_display=this.game_record_total.total_bet_balance_display;
				this.total_real_bet_balance=this.game_record_total.total_real_bet_balance_display;
				this.total_real_bet_balance_display=this.game_record_total.total_real_bet_balance_display;
				this.total_recharge_balance=this.game_record_total.total_recharge_balance;
				this.total_recharge_balance_display=this.game_record_total.total_recharge_balance_display;
				this.total_result_balance=this.game_record_total.total_result_balance;
				this.total_result_balance_display=this.game_record_total.total_result_balance_display;
				this.total_result_self_balance=this.game_record_total.total_result_self_balance;
				this.total_result_self_balance_display=this.game_record_total.total_result_self_balance_display;
				this.total_reward_balance=this.game_record_total.total_reward_balance;
				this.total_reward_balance_display=this.game_record_total.total_reward_balance_display;
				this.total_withdraw_balance=this.game_record_total.total_withdraw_balance;
				this.total_withdraw_balance_display=this.game_record_total.total_withdraw_balance_display;
				if(this.user_dailypayObj){
					this.dailypay_tree=this.user_dailypayObj.dailypay_tree;
					this.id=this.user_dailypayObj.id;
					this.is_active=this.user_dailypayObj.is_active;
					this.last_edit=this.user_dailypayObj.last_edit;
					this.user_dailypay=this.user_dailypayObj.user_dailypay;
					this.user_id=this.user_dailypayObj.user_id;
				}
				this.ur_total_commission_balance_display=this.user_record.total_commission_balance_display;
				this.ur_total_dailypay_balance_display=this.user_record.total_dailypay_balance_display;
				this.ur_total_promotion_balance_display=this.user_record.total_promotion_balance_display;
				this.ur_total_recharge_balance_display=this.user_record.total_recharge_balance_display;
				this.ur_total_withdraw_balance_display=this.user_record.total_withdraw_balance_display;
			}
		}

		return MineWinLostData;
	})()


	//class publics.protodata.MineWinLostGameRecordItem
	var MineWinLostGameRecordItem=(function(){
		function MineWinLostGameRecordItem(){
			this.gameId=null;
			this.income_balance=NaN;
			this.income_balance_display=NaN;
			this.total_bet_balance=NaN;
			this.total_bet_balance_display=NaN;
			this.total_real_bet_balance=NaN;
			this.total_real_bet_balance_display=NaN;
			this.total_recharge_balance=NaN;
			this.total_recharge_balance_display=NaN;
			this.total_result_balance=NaN;
			this.total_result_balance_display=NaN;
			this.total_result_self_balance=NaN;
			this.total_result_self_balance_display=NaN;
			this.total_reward_balance=NaN;
			this.total_reward_balance_display=NaN;
			this.total_withdraw_balance=NaN;
			this.total_withdraw_balance_display=NaN;
		}

		__class(MineWinLostGameRecordItem,'publics.protodata.MineWinLostGameRecordItem');
		var __proto=MineWinLostGameRecordItem.prototype;
		__proto.decode=function(data){
			this.income_balance=data.income_balance;
			this.income_balance_display=data.income_balance_display;
			this.total_bet_balance=data.total_bet_balance;
			this.total_bet_balance_display=data.total_bet_balance_display;
			this.total_real_bet_balance=data.total_real_bet_balance;
			this.total_real_bet_balance_display=data.total_real_bet_balance_display;
			this.total_recharge_balance=data.total_recharge_balance;
			this.total_recharge_balance_display=data.total_recharge_balance_display;
			this.total_result_balance=data.total_result_balance;
			this.total_result_balance_display=data.total_result_balance_display;
			this.total_result_self_balance=data.total_result_self_balance;
			this.total_result_self_balance_display=data.total_result_self_balance_display;
			this.total_reward_balance=data.total_reward_balance;
			this.total_reward_balance_display=data.total_reward_balance_display;
			this.total_withdraw_balance=data.total_withdraw_balance;
			this.total_withdraw_balance_display=data.total_withdraw_balance_display;
		}

		return MineWinLostGameRecordItem;
	})()


	//class publics.protodata.PlayerInfoData
	var PlayerInfoData=(function(){
		function PlayerInfoData(){
			this.status_code=0;
			this.status_msg=null;
			this.user_id=0;
			this.token=null;
			this.is_login=false;
			this.login_fail_counter=0;
			this.push_token=null;
			this.web_socket_host=null;
			this.balance_password=null;
			this.balance_status=0;
			this.continuous_login=0;
			this.create_time=null;
			this.finance_setting=null;
			this.google_code=0;
			this.id="";
			this.is_active=0;
			this.is_beta=0;
			this.is_important=0;
			this.last_login=null;
			this.last_login_ip=null;
			this.last_password_edit=null;
			this.mobile_number=0;
			this.parent_tree=null;
			this.percent_tree=null;
			this.qq_account=null;
			this.real_ip=null;
			this.user_account=null;
			this.user_balance=NaN;
			this.betMoney=NaN;
			this.user_email=null;
			this.user_level=0;
			this.user_nickname=null;
			this.user_password=null;
			this.user_percent=0;
			this.bet=0;
			this.login=0;
			this.proxy_recharge=0;
			this.register=0;
			this.unlink_bank=0;
			this.withdraw=0;
			this.auto_return_string=null;
			this.auto_return_switch=0;
			this.bet_fast=0;
			this.music=0;
			this.pk_lottery=null;
			this.pk_lottery_percent=null;
			this.openFundId=0;
		}

		__class(PlayerInfoData,'publics.protodata.PlayerInfoData');
		var __proto=PlayerInfoData.prototype;
		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.status_msg=data.status_msg;
			this.user_id=data.user_id;
			this.token=data.token;
			if(this.status_code==1){
				var info_obj=data.info;
				this.is_login=info_obj.is_login;
				this.login_fail_counter=info_obj.login_fail_counter;
				this.push_token=info_obj.push_token;
				this.web_socket_host=info_obj.web_socket_host;
				var user_info_obj=info_obj.user_info;
				this.balance_password=user_info_obj.balance_password;
				this.balance_status=user_info_obj.balance_status;
				this.continuous_login=user_info_obj.continuous_login;
				this.create_time=user_info_obj.create_time;
				this.finance_setting=user_info_obj.finance_setting;
				this.google_code=user_info_obj.google_code;
				this.id=user_info_obj.id;
				this.is_active=user_info_obj.is_active;
				this.is_beta=user_info_obj.is_beta;
				this.is_important=user_info_obj.is_important;
				this.last_login=user_info_obj.last_login;
				this.last_login_ip=user_info_obj.last_login_ip;
				this.last_password_edit=user_info_obj.last_password_edit;
				this.mobile_number=user_info_obj.mobile_number;
				this.parent_tree=user_info_obj.parent_tree;
				this.percent_tree=user_info_obj.percent_tree;
				this.push_token=user_info_obj.push_token;
				this.qq_account=user_info_obj.qq_account;
				this.real_ip=user_info_obj.real_ip;
				this.user_account=user_info_obj.user_account;
				this.user_balance=Number(user_info_obj.user_balance);
				this.user_email=user_info_obj.user_email;
				this.user_level=user_info_obj.user_level;
				this.user_nickname=user_info_obj.user_nickname;
				this.user_password=user_info_obj.user_password;
				this.user_percent=user_info_obj.user_percent;
				var disabled_setting=user_info_obj.disabled_setting;
				this.bet=disabled_setting.bet;
				this.login=disabled_setting.login;
				this.proxy_recharge=disabled_setting.proxy_recharge;
				this.register=disabled_setting.register;
				this.unlink_bank=disabled_setting.unlink_bank;
				this.withdraw=disabled_setting.withdraw;
				var user_setting=user_info_obj.user_setting;
				this.auto_return_string=user_setting.auto_return_string;
				this.auto_return_switch=user_setting.auto_return_switch;
				this.bet_fast=user_setting.bet_fast;
				this.music=user_setting.music;
			}
			console.log("PlayerInfoData:",this);
		}

		return PlayerInfoData;
	})()


	//class publics.protodata.PokerGameItemData
	var PokerGameItemData=(function(){
		function PokerGameItemData(){
			this.game_id=null;
			this.product_id=null;
			this.is_new=false;
			this.is_hot=false;
			this.chs_name=null;
			this.cht_name=null;
			this.eng_name=null;
			this.ggapi=null;
			this.is_open=false;
		}

		__class(PokerGameItemData,'publics.protodata.PokerGameItemData');
		var __proto=PokerGameItemData.prototype;
		__proto.decode=function(data){
			this.game_id=data.game_id;
			this.product_id=data.product_id;
			this.is_new=data.is_new;
			this.is_hot=data.is_hot;
			this.chs_name=data.chs_name;
			this.cht_name=data.cht_name;
			this.eng_name=data.eng_name;
			this.ggapi=data.ggapi;
			this.is_open=data.is_open;
		}

		return PokerGameItemData;
	})()


	//class publics.protodata.PokerGameListData
	var PokerGameListData=(function(){
		function PokerGameListData(){
			this.act=null;
			this.status=0;
			this.qipaiFangkaArr=[];
			this.qipaiJingjichangArr=[];
			this.qipaiYulechangArr=[];
			this.dianyouJiejiArr=[];
			this.dianyouSlotArr=[];
		}

		__class(PokerGameListData,'publics.protodata.PokerGameListData');
		var __proto=PokerGameListData.prototype;
		__proto.decode=function(data){
			this.act=data.act;
			this.status=data.status;
			var gameclass=data.data.gameclass;
			var gameinfo=data.data.gameinfo;
			var key;
			var pokerGameItemData;
			var $each_key;
			for($each_key in gameclass.qipai.fangka){
				key=gameclass.qipai.fangka[$each_key];
				var item=gameinfo[key];
				pokerGameItemData=new PokerGameItemData();
				pokerGameItemData.decode(item);
				this.qipaiFangkaArr.push(pokerGameItemData);
			}
			var $each_key;
			for($each_key in gameclass.qipai.jingjichang){
				key=gameclass.qipai.jingjichang[$each_key];
				pokerGameItemData=new PokerGameItemData();
				pokerGameItemData.decode(gameinfo[key]);
				this.qipaiJingjichangArr.push(pokerGameItemData);
			}
			var $each_key;
			for($each_key in gameclass.qipai.yulechang){
				key=gameclass.qipai.yulechang[$each_key];
				pokerGameItemData=new PokerGameItemData();
				pokerGameItemData.decode(gameinfo[key]);
				this.qipaiYulechangArr.push(pokerGameItemData);
			}
			var $each_key;
			for($each_key in gameclass.dianyou.jieji){
				key=gameclass.dianyou.jieji[$each_key];
				pokerGameItemData=new PokerGameItemData();
				pokerGameItemData.decode(gameinfo[key]);
				this.dianyouJiejiArr.push(pokerGameItemData);
			}
			var $each_key;
			for($each_key in gameclass.dianyou.slot){
				key=gameclass.dianyou.slot[$each_key];
				pokerGameItemData=new PokerGameItemData();
				pokerGameItemData.decode(gameinfo[key]);
				this.dianyouSlotArr.push(pokerGameItemData);
			}
			console.log("PokerGameListData:",this);
		}

		return PokerGameListData;
	})()


	//class publics.protodata.RechargePipeData
	var RechargePipeData=(function(){
		function RechargePipeData(){
			this.itemDic=new Dictionary();
		}

		__class(RechargePipeData,'publics.protodata.RechargePipeData');
		var __proto=RechargePipeData.prototype;
		__proto.decode=function(data){
			for (var key in data.info){
				var item=new RechargePipeDataItem();
				item.decode(data.info[key]);
				this.itemDic.set(key,item);
			}
		}

		return RechargePipeData;
	})()


	//class publics.protodata.RechargePipeDataItem
	var RechargePipeDataItem=(function(){
		function RechargePipeDataItem(){
			this.id=null;
			this.display_name=null;
			this.backend_name=null;
			this.gateway_code=null;
			this.base_merchant=null;
			this.is_default=null;
			this.is_active=null;
			this.is_bank=null;
			this.order_by=null;
			this.platform_only=null;
			this.redirect_url=null;
			this.return_domain=null;
			this.show_mode=null;
			this.last_edit=null;
			this.bank_value=null;
			this.min_amount=0;
			this.max_amount=0;
			this.topNotice=null;
			this.bottomNotice=null;
			this.bank_name=null;
			this.bank_owner=null;
			this.bank_account=null;
			this.bank_branch=null;
			this.qrcode_img=null;
		}

		__class(RechargePipeDataItem,'publics.protodata.RechargePipeDataItem');
		var __proto=RechargePipeDataItem.prototype;
		__proto.decode=function(data){
			this.id=data.id;
			this.display_name=data.display_name;
			this.backend_name=data.backend_name;
			this.gateway_code=data.gateway_code;
			this.base_merchant=data.base_merchant;
			this.is_default=data.is_default;
			this.is_active=data.is_active;
			this.is_bank=data.is_bank;
			this.order_by=data.order_by;
			this.platform_only=data.platform_only;
			this.redirect_url=data.redirect_url;
			this.return_domain=data.return_domain;
			this.show_mode=data.show_mode;
			this.last_edit=data.last_edit;
			this.bank_value=data.bank_value;
			this.min_amount=data.config_value.recharge_amount_single.min_amount;
			this.max_amount=data.config_value.recharge_amount_single.max_amount;
			if(this.base_merchant=="OfflineBank" || this.base_merchant=="OfflineBankV2" || this.base_merchant=="TonglueyunOffline"){
				var hallUIModel=Injector.getInstance().getSingleton(HallUIModel);
				this.bank_account=data.merchant_value.bank_account;
				this.bank_branch=data.merchant_value.bank_branch;
				this.bank_name=data.merchant_value.bank_name;
				this.bank_owner=data.merchant_value.bank_owner;
			}
			if(this.base_merchant=="OfflineMultiQrcode"){
				if(data.merchant_value[0])
					this.qrcode_img=data.merchant_value[0].qrcode_img;
			}
			this.topNotice=data.merchant_value.top_notice;
			this.bottomNotice=data.merchant_value.bottom_notice;
		}

		return RechargePipeDataItem;
	})()


	//class publics.protodata.RegisterData
	var RegisterData=(function(){
		function RegisterData(){
			this.status_code=0;
			this.user_account=0;
			this.status_msg=null;
		}

		__class(RegisterData,'publics.protodata.RegisterData');
		var __proto=RegisterData.prototype;
		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.user_account=data.user_account;
			this.status_msg=data.status_msg;
		}

		return RegisterData;
	})()


	//class publics.protodata.TokenData
	var TokenData=(function(){
		function TokenData(){
			this.status_code=0;
			this.status_msg=null;
			this.access_token=null;
			this.app_key=null;
			this.client_id=null;
			this.expires_time=0;
		}

		__class(TokenData,'publics.protodata.TokenData');
		var __proto=TokenData.prototype;
		__proto.decode=function(data){
			this.status_code=data.status_code;
			this.status_msg=data.status_msg;
			this.access_token=data.info.access_token;
			this.expires_time=data.info.expires_time;
			this.app_key=data.info.client.app_key;
			this.client_id=data.info.client.client_id;
		}

		return TokenData;
	})()


	//class publics.protodata.UserBalanceData
	var UserBalanceData=(function(){
		function UserBalanceData(){
			this.itemDic=new Dictionary();
		}

		__class(UserBalanceData,'publics.protodata.UserBalanceData');
		var __proto=UserBalanceData.prototype;
		__proto.decode=function(data){
			for (var key in data.info){
				var gameTypeConfigData=DataMgr.get().gameTypeConfigData;
				if(!gameTypeConfigData.getItem(key))
					continue ;
				var item=new UserBalanceDataItem();
				item.decode(data.info[key]);
				this.itemDic.set(key,item);
			}
		}

		return UserBalanceData;
	})()


	//class publics.protodata.UserBalanceDataItem
	var UserBalanceDataItem=(function(){
		function UserBalanceDataItem(){
			this.user_balance=null;
			this.user_balance_display=null;
		}

		__class(UserBalanceDataItem,'publics.protodata.UserBalanceDataItem');
		var __proto=UserBalanceDataItem.prototype;
		__proto.decode=function(data){
			this.user_balance=data.user_balance;
			this.user_balance_display=data.user_balance_display;
		}

		return UserBalanceDataItem;
	})()


	//class publics.protodata.UserBankAccountData
	var UserBankAccountData=(function(){
		function UserBankAccountData(){
			this.checkBol=false;
			this.items=[];
		}

		__class(UserBankAccountData,'publics.protodata.UserBankAccountData');
		var __proto=UserBankAccountData.prototype;
		__proto.decode=function(data){
			var dataArr=data.bank_account_list;
			for (var i=0;i < dataArr.length;i++){
				var item=new UserBankAccountDataItem();
				item.decode(dataArr[i]);
				this.items.push(item);
			}
		}

		return UserBankAccountData;
	})()


	//class publics.protodata.UserBankAccountDataItem
	var UserBankAccountDataItem=(function(){
		function UserBankAccountDataItem(){
			this.bank_account=null;
			this.bank_branch=null;
			this.bank_list_id=null;
			this.bank_name=null;
			this.bank_owner=null;
			this.bank_status=null;
			this.create_time=null;
			this.first_id=null;
			this.id=null;
			this.is_active=null;
			this.is_enable=null;
			this.user_account=null;
			this.user_id=null;
		}

		__class(UserBankAccountDataItem,'publics.protodata.UserBankAccountDataItem');
		var __proto=UserBankAccountDataItem.prototype;
		__proto.decode=function(data){
			this.bank_account=data.bank_account;
			this.bank_branch=data.bank_branch;
			this.bank_list_id=data.bank_list_id;
			this.bank_name=data.bank_name;
			this.bank_owner=data.bank_owner;
			this.bank_status=data.bank_status;
			this.create_time=data.create_time;
			this.first_id=data.first_id;
			this.id=data.id;
			this.is_active=data.is_active;
			this.is_enable=data.is_enable;
			this.user_account=data.user_account;
			this.user_id=data.user_id;
		}

		return UserBankAccountDataItem;
	})()


	//class publics.protodata.UserInfoData
	var UserInfoData=(function(){
		function UserInfoData(){
			this.balance_info=null;
			this.balance_password=null;
			this.continuous_login=null;
			this.create_time=null;
			this.disabled_setting=null;
			this.finance_setting=null;
			this.google_code=null;
			this.google_set_time=null;
			this.id=null;
			this.is_active=null;
			this.is_beta=null;
			this.is_important=null;
			this.is_proxy=null;
			this.last_login=null;
			this.last_login_ip=null;
			this.last_password_edit=null;
			this.mobile_country_code=null;
			this.mobile_number=null;
			this.proxy_info=null;
			this.qq_account=null;
			this.user_account=null;
			this.user_email=null;
			this.user_level=null;
			this.user_name=null;
			this.user_nickname=null;
			this.user_password=null;
			this.user_setting=null;
			this.wechat_account=null;
		}

		__class(UserInfoData,'publics.protodata.UserInfoData');
		var __proto=UserInfoData.prototype;
		__proto.decode=function(data){
			this.balance_info=data.balance_info;
			this.balance_password=data.balance_password;
			this.continuous_login=data.continuous_login;
			this.create_time=data.create_time;
			this.disabled_setting=data.disabled_setting;
			this.finance_setting=data.finance_setting;
			this.google_code=data.google_code;
			this.google_set_time=data.google_set_time;
			this.id=data.id;
			this.is_active=data.is_active;
			this.is_beta=data.is_beta;
			this.is_important=data.is_important;
			this.is_proxy=data.is_proxy;
			this.last_login=data.last_login;
			this.last_login_ip=data.last_login_ip;
			this.last_password_edit=data.last_password_edit;
			this.mobile_country_code=data.mobile_country_code;
			this.mobile_number=data.mobile_number;
			this.proxy_info=data.proxy_info;
			this.qq_account=data.qq_account;
			this.user_account=data.user_account;
			this.user_email=data.user_email;
			this.user_level=data.user_level;
			this.user_name=data.user_name;
			this.user_nickname=data.user_nickname;
			this.user_password=data.user_password;
			this.user_setting=data.user_setting;
			this.wechat_account=data.wechat_account;
		}

		return UserInfoData;
	})()


	//class publics.utils.ChartUtil
	var ChartUtil=(function(){
		function ChartUtil(){}
		__class(ChartUtil,'publics.utils.ChartUtil');
		ChartUtil.initChart=function(x,y,w,h,data){
			if(!ChartUtil._canvas){
				ChartUtil.chartDiv=Browser.createElement("div");
				ChartUtil.chartDiv.id="chartDiv";
				ChartUtil.chartDiv["style"]["zIndex"]=10000;
				ChartUtil.chartDiv["style"]["position"]="absolute";
				ChartUtil.chartDiv["style"]["pointer-events"]="none";
				ChartUtil.chartDiv["style"]["visibility"]="hidden";
				Browser.document.body.appendChild(ChartUtil.chartDiv);
				ChartUtil._canvas=new HTMLCanvas('2D');
				ChartUtil._canvas.source.id="chartCanvas";
				ChartUtil._ctx=ChartUtil._canvas.getContext('2d');
				ChartUtil.chartDiv.appendChild(ChartUtil._canvas.source);
			}
			ChartUtil.chartDiv["style"]["width"]=String(w)+"px";
			ChartUtil.chartDiv["style"]["height"]=String(h)+"px";
			ChartUtil.chartDiv["style"]["left"]=x+"px";
			ChartUtil.chartDiv["style"]["top"]=y+"px";
			ChartUtil._canvas.size(w,h);
			ChartUtil._canvas.source.style.cssText="width:"+w+"px;height:"+h+"px;";
			new Chart(ChartUtil._ctx,data);
		}

		ChartUtil.showChart=function(){
			ChartUtil.chartDiv["style"]["visibility"]="visible";
		}

		ChartUtil.hideChart=function(){
			ChartUtil.chartDiv["style"]["visibility"]="hidden";
		}

		ChartUtil.updatePos=function(x,y){
			ChartUtil.chartDiv["style"]["left"]=x+"px";
			ChartUtil.chartDiv["style"]["top"]=y+"px";
		}

		ChartUtil._canvas=null
		ChartUtil._ctx=null
		ChartUtil._width=0;
		ChartUtil._height=300;
		ChartUtil.chartDiv=null
		return ChartUtil;
	})()


	//class publics.utils.GameUtil
	var GameUtil=(function(){
		function GameUtil(){};
		__class(GameUtil,'publics.utils.GameUtil');
		GameUtil.moneyFormat=function(num){
			var numStr=(num/100).toFixed(2);
			var temp=String(numStr).split(".");
			var small=temp[1];
			var numstr=temp[0];
			var numarr=numstr.split("");
			var tempArr=[];
			numstr="";
			for (var i=0;i < numarr.length;i++){
				if(i !=0 && i%3==0)tempArr.push(",");
				tempArr.push(numarr[numarr.length-1-i]);
			}
			for (var j=tempArr.length-1;j >=0;j--){
				numstr+=tempArr[j];
			}
			if(small)numstr=numstr+"."+small;
			return numstr;
		}

		GameUtil.updateResize=function(){
			if(Browser.onPC){
				console.log("PC");
				if(Browser.clientWidth > Browser.clientHeight)
					Laya.stage.screenMode="horizontal";
				else
				Laya.stage.screenMode="vertical";
				Laya.stage.scaleMode="fixedauto";
				Laya.stage.alignH="center";
				Laya.stage.alignV="middle";
			}
			else{
				console.log("APP");
				Laya.stage.screenMode="vertical";
				Laya.stage.scaleMode="fixedauto";
				Laya.stage.alignH="center";
				Laya.stage.alignV="middle";
			}
		}

		GameUtil.hideLoading=function(){
			hideLoading();
		}

		GameUtil.topupHandler=function(data){
			topUpFromAction(data);
		}

		GameUtil.getSignature=function(signatureKey){
			return $.md5 (signatureKey);
		}

		GameUtil.initChat=function(appkey,mine,friendList,groupList){
			ChatObj.openChat(appkey,mine,friendList,groupList);;
		}

		GameUtil.openOrCloseChat=function(flag){
			ChatObj.onMobileShowOrHide(flag);;
		}

		GameUtil.openChooseDate=function(dateStr,_index,handle){
			DateObj.openDateChoose(dateStr,_index,handle);;
		}

		GameUtil.layaFun=function(flag){
			console.log("GameUtil layaFun：",flag);
		}

		GameUtil.getTestRegisterUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER/play";
		}

		GameUtil.getLoginUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER/login";
		}

		GameUtil.getLoginOutUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER/logout";
		}

		GameUtil.getRegisterTry=function(){
			return GameUtil.GG_DOMAIN+"/USER";
		}

		GameUtil.getUserInfoUrl=function(uid){
			return GameUtil.GG_DOMAIN+"/USER/"+uid;
		}

		GameUtil.getTokenUrl=function(){
			return GameUtil.GG_DOMAIN+"/TOKEN";
		}

		GameUtil.getServerConfigUrl=function(fileName){
			return GameUtil.GG_DOMAIN+"/api_config/config/"+fileName;
		}

		GameUtil.getServerConfigVersionFile=function(){
			if(GameUtil.GG_Res_VersionFile.indexOf("?v")==-1)
				GameUtil.GG_Res_VersionFile+=("?v="+BaseStaticFuncs.mathRangeRandom(0,1000000));
			return GameUtil.getServerConfigUrl(GameUtil.GG_Res_VersionFile);
		}

		GameUtil.getPlatformUrl=function(pName){
			return GameUtil.GG_DOMAIN+"/"+pName;
		}

		GameUtil.getGongGao=function(){
			return GameUtil.GG_DOMAIN+"/ANNOUNCEMENT";
		}

		GameUtil.getMyFavoriteUrl=function(_userId){
			var userId=_userId.length > 0 ? "&id="+_userId :"";
			return GameUtil.GG_DOMAIN+"/USER_LOTTERY?is_simple=1"+userId;
		}

		GameUtil.getHallHotGameList=function(){
			return GameUtil.GG_DOMAIN+"/HOT_GAMES";
		}

		GameUtil.getLotteryGameList=function(){
			return GameUtil.GG_DOMAIN+"/LOTTERY_GAME";
		}

		GameUtil.getPokerGameList=function(){
			https:
			return "https://goodgaming.world/api/?act=gamelist&acc="+publics.utils.GameUtil.GG_PokerApiCode;
		}

		GameUtil.getErrorCodeUrl=function(){
			return GameUtil.GG_DOMAIN+"/ERROR_CODE"
		}

		GameUtil.getBoardCastUrl=function(){
			return GameUtil.GG_DOMAIN+"/NOTIFY";
		}

		GameUtil.getMineCenterUrl=function(date1,date2){
			return GameUtil.GG_DOMAIN+"/PERSONAL/userCount?start_time="+date1+"&end_time="+date2;
		}

		GameUtil.getUserUrl=function(uid){
			return GameUtil.GG_DOMAIN+"/USER/"+uid;
		}

		GameUtil.getOpenFund=function(){
			return GameUtil.GG_DOMAIN+"/USER_BALANCE";
		}

		GameUtil.getUserBalance=function(uid,product_id){
			var url=GameUtil.GG_DOMAIN+"/USER_BALANCE/"+uid;
			if(product_id !=null)
				url+="&product_id="+product_id;
			return url;
		}

		GameUtil.getBindingBankUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER_BANK_ACCOUNT/";
		}

		GameUtil.getMyBankUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER_BANK_ACCOUNT";
		}

		GameUtil.getMcBonusOverviewUrl=function(gameType){
			return GameUtil.GG_DOMAIN+"/LOTTERY_BONUS/"+gameType;
		}

		GameUtil.getSystemConfig=function(){
			return GameUtil.GG_DOMAIN+"/SYSTEM_CONFIG/";
		}

		GameUtil.getMcWinLostUrl=function(date1,date2){
			return GameUtil.GG_DOMAIN+"/PERSONAL/userReport?start_time="+date1+"&end_time="+date2;
		}

		GameUtil.getAccountTypeConfig=function(){
			return GameUtil.GG_DOMAIN+"/SYSTEM_DISPLAY_SETTING";
		}

		GameUtil.getAccountChagneSearhData=function(product_id,change_type,start_time,end_time,page){
			if(change_type==null){
				return GameUtil.GG_DOMAIN+"/PERSONAL/userBalanceLog?product_id="+product_id+"&start_time="+start_time+"&end_time="+end_time+"&current="+page;
				}else{
				return GameUtil.GG_DOMAIN+"/PERSONAL/userBalanceLog?product_id="+product_id+"&change_type="+change_type+"&start_time="+start_time+"&end_time="+end_time+"&current="+page;
			}
		}

		GameUtil.getBettingLogUrl=function(product_id,order_type,game_id,date1,date2,_current){
			return GameUtil.GG_DOMAIN+"/PERSONAL/userBettingLog?product_id="+product_id+"&order_type="+order_type+"&game_id="+game_id+"&start_time="+date1+" 04:00:00&end_time="+date2+" 04:00:00&current="+_current;
		}

		GameUtil.getGroupStatisticalAnalysisUrl=function(date1,date2){
			return GameUtil.GG_DOMAIN+"/TEAM/teamCount?start_time="+date1+"&end_time="+date2;
		}

		GameUtil.getGroupWinLostUrl=function(product_id,account,bonusRang,isSelected,date1,date2,current){
			var url=GameUtil.GG_DOMAIN+"/TEAM/teamReport?";
			var params=[];
			if(product_id!=null)
				params.push("product_id="+product_id);
			if(account!="")
				params.push("user_account="+account);
			if(bonusRang!=null)
				params.push("user_percent="+bonusRang);
			params.push("current="+current);
			params.push("skip_no_bet="+isSelected+"&start_time="+date1+"&end_time="+date2);
			for (var i=0;i < params.length;i++){
				if(i!=0)
					url+="&";
				url+=params[i];
			}
			return url;
		}

		GameUtil.getUserBonesRangUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER_BONES_RANG";
		}

		GameUtil.getUserBonesRang1Url=function(proxy_id){
			GameUtil.proxyId=proxy_id;
			return GameUtil.GG_DOMAIN+"/USER_BONES_RANG?proxy_id="+proxy_id;
		}

		GameUtil.getUserDaiylyBonesRang1Url=function(_uid){
			return GameUtil.GG_DOMAIN+"/USER_PROXY_DAILYPAY?id="+_uid+"&user_id="+GameUtil.proxyId;
		}

		GameUtil.getPokerGameUrl=function(gameMark){
			return GameUtil.GG_DOMAIN+"/"+gameMark;
		}

		GameUtil.getTopUpRechargePipeUrl=function(){
			return GameUtil.GG_DOMAIN+"/RECHARGE_GATEWAY";
		}

		GameUtil.getTopUpUrl=function(){
			return GameUtil.GG_DOMAIN+"/RECHARGE";
		}

		GameUtil.getTopupRecordUrl=function(id,date1,date2){
			return GameUtil.GG_DOMAIN+"/RECHARGE?id="+id+"&start_time="+date1+"&end_time="+date2;
		}

		GameUtil.getWithdrawUrl=function(){
			return GameUtil.GG_DOMAIN+"/WITHDRAW";
		}

		GameUtil.getWithdrawRecordUrl=function(id,date1,date2){
			return GameUtil.GG_DOMAIN+"/WITHDRAW?id="+id+"&start_time="+date1+"&end_time="+date2;
		}

		GameUtil.getTransferUrl=function(data){
			var url=GameUtil.GG_DOMAIN+"/TRANSFER";
			return url;
		}

		GameUtil.getTransferRecordUrl=function(id,date1,date2){
			return GameUtil.GG_DOMAIN+"/TRANSFER?id="+id+"&start_time="+date1+"&end_time="+date2;
		}

		GameUtil.getNewAgentUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER_PROXY";
		}

		GameUtil.getDailyPayUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER_PROXY_DAILYPAY";
		}

		GameUtil.getGroupVipUrl=function(account){
			return GameUtil.GG_DOMAIN+"/USER_PROXY";
		}

		GameUtil.getGroupBetRecordUrl=function(userId,product_id,account,date1,date2,curPage){
			var url=GameUtil.GG_DOMAIN+"/TEAM/teamBettingLog?id="+userId;
			if(product_id!=null)
				url+=("&game_id="+product_id);
			if(account!=null && account!="")
				url+=("&user_account="+account);
			url+=("&row=9&start_time="+date1+"&end_time="+date2+"&current="+curPage);
			return url;
		}

		GameUtil.getGroupAccountChangeDetailUrl=function(userId,product_id,change_type,date1,date2,user_account,target_seach_range,curPage){
			var url=GameUtil.GG_DOMAIN+"/TEAM/teamBalanceLog?id="+userId;
			if(product_id!=null)
				url+=("&product_id="+product_id);
			if(change_type!=null && change_type!="")
				url+=("&change_type="+change_type);
			if(user_account!=null && user_account!="")
				url+=("&user_account="+user_account);
			url+=("&start_time="+date1+"&end_time="+date2+"&range="+target_seach_range);
			if(curPage !=null)
				url+=("&current="+curPage);
			return url;
		}

		GameUtil.getLotteryListUrl=function(isSimple){
			(isSimple===void 0)&& (isSimple=true);
			return GameUtil.GG_DOMAIN+"/LOTTERY_MENU_LIST"+(isSimple ? "?is_simple=1" :"");
		}

		GameUtil.setLotteryListUrl=function(){
			return GameUtil.GG_DOMAIN+"/USER_LOTTERY";
		}

		GameUtil.getSearchDate=function(diffDay,diffDay2){
			(diffDay===void 0)&& (diffDay=0);
			(diffDay2===void 0)&& (diffDay2=0);
			var curDateNum=Laya.timer.currTimer;
			var beforeDay=curDateNum+diffDay*24*60*60*1000;
			var afterDay=curDateNum+diffDay2*24*60*60*1000;
			var month=0;
			var date;
			var beforeDayStr;
			var afterDayStr
			date=new Date(beforeDay);
			month=date.getMonth()+1;
			beforeDayStr=date.getFullYear()+"-"+(month < 10 ? "0"+month :month)+"-"+(date.getDate()< 10 ? "0"+date.getDate():date.getDate());
			date=new Date(afterDay);
			month=date.getMonth()+1;
			afterDayStr=date.getFullYear()+"-"+(month < 10 ? "0"+month :month)+"-"+(date.getDate()< 10 ? "0"+date.getDate():date.getDate());
			console.log("beforeDayStr:",beforeDayStr," afterDayStr:",afterDayStr);
			return [beforeDayStr,afterDayStr];
		}

		GameUtil.compareDate1=function(date1,date2){
			var data1Arr=date1.split("-");
			var data1Num=Date.parse(data1Arr[0]+"-"+data1Arr[1]+"-"+data1Arr[2]);
			var data2Arr=date2.split("-");
			var data2Num=Date.parse(data2Arr[0]+"-"+data2Arr[1]+"-"+data2Arr[2]);
			if(data2Num > data1Num)
				return 1;
			if(data2Num < data1Num)
				return-1;
			return 0;
		}

		GameUtil.getHTMLElementMatrixBySpriteMatrix=function(sp){
			var spStagePoint=sp.localToGlobal(new Point(0,0));
			var htmlElementX=spStagePoint.x / GRoot.inst.width *Browser.clientWidth;
			var htmlElementY=spStagePoint.y / GRoot.inst.height *Browser.clientHeight;
			var htmlElementW=Math.floor(sp.width / GRoot.inst.width *Browser.clientWidth);
			var htmlElementH=Math.floor(sp.height / GRoot.inst.height *Browser.clientHeight);
			return {x:htmlElementX,y:htmlElementY,width:htmlElementW,height:htmlElementH};
		}

		GameUtil.changeName=function(_str){
			_str=_str.replace("s_single","特单");
			_str=_str.replace("s_double","特双");
			_str=_str.replace("s_big_single","特大单");
			_str=_str.replace("s_small_single","特小单");
			_str=_str.replace("s_big_double","特大双");
			_str=_str.replace("s_small_double","特小双");
			_str=_str.replace("s_sum_big","特合大");
			_str=_str.replace("s_sum_small","特合小");
			_str=_str.replace("s_sum_single","特合单");
			_str=_str.replace("s_sum_double","特合双");
			_str=_str.replace("s_tail_big","特尾大");
			_str=_str.replace("s_tail_small","特尾小");
			_str=_str.replace("small_single","小单");
			_str=_str.replace("small_double","小双");
			_str=_str.replace("big_single","大单");
			_str=_str.replace("big_double","大双");
			_str=_str.replace("s_big","特大");
			_str=_str.replace("s_small","特小");
			_str=_str.replace("dragon","龙");
			_str=_str.replace("tiger","虎");
			_str=_str.replace("tie","和");
			_str=_str.replace("small","龙");
			_str=_str.replace("big","龙");
			_str=_str.replace("double","双");
			_str=_str.replace("single","单");
			while(_str.indexOf("\\")>-1){
				_str=_str.replace("\\","");
			}
			return _str;
		}

		GameUtil.Design_Width=640;
		GameUtil.Design_Height=1136;
		GameUtil.ACCOUNT_LEN_MIN=4;
		GameUtil.ACCOUNT_LEN_MAN=16;
		GameUtil.PWD_LEN_MIN=8;
		GameUtil.PWD_LEN_MAN=16;
		GameUtil.NICKNAME_MIN=2;
		GameUtil.PWD_BANK_MIN=8;
		GameUtil.PWD_BANK_MAX=16;
		GameUtil.BANK_CARD_NUMBER_MAX=5;
		GameUtil.FAVORITE_GAME_MAX=8;
		GameUtil.RECENT_GAME_MAX=9;
		GameUtil.CommonGridOneComponentHeight=130;
		GameUtil.GRID_FAVORITE_WIDTH=170;
		GameUtil.GRID_FAVORITE_HEIGHT=150;
		GameUtil.Time_Panel_Ani=300;
		GameUtil.INVALID=0xFFFFFF;
		GameUtil.Restrict_number="0-9";
		GameUtil.Restrict_account="0-9a-zA-Z_.";
		GameUtil.Restrict_zh="\u4e00-\u9fa5";
		GameUtil.Page_Hot=0;
		GameUtil.Page_Lottery=1;
		GameUtil.Page_Poker=2;
		GameUtil.Page_Games=3;
		GameUtil.Page_Live=4;
		GameUtil.Page_Mine=5;
		GameUtil.PANEL_DATALOADING="DataLoading";
		GameUtil.PANEL_LOADING="Loading";
		GameUtil.PANEL_HALL="HallPanel";
		GameUtil.PANEL_COMMON_TYPELIST="CommonTypeListPanel";
		GameUtil.PANEL_MC_BONUS_OVERVIEW="McBonusOverviewPanel";
		GameUtil.PANEL_MC_WIN_LOST="McWinLostPanel";
		GameUtil.PANEL_MC_STATISTICAL_ANALYSIS="McStatisticalAnalysisPanel";
		GameUtil.PANEL_MC_GAME_RECORD="McGameRecordPanel";
		GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL="McAccountChangeDetailPanel";
		GameUtil.PANEL_MC_BET_RECORD="McBetRecordPanel";
		GameUtil.PANEL_MC_BET_RECORD_2="McBetRecord2Panel";
		GameUtil.PANEL_MC_BET_RECORD_Detail="McBetRecordDetailPanel";
		GameUtil.PANEL_GROUP="GroupPanel";
		GameUtil.PANEL_GROUP_STATISTICAL_ANALYSIS="GroupStatisticalAnalysisPanel";
		GameUtil.PANEL_GROUP_WIN_LOST="GroupWinLostPanel";
		GameUtil.PANEL_GROUP_ACCOUNTCHANGE_DETAIL="GroupAccountChangeDetailPanel";
		GameUtil.PANEL_GROUP_GAME_RECORD="GroupGameRecordPanel";
		GameUtil.PANEL_GROUP_BET_RECORD="GroupBetRecordPanel";
		GameUtil.PANEL_GROUP_BET_RECORD2="GroupBetRecord2Panel";
		GameUtil.PANEL_GROUP_INCOME="GroupIncomePanel";
		GameUtil.PANEL_GROUP_VIP_MANAGE="GroupVipManagePanel";
		GameUtil.PANEL_GROUP_VIP_DETAIL="GroupVipDetailPanel";
		GameUtil.PANEL_GROUP_ACCOUNT_TRANSFER_MONNEY="GroupAccountTransferMoneyPanel";
		GameUtil.PANEL_GROUP_NEW_ACCOUNT_MANAGE="GroupNewAccountManagePanel";
		GameUtil.PANEL_FM_TOPUP_MONEY="FmTopUpMoneyPanel";
		GameUtil.PANEL_FM_TRANSFER_ACCOUNTS="FmTransferAccountsPanel";
		GameUtil.PANEL_FM_VALID_PWD="FmValidPwdPanel";
		GameUtil.PANEL_FM_DRAW_MONEY_CENTER="FmDrawMoneyCenterPanel";
		GameUtil.PANEL_FM_QUESTION_CENTER="FmQuestionCenterPanel";
		GameUtil.PANEL_FM_QUESTION_DETAIL="FmQuestionDetailPanel";
		GameUtil.PANEL_FM_TOPUP_MONEY_RECORD="FmTopUpMoneyRecordPanel";
		GameUtil.PANEL_FM_TOPUP_RECORD="FmTopUpRecordPanel";
		GameUtil.PANEL_SYS_MODIFY_PASSWORD="SysModifyPasswordPanel";
		GameUtil.PANEL_SYS_BINDING_BANK_CARD="SysBindingBankCardPanel";
		GameUtil.PANEL_SYS_MY_BANK_CARD="SysMyBankCardPanel";
		GameUtil.PANEL_SYS_SET_BANK_PWD="SysSetBankPwdPanel";
		GameUtil.PANEL_SYS_INPUT_BANK_PWD="SysInputBankPwdPanel";
		GameUtil.PANEL_SYS_SET_FAVORITE="SysSetFavoritePanel";
		GameUtil.PANEL_SYS_INBOX="SysInboxPanel";
		GameUtil.PANEL_SYS_SET="SysSetPanel";
		GameUtil.PANEL_SYS_SET_ACCOUNT="SysSetAccountPanel";
		GameUtil.PANEL_SYS_SET_ACCOUNT_MORE="SysSetAccountMorePanel";
		GameUtil.PANEL_SYS_SET_PHONE="SysSetPhonePanel";
		GameUtil.PANEL_SYS_SET_SAFE="SysSetSafePanel";
		GameUtil.PANEL_SYS_SET_VOICE="SysSetVoicePanel";
		GameUtil.PANEL_SYS_ABOUT="SysAboutPanel";
		GameUtil.PANEL_ZOOM_PICKER="ZoomPickerPanel";
		GameUtil.PANEL_NUMBERS="NumberGames";
		GameUtil.PANEL_ANI_NONE=0;
		GameUtil.PANEL_ANI_FROM_RIGHT=1;
		GameUtil.PANEL_ANI_FROM_LEFT=2;
		GameUtil.PANEL_ANI_TO_LEFT=3;
		GameUtil.PANEL_ANI_TO_RIGHT=4;
		GameUtil.Res_Loading_Package="Loading";
		GameUtil.Res_Alert_Package="Alert";
		GameUtil.Res_Login_Package="Login";
		GameUtil.Res_Hall_Package="Hall";
		GameUtil.Res_Numbers_Package="Lottery";
		GameUtil.Res_Lottery_Path="https://app.5fly1.com/iconLottery/";
		GameUtil.Res_Mine_Path="res/images/icons/mine/";
		GameUtil.Res_Bank_Path="res/images/icons/bank/";
		GameUtil.Res_TopUp_Path="res/images/icons/topup/";
		GameUtil.app_key="";
		GameUtil.app_secret="";
		GameUtil.http_header_key="Authorization";
		GameUtil.headers=null
		GameUtil.GG_DOMAIN="http://ggtestapi.goodgaming.com";
		GameUtil.GG_PokerApiCode="e1cc";
		GameUtil.GG_Res_VersionFile="configVersion.json";
		GameUtil.Res_Config_Error="errorCodeConfig";
		GameUtil.proxyId=null
		__static(GameUtil,
		['RES_API_URL_CONFIG',function(){return this.RES_API_URL_CONFIG="res/json/"+UITypeConfig.UI_TYPE+"/ApiUrl.json";},'Res_Config',function(){return this.Res_Config="res/json/"+UITypeConfig.UI_TYPE+"/GameConfig.json";},'Res_Config_Help',function(){return this.Res_Config_Help="res/json/"+UITypeConfig.UI_TYPE+"/helpConfig.json";},'Res_Loading_Atlas',function(){return this.Res_Loading_Atlas="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Loading@atlas0.png";},'Res_Loading_Data',function(){return this.Res_Loading_Data="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Loading.fui";},'Res_Open_App_Page_Atlas',function(){return this.Res_Open_App_Page_Atlas="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/OpenAppPage@atlas0.png";},'Res_Open_App_Page_Data',function(){return this.Res_Open_App_Page_Data="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/OpenAppPage.fui";},'Res_Alert_Atlas',function(){return this.Res_Alert_Atlas="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Alert@atlas0.png";},'Res_Alert_Data',function(){return this.Res_Alert_Data="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Alert.fui";},'Res_Login_Atlas',function(){return this.Res_Login_Atlas="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Login@atlas0.png";},'Res_Login_Data',function(){return this.Res_Login_Data="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Login.fui";},'RES_REGIESTER_ATLAS',function(){return this.RES_REGIESTER_ATLAS="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/RegisteredAndLogin@atlas0.png";},'RES_REGIESTER_DATA',function(){return this.RES_REGIESTER_DATA="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/RegisteredAndLogin.fui";},'RES_NEW_PLAYER_EVENTS_ATLAS',function(){return this.RES_NEW_PLAYER_EVENTS_ATLAS="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/NewPlayerEvents@atlas0.png";},'RES_NEW_PLAYER_EVENTS_DATA',function(){return this.RES_NEW_PLAYER_EVENTS_DATA="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/NewPlayerEvents.fui";},'RES_DAILY_EVENTS_ATLAS',function(){return this.RES_DAILY_EVENTS_ATLAS="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/DailyEvent@atlas0.png";},'RES_DAILY_EVENTS_DATA',function(){return this.RES_DAILY_EVENTS_DATA="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/DailyEvent.fui";},'RES_HALL_EVENTS_ATLAS',function(){return this.RES_HALL_EVENTS_ATLAS="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/HalllEvent@atlas0.png";},'RES_HALL_EVENTS_DATA',function(){return this.RES_HALL_EVENTS_DATA="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/HalllEvent.fui";},'Res_Hall_Atlas',function(){return this.Res_Hall_Atlas="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Hall@atlas0.png";},'Res_Hall_Atlas_1',function(){return this.Res_Hall_Atlas_1="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Hall@atlas0_1.png";},'Res_Hall_Data',function(){return this.Res_Hall_Data="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Hall.fui";},'Res_GameType_Path',function(){return this.Res_GameType_Path="res/images/icons/gametypes/"+UITypeConfig.UI_TYPE+"/";},'Res_Halllottery_Path',function(){return this.Res_Halllottery_Path="res/images/icons/halllottery/"+UITypeConfig.UI_TYPE+"/";},'Res_Help_Path',function(){return this.Res_Help_Path="res/images/icons/help/"+UITypeConfig.UI_TYPE+"/";},'requestingDic',function(){return this.requestingDic=new Dictionary();}
		]);
		return GameUtil;
	})()


	//class Config
	var Config=(function(){
		function Config(){};
		__class(Config,'Config');
		Config.WebGLTextCacheCount=500;
		Config.atlasEnable=false;
		Config.showCanvasMark=false;
		Config.animationInterval=50;
		Config.isAntialias=false;
		Config.isAlpha=false;
		Config.premultipliedAlpha=true;
		Config.isStencil=true;
		Config.preserveDrawingBuffer=false;
		return Config;
	})()


	//class laya.ani.bone.Bone
	var Bone=(function(){
		function Bone(){
			this.name=null;
			this.root=null;
			this.parentBone=null;
			this.length=10;
			this.transform=null;
			this.inheritScale=true;
			this.inheritRotation=true;
			this.rotation=NaN;
			this.resultRotation=NaN;
			this.d=-1;
			this._tempMatrix=null;
			this._sprite=null;
			this.resultTransform=new Transform();
			this.resultMatrix=new Matrix();
			this._children=[];
		}

		__class(Bone,'laya.ani.bone.Bone');
		var __proto=Bone.prototype;
		__proto.setTempMatrix=function(matrix){
			this._tempMatrix=matrix;
			var i=0,n=0;
			var tBone;
			for (i=0,n=this._children.length;i < n;i++){
				tBone=this._children[i];
				tBone.setTempMatrix(this._tempMatrix);
			}
		}

		__proto.update=function(pMatrix){
			this.rotation=this.transform.skX;
			var tResultMatrix;
			if (pMatrix){
				tResultMatrix=this.resultTransform.getMatrix();
				Matrix.mul(tResultMatrix,pMatrix,this.resultMatrix);
				this.resultRotation=this.rotation;
			}
			else {
				this.resultRotation=this.rotation+this.parentBone.resultRotation;
				if (this.parentBone){
					if (this.inheritRotation && this.inheritScale){
						tResultMatrix=this.resultTransform.getMatrix();
						Matrix.mul(tResultMatrix,this.parentBone.resultMatrix,this.resultMatrix);
					}
					else {
						var temp=0;
						var parent=this.parentBone;
						var tAngle=NaN;
						var cos=NaN;
						var sin=NaN;
						var tParentMatrix=this.parentBone.resultMatrix;
						tResultMatrix=this.resultTransform.getMatrix();
						var worldX=tParentMatrix.a *tResultMatrix.tx+tParentMatrix.c *tResultMatrix.ty+tParentMatrix.tx;
						var worldY=tParentMatrix.b *tResultMatrix.tx+tParentMatrix.d *tResultMatrix.ty+tParentMatrix.ty;
						var tTestMatrix=new Matrix();
						if (this.inheritRotation){
							tAngle=Math.atan2(parent.resultMatrix.b,parent.resultMatrix.a);
							cos=Math.cos(tAngle),sin=Math.sin(tAngle);
							tTestMatrix.setTo(cos,sin,-sin,cos,0,0);
							Matrix.mul(this._tempMatrix,tTestMatrix,Matrix.TEMP);
							Matrix.TEMP.copyTo(tTestMatrix);
							tResultMatrix=this.resultTransform.getMatrix();
							Matrix.mul(tResultMatrix,tTestMatrix,this.resultMatrix);
							if (this.resultTransform.scX *this.resultTransform.scY < 0){
								this.resultMatrix.rotate(Math.PI*0.5);
							}
							this.resultMatrix.tx=worldX;
							this.resultMatrix.ty=worldY;
						}
						else if (this.inheritScale){
							tResultMatrix=this.resultTransform.getMatrix();
							Matrix.TEMP.identity();
							Matrix.TEMP.d=this.d;
							Matrix.mul(tResultMatrix,Matrix.TEMP,this.resultMatrix);
							this.resultMatrix.tx=worldX;
							this.resultMatrix.ty=worldY;
						}
						else {
							tResultMatrix=this.resultTransform.getMatrix();
							Matrix.TEMP.identity();
							Matrix.TEMP.d=this.d;
							Matrix.mul(tResultMatrix,Matrix.TEMP,this.resultMatrix);
							this.resultMatrix.tx=worldX;
							this.resultMatrix.ty=worldY;
						}
					}
				}
				else {
					tResultMatrix=this.resultTransform.getMatrix();
					tResultMatrix.copyTo(this.resultMatrix);
				}
			};
			var i=0,n=0;
			var tBone;
			for (i=0,n=this._children.length;i < n;i++){
				tBone=this._children[i];
				tBone.update();
			}
		}

		__proto.updateChild=function(){
			var i=0,n=0;
			var tBone;
			for (i=0,n=this._children.length;i < n;i++){
				tBone=this._children[i];
				tBone.update();
			}
		}

		__proto.setRotation=function(rd){
			if (this._sprite){
				this._sprite.rotation=rd *180 / Math.PI;
			}
		}

		__proto.updateDraw=function(x,y){
			if (!Bone.ShowBones || Bone.ShowBones[this.name]){
				if (this._sprite){
					this._sprite.x=x+this.resultMatrix.tx;
					this._sprite.y=y+this.resultMatrix.ty;
				}
				else {
					this._sprite=new Sprite();
					this._sprite.graphics.drawCircle(0,0,5,"#ff0000");
					this._sprite.graphics.drawLine(0,0,this.length,0,"#00ff00");
					this._sprite.graphics.fillText(this.name,0,0,"20px Arial","#00ff00","center");
					Laya.stage.addChild(this._sprite);
					this._sprite.x=x+this.resultMatrix.tx;
					this._sprite.y=y+this.resultMatrix.ty;
				}
			};
			var i=0,n=0;
			var tBone;
			for (i=0,n=this._children.length;i < n;i++){
				tBone=this._children[i];
				tBone.updateDraw(x,y);
			}
		}

		__proto.addChild=function(bone){
			this._children.push(bone);
			bone.parentBone=this;
		}

		__proto.findBone=function(boneName){
			if (this.name==boneName){
				return this;
			}
			else {
				var i=0,n=0;
				var tBone;
				var tResult;
				for (i=0,n=this._children.length;i < n;i++){
					tBone=this._children[i];
					tResult=tBone.findBone(boneName);
					if (tResult){
						return tResult;
					}
				}
			}
			return null;
		}

		__proto.localToWorld=function(local){
			var localX=local[0];
			var localY=local[1];
			local[0]=localX *this.resultMatrix.a+localY *this.resultMatrix.c+this.resultMatrix.tx;
			local[1]=localX *this.resultMatrix.b+localY *this.resultMatrix.d+this.resultMatrix.ty;
		}

		Bone.ShowBones={};
		return Bone;
	})()


	//class laya.ani.bone.Transform
	var Transform=(function(){
		function Transform(){
			this.skX=0;
			this.skY=0;
			this.scX=1;
			this.scY=1;
			this.x=0;
			this.y=0;
			this.skewX=0;
			this.skewY=0;
			this.mMatrix=null;
		}

		__class(Transform,'laya.ani.bone.Transform');
		var __proto=Transform.prototype;
		__proto.initData=function(data){
			if (data.x !=undefined){
				this.x=data.x;
			}
			if (data.y !=undefined){
				this.y=data.y;
			}
			if (data.skX !=undefined){
				this.skX=data.skX;
			}
			if (data.skY !=undefined){
				this.skY=data.skY;
			}
			if (data.scX !=undefined){
				this.scX=data.scX;
			}
			if (data.scY !=undefined){
				this.scY=data.scY;
			}
		}

		__proto.getMatrix=function(){
			var tMatrix;
			if (this.mMatrix){
				tMatrix=this.mMatrix;
				}else {
				tMatrix=this.mMatrix=new Matrix();
			}
			tMatrix.identity();
			tMatrix.scale(this.scX,this.scY);
			if (this.skewX || this.skewY){
				this.skew(tMatrix,this.skewX *Math.PI / 180,this.skewY *Math.PI / 180);
			}
			tMatrix.rotate(this.skX *Math.PI / 180);
			tMatrix.translate(this.x,this.y);
			return tMatrix;
		}

		__proto.skew=function(m,x,y){
			var sinX=Math.sin(y);
			var cosX=Math.cos(y);
			var sinY=Math.sin(x);
			var cosY=Math.cos(x);
			m.setTo(m.a *cosY-m.b *sinX,
			m.a *sinY+m.b *cosX,
			m.c *cosY-m.d *sinX,
			m.c *sinY+m.d *cosX,
			m.tx *cosY-m.ty *sinX,
			m.tx *sinY+m.ty *cosX);
			return m;
		}

		return Transform;
	})()


	//class laya.display.Graphics
	var Graphics=(function(){
		function Graphics(){
			//this._sp=null;
			this._one=null;
			this._cmds=null;
			//this._vectorgraphArray=null;
			//this._graphicBounds=null;
			this._render=this._renderEmpty;
			if (Render.isConchNode){
				var _this_=this;
				_this_._nativeObj=new (window)._conchGraphics();
				_this_.id=_this_._nativeObj.conchID;
			}
		}

		__class(Graphics,'laya.display.Graphics');
		var __proto=Graphics.prototype;
		/**
		*<p>销毁此对象。</p>
		*/
		__proto.destroy=function(){
			this.clear();
			if (this._graphicBounds)this._graphicBounds.destroy();
			this._graphicBounds=null;
			this._vectorgraphArray=null;
			this._sp && (this._sp._renderType=0);
			this._sp=null;
		}

		/**
		*<p>清空绘制命令。</p>
		*@param recoverCmds 是否回收绘图指令
		*/
		__proto.clear=function(recoverCmds){
			(recoverCmds===void 0)&& (recoverCmds=false);
			var i=0,len=0;
			if (recoverCmds){
				var tCmd=this._one;
				if (this._cmds){
					len=this._cmds.length;
					for (i=0;i < len;i++){
						tCmd=this._cmds[i];
						if (tCmd && (tCmd.callee===Render._context._drawTexture || tCmd.callee===Render._context._drawTextureWithTransform)){
							tCmd[0]=null;
							Graphics._cache.push(tCmd);
						}
					}
					this._cmds.length=0;
					}else if (tCmd){
					if (tCmd && (tCmd.callee===Render._context._drawTexture || tCmd.callee===Render._context._drawTextureWithTransform)){
						tCmd[0]=null;
						Graphics._cache.push(tCmd);
					}
				}
				}else {
				this._cmds=null;
			}
			this._one=null;
			this._render=this._renderEmpty;
			this._sp && (this._sp._renderType &=~0x01 & ~0x200);
			this._repaint();
			if (this._vectorgraphArray){
				for (i=0,len=this._vectorgraphArray.length;i < len;i++){
					VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);
				}
				this._vectorgraphArray.length=0;
			}
		}

		/**@private */
		__proto._clearBoundsCache=function(){
			if (this._graphicBounds)this._graphicBounds.reset();
		}

		/**@private */
		__proto._initGraphicBounds=function(){
			if (!this._graphicBounds){
				this._graphicBounds=new GraphicsBounds();
				this._graphicBounds._graphics=this;
			}
		}

		/**
		*@private
		*重绘此对象。
		*/
		__proto._repaint=function(){
			this._clearBoundsCache();
			this._sp && this._sp.repaint();
		}

		/**@private */
		__proto._isOnlyOne=function(){
			return !this._cmds || this._cmds.length===0;
		}

		/**
		*获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。
		*@param realSize （可选）使用图片的真实大小，默认为false
		*@return 位置与宽高组成的 一个 Rectangle 对象。
		*/
		__proto.getBounds=function(realSize){
			(realSize===void 0)&& (realSize=false);
			this._initGraphicBounds();
			return this._graphicBounds.getBounds(realSize);
		}

		/**
		*@private
		*@param realSize （可选）使用图片的真实大小，默认为false
		*获取端点列表。
		*/
		__proto.getBoundPoints=function(realSize){
			(realSize===void 0)&& (realSize=false);
			this._initGraphicBounds();
			return this._graphicBounds.getBoundPoints(realSize);
		}

		__proto._addCmd=function(a){
			this._cmds=this._cmds || [];
			a.callee=a.shift();
			this._cmds.push(a);
		}

		__proto.setFilters=function(fs){
			this._saveToCmd(Render._context._setFilters,fs);
		}

		/**
		*绘制纹理。
		*@param tex 纹理。
		*@param x （可选）X轴偏移量。
		*@param y （可选）Y轴偏移量。
		*@param width （可选）宽度。
		*@param height （可选）高度。
		*@param m （可选）矩阵信息。
		*@param alpha （可选）透明度。
		*/
		__proto.drawTexture=function(tex,x,y,width,height,m,alpha){
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			(alpha===void 0)&& (alpha=1);
			if (!tex || alpha < 0.01)return null;
			if (!width)width=tex.sourceWidth;
			if (!height)height=tex.sourceHeight;
			alpha=alpha < 0 ? 0 :(alpha > 1 ? 1 :alpha);
			var offset=(!Render.isWebGL && (Browser.onFirefox || Browser.onEdge||Browser.onIE||Browser.onSafari))? 0.5 :0;
			var wRate=width / tex.sourceWidth;
			var hRate=height / tex.sourceHeight;
			width=tex.width *wRate;
			height=tex.height *hRate;
			if (tex.loaded && (width <=0 || height <=0))return null;
			x+=tex.offsetX *wRate;
			y+=tex.offsetY *hRate;
			this._sp && (this._sp._renderType |=0x200);
			var args;
			x-=offset;
			y-=offset;
			width+=2 *offset;
			height+=2 *offset;
			if (Graphics._cache.length){
				args=Graphics._cache.pop();
				args[0]=tex;
				args[1]=x;
				args[2]=y;
				args[3]=width;
				args[4]=height;
				args[5]=m;
				args[6]=alpha;
				}else {
				args=[tex,x,y,width,height,m,alpha];
			}
			args.callee=(m || alpha !=1)? Render._context._drawTextureWithTransform :Render._context._drawTexture;
			if (this._one==null && !m && alpha==1){
				this._one=args;
				this._render=this._renderOneImg;
				}else {
				this._saveToCmd(args.callee,args);
			}
			if (!tex.loaded){
				tex.once("loaded",this,this._textureLoaded,[tex,args]);
			}
			this._repaint();
			return args;
		}

		/**
		*@private 清理贴图并替换为最新的
		*@param tex
		*/
		__proto.cleanByTexture=function(tex,x,y,width,height){
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			if (!tex)return this.clear();
			if (this._one && this._render===this._renderOneImg){
				if (!width)width=tex.sourceWidth;
				if (!height)height=tex.sourceHeight;
				var wRate=width / tex.sourceWidth;
				var hRate=height / tex.sourceHeight;
				width=tex.width *wRate;
				height=tex.height *hRate;
				x+=tex.offsetX *wRate;
				y+=tex.offsetY *hRate;
				this._one[0]=tex;
				this._one[1]=x;
				this._one[2]=y;
				this._one[3]=width;
				this._one[4]=height;
				}else {
				this.clear();
				tex && this.drawTexture(tex,x,y,width,height);
			}
		}

		/**
		*批量绘制同样纹理。
		*@param tex 纹理。
		*@param pos 绘制坐标。
		*/
		__proto.drawTextures=function(tex,pos){
			if (!tex)return;
			this._saveToCmd(Render._context._drawTextures,[tex,pos]);
		}

		/**
		*用texture填充。
		*@param tex 纹理。
		*@param x X轴偏移量。
		*@param y Y轴偏移量。
		*@param width （可选）宽度。
		*@param height （可选）高度。
		*@param type （可选）填充类型 repeat|repeat-x|repeat-y|no-repeat
		*@param offset （可选）贴图纹理偏移
		*/
		__proto.fillTexture=function(tex,x,y,width,height,type,offset){
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			(type===void 0)&& (type="repeat");
			if (!tex)return;
			var args=[tex,x,y,width,height,type,offset || Point.EMPTY,{}];
			if (!tex.loaded){
				tex.once("loaded",this,this._textureLoaded,[tex,args]);
			}
			this._saveToCmd(Render._context._fillTexture,args);
		}

		__proto._textureLoaded=function(tex,param){
			param[3]=param[3] || tex.width;
			param[4]=param[4] || tex.height;
			this._repaint();
		}

		/**
		*填充一个圆形。这是一个临时函数，以后会删除，建议用户自己实现。
		*@param x
		*@param y
		*@param tex
		*@param cx 圆心位置。
		*@param cy
		*@param radius
		*@param segNum 分段数，越大越平滑。
		*/
		__proto.fillCircle=function(x,y,tex,cx,cy,radius,segNum){
			tex.bitmap.enableMerageInAtlas=false;
			var verts=new Float32Array((segNum+1)*2);
			var uvs=new Float32Array((segNum+1)*2);
			var indices=new Uint16Array(segNum*3);
			var dang=2 *Math.PI / segNum;
			var cang=0;
			verts[0]=cx;
			verts[1]=cy;
			uvs[0]=cx / tex.width;
			uvs[1]=cy / tex.height;
			var idx=2;
			for (var i=0;i < segNum;i++){
				var px=radius *Math.cos(cang)+cx;
				var py=radius *Math.sin(cang)+cy;
				verts[idx]=px;
				verts[idx+1]=py;
				uvs[idx]=px / tex.width;
				uvs[idx+1]=py / tex.height;
				cang+=dang;
				idx+=2;
			}
			idx=0;
			for (i=0;i < segNum;i++){
				indices[idx++]=0;
				indices[idx++]=i+1;
				indices[idx++]=(i+2 >=segNum+1)?1:(i+2);
			}
			this.drawTriangles(tex,x,y,verts,uvs,indices);
		}

		/**
		*绘制一组三角形
		*@param texture 纹理。
		*@param x X轴偏移量。
		*@param y Y轴偏移量。
		*@param vertices 顶点数组。
		*@param indices 顶点索引。
		*@param uvData UV数据。
		*@param matrix 缩放矩阵。
		*@param alpha alpha
		*@param color 颜色变换
		*@param blendMode blend模式
		*/
		__proto.drawTriangles=function(texture,x,y,vertices,uvs,indices,matrix,alpha,color,blendMode){
			(alpha===void 0)&& (alpha=1);
			this._saveToCmd(Render._context.drawTriangles,[texture,x,y,vertices,uvs,indices,matrix,alpha,color,blendMode]);
		}

		/**
		*@private
		*保存到命令流。
		*/
		__proto._saveToCmd=function(fun,args){
			this._sp && (this._sp._renderType |=0x200);
			if (this._one==null){
				this._one=args;
				this._render=this._renderOne;
				}else {
				this._sp && (this._sp._renderType &=~0x01);
				this._render=this._renderAll;
				(this._cmds || (this._cmds=[])).length===0 && this._cmds.push(this._one);
				this._cmds.push(args);
			}
			args.callee=fun;
			this._repaint();
			return args;
		}

		/**
		*设置剪裁区域，超出剪裁区域的坐标不显示。
		*@param x X 轴偏移量。
		*@param y Y 轴偏移量。
		*@param width 宽度。
		*@param height 高度。
		*/
		__proto.clipRect=function(x,y,width,height){
			this._saveToCmd(Render._context._clipRect,[x,y,width,height]);
		}

		/**
		*在画布上绘制文本。
		*@param text 在画布上输出的文本。
		*@param x 开始绘制文本的 x 坐标位置（相对于画布）。
		*@param y 开始绘制文本的 y 坐标位置（相对于画布）。
		*@param font 定义字号和字体，比如"20px Arial"。
		*@param color 定义文本颜色，比如"#ff0000"。
		*@param textAlign 文本对齐方式，可选值："left"，"center"，"right"。
		*/
		__proto.fillText=function(text,x,y,font,color,textAlign,underLine){
			(underLine===void 0)&& (underLine=0);
			this._saveToCmd(Render._context._fillText,[text,x,y,font || Font.defaultFont,color,textAlign]);
		}

		/**
		*在画布上绘制“被填充且镶边的”文本。
		*@param text 在画布上输出的文本。
		*@param x 开始绘制文本的 x 坐标位置（相对于画布）。
		*@param y 开始绘制文本的 y 坐标位置（相对于画布）。
		*@param font 定义字体和字号，比如"20px Arial"。
		*@param fillColor 定义文本颜色，比如"#ff0000"。
		*@param borderColor 定义镶边文本颜色。
		*@param lineWidth 镶边线条宽度。
		*@param textAlign 文本对齐方式，可选值："left"，"center"，"right"。
		*/
		__proto.fillBorderText=function(text,x,y,font,fillColor,borderColor,lineWidth,textAlign){
			this._saveToCmd(Render._context._fillBorderText,[text,x,y,font || Font.defaultFont,fillColor,borderColor,lineWidth,textAlign]);
		}

		/**
		*在画布上绘制文本（没有填色）。文本的默认颜色是黑色。
		*@param text 在画布上输出的文本。
		*@param x 开始绘制文本的 x 坐标位置（相对于画布）。
		*@param y 开始绘制文本的 y 坐标位置（相对于画布）。
		*@param font 定义字体和字号，比如"20px Arial"。
		*@param color 定义文本颜色，比如"#ff0000"。
		*@param lineWidth 线条宽度。
		*@param textAlign 文本对齐方式，可选值："left"，"center"，"right"。
		*/
		__proto.strokeText=function(text,x,y,font,color,lineWidth,textAlign){
			this._saveToCmd(Render._context._strokeText,[text,x,y,font || Font.defaultFont,color,lineWidth,textAlign]);
		}

		/**
		*设置透明度。
		*@param value 透明度。
		*/
		__proto.alpha=function(value){
			value=value < 0 ? 0 :(value > 1 ? 1 :value);
			this._saveToCmd(Render._context._alpha,[value]);
		}

		/**
		*设置当前透明度。
		*@param value 透明度。
		*/
		__proto.setAlpha=function(value){
			value=value < 0 ? 0 :(value > 1 ? 1 :value);
			this._saveToCmd(Render._context._setAlpha,[value]);
		}

		/**
		*替换绘图的当前转换矩阵。
		*@param mat 矩阵。
		*@param pivotX （可选）水平方向轴心点坐标。
		*@param pivotY （可选）垂直方向轴心点坐标。
		*/
		__proto.transform=function(matrix,pivotX,pivotY){
			(pivotX===void 0)&& (pivotX=0);
			(pivotY===void 0)&& (pivotY=0);
			this._saveToCmd(Render._context._transform,[matrix,pivotX,pivotY]);
		}

		/**
		*旋转当前绘图。(推荐使用transform，性能更高)
		*@param angle 旋转角度，以弧度计。
		*@param pivotX （可选）水平方向轴心点坐标。
		*@param pivotY （可选）垂直方向轴心点坐标。
		*/
		__proto.rotate=function(angle,pivotX,pivotY){
			(pivotX===void 0)&& (pivotX=0);
			(pivotY===void 0)&& (pivotY=0);
			this._saveToCmd(Render._context._rotate,[angle,pivotX,pivotY]);
		}

		/**
		*缩放当前绘图至更大或更小。(推荐使用transform，性能更高)
		*@param scaleX 水平方向缩放值。
		*@param scaleY 垂直方向缩放值。
		*@param pivotX （可选）水平方向轴心点坐标。
		*@param pivotY （可选）垂直方向轴心点坐标。
		*/
		__proto.scale=function(scaleX,scaleY,pivotX,pivotY){
			(pivotX===void 0)&& (pivotX=0);
			(pivotY===void 0)&& (pivotY=0);
			this._saveToCmd(Render._context._scale,[scaleX,scaleY,pivotX,pivotY]);
		}

		/**
		*重新映射画布上的 (0,0)位置。
		*@param x 添加到水平坐标（x）上的值。
		*@param y 添加到垂直坐标（y）上的值。
		*/
		__proto.translate=function(x,y){
			this._saveToCmd(Render._context._translate,[x,y]);
		}

		/**
		*保存当前环境的状态。
		*/
		__proto.save=function(){
			this._saveToCmd(Render._context._save,[]);
		}

		/**
		*返回之前保存过的路径状态和属性。
		*/
		__proto.restore=function(){
			this._saveToCmd(Render._context._restore,[]);
		}

		/**
		*@private
		*替换文本内容。
		*@param text 文本内容。
		*@return 替换成功则值为true，否则值为flase。
		*/
		__proto.replaceText=function(text){
			this._repaint();
			var cmds=this._cmds;
			if (!cmds){
				if (this._one && this._isTextCmd(this._one.callee)){
					if (this._one[0].toUpperCase)this._one[0]=text;
					else this._one[0].setText(text);
					return true;
				}
				}else {
				for (var i=cmds.length-1;i >-1;i--){
					if (this._isTextCmd(cmds[i].callee)){
						if (cmds[i][0].toUpperCase)cmds[i][0]=text;
						else cmds[i][0].setText(text);
						return true;
					}
				}
			}
			return false;
		}

		/**@private */
		__proto._isTextCmd=function(fun){
			return fun===Render._context._fillText || fun===Render._context._fillBorderText || fun===Render._context._strokeText;
		}

		/**
		*@private
		*替换文本颜色。
		*@param color 颜色。
		*/
		__proto.replaceTextColor=function(color){
			this._repaint();
			var cmds=this._cmds;
			if (!cmds){
				if (this._one && this._isTextCmd(this._one.callee)){
					this._one[4]=color;
					if (!this._one[0].toUpperCase)this._one[0].changed=true;
				}
				}else {
				for (var i=cmds.length-1;i >-1;i--){
					if (this._isTextCmd(cmds[i].callee)){
						cmds[i][4]=color;
						if (!cmds[i][0].toUpperCase)cmds[i][0].changed=true;
					}
				}
			}
		}

		/**
		*加载并显示一个图片。
		*@param url 图片地址。
		*@param x （可选）显示图片的x位置。
		*@param y （可选）显示图片的y位置。
		*@param width （可选）显示图片的宽度，设置为0表示使用图片默认宽度。
		*@param height （可选）显示图片的高度，设置为0表示使用图片默认高度。
		*@param complete （可选）加载完成回调。
		*/
		__proto.loadImage=function(url,x,y,width,height,complete){
			var _$this=this;
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			var tex=Loader.getRes(url);
			if (tex)onloaded(tex);
			else Laya.loader.load(url,Handler.create(null,onloaded),null,"image");
			function onloaded (tex){
				if (tex){
					_$this.drawTexture(tex,x,y,width,height);
					if (complete !=null)complete.call(_$this._sp,tex);
				}
			}
		}

		/**
		*@private
		*/
		__proto._renderEmpty=function(sprite,context,x,y){}
		/**
		*@private
		*/
		__proto._renderAll=function(sprite,context,x,y){
			var cmds=this._cmds,cmd;
			for (var i=0,n=cmds.length;i < n;i++){
				(cmd=cmds[i]).callee.call(context,x,y,cmd);
			}
		}

		/**
		*@private
		*/
		__proto._renderOne=function(sprite,context,x,y){
			this._one.callee.call(context,x,y,this._one);
		}

		/**
		*@private
		*/
		__proto._renderOneImg=function(sprite,context,x,y){
			this._one.callee.call(context,x,y,this._one);
			if (sprite._renderType!==2305){
				sprite._renderType |=0x01;
			}
		}

		/**
		*绘制一条线。
		*@param fromX X轴开始位置。
		*@param fromY Y轴开始位置。
		*@param toX X轴结束位置。
		*@param toY Y轴结束位置。
		*@param lineColor 颜色。
		*@param lineWidth （可选）线条宽度。
		*/
		__proto.drawLine=function(fromX,fromY,toX,toY,lineColor,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var tId=0;
			if (Render.isWebGL){
				tId=VectorGraphManager.getInstance().getId();
				if (this._vectorgraphArray==null)this._vectorgraphArray=[];
				this._vectorgraphArray.push(tId);
			};
			var offset=lineWidth % 2===0 ? 0 :0.5;
			var arr=[fromX+offset,fromY+offset,toX+offset,toY+offset,lineColor,lineWidth,tId];
			this._saveToCmd(Render._context._drawLine,arr);
		}

		/**
		*绘制一系列线段。
		*@param x 开始绘制的X轴位置。
		*@param y 开始绘制的Y轴位置。
		*@param points 线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。
		*@param lineColor 线段颜色，或者填充绘图的渐变对象。
		*@param lineWidth （可选）线段宽度。
		*/
		__proto.drawLines=function(x,y,points,lineColor,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var tId=0;
			if (!points || points.length < 4)return;
			if (Render.isWebGL){
				tId=VectorGraphManager.getInstance().getId();
				if (this._vectorgraphArray==null)this._vectorgraphArray=[];
				this._vectorgraphArray.push(tId);
			};
			var offset=lineWidth % 2===0 ? 0 :0.5;
			var arr=[x+offset,y+offset,points,lineColor,lineWidth,tId];
			this._saveToCmd(Render._context._drawLines,arr);
		}

		/**
		*绘制一系列曲线。
		*@param x 开始绘制的 X 轴位置。
		*@param y 开始绘制的 Y 轴位置。
		*@param points 线段的点集合，格式[startx,starty,ctrx,ctry,startx,starty...]。
		*@param lineColor 线段颜色，或者填充绘图的渐变对象。
		*@param lineWidth （可选）线段宽度。
		*/
		__proto.drawCurves=function(x,y,points,lineColor,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var arr=[x,y,points,lineColor,lineWidth];
			this._saveToCmd(Render._context._drawCurves,arr);
		}

		/**
		*绘制矩形。
		*@param x 开始绘制的 X 轴位置。
		*@param y 开始绘制的 Y 轴位置。
		*@param width 矩形宽度。
		*@param height 矩形高度。
		*@param fillColor 填充颜色，或者填充绘图的渐变对象。
		*@param lineColor （可选）边框颜色，或者填充绘图的渐变对象。
		*@param lineWidth （可选）边框宽度。
		*/
		__proto.drawRect=function(x,y,width,height,fillColor,lineColor,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var offset=lineColor ? lineWidth / 2 :0;
			var lineOffset=lineColor ? lineWidth :0;
			var arr=[x+offset,y+offset,width-lineOffset,height-lineOffset,fillColor,lineColor,lineWidth];
			this._saveToCmd(Render._context._drawRect,arr);
		}

		/**
		*绘制圆形。
		*@param x 圆点X 轴位置。
		*@param y 圆点Y 轴位置。
		*@param radius 半径。
		*@param fillColor 填充颜色，或者填充绘图的渐变对象。
		*@param lineColor （可选）边框颜色，或者填充绘图的渐变对象。
		*@param lineWidth （可选）边框宽度。
		*/
		__proto.drawCircle=function(x,y,radius,fillColor,lineColor,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var offset=lineColor ? lineWidth / 2 :0;
			var tId=0;
			if (Render.isWebGL){
				tId=VectorGraphManager.getInstance().getId();
				if (this._vectorgraphArray==null)this._vectorgraphArray=[];
				this._vectorgraphArray.push(tId);
			};
			var arr=[x,y,radius-offset,fillColor,lineColor,lineWidth,tId];
			this._saveToCmd(Render._context._drawCircle,arr);
		}

		/**
		*绘制扇形。
		*@param x 开始绘制的 X 轴位置。
		*@param y 开始绘制的 Y 轴位置。
		*@param radius 扇形半径。
		*@param startAngle 开始角度。
		*@param endAngle 结束角度。
		*@param fillColor 填充颜色，或者填充绘图的渐变对象。
		*@param lineColor （可选）边框颜色，或者填充绘图的渐变对象。
		*@param lineWidth （可选）边框宽度。
		*/
		__proto.drawPie=function(x,y,radius,startAngle,endAngle,fillColor,lineColor,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var offset=lineColor ? lineWidth / 2 :0;
			var lineOffset=lineColor ? lineWidth :0;
			var tId=0;
			if (Render.isWebGL){
				tId=VectorGraphManager.getInstance().getId();
				if (this._vectorgraphArray==null)this._vectorgraphArray=[];
				this._vectorgraphArray.push(tId);
			};
			var arr=[x+offset,y+offset,radius-lineOffset,startAngle,endAngle,fillColor,lineColor,lineWidth,tId];
			arr[3]=Utils.toRadian(startAngle);
			arr[4]=Utils.toRadian(endAngle);
			this._saveToCmd(Render._context._drawPie,arr);
		}

		/**
		*绘制多边形。
		*@param x 开始绘制的 X 轴位置。
		*@param y 开始绘制的 Y 轴位置。
		*@param points 多边形的点集合。
		*@param fillColor 填充颜色，或者填充绘图的渐变对象。
		*@param lineColor （可选）边框颜色，或者填充绘图的渐变对象。
		*@param lineWidth （可选）边框宽度。
		*/
		__proto.drawPoly=function(x,y,points,fillColor,lineColor,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var tId=0;
			var tIsConvexPolygon=false;
			if (Render.isWebGL){
				tId=VectorGraphManager.getInstance().getId();
				if (this._vectorgraphArray==null)this._vectorgraphArray=[];
				this._vectorgraphArray.push(tId);
				if (points.length > 6){
					tIsConvexPolygon=false;
					}else {
					tIsConvexPolygon=true;
				}
			};
			var offset=lineColor ? (lineWidth % 2===0 ? 0 :0.5):0;
			var arr=[x+offset,y+offset,points,fillColor,lineColor,lineWidth,tId,tIsConvexPolygon];
			this._saveToCmd(Render._context._drawPoly,arr);
		}

		/**
		*绘制路径。
		*@param x 开始绘制的 X 轴位置。
		*@param y 开始绘制的 Y 轴位置。
		*@param paths 路径集合，路径支持以下格式：[["moveTo",x,y],["lineTo",x,y,x,y,x,y],["arcTo",x1,y1,x2,y2,r],["closePath"]]。
		*@param brush （可选）刷子定义，支持以下设置{fillStyle}。
		*@param pen （可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin,lineCap,miterLimit}。
		*/
		__proto.drawPath=function(x,y,paths,brush,pen){
			var arr=[x,y,paths,brush,pen];
			this._saveToCmd(Render._context._drawPath,arr);
		}

		/**
		*@private
		*命令流。存储了所有绘制命令。
		*/
		__getset(0,__proto,'cmds',function(){
			return this._cmds;
			},function(value){
			this._sp && (this._sp._renderType |=0x200);
			this._cmds=value;
			this._render=this._renderAll;
			this._repaint();
		});

		Graphics.__init__=function(){
			if (Render.isConchNode){
				var from=laya.display.Graphics.prototype;
				var to=Browser.window.ConchGraphics.prototype;
				var list=["clear","destroy","alpha","rotate","transform","scale","translate","save","restore","clipRect","blendMode","fillText","fillBorderText","_fands","drawRect","drawCircle","drawPie","drawPoly","drawPath","drawImageM","drawLine","drawLines","_drawPs","drawCurves","replaceText","replaceTextColor","_fillImage","fillTexture","setSkinMesh","drawParticle","drawImageS"];
				for (var i=0,len=list.length;i <=len;i++){
					var temp=list[i];
					from[temp]=to[temp];
				}
				from._saveToCmd=null;
				if (to.drawImageS){
					from.drawTextures=function (tex,pos){
						if (!tex)return;
						if (!(tex.loaded && tex.bitmap && tex.source)){
							return;
						};
						var uv=tex.uv,w=tex.bitmap.width,h=tex.bitmap.height;
						this.drawImageS(tex.bitmap.source,uv[0] *w,uv[1] *h,(uv[2]-uv[0])*w,(uv[5]-uv[3])*h,tex.offsetX,tex.offsetY,tex.width,tex.height,pos);
					}
				}
				from.drawTexture=function (tex,x,y,width,height,m,alpha){
					(x===void 0)&& (x=0);
					(y===void 0)&& (y=0);
					(width===void 0)&& (width=0);
					(height===void 0)&& (height=0);
					(alpha===void 0)&& (alpha=1);
					if (!tex)return;
					if (!tex.loaded){
						tex.once("loaded",this,function(){
							this.drawTexture(tex,x,y,width,height,m);
						});
						return;
					}
					if (!(tex.loaded && tex.bitmap && tex.source)){
						return;
					}
					if (!width)width=tex.sourceWidth;
					if (!height)height=tex.sourceHeight;
					alpha=alpha < 0 ? 0 :(alpha > 1 ? 1 :alpha);
					width=width-tex.sourceWidth+tex.width;
					height=height-tex.sourceHeight+tex.height;
					if (width <=0 || height <=0)return;
					x+=tex.offsetX;
					y+=tex.offsetY;
					var uv=tex.uv,w=tex.bitmap.width,h=tex.bitmap.height;
					this.drawImageM(tex.bitmap.source,uv[0] *w,uv[1] *h,(uv[2]-uv[0])*w,(uv[5]-uv[3])*h,x,y,width,height,m,alpha);
					this._repaint();
				}
				from.fillTexture=function (tex,x,y,width,height,type,offset){
					(width===void 0)&& (width=0);
					(height===void 0)&& (height=0);
					(type===void 0)&& (type="repeat");
					if (!tex)return;
					if (tex.loaded){
						var ctxi=Render._context.ctx;
						var w=tex.bitmap.width,h=tex.bitmap.height,uv=tex.uv;
						var pat;
						if (tex.uv !=Texture.DEF_UV){
							pat=ctxi.createPattern(tex.bitmap.source,type,uv[0] *w,uv[1] *h,(uv[2]-uv[0])*w,(uv[5]-uv[3])*h);
							}else {
							pat=ctxi.createPattern(tex.bitmap.source,type);
						};
						var sX=0,sY=0;
						if (offset){
							x+=offset.x % tex.width;
							y+=offset.y % tex.height;
							sX-=offset.x % tex.width;
							sY-=offset.y % tex.height;
						}
						this._fillImage(pat,x,y,sX,sY,width,height);
					}
				}
			}
		}

		Graphics._cache=[];
		return Graphics;
	})()


	//class laya.webgl.utils.ShaderCompile
	var ShaderCompile=(function(){
		var ShaderNode,InlcudeFile;
		function ShaderCompile(name,vs,ps,nameMap,defs){
			//this._nameMap=null;
			//this._VS=null;
			//this._PS=null;
			var _$this=this;
			function _compile (script){
				var includefiles=[];
				var top=new ShaderNode(includefiles);
				_$this._compileToTree(top,script.split('\n'),0,includefiles,defs);
				return top;
			};
			var startTime=Browser.now();
			this._VS=_compile(vs);
			this._PS=_compile(ps);
			this._nameMap=nameMap;
			if ((Browser.now()-startTime)> 2)
				console.log("ShaderCompile use time:"+(Browser.now()-startTime)+"  size:"+vs.length+"/"+ps.length);
		}

		__class(ShaderCompile,'laya.webgl.utils.ShaderCompile');
		var __proto=ShaderCompile.prototype;
		__proto._compileToTree=function(parent,lines,start,includefiles,defs){
			var node,preNode;
			var text,name,fname;
			var ofs=0,words,noUseNode;
			var i=0,n=0,j=0;
			for (i=start;i < lines.length;i++){
				text=lines[i];
				if (text.length < 1)continue ;
				ofs=text.indexOf("//");
				if (ofs===0)continue ;
				if (ofs >=0)text=text.substr(0,ofs);
				node=noUseNode || new ShaderNode(includefiles);
				noUseNode=null;
				node.text=text;
				node.noCompile=true;
				if ((ofs=text.indexOf("#"))>=0){
					name="#";
					for (j=ofs+1,n=text.length;j < n;j++){
						var c=text.charAt(j);
						if (c===' ' || c==='\t' || c==='?')break ;
						name+=c;
					}
					node.name=name;
					switch (name){
						case "#ifdef":
						case "#ifndef":
							node.src=text;
							node.noCompile=text.match(/[!&|()=<>]/)!=null;
							if (!node.noCompile){
								words=text.replace(/^\s*/,'').split(/\s+/);
								node.setCondition(words[1],name==="#ifdef" ? 1 :2);
								node.text="//"+node.text;
								}else {
								console.log("function():Boolean{return "+text.substr(ofs+node.name.length)+"}");
							}
							node.setParent(parent);
							parent=node;
							if (defs){
								words=text.substr(j).split(ShaderCompile._splitToWordExps3);
								for (j=0;j < words.length;j++){
									text=words[j];
									text.length && (defs[ text]=true);
								}
							}
							continue ;
						case "#if":
							node.src=text;
							node.noCompile=true;
							node.setParent(parent);
							parent=node;
							if (defs){
								words=text.substr(j).split(ShaderCompile._splitToWordExps3);
								for (j=0;j < words.length;j++){
									text=words[j];
									text.length && text!="defined" && (defs[ text]=true);
								}
							}
							continue ;
						case "#else":
							node.src=text;
							parent=parent.parent;
							preNode=parent.childs[parent.childs.length-1];
							node.noCompile=preNode.noCompile
							if (!(node.noCompile)){
								node.condition=preNode.condition;
								node.conditionType=preNode.conditionType==1 ? 2 :1;
								node.text="//"+node.text+" "+preNode.text+" "+node.conditionType;
							}
							node.setParent(parent);
							parent=node;
							continue ;
						case "#endif":
							parent=parent.parent;
							preNode=parent.childs[parent.childs.length-1];
							node.noCompile=preNode.noCompile;
							if (!(node.noCompile)){
								node.text="//"+node.text;
							}
							node.setParent(parent);
							continue ;
						case "#include":
							words=ShaderCompile.splitToWords(text,null);
							var inlcudeFile=ShaderCompile.includes[words[1]];
							if (!inlcudeFile){
								throw "ShaderCompile error no this include file:"+words[1];
								return;
							}
							if ((ofs=words[0].indexOf("?"))< 0){
								node.setParent(parent);
								text=inlcudeFile.getWith(words[2]=='with' ? words[3] :null);
								this._compileToTree(node,text.split('\n'),0,includefiles,defs);
								node.text="";
								continue ;
							}
							node.setCondition(words[0].substr(ofs+1),1);
							node.text=inlcudeFile.getWith(words[2]=='with' ? words[3] :null);
							break ;
						case "#import":
							words=ShaderCompile.splitToWords(text,null);
							fname=words[1];
							includefiles.push({node:node,file:ShaderCompile.includes[fname],ofs:node.text.length});
							continue ;
						}
					}else {
					preNode=parent.childs[parent.childs.length-1];
					if (preNode && !preNode.name){
						includefiles.length > 0 && ShaderCompile.splitToWords(text,preNode);
						noUseNode=node;
						preNode.text+="\n"+text;
						continue ;
					}
					includefiles.length > 0 && ShaderCompile.splitToWords(text,node);
				}
				node.setParent(parent);
			}
		}

		__proto.createShader=function(define,shaderName,createShader){
			var defMap={};
			var defineStr="";
			if (define){
				for (var i in define){
					defineStr+="#define "+i+"\n";
					defMap[i]=true;
				}
			};
			var vs=this._VS.toscript(defMap,[]);
			var ps=this._PS.toscript(defMap,[]);
			return (createShader || Shader.create)(defineStr+vs.join('\n'),defineStr+ps.join('\n'),shaderName,this._nameMap);
		}

		ShaderCompile._parseOne=function(attributes,uniforms,words,i,word,b){
			var one={type:ShaderCompile.shaderParamsMap[words[i+1]],name:words[i+2],size:isNaN(parseInt(words[i+3]))? 1 :parseInt(words[i+3])};
			if (b){
				if (word=="attribute"){
					attributes.push(one);
					}else {
					uniforms.push(one);
				}
			}
			if (words[i+3]==':'){
				one.type=words[i+4];
				i+=2;
			}
			i+=2;
			return i;
		}

		ShaderCompile.addInclude=function(fileName,txt){
			if (!txt || txt.length===0)
				throw new Error("add shader include file err:"+fileName);
			if (ShaderCompile.includes[fileName])
				throw new Error("add shader include file err, has add:"+fileName);
			ShaderCompile.includes[fileName]=new InlcudeFile(txt);
		}

		ShaderCompile.preGetParams=function(vs,ps){
			var text=[vs,ps];
			var result={};
			var attributes=[];
			var uniforms=[];
			var definesInfo={};
			var definesName=[];
			result.attributes=attributes;
			result.uniforms=uniforms;
			result.defines=definesInfo;
			var i=0,n=0,one;
			for (var s=0;s < 2;s++){
				text[s]=text[s].replace(ShaderCompile._removeAnnotation,"");
				var words=text[s].match(ShaderCompile._reg);
				var tempelse;
				for (i=0,n=words.length;i < n;i++){
					var word=words[i];
					if (word !="attribute" && word !="uniform"){
						if (word=="#define"){
							word=words[++i];
							definesName[word]=1;
							continue ;
							}else if (word=="#ifdef"){
							tempelse=words[++i];
							var def=definesInfo[tempelse]=definesInfo[tempelse] || [];
							for (i++;i < n;i++){
								word=words[i];
								if (word !="attribute" && word !="uniform"){
									if (word=="#else"){
										for (i++;i < n;i++){
											word=words[i];
											if (word !="attribute" && word !="uniform"){
												if (word=="#endif"){
													break ;
												}
												continue ;
											}
											i=ShaderCompile._parseOne(attributes,uniforms,words,i,word,!definesName[tempelse]);
										}
									}
									continue ;
								}
								i=ShaderCompile._parseOne(attributes,uniforms,words,i,word,definesName[tempelse]);
							}
						}
						continue ;
					}
					i=ShaderCompile._parseOne(attributes,uniforms,words,i,word,true);
				}
			}
			return result;
		}

		ShaderCompile.splitToWords=function(str,block){
			var out=[];
			var c;
			var ofs=-1;
			var word;
			for (var i=0,n=str.length;i < n;i++){
				c=str.charAt(i);
				if (" \t=+-*/&%!<>()'\",;".indexOf(c)>=0){
					if (ofs >=0 && (i-ofs)> 1){
						word=str.substr(ofs,i-ofs);
						out.push(word);
					}
					if (c=='"' || c=="'"){
						var ofs2=str.indexOf(c,i+1);
						if (ofs2 < 0){
							throw "Sharder err:"+str;
						}
						out.push(str.substr(i+1,ofs2-i-1));
						i=ofs2;
						ofs=-1;
						continue ;
					}
					if (c=='(' && block && out.length > 0){
						word=out[out.length-1]+";";
						if ("vec4;main;".indexOf(word)< 0)
							block.useFuns+=word;
					}
					ofs=-1;
					continue ;
				}
				if (ofs < 0)ofs=i;
			}
			if (ofs < n && (n-ofs)> 1){
				word=str.substr(ofs,n-ofs);
				out.push(word);
			}
			return out;
		}

		ShaderCompile.IFDEF_NO=0;
		ShaderCompile.IFDEF_YES=1;
		ShaderCompile.IFDEF_ELSE=2;
		ShaderCompile.IFDEF_PARENT=3;
		ShaderCompile._removeAnnotation=new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)","g");
		ShaderCompile._reg=new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])","g");
		ShaderCompile._splitToWordExps=new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%\(\),;])","g");
		ShaderCompile.includes={};
		__static(ShaderCompile,
		['shaderParamsMap',function(){return this.shaderParamsMap={"float":0x1406,"int":0x1404,"bool":0x8B56,"vec2":0x8B50,"vec3":0x8B51,"vec4":0x8B52,"ivec2":0x8B53,"ivec3":0x8B54,"ivec4":0x8B55,"bvec2":0x8B57,"bvec3":0x8B58,"bvec4":0x8B59,"mat2":0x8B5A,"mat3":0x8B5B,"mat4":0x8B5C,"sampler2D":0x8B5E,"samplerCube":0x8B60};},'_splitToWordExps3',function(){return this._splitToWordExps3=new RegExp("[ \\t=\\+\\-*/&%!<>!%\(\),;\\|]","g");}
		]);
		ShaderCompile.__init$=function(){
			//class ShaderNode
			ShaderNode=(function(){
				function ShaderNode(includefiles){
					this.childs=[];
					this.text="";
					this.parent=null;
					this.name=null;
					this.noCompile=false;
					this.includefiles=null;
					this.condition=null;
					this.conditionType=0;
					this.useFuns="";
					this.z=0;
					this.src=null;
					this.includefiles=includefiles;
				}
				__class(ShaderNode,'');
				var __proto=ShaderNode.prototype;
				__proto.setParent=function(parent){
					parent.childs.push(this);
					this.z=parent.z+1;
					this.parent=parent;
				}
				__proto.setCondition=function(condition,type){
					if (condition){
						this.conditionType=type;
						condition=condition.replace(/(\s*$)/g,"");
						this.condition=function (){
							return this[condition];
						}
						this.condition.__condition=condition;
					}
				}
				__proto.toscript=function(def,out){
					return this._toscript(def,out,++ShaderNode.__id);
				}
				__proto._toscript=function(def,out,id){
					if (this.childs.length < 1 && !this.text)return out;
					var outIndex=out.length;
					if (this.condition){
						var ifdef=!!this.condition.call(def);
						this.conditionType===2 && (ifdef=!ifdef);
						if (!ifdef)return out;
					}
					this.text && out.push(this.text);
					this.childs.length > 0 && this.childs.forEach(function(o,index,arr){
						o._toscript(def,out,id);
					});
					if (this.includefiles.length > 0 && this.useFuns.length > 0){
						var funsCode;
						for (var i=0,n=this.includefiles.length;i < n;i++){
							if (this.includefiles[i].curUseID==id){
								continue ;
							}
							funsCode=this.includefiles[i].file.getFunsScript(this.useFuns);
							if (funsCode.length > 0){
								this.includefiles[i].curUseID=id;
								out[0]=funsCode+out[0];
							}
						}
					}
					return out;
				}
				ShaderNode.__id=1;
				return ShaderNode;
			})()
			//class InlcudeFile
			InlcudeFile=(function(){
				function InlcudeFile(txt){
					this.script=null;
					this.codes={};
					this.funs={};
					this.curUseID=-1;
					this.funnames="";
					this.script=txt;
					var begin=0,ofs=0,end=0;
					while (true){
						begin=txt.indexOf("#begin",begin);
						if (begin < 0)break ;
						end=begin+5;
						while (true){
							end=txt.indexOf("#end",end);
							if (end < 0)break ;
							if (txt.charAt(end+4)==='i')
								end+=5;
							else break ;
						}
						if (end < 0){
							throw "add include err,no #end:"+txt;
							return;
						}
						ofs=txt.indexOf('\n',begin);
						var words=ShaderCompile.splitToWords(txt.substr(begin,ofs-begin),null);
						if (words[1]=='code'){
							this.codes[words[2]]=txt.substr(ofs+1,end-ofs-1);
							}else if (words[1]=='function'){
							ofs=txt.indexOf("function",begin);
							ofs+="function".length;
							this.funs[words[3]]=txt.substr(ofs+1,end-ofs-1);
							this.funnames+=words[3]+";";
						}
						begin=end+1;
					}
				}
				__class(InlcudeFile,'');
				var __proto=InlcudeFile.prototype;
				__proto.getWith=function(name){
					var r=name ? this.codes[name] :this.script;
					if (!r){
						throw "get with error:"+name;
					}
					return r;
				}
				__proto.getFunsScript=function(funsdef){
					var r="";
					for (var i in this.funs){
						if (funsdef.indexOf(i+";")>=0){
							r+=this.funs[i];
						}
					}
					return r;
				}
				return InlcudeFile;
			})()
		}

		return ShaderCompile;
	})()


	//class laya.debug.tools.Base64Tool
	var Base64Tool=(function(){
		function Base64Tool(){}
		__class(Base64Tool,'laya.debug.tools.Base64Tool');
		Base64Tool.init=function(){
			if (Base64Tool.lookup)
				return;
			Base64Tool.lookup=new Uint8Array(256)
			for (var i=0;i < Base64Tool.chars.length;i++){
				Base64Tool.lookup[Base64Tool.chars.charCodeAt(i)]=i;
			}
		}

		Base64Tool.encode=function(arraybuffer){
			var bytes=new Uint8Array(arraybuffer),i=0,len=bytes.length,base64="";
			for (i=0;i < len;i+=3){
				base64+=Base64Tool.chars[bytes[i] >> 2];
				base64+=Base64Tool.chars[((bytes[i] & 3)<< 4)| (bytes[i+1] >> 4)];
				base64+=Base64Tool.chars[((bytes[i+1] & 15)<< 2)| (bytes[i+2] >> 6)];
				base64+=Base64Tool.chars[bytes[i+2] & 63];
			}
			if ((len % 3)===2){
				base64=base64.substring(0,base64.length-1)+"=";
			}
			else if (len % 3===1){
				base64=base64.substring(0,base64.length-2)+"==";
			}
			return base64;
		}

		Base64Tool.encodeStr=function(str){
			var byte;
			byte=new Byte();
			byte.writeUTFString(str);
			return Base64Tool.encodeByte(byte);
		}

		Base64Tool.encodeStr2=function(str){
			var byte;
			byte=new Byte();
			byte.writeUTFBytes(str);
			return Base64Tool.encodeByte(byte);
		}

		Base64Tool.encodeByte=function(byte,start,end){
			(start===void 0)&& (start=0);
			(end===void 0)&& (end=-1);
			if (end < 0){
				end=byte.length;
			}
			return Base64Tool.encode(byte.buffer.slice(start,end));
		}

		Base64Tool.decodeToByte=function(base64){
			return new Byte(Base64Tool.decode(base64));
		}

		Base64Tool.decode=function(base64){
			Base64Tool.init();
			var bufferLength=base64.length *0.75,len=base64.length,i=0,p=0,encoded1=0,encoded2=0,encoded3=0,encoded4=0;
			if (base64[base64.length-1]==="="){
				bufferLength--;
				if (base64[base64.length-2]==="="){
					bufferLength--;
				}
			};
			var arraybuffer=new ArrayBuffer(bufferLength),bytes=new Uint8Array(arraybuffer);
			for (i=0;i < len;i+=4){
				encoded1=Base64Tool.lookup[base64.charCodeAt(i)];
				encoded2=Base64Tool.lookup[base64.charCodeAt(i+1)];
				encoded3=Base64Tool.lookup[base64.charCodeAt(i+2)];
				encoded4=Base64Tool.lookup[base64.charCodeAt(i+3)];
				bytes[p++]=(encoded1 << 2)| (encoded2 >> 4);
				bytes[p++]=((encoded2 & 15)<< 4)| (encoded3 >> 2);
				bytes[p++]=((encoded3 & 3)<< 6)| (encoded4 & 63);
			}
			return arraybuffer;
		}

		Base64Tool.chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
		Base64Tool.lookup=null;
		return Base64Tool;
	})()


	//class laya.debug.tools.StringTool
	var StringTool=(function(){
		function StringTool(){}
		__class(StringTool,'laya.debug.tools.StringTool');
		StringTool.toUpCase=function(str){
			return str.toUpperCase();
		}

		StringTool.toLowCase=function(str){
			return str.toLowerCase();
		}

		StringTool.toUpHead=function(str){
			var rst;
			if(str.length<=1)return str.toUpperCase();
			rst=str.charAt(0).toUpperCase()+str.substr(1);
			return rst;
		}

		StringTool.toLowHead=function(str){
			var rst;
			if(str.length<=1)return str.toLowerCase();
			rst=str.charAt(0).toLowerCase()+str.substr(1);
			return rst;
		}

		StringTool.packageToFolderPath=function(packageName){
			var rst;
			rst=packageName.replace(".","/");
			return rst;
		}

		StringTool.insert=function(str,iStr,index){
			return str.substring(0,index)+iStr+str.substr(index);
		}

		StringTool.insertAfter=function(str,iStr,tarStr,isLast){
			(isLast===void 0)&& (isLast=false);
			var i=0;
			if(isLast){
				i=str.lastIndexOf(tarStr);
				}else{
				i=str.indexOf(tarStr);
			}
			if(i>=0){
				return StringTool.insert(str,iStr,i+tarStr.length);
			}
			return str;
		}

		StringTool.insertBefore=function(str,iStr,tarStr,isLast){
			(isLast===void 0)&& (isLast=false);
			var i=0;
			if(isLast){
				i=str.lastIndexOf(tarStr);
				}else{
				i=str.indexOf(tarStr);
			}
			if(i>=0){
				return StringTool.insert(str,iStr,i);
			}
			return str;
		}

		StringTool.insertParamToFun=function(funStr,params){
			var oldParam;
			oldParam=StringTool.getParamArr(funStr);
			var inserStr;
			inserStr=params.join(",");
			if(oldParam.length>0){
				inserStr=","+inserStr;
			}
			return StringTool.insertBefore(funStr,inserStr,")",true);
		}

		StringTool.trim=function(str,vList){
			if(!vList){
				vList=[" ","\r","\n","\t",String.fromCharCode(65279)];
			};
			var rst;
			var i=0;
			var len=0;
			rst=str;
			len=vList.length;
			for(i=0;i<len;i++){
				rst=StringTool.getReplace(rst,vList[i],"");
			}
			return rst;
		}

		StringTool.isEmpty=function(str){
			if(str.length<1)return true;
			return StringTool.emptyStrDic.hasOwnProperty(str);
		}

		StringTool.trimLeft=function(str){
			var i=0;
			i=0;
			var len=0;
			len=str.length;
			while(StringTool.isEmpty(str.charAt(i))&&i<len){
				i++;
			}
			if(i<len){
				return str.substr(i);
			}
			return "";
		}

		StringTool.trimRight=function(str){
			var i=0;
			i=str.length-1;
			while(StringTool.isEmpty(str.charAt(i))&&i>=0){
				i--;
			};
			var rst;
			rst=str.substring(0,i)
			if(i>=0){
				return str.substring(0,i+1);
			}
			return "";
		}

		StringTool.trimSide=function(str){
			var rst;
			rst=StringTool.trimLeft(str);
			rst=StringTool.trimRight(rst);
			return rst;
		}

		StringTool.isOkFileName=function(fileName){
			if(laya.debug.tools.StringTool.trimSide(fileName)=="")return false;
			var i=0,len=0;
			len=fileName.length;
			for(i=0;i<len;i++){
				if(StringTool.specialChars[fileName.charAt(i)])return false;
			}
			return true;
		}

		StringTool.trimButEmpty=function(str){
			return StringTool.trim(str,["\r","\n","\t"]);
		}

		StringTool.removeEmptyStr=function(strArr){
			var i=0;
			i=strArr.length-1;
			var str;
			for(i=i;i>=0;i--){
				str=strArr[i];
				str=laya.debug.tools.StringTool.trimSide(str);
				if(StringTool.isEmpty(str)){
					strArr.splice(i,1);
					}else{
					strArr[i]=str;
				}
			}
			return strArr;
		}

		StringTool.ifNoAddToTail=function(str,sign){
			if(str.indexOf(sign)>=0){
				return str;
			}
			return str+sign;
		}

		StringTool.trimEmptyLine=function(str){
			var i=0;
			var len=0;
			var tLines;
			var tLine;
			tLines=str.split("\n");
			for(i=tLines.length-1;i>=0;i--){
				tLine=tLines[i];
				if(StringTool.isEmptyLine(tLine)){
					tLines.splice(i,1);
				}
			}
			return tLines.join("\n");
		}

		StringTool.isEmptyLine=function(str){
			str=laya.debug.tools.StringTool.trim(str);
			if(str=="")return true;
			return false;
		}

		StringTool.removeCommentLine=function(lines){
			var rst;
			rst=[];
			var i=0;
			var tLine;
			var adptLine;
			i=0;
			var len=0;
			var index=0;
			len=lines.length;
			while(i<len){
				adptLine=tLine=lines[i];
				index=tLine.indexOf("/**");
				if(index>=0){
					adptLine=tLine.substring(0,index-1);
					StringTool.addIfNotEmpty(rst,adptLine);
					while(i<len){
						tLine=lines[i];
						index=tLine.indexOf("*/");
						if(index>=0){
							adptLine=tLine.substring(index+2);
							StringTool.addIfNotEmpty(rst,adptLine);
							break ;
						}
						i++;
					}
					}else if(tLine.indexOf("//")>=0){
					if(laya.debug.tools.StringTool.trim(tLine).indexOf("//")==0){
						}else{
						StringTool.addIfNotEmpty(rst,adptLine);
					}
					}else{
					StringTool.addIfNotEmpty(rst,adptLine);
				}
				i++;
			}
			return rst;
		}

		StringTool.addIfNotEmpty=function(arr,str){
			if(!str)return;
			var tStr;
			tStr=StringTool.trim(str);
			if(tStr!=""){
				arr.push(str);
			}
		}

		StringTool.trimExt=function(str,vars){
			var rst;
			rst=StringTool.trim(str);
			var i=0;
			var len=0;
			len=vars.length;
			for(i=0;i<len;i++){
				rst=StringTool.getReplace(rst,vars[i],"");
			}
			return rst;
		}

		StringTool.getBetween=function(str,left,right,ifMax){
			(ifMax===void 0)&& (ifMax=false);
			if(!str)return "";
			if(!left)return "";
			if(!right)return "";
			var lId=0;
			var rId=0;
			lId=str.indexOf(left);
			if(lId<0)return"";
			if(ifMax){
				rId=str.lastIndexOf(right);
				if(rId<lId)return "";
				}else{
				rId=str.indexOf(right,lId+1);
			}
			if(rId<0)return "";
			return str.substring(lId+left.length,rId);
		}

		StringTool.getSplitLine=function(line,split){
			(split===void 0)&& (split=" ");
			return line.split(split);
		}

		StringTool.getLeft=function(str,sign){
			var i=0;
			i=str.indexOf(sign);
			return str.substr(0,i);
		}

		StringTool.getRight=function(str,sign){
			var i=0;
			i=str.indexOf(sign);
			return str.substr(i+1);
		}

		StringTool.delelteItem=function(arr){
			while (arr.length>0){
				if(arr[0]==""){
					arr.shift();
					}else{
					break ;
				}
			}
		}

		StringTool.getWords=function(line){
			var rst=StringTool.getSplitLine(line);
			StringTool.delelteItem(rst);
			return rst;
		}

		StringTool.getLinesI=function(startLine,endLine,lines){
			var i=0;
			var rst=[];
			for(i=startLine;i<=endLine;i++){
				rst.push(lines[i]);
			}
			return rst;
		}

		StringTool.structfy=function(str,inWidth,removeEmpty){
			(inWidth===void 0)&& (inWidth=4);
			(removeEmpty===void 0)&& (removeEmpty=true);
			if(removeEmpty){
				str=laya.debug.tools.StringTool.trimEmptyLine(str);
			};
			var lines;
			var tIn=0;
			tIn=0;
			var tInStr;
			tInStr=StringTool.getEmptyStr(0);
			lines=str.split("\n");
			var i=0;
			var len=0;
			var tLineStr;
			len=lines.length;
			for(i=0;i<len;i++){
				tLineStr=lines[i];
				tLineStr=laya.debug.tools.StringTool.trimLeft(tLineStr);
				tLineStr=laya.debug.tools.StringTool.trimRight(tLineStr);
				tIn+=StringTool.getPariCount(tLineStr);
				if(tLineStr.indexOf("}")>=0){
					tInStr=StringTool.getEmptyStr(tIn*inWidth);
				}
				tLineStr=tInStr+tLineStr;
				lines[i]=tLineStr;
				tInStr=StringTool.getEmptyStr(tIn*inWidth);
			}
			return lines.join("\n");
		}

		StringTool.getEmptyStr=function(width){
			if(!StringTool.emptyDic.hasOwnProperty(width)){
				var i=0;
				var len=0;
				len=width;
				var rst;
				rst="";
				for(i=0;i<len;i++){
					rst+=" ";
				}
				StringTool.emptyDic[width]=rst;
			}
			return StringTool.emptyDic[width];
		}

		StringTool.getPariCount=function(str,inChar,outChar){
			(inChar===void 0)&& (inChar="{");
			(outChar===void 0)&& (outChar="}");
			var varDic;
			varDic={};
			varDic[inChar]=1;
			varDic[outChar]=-1;
			var i=0;
			var len=0;
			var tChar;
			len=str.length;
			var rst=0;
			rst=0;
			for(i=0;i<len;i++){
				tChar=str.charAt(i);
				if(varDic.hasOwnProperty(tChar)){
					rst+=varDic[tChar];
				}
			}
			return rst;
		}

		StringTool.readInt=function(str,startI){
			(startI===void 0)&& (startI=0);
			var rst=NaN;
			rst=0;
			var tNum=0;
			var tC;
			var i=0;
			var isBegin=false;
			isBegin=false;
			var len=0;
			len=str.length;
			for(i=startI;i<len;i++){
				tC=str.charAt(i);
				if(Number(tC)>0||tC=="0"){
					rst=10*rst+Number(tC);
					if(rst>0)isBegin=true;
					}else{
					if(isBegin)return rst;
				}
			}
			return rst;
		}

		StringTool.getReplace=function(str,oStr,nStr){
			if(!str)return "";
			var rst;
			rst=str.replace(new RegExp(oStr,"g"),nStr);
			return rst;
		}

		StringTool.getWordCount=function(str,findWord){
			var rg=new RegExp(findWord,"g")
			return str.match(rg).length;
		}

		StringTool.getResolvePath=function(path,basePath){
			if(StringTool.isAbsPath(path)){
				return path;
			};
			var tSign;
			tSign="\\";
			if(basePath.indexOf("/")>=0){
				tSign="/";
			}
			if(basePath.charAt(basePath.length-1)==tSign){
				basePath=basePath.substr(0,basePath.length-1);
			};
			var parentSign;
			parentSign=".."+tSign;
			var tISign;
			tISign="."+tSign;
			var pCount=0;
			pCount=StringTool.getWordCount(path,parentSign);
			path=laya.debug.tools.StringTool.getReplace(path,parentSign,"");
			path=laya.debug.tools.StringTool.getReplace(path,tISign,"");
			var i=0;
			var len=0;
			len=pCount;
			var iPos=0;
			for(i=0;i<len;i++){
				basePath=StringTool.removeLastSign(path,tSign);
			}
			return basePath+tSign+path;
		}

		StringTool.isAbsPath=function(path){
			if(path.indexOf(":")>=0)return true;
			return false;
		}

		StringTool.removeLastSign=function(str,sign){
			var iPos=0;
			iPos=str.lastIndexOf(sign);
			str=str.substring(0,iPos);
			return str;
		}

		StringTool.getParamArr=function(str){
			var paramStr;
			paramStr=laya.debug.tools.StringTool.getBetween(str,"(",")",true);
			if(StringTool.trim(paramStr).length<1)return [];
			return paramStr.split(",");
		}

		StringTool.copyStr=function(str){
			return str.substring();
		}

		StringTool.ArrayToString=function(arr){
			var rst;
			rst="[{items}]".replace(new RegExp("\\{items\\}","g"),StringTool.getArrayItems(arr));
			return rst;
		}

		StringTool.getArrayItems=function(arr){
			var rst;
			if(arr.length<1)return "";
			rst=StringTool.parseItem(arr[0]);
			var i=0;
			var len=0;
			len=arr.length;
			for(i=1;i<len;i++){
				rst+=","+StringTool.parseItem(arr[i]);
			}
			return rst;
		}

		StringTool.parseItem=function(item){
			var rst;
			rst="\""+item+"\"";
			return "";
		}

		StringTool.initAlphaSign=function(){
			if (StringTool.alphaSigns)return;
			StringTool.alphaSigns={};
			StringTool.addSign("a","z",StringTool.alphaSigns);
			StringTool.addSign("A","Z",StringTool.alphaSigns);
			StringTool.addSign("0","9",StringTool.alphaSigns);
		}

		StringTool.addSign=function(ss,e,tar){
			var i=0;
			var len=0;
			var s=0;
			s=ss.charCodeAt(0);
			len=e.charCodeAt(0);
			for(i=s;i<=len;i++){
				tar[String.fromCharCode(i)]=true;
				console.log("add :"+String.fromCharCode(i));
			}
		}

		StringTool.isPureAlphaNum=function(str){
			StringTool.initAlphaSign();
			if (!str)return true;
			var i=0,len=0;
			len=str.length;
			for (i=0;i < len;i++){
				if (!StringTool.alphaSigns[str.charAt(i)])return false;
			}
			return true;
		}

		StringTool.emptyDic={};
		StringTool.alphaSigns=null;
		__static(StringTool,
		['emptyStrDic',function(){return this.emptyStrDic={
				" ":true,
				"\r":true,
				"\n":true,
				"\t":true
		};},'specialChars',function(){return this.specialChars={"*":true,"&":true,"%":true,"#":true,"?":true};}

		]);
		return StringTool;
	})()


	//class laya.display.BitmapFont
	var BitmapFont=(function(){
		function BitmapFont(){
			this._texture=null;
			this._fontCharDic={};
			this._fontWidthMap={};
			this._complete=null;
			this._path=null;
			this._maxWidth=0;
			this._spaceWidth=10;
			this._padding=null;
			this.fontSize=12;
			this.autoScaleSize=false;
			this.letterSpacing=0;
		}

		__class(BitmapFont,'laya.display.BitmapFont');
		var __proto=BitmapFont.prototype;
		/**
		*通过指定位图字体文件路径，加载位图字体文件，加载完成后会自动解析。
		*@param path 位图字体文件的路径。
		*@param complete 加载并解析完成的回调。如果成功返回this,如果失败返回null
		*/
		__proto.loadFont=function(path,complete){
			this._path=path;
			this._complete=complete;
			Laya.loader.load([{url:this._path,type:"xml"},{url:this._path.replace(".fnt",".png"),type:"image"}],Handler.create(this,this.onLoaded));
		}

		/**
		*@private
		*/
		__proto.onLoaded=function(){
			this.parseFont(Loader.getRes(this._path),Loader.getRes(this._path.replace(".fnt",".png")));
			this._complete && this._complete.runWith(this._texture?this:null);
		}

		/**
		*解析字体文件。
		*@param xml 字体文件XML。
		*@param texture 字体的纹理。
		*/
		__proto.parseFont=function(xml,texture){
			if (xml==null || texture==null)return;
			this._texture=texture;
			var tX=0;
			var tScale=1;
			var tInfo=xml.getElementsByTagName("info");
			if (!tInfo[0].getAttributeNode){
				return this.parseFont2(xml,texture);
			}
			this.fontSize=parseInt(tInfo[0].getAttributeNode("size").nodeValue);
			var tPadding=tInfo[0].getAttributeNode("padding").nodeValue;
			var tPaddingArray=tPadding.split(",");
			this._padding=[parseInt(tPaddingArray[0]),parseInt(tPaddingArray[1]),parseInt(tPaddingArray[2]),parseInt(tPaddingArray[3])];
			var chars;
			chars=xml.getElementsByTagName("char");
			var i=0;
			for (i=0;i < chars.length;i++){
				var tAttribute=chars[i];
				var tId=parseInt(tAttribute.getAttributeNode("id").nodeValue);
				var xOffset=parseInt(tAttribute.getAttributeNode("xoffset").nodeValue)/ tScale;
				var yOffset=parseInt(tAttribute.getAttributeNode("yoffset").nodeValue)/ tScale;
				var xAdvance=parseInt(tAttribute.getAttributeNode("xadvance").nodeValue)/ tScale;
				var region=new Rectangle();
				region.x=parseInt(tAttribute.getAttributeNode("x").nodeValue);
				region.y=parseInt(tAttribute.getAttributeNode("y").nodeValue);
				region.width=parseInt(tAttribute.getAttributeNode("width").nodeValue);
				region.height=parseInt(tAttribute.getAttributeNode("height").nodeValue);
				var tTexture=Texture.create(texture,region.x,region.y,region.width,region.height,xOffset,yOffset);
				this._maxWidth=Math.max(this._maxWidth,xAdvance+this.letterSpacing);
				this._fontCharDic[tId]=tTexture;
				this._fontWidthMap[tId]=xAdvance;
			}
		}

		/**
		*@private
		*解析字体文件。
		*@param xml 字体文件XML。
		*@param texture 字体的纹理。
		*/
		__proto.parseFont2=function(xml,texture){
			if (xml==null || texture==null)return;
			this._texture=texture;
			var tX=0;
			var tScale=1;
			var tInfo=xml.getElementsByTagName("info");
			this.fontSize=parseInt(tInfo[0].attributes["size"].nodeValue);
			var tPadding=tInfo[0].attributes["padding"].nodeValue;
			var tPaddingArray=tPadding.split(",");
			this._padding=[parseInt(tPaddingArray[0]),parseInt(tPaddingArray[1]),parseInt(tPaddingArray[2]),parseInt(tPaddingArray[3])];
			var chars=xml.getElementsByTagName("char");
			var i=0;
			for (i=0;i < chars.length;i++){
				var tAttribute=chars[i].attributes;
				var tId=parseInt(tAttribute["id"].nodeValue);
				var xOffset=parseInt(tAttribute["xoffset"].nodeValue)/ tScale;
				var yOffset=parseInt(tAttribute["yoffset"].nodeValue)/ tScale;
				var xAdvance=parseInt(tAttribute["xadvance"].nodeValue)/ tScale;
				var region=new Rectangle();
				region.x=parseInt(tAttribute["x"].nodeValue);
				region.y=parseInt(tAttribute["y"].nodeValue);
				region.width=parseInt(tAttribute["width"].nodeValue);
				region.height=parseInt(tAttribute["height"].nodeValue);
				var tTexture=Texture.create(texture,region.x,region.y,region.width,region.height,xOffset,yOffset);
				this._maxWidth=Math.max(this._maxWidth,xAdvance+this.letterSpacing);
				this._fontCharDic[tId]=tTexture;
				this._fontWidthMap[tId]=xAdvance;
			}
		}

		/**
		*获取指定字符的字体纹理对象。
		*@param char 字符。
		*@return 指定的字体纹理对象。
		*/
		__proto.getCharTexture=function(char){
			return this._fontCharDic[char.charCodeAt(0)];
		}

		/**
		*销毁位图字体，调用Text.unregisterBitmapFont 时，默认会销毁。
		*/
		__proto.destroy=function(){
			if (this._texture){
				for (var p in this._fontCharDic){
					var tTexture=this._fontCharDic[p];
					if (tTexture)tTexture.destroy();
				}
				this._texture.destroy();
				this._fontCharDic=null;
				this._fontWidthMap=null;
				this._texture=null;
			}
		}

		/**
		*设置空格的宽（如果字体库有空格，这里就可以不用设置了）。
		*@param spaceWidth 宽度，单位为像素。
		*/
		__proto.setSpaceWidth=function(spaceWidth){
			this._spaceWidth=spaceWidth;
		}

		/**
		*获取指定字符的宽度。
		*@param char 字符。
		*@return 宽度。
		*/
		__proto.getCharWidth=function(char){
			var code=char.charCodeAt(0);
			if (this._fontWidthMap[code])return this._fontWidthMap[code]+this.letterSpacing;
			if (char==" ")return this._spaceWidth+this.letterSpacing;
			return 0;
		}

		/**
		*获取指定文本内容的宽度。
		*@param text 文本内容。
		*@return 宽度。
		*/
		__proto.getTextWidth=function(text){
			var tWidth=0;
			for (var i=0,n=text.length;i < n;i++){
				tWidth+=this.getCharWidth(text.charAt(i));
			}
			return tWidth;
		}

		/**
		*获取最大字符宽度。
		*/
		__proto.getMaxWidth=function(){
			return this._maxWidth;
		}

		/**
		*获取最大字符高度。
		*/
		__proto.getMaxHeight=function(){
			return this.fontSize;
		}

		/**
		*@private
		*将指定的文本绘制到指定的显示对象上。
		*/
		__proto.drawText=function(text,sprite,drawX,drawY,align,width){
			var tWidth=this.getTextWidth(text);
			var tTexture;
			var dx=0;
			align==="center" && (dx=(width-tWidth)/ 2);
			align==="right" && (dx=(width-tWidth));
			var tX=0;
			for (var i=0,n=text.length;i < n;i++){
				tTexture=this.getCharTexture(text.charAt(i));
				if (tTexture){
					sprite.graphics.drawTexture(tTexture,drawX+tX+dx,drawY);
					tX+=this.getCharWidth(text.charAt(i));
				}
			}
		}

		return BitmapFont;
	})()


	//class laya.display.css.Style
	var Style=(function(){
		function Style(){
			this.alpha=1;
			this.visible=true;
			this.scrollRect=null;
			this.blendMode=null;
			this._type=0;
			this._tf=Style._TF_EMPTY;
		}

		__class(Style,'laya.display.css.Style');
		var __proto=Style.prototype;
		__proto.getTransform=function(){
			return this._tf;
		}

		__proto.setTransform=function(value){
			this._tf=value==='none' || !value ? Style._TF_EMPTY :value;
		}

		__proto.setTranslateX=function(value){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.translateX=value;
		}

		__proto.setTranslateY=function(value){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.translateY=value;
		}

		__proto.setScaleX=function(value){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.scaleX=value;
		}

		__proto.setScale=function(x,y){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.scaleX=x;
			this._tf.scaleY=y;
		}

		__proto.setScaleY=function(value){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.scaleY=value;
		}

		__proto.setRotate=function(value){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.rotate=value;
		}

		__proto.setSkewX=function(value){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.skewX=value;
		}

		__proto.setSkewY=function(value){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.skewY=value;
		}

		/**销毁此对象。*/
		__proto.destroy=function(){
			this.scrollRect=null;
		}

		/**@private */
		__proto.render=function(sprite,context,x,y){}
		/**@private */
		__proto.getCSSStyle=function(){
			return CSSStyle.EMPTY;
		}

		/**@private */
		__proto._enableLayout=function(){
			return false;
		}

		/**X 轴缩放值。*/
		__getset(0,__proto,'scaleX',function(){
			return this._tf.scaleX;
			},function(value){
			this.setScaleX(value);
		});

		/**元素应用的 2D 或 3D 转换的值。该属性允许我们对元素进行旋转、缩放、移动或倾斜。*/
		__getset(0,__proto,'transform',function(){
			return this.getTransform();
			},function(value){
			this.setTransform(value);
		});

		/**定义转换，只是用 X 轴的值。*/
		__getset(0,__proto,'translateX',function(){
			return this._tf.translateX;
			},function(value){
			this.setTranslateX(value);
		});

		/**定义转换，只是用 Y 轴的值。*/
		__getset(0,__proto,'translateY',function(){
			return this._tf.translateY;
			},function(value){
			this.setTranslateY(value);
		});

		/**Y 轴缩放值。*/
		__getset(0,__proto,'scaleY',function(){
			return this._tf.scaleY;
			},function(value){
			this.setScaleY(value);
		});

		/**表示元素是否显示为块级元素。*/
		__getset(0,__proto,'block',function(){
			return (this._type & 0x1)!=0;
		});

		/**定义沿着 Y 轴的 2D 倾斜转换。*/
		__getset(0,__proto,'skewY',function(){
			return this._tf.skewY;
			},function(value){
			this.setSkewY(value);
		});

		/**定义旋转角度。*/
		__getset(0,__proto,'rotate',function(){
			return this._tf.rotate;
			},function(value){
			this.setRotate(value);
		});

		/**定义沿着 X 轴的 2D 倾斜转换。*/
		__getset(0,__proto,'skewX',function(){
			return this._tf.skewX;
			},function(value){
			this.setSkewX(value);
		});

		/**表示元素的左内边距。*/
		__getset(0,__proto,'paddingLeft',function(){
			return 0;
		});

		/**表示元素的上内边距。*/
		__getset(0,__proto,'paddingTop',function(){
			return 0;
		});

		/**是否为绝对定位。*/
		__getset(0,__proto,'absolute',function(){
			return true;
		});

		Style.__init__=function(){
			Style._TF_EMPTY=new TransformInfo();
			Style.EMPTY=new Style();
		}

		Style.EMPTY=null
		Style._TF_EMPTY=null
		return Style;
	})()


	//class laya.display.css.Font
	var Font=(function(){
		function Font(src){
			this._type=0;
			this._weight=0;
			this._decoration=null;
			this._text=null;
			this.indent=0;
			this._color=Color$1.create(Font.defaultColor);
			this.family=Font.defaultFamily;
			this.stroke=Font._STROKE;
			this.size=Font.defaultSize;
			src && src!==Font.EMPTY && src.copyTo(this);
		}

		__class(Font,'laya.display.css.Font');
		var __proto=Font.prototype;
		/**
		*字体样式字符串。
		*/
		__proto.set=function(value){
			this._text=null;
			var strs=value.split(' ');
			for (var i=0,n=strs.length;i < n;i++){
				var str=strs[i];
				switch (str){
					case 'italic':
						this.italic=true;
						continue ;
					case 'bold':
						this.bold=true;
						continue ;
					}
				if (str.indexOf('px')> 0){
					this.size=parseInt(str);
					this.family=strs[i+1];
					i++;
					continue ;
				}
			}
		}

		/**
		*返回字体样式字符串。
		*@return 字体样式字符串。
		*/
		__proto.toString=function(){
			this._text=""
			this.italic && (this._text+="italic ");
			this.bold && (this._text+="bold ");
			return this._text+=this.size+"px "+this.family;
		}

		/**
		*将当前的属性值复制到传入的 <code>Font</code> 对象。
		*@param dec 一个 Font 对象。
		*/
		__proto.copyTo=function(dec){
			dec._type=this._type;
			dec._text=this._text;
			dec._weight=this._weight;
			dec._color=this._color;
			dec.family=this.family;
			dec.stroke=this.stroke !=Font._STROKE ? this.stroke.slice():Font._STROKE;
			dec.indent=this.indent;
			dec.size=this.size;
		}

		/**
		*表示是否为密码格式。
		*/
		__getset(0,__proto,'password',function(){
			return (this._type & 0x400)!==0;
			},function(value){
			value ? (this._type |=0x400):(this._type &=~0x400);
		});

		/**
		*表示颜色字符串。
		*/
		__getset(0,__proto,'color',function(){
			return this._color.strColor;
			},function(value){
			this._color=Color$1.create(value);
		});

		/**
		*表示是否为斜体。
		*/
		__getset(0,__proto,'italic',function(){
			return (this._type & 0x200)!==0;
			},function(value){
			value ? (this._type |=0x200):(this._type &=~0x200);
		});

		/**
		*表示是否为粗体。
		*/
		__getset(0,__proto,'bold',function(){
			return (this._type & 0x800)!==0;
			},function(value){
			value ? (this._type |=0x800):(this._type &=~0x800);
		});

		/**
		*文本的粗细。
		*/
		__getset(0,__proto,'weight',function(){
			return ""+this._weight;
			},function(value){
			var weight=0;
			switch (value){
				case 'normal':
					break ;
				case 'bold':
					this.bold=true;
					weight=700;
					break ;
				case 'bolder':
					weight=800;
					break ;
				case 'lighter':
					weight=100;
					break ;
				default :
					weight=parseInt(value);
				}
			this._weight=weight;
			this._text=null;
		});

		/**
		*规定添加到文本的修饰。
		*/
		__getset(0,__proto,'decoration',function(){
			return this._decoration ? this._decoration.value :"none";
			},function(value){
			var strs=value.split(' ');
			this._decoration || (this._decoration={});
			switch (strs[0]){
				case '_':
					this._decoration.type='underline'
					break ;
				case '-':
					this._decoration.type='line-through'
					break ;
				case 'overline':
					this._decoration.type='overline'
					break ;
				default :
					this._decoration.type=strs[0];
				}
			strs[1] && (this._decoration.color=Color$1.create(strs));
			this._decoration.value=value;
		});

		Font.__init__=function(){
			Font.EMPTY=new Font(null);
		}

		Font.EMPTY=null
		Font.defaultColor="#000000";
		Font.defaultSize=12;
		Font.defaultFamily="Arial";
		Font.defaultFont="12px Arial";
		Font._STROKE=[0,"#000000"];
		Font._ITALIC=0x200;
		Font._PASSWORD=0x400;
		Font._BOLD=0x800;
		return Font;
	})()


	//class laya.display.css.TransformInfo
	var TransformInfo=(function(){
		function TransformInfo(){
			this.translateX=0;
			this.translateY=0;
			this.scaleX=1;
			this.scaleY=1;
			this.rotate=0;
			this.skewX=0;
			this.skewY=0;
		}

		__class(TransformInfo,'laya.display.css.TransformInfo');
		return TransformInfo;
	})()


	//class laya.display.GraphicsBounds
	var GraphicsBounds=(function(){
		function GraphicsBounds(){
			//this._temp=null;
			//this._bounds=null;
			//this._rstBoundPoints=null;
			this._cacheBoundsType=false;
			//this._graphics=null;
		}

		__class(GraphicsBounds,'laya.display.GraphicsBounds');
		var __proto=GraphicsBounds.prototype;
		/**
		*销毁
		*/
		__proto.destroy=function(){
			this._graphics=null;
			this._temp=null;
			this._rstBoundPoints=null;
			this._bounds=null;
		}

		/**
		*重置数据
		*/
		__proto.reset=function(){
			this._temp && (this._temp.length=0);
		}

		/**
		*获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。
		*@param realSize （可选）使用图片的真实大小，默认为false
		*@return 位置与宽高组成的 一个 Rectangle 对象。
		*/
		__proto.getBounds=function(realSize){
			(realSize===void 0)&& (realSize=false);
			if (!this._bounds || !this._temp || this._temp.length < 1 || realSize !=this._cacheBoundsType){
				this._bounds=Rectangle._getWrapRec(this.getBoundPoints(realSize),this._bounds)
			}
			this._cacheBoundsType=realSize;
			return this._bounds;
		}

		/**
		*@private
		*@param realSize （可选）使用图片的真实大小，默认为false
		*获取端点列表。
		*/
		__proto.getBoundPoints=function(realSize){
			(realSize===void 0)&& (realSize=false);
			if (!this._temp || this._temp.length < 1 || realSize !=this._cacheBoundsType)
				this._temp=this._getCmdPoints(realSize);
			this._cacheBoundsType=realSize;
			return this._rstBoundPoints=Utils.copyArray(this._rstBoundPoints,this._temp);
		}

		__proto._getCmdPoints=function(realSize){
			(realSize===void 0)&& (realSize=false);
			var context=Render._context;
			var cmds=this._graphics.cmds;
			var rst;
			rst=this._temp || (this._temp=[]);
			rst.length=0;
			if (!cmds && this._graphics._one !=null){
				GraphicsBounds._tempCmds.length=0;
				GraphicsBounds._tempCmds.push(this._graphics._one);
				cmds=GraphicsBounds._tempCmds;
			}
			if (!cmds)
				return rst;
			var matrixs;
			matrixs=GraphicsBounds._tempMatrixArrays;
			matrixs.length=0;
			var tMatrix=GraphicsBounds._initMatrix;
			tMatrix.identity();
			var tempMatrix=GraphicsBounds._tempMatrix;
			var cmd;
			var tex;
			var wRate=NaN;
			var hRate=NaN;
			var oWidth=NaN;
			var oHeight=NaN;
			var offX=NaN;
			var offY=NaN;
			for (var i=0,n=cmds.length;i < n;i++){
				cmd=cmds[i];
				if (!cmd.callee)continue ;
				switch (cmd.callee){
					case context._save:
					case 7:
						matrixs.push(tMatrix);
						tMatrix=tMatrix.clone();
						break ;
					case context._restore:
					case 8:
						tMatrix=matrixs.pop();
						break ;
					case context._scale:
					case 5:
						tempMatrix.identity();
						tempMatrix.translate(-cmd[2],-cmd[3]);
						tempMatrix.scale(cmd[0],cmd[1]);
						tempMatrix.translate(cmd[2],cmd[3]);
						this._switchMatrix(tMatrix,tempMatrix);
						break ;
					case context._rotate:
					case 3:
						tempMatrix.identity();
						tempMatrix.translate(-cmd[1],-cmd[2]);
						tempMatrix.rotate(cmd[0]);
						tempMatrix.translate(cmd[1],cmd[2]);
						this._switchMatrix(tMatrix,tempMatrix);
						break ;
					case context._translate:
					case 6:
						tempMatrix.identity();
						tempMatrix.translate(cmd[0],cmd[1]);
						this._switchMatrix(tMatrix,tempMatrix);
						break ;
					case context._transform:
					case 4:
						tempMatrix.identity();
						tempMatrix.translate(-cmd[1],-cmd[2]);
						tempMatrix.concat(cmd[0]);
						tempMatrix.translate(cmd[1],cmd[2]);
						this._switchMatrix(tMatrix,tempMatrix);
						break ;
					case 16:
					case 24:
						GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[0],cmd[1],cmd[2],cmd[3]),tMatrix);
						break ;
					case 17:
						tMatrix.copyTo(tempMatrix);
						tempMatrix.concat(cmd[4]);
						GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[0],cmd[1],cmd[2],cmd[3]),tempMatrix);
						break ;
					case context._drawTexture:
						tex=cmd[0];
						if (realSize){
							if (cmd[3] && cmd[4]){
								GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[1],cmd[2],cmd[3],cmd[4]),tMatrix);
								}else {
								tex=cmd[0];
								GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[1],cmd[2],tex.width,tex.height),tMatrix);
							}
							}else {
							wRate=(cmd[3] || tex.sourceWidth)/ tex.width;
							hRate=(cmd[4] || tex.sourceHeight)/ tex.height;
							oWidth=wRate *tex.sourceWidth;
							oHeight=hRate *tex.sourceHeight;
							offX=tex.offsetX > 0 ? tex.offsetX :0;
							offY=tex.offsetY > 0 ? tex.offsetY :0;
							offX *=wRate;
							offY *=hRate;
							GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[1]-offX,cmd[2]-offY,oWidth,oHeight),tMatrix);
						}
						break ;
					case context._fillTexture:
						if (cmd[3] && cmd[4]){
							GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[1],cmd[2],cmd[3],cmd[4]),tMatrix);
							}else {
							tex=cmd[0];
							GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[1],cmd[2],tex.width,tex.height),tMatrix);
						}
						break ;
					case context._drawTextureWithTransform:;
						var drawMatrix;
						if (cmd[5]){
							tMatrix.copyTo(tempMatrix);
							tempMatrix.concat(cmd[5]);
							drawMatrix=tempMatrix;
							}else {
							drawMatrix=tMatrix;
						}
						if (realSize){
							if (cmd[3] && cmd[4]){
								GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[1],cmd[2],cmd[3],cmd[4]),drawMatrix);
								}else {
								tex=cmd[0];
								GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[1],cmd[2],tex.width,tex.height),drawMatrix);
							}
							}else {
							tex=cmd[0];
							wRate=(cmd[3] || tex.sourceWidth)/ tex.width;
							hRate=(cmd[4] || tex.sourceHeight)/ tex.height;
							oWidth=wRate *tex.sourceWidth;
							oHeight=hRate *tex.sourceHeight;
							offX=tex.offsetX > 0 ? tex.offsetX :0;
							offY=tex.offsetY > 0 ? tex.offsetY :0;
							offX *=wRate;
							offY *=hRate;
							GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[1]-offX,cmd[2]-offY,oWidth,oHeight),drawMatrix);
						}
						break ;
					case context._drawRect:
					case 13:
						GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[0],cmd[1],cmd[2],cmd[3]),tMatrix);
						break ;
					case context._drawCircle:
					case context._fillCircle:
					case 14:
						GraphicsBounds._addPointArrToRst(rst,Rectangle._getBoundPointS(cmd[0]-cmd[2],cmd[1]-cmd[2],cmd[2]+cmd[2],cmd[2]+cmd[2]),tMatrix);
						break ;
					case context._drawLine:
					case 20:
						GraphicsBounds._tempPoints.length=0;
						var lineWidth=NaN;
						lineWidth=cmd[5] *0.5;
						if (cmd[0]==cmd[2]){
							GraphicsBounds._tempPoints.push(cmd[0]+lineWidth,cmd[1],cmd[2]+lineWidth,cmd[3],cmd[0]-lineWidth,cmd[1],cmd[2]-lineWidth,cmd[3]);
							}else if (cmd[1]==cmd[3]){
							GraphicsBounds._tempPoints.push(cmd[0],cmd[1]+lineWidth,cmd[2],cmd[3]+lineWidth,cmd[0],cmd[1]-lineWidth,cmd[2],cmd[3]-lineWidth);
							}else {
							GraphicsBounds._tempPoints.push(cmd[0],cmd[1],cmd[2],cmd[3]);
						}
						GraphicsBounds._addPointArrToRst(rst,GraphicsBounds._tempPoints,tMatrix);
						break ;
					case context._drawCurves:
					case 22:
						GraphicsBounds._addPointArrToRst(rst,Bezier.I.getBezierPoints(cmd[2]),tMatrix,cmd[0],cmd[1]);
						break ;
					case context._drawPoly:
					case context._drawLines:
					case 18:
						GraphicsBounds._addPointArrToRst(rst,cmd[2],tMatrix,cmd[0],cmd[1]);
						break ;
					case context._drawPath:
					case 19:
						GraphicsBounds._addPointArrToRst(rst,this._getPathPoints(cmd[2]),tMatrix,cmd[0],cmd[1]);
						break ;
					case context._drawPie:
					case 15:
						GraphicsBounds._addPointArrToRst(rst,this._getPiePoints(cmd[0],cmd[1],cmd[2],cmd[3],cmd[4]),tMatrix);
						break ;
					}
			}
			if (rst.length > 200){
				rst=Utils.copyArray(rst,Rectangle._getWrapRec(rst)._getBoundPoints());
			}else if (rst.length > 8)
			rst=GrahamScan.scanPList(rst);
			return rst;
		}

		__proto._switchMatrix=function(tMatix,tempMatrix){
			tempMatrix.concat(tMatix);
			tempMatrix.copyTo(tMatix);
		}

		__proto._getPiePoints=function(x,y,radius,startAngle,endAngle){
			var rst=GraphicsBounds._tempPoints;
			GraphicsBounds._tempPoints.length=0;
			rst.push(x,y);
			var delta=(endAngle-startAngle)% (2 *Math.PI);
			var segnum=10;
			var step=delta / segnum;
			var i=NaN;
			var angle=startAngle;
			for (i=0;i <=segnum;i++){
				rst.push(x+radius *Math.cos(angle),y+radius *Math.sin(angle));
				angle+=step;
			}
			return rst;
		}

		__proto._getPathPoints=function(paths){
			var i=0,len=0;
			var rst=GraphicsBounds._tempPoints;
			rst.length=0;
			len=paths.length;
			var tCMD;
			for (i=0;i < len;i++){
				tCMD=paths[i];
				if (tCMD.length > 1){
					rst.push(tCMD[1],tCMD[2]);
					if (tCMD.length > 3){
						rst.push(tCMD[3],tCMD[4]);
					}
				}
			}
			return rst;
		}

		GraphicsBounds._addPointArrToRst=function(rst,points,matrix,dx,dy){
			(dx===void 0)&& (dx=0);
			(dy===void 0)&& (dy=0);
			var i=0,len=0;
			len=points.length;
			for (i=0;i < len;i+=2){
				GraphicsBounds._addPointToRst(rst,points[i]+dx,points[i+1]+dy,matrix);
			}
		}

		GraphicsBounds._addPointToRst=function(rst,x,y,matrix){
			var _tempPoint=Point.TEMP;
			_tempPoint.setTo(x ? x :0,y ? y :0);
			matrix.transformPoint(_tempPoint);
			rst.push(_tempPoint.x,_tempPoint.y);
		}

		GraphicsBounds._tempPoints=[];
		GraphicsBounds._tempMatrixArrays=[];
		GraphicsBounds._tempCmds=[];
		__static(GraphicsBounds,
		['_tempMatrix',function(){return this._tempMatrix=new Matrix();},'_initMatrix',function(){return this._initMatrix=new Matrix();}
		]);
		return GraphicsBounds;
	})()


	//class laya.events.Event
	var Event=(function(){
		function Event(){
			//this.type=null;
			//this.nativeEvent=null;
			//this.target=null;
			//this.currentTarget=null;
			//this._stoped=false;
			//this.touchId=0;
			//this.keyCode=0;
			//this.delta=0;
		}

		__class(Event,'laya.events.Event');
		var __proto=Event.prototype;
		/**
		*设置事件数据。
		*@param type 事件类型。
		*@param currentTarget 事件目标触发对象。
		*@param target 事件当前冒泡对象。
		*@return 返回当前 Event 对象。
		*/
		__proto.setTo=function(type,currentTarget,target){
			this.type=type;
			this.currentTarget=currentTarget;
			this.target=target;
			return this;
		}

		/**
		*阻止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 (currentTarget)中的任何事件侦听器。
		*/
		__proto.stopPropagation=function(){
			this._stoped=true;
		}

		/**鼠标在 Stage 上的 Y 轴坐标*/
		__getset(0,__proto,'stageY',function(){
			return Laya.stage.mouseY;
		});

		/**
		*包含按下或释放的键的字符代码值。字符代码值为英文键盘值。
		*/
		__getset(0,__proto,'charCode',function(){
			return this.nativeEvent.charCode;
		});

		/**
		*触摸点列表。
		*/
		__getset(0,__proto,'touches',function(){
			var arr=this.nativeEvent.touches;
			if (arr){
				var stage=Laya.stage;
				for (var i=0,n=arr.length;i < n;i++){
					var e=arr[i];
					var point=Point.TEMP;
					point.setTo(e.clientX,e.clientY);
					stage._canvasTransform.invertTransformPoint(point);
					stage.transform.invertTransformPoint(point);
					e.stageX=point.x;
					e.stageY=point.y;
				}
			}
			return arr;
		});

		/**
		*表示键在键盘上的位置。这对于区分在键盘上多次出现的键非常有用。<br>
		*例如，您可以根据此属性的值来区分左 Shift 键和右 Shift 键：左 Shift 键的值为 KeyLocation.LEFT，右 Shift 键的值为 KeyLocation.RIGHT。另一个示例是区分标准键盘 (KeyLocation.STANDARD)与数字键盘 (KeyLocation.NUM_PAD)上按下的数字键。
		*/
		__getset(0,__proto,'keyLocation',function(){
			return this.nativeEvent.keyLocation;
		});

		/**
		*表示 Ctrl 键是处于活动状态 (true)还是非活动状态 (false)。
		*/
		__getset(0,__proto,'ctrlKey',function(){
			return this.nativeEvent.ctrlKey;
		});

		/**
		*表示 Alt 键是处于活动状态 (true)还是非活动状态 (false)。
		*/
		__getset(0,__proto,'altKey',function(){
			return this.nativeEvent.altKey;
		});

		/**
		*表示 Shift 键是处于活动状态 (true)还是非活动状态 (false)。
		*/
		__getset(0,__proto,'shiftKey',function(){
			return this.nativeEvent.shiftKey;
		});

		/**鼠标在 Stage 上的 X 轴坐标*/
		__getset(0,__proto,'stageX',function(){
			return Laya.stage.mouseX;
		});

		Event.EMPTY=new Event();
		Event.MOUSE_DOWN="mousedown";
		Event.MOUSE_UP="mouseup";
		Event.CLICK="click";
		Event.RIGHT_MOUSE_DOWN="rightmousedown";
		Event.RIGHT_MOUSE_UP="rightmouseup";
		Event.RIGHT_CLICK="rightclick";
		Event.MOUSE_MOVE="mousemove";
		Event.MOUSE_OVER="mouseover";
		Event.MOUSE_OUT="mouseout";
		Event.MOUSE_WHEEL="mousewheel";
		Event.ROLL_OVER="mouseover";
		Event.ROLL_OUT="mouseout";
		Event.DOUBLE_CLICK="doubleclick";
		Event.CHANGE="change";
		Event.CHANGED="changed";
		Event.RESIZE="resize";
		Event.ADDED="added";
		Event.REMOVED="removed";
		Event.DISPLAY="display";
		Event.UNDISPLAY="undisplay";
		Event.ERROR="error";
		Event.COMPLETE="complete";
		Event.LOADED="loaded";
		Event.PROGRESS="progress";
		Event.INPUT="input";
		Event.RENDER="render";
		Event.OPEN="open";
		Event.MESSAGE="message";
		Event.CLOSE="close";
		Event.KEY_DOWN="keydown";
		Event.KEY_PRESS="keypress";
		Event.KEY_UP="keyup";
		Event.FRAME="enterframe";
		Event.DRAG_START="dragstart";
		Event.DRAG_MOVE="dragmove";
		Event.DRAG_END="dragend";
		Event.ENTER="enter";
		Event.SELECT="select";
		Event.BLUR="blur";
		Event.FOCUS="focus";
		Event.VISIBILITY_CHANGE="visibilitychange";
		Event.FOCUS_CHANGE="focuschange";
		Event.PLAYED="played";
		Event.PAUSED="paused";
		Event.STOPPED="stopped";
		Event.START="start";
		Event.END="end";
		Event.ENABLE_CHANGED="enablechanged";
		Event.ACTIVE_IN_HIERARCHY_CHANGED="activeinhierarchychanged";
		Event.COMPONENT_ADDED="componentadded";
		Event.COMPONENT_REMOVED="componentremoved";
		Event.LAYER_CHANGED="layerchanged";
		Event.HIERARCHY_LOADED="hierarchyloaded";
		Event.RECOVERED="recovered";
		Event.RELEASED="released";
		Event.LINK="link";
		Event.LABEL="label";
		Event.FULL_SCREEN_CHANGE="fullscreenchange";
		Event.DEVICE_LOST="devicelost";
		Event.MESH_CHANGED="meshchanged";
		Event.MATERIAL_CHANGED="materialchanged";
		Event.WORLDMATRIX_NEEDCHANGE="worldmatrixneedchanged";
		Event.ANIMATION_CHANGED="animationchanged";
		Event.TRIGGER_ENTER="triggerenter";
		Event.TRIGGER_STAY="triggerstay";
		Event.TRIGGER_EXIT="triggerexit";
		Event.TRAIL_FILTER_CHANGE="trailfilterchange";
		Event.DOMINO_FILTER_CHANGE="dominofilterchange";
		return Event;
	})()


	//class laya.events.KeyBoardManager
	var KeyBoardManager=(function(){
		function KeyBoardManager(){};
		__class(KeyBoardManager,'laya.events.KeyBoardManager');
		KeyBoardManager.__init__=function(){
			KeyBoardManager._addEvent("keydown");
			KeyBoardManager._addEvent("keypress");
			KeyBoardManager._addEvent("keyup");
		}

		KeyBoardManager._addEvent=function(type){
			Browser.document.addEventListener(type,function(e){
				laya.events.KeyBoardManager._dispatch(e,type);
			},true);
		}

		KeyBoardManager._dispatch=function(e,type){
			if (!KeyBoardManager.enabled)return;
			KeyBoardManager._event._stoped=false;
			KeyBoardManager._event.nativeEvent=e;
			KeyBoardManager._event.keyCode=e.keyCode || e.which || e.charCode;
			if (type==="keydown")KeyBoardManager._pressKeys[KeyBoardManager._event.keyCode]=true;
			else if (type==="keyup")KeyBoardManager._pressKeys[KeyBoardManager._event.keyCode]=null;
			var target=(Laya.stage.focus && (Laya.stage.focus.event !=null)&& Laya.stage.focus.displayedInStage)? Laya.stage.focus :Laya.stage;
			var ct=target;
			while (ct){
				ct.event(type,KeyBoardManager._event.setTo(type,ct,target));
				ct=ct.parent;
			}
		}

		KeyBoardManager.hasKeyDown=function(key){
			return KeyBoardManager._pressKeys[key];
		}

		KeyBoardManager._pressKeys={};
		KeyBoardManager.enabled=true;
		__static(KeyBoardManager,
		['_event',function(){return this._event=new Event();}
		]);
		return KeyBoardManager;
	})()


	//class laya.events.MouseManager
	var MouseManager=(function(){
		function MouseManager(){
			this.mouseX=0;
			this.mouseY=0;
			this.disableMouseEvent=false;
			this.mouseDownTime=0;
			this.mouseMoveAccuracy=2;
			this._stage=null;
			this._target=null;
			this._lastMoveTimer=0;
			this._isLeftMouse=false;
			this._eventList=[];
			this._touchIDs={};
			this._id=1;
			this._tTouchID=0;
			this._event=new Event();
			this._matrix=new Matrix();
			this._point=new Point();
			this._rect=new Rectangle();
			this._prePoint=new Point();
			this._curTouchID=NaN;
		}

		__class(MouseManager,'laya.events.MouseManager');
		var __proto=MouseManager.prototype;
		/**
		*@private
		*初始化。
		*/
		__proto.__init__=function(stage,canvas){
			var _$this=this;
			this._stage=stage;
			var _this=this;
			var list=this._eventList;
			canvas.oncontextmenu=function (e){
				if (MouseManager.enabled)return false;
			}
			canvas.addEventListener('mousedown',function(e){
				if (MouseManager.enabled){
					if(!Browser.onIE)e.preventDefault();
					list.push(e);
					_this.mouseDownTime=Browser.now();
				}
			});
			canvas.addEventListener('mouseup',function(e){
				if (MouseManager.enabled){
					e.preventDefault();
					list.push(e);
					_this.mouseDownTime=-Browser.now();
				}
			},true);
			canvas.addEventListener('mousemove',function(e){
				if (MouseManager.enabled){
					e.preventDefault();
					var now=Browser.now();
					if (now-_this._lastMoveTimer < 10)return;
					_this._lastMoveTimer=now;
					list.push(e);
				}
			},true);
			canvas.addEventListener("mouseout",function(e){
				if (MouseManager.enabled)list.push(e);
			})
			canvas.addEventListener("mouseover",function(e){
				if (MouseManager.enabled)list.push(e);
			})
			canvas.addEventListener("touchstart",function(e){
				if (MouseManager.enabled){
					list.push(e);
					if (!MouseManager._isFirstTouch&&!Input.isInputting)e.preventDefault();
					_this.mouseDownTime=Browser.now();
				}
			});
			canvas.addEventListener("touchend",function(e){
				if (MouseManager.enabled){
					if (!MouseManager._isFirstTouch&&!Input.isInputting)e.preventDefault();
					MouseManager._isFirstTouch=false;
					list.push(e);
					_this.mouseDownTime=-Browser.now();
					}else {
					_$this._curTouchID=NaN;
				}
			},true);
			canvas.addEventListener("touchmove",function(e){
				if (MouseManager.enabled){
					e.preventDefault();
					list.push(e);
				}
			},true);
			canvas.addEventListener("touchcancel",function(e){
				if (MouseManager.enabled){
					e.preventDefault();
					list.push(e);
					}else {
					_$this._curTouchID=NaN;
				}
			},true);
			canvas.addEventListener('mousewheel',function(e){
				if (MouseManager.enabled)list.push(e);
			});
			canvas.addEventListener('DOMMouseScroll',function(e){
				if (MouseManager.enabled)list.push(e);
			});
		}

		__proto.initEvent=function(e,nativeEvent){
			var _this=this;
			_this._event._stoped=false;
			_this._event.nativeEvent=nativeEvent || e;
			_this._target=null;
			this._point.setTo(e.pageX || e.clientX,e.pageY || e.clientY);
			this._stage._canvasTransform.invertTransformPoint(this._point);
			_this.mouseX=this._point.x;
			_this.mouseY=this._point.y;
			_this._event.touchId=e.identifier || 0;
			this._tTouchID=_this._event.touchId;
			var evt;
			evt=TouchManager.I._event;
			evt._stoped=false;
			evt.nativeEvent=_this._event.nativeEvent;
			evt.touchId=_this._event.touchId;
		}

		__proto.checkMouseWheel=function(e){
			this._event.delta=e.wheelDelta ? e.wheelDelta *0.025 :-e.detail;
			var _lastOvers=TouchManager.I.getLastOvers();
			for (var i=0,n=_lastOvers.length;i < n;i++){
				var ele=_lastOvers[i];
				ele.event("mousewheel",this._event.setTo("mousewheel",ele,this._target));
			}
		}

		// _stage.event(Event.MOUSE_WHEEL,_event.setTo(Event.MOUSE_WHEEL,_stage,_target));
		__proto.onMouseMove=function(ele){
			TouchManager.I.onMouseMove(ele,this._tTouchID);
		}

		__proto.onMouseDown=function(ele){
			if (Input.isInputting && Laya.stage.focus && Laya.stage.focus["focus"] && !Laya.stage.focus.contains(this._target)){
				var pre_input=Laya.stage.focus['_tf'] || Laya.stage.focus;
				var new_input=ele['_tf'] || ele;
				if ((new_input instanceof laya.display.Input )&& new_input.multiline==pre_input.multiline)
					pre_input['_focusOut']();
				else
				pre_input.focus=false;
			}
			TouchManager.I.onMouseDown(ele,this._tTouchID,this._isLeftMouse);
		}

		__proto.onMouseUp=function(ele){
			TouchManager.I.onMouseUp(ele,this._tTouchID,this._isLeftMouse);
		}

		__proto.check=function(sp,mouseX,mouseY,callBack){
			this._point.setTo(mouseX,mouseY);
			sp.fromParentPoint(this._point);
			mouseX=this._point.x;
			mouseY=this._point.y;
			var scrollRect=sp.scrollRect;
			if (scrollRect){
				this._rect.setTo(scrollRect.x,scrollRect.y,scrollRect.width,scrollRect.height);
				if (!this._rect.contains(mouseX,mouseY))return false;
			}
			if (!this.disableMouseEvent){
				if (sp.hitTestPrior && !sp.mouseThrough && !this.hitTest(sp,mouseX,mouseY)){
					return false;
				}
				for (var i=sp._childs.length-1;i >-1;i--){
					var child=sp._childs[i];
					if (!child.destroyed && child.mouseEnabled && child.visible){
						if (this.check(child,mouseX,mouseY,callBack))return true;
					}
				}
			};
			var isHit=(sp.hitTestPrior && !sp.mouseThrough && !this.disableMouseEvent)? true :this.hitTest(sp,mouseX,mouseY);
			if (isHit){
				this._target=sp;
				callBack.call(this,sp);
				}else if (callBack===this.onMouseUp && sp===this._stage){
				this._target=this._stage;
				callBack.call(this,this._target);
			}
			return isHit;
		}

		__proto.hitTest=function(sp,mouseX,mouseY){
			var isHit=false;
			if (sp.scrollRect){
				mouseX-=sp.scrollRect.x;
				mouseY-=sp.scrollRect.y;
			}
			if ((sp.hitArea instanceof laya.utils.HitArea )){
				return sp.hitArea.isHit(mouseX,mouseY);
			}
			if (sp.width > 0 && sp.height > 0 || sp.mouseThrough || sp.hitArea){
				if (!sp.mouseThrough){
					var hitRect=this._rect;
					if (sp.hitArea)hitRect=sp.hitArea;
					else hitRect.setTo(0,0,sp.width,sp.height);
					isHit=hitRect.contains(mouseX,mouseY);
					}else {
					isHit=sp.getGraphicBounds().contains(mouseX,mouseY);
				}
			}
			return isHit;
		}

		/**
		*执行事件处理。
		*/
		__proto.runEvent=function(){
			var len=this._eventList.length;
			if (!len)return;
			var _this=this;
			var i=0,j=0,n=0,touch;
			while (i < len){
				var evt=this._eventList[i];
				if (evt.type!=='mousemove')this._prePoint.x=this._prePoint.y=-1000000;
				switch (evt.type){
					case 'mousedown':
						this._touchIDs[0]=this._id++;
						if (!MouseManager._isTouchRespond){
							_this._isLeftMouse=evt.button===0;
							_this.initEvent(evt);
							_this.check(_this._stage,_this.mouseX,_this.mouseY,_this.onMouseDown);
						}else
						MouseManager._isTouchRespond=false;
						break ;
					case 'mouseup':
						_this._isLeftMouse=evt.button===0;
						_this.initEvent(evt);
						_this.check(_this._stage,_this.mouseX,_this.mouseY,_this.onMouseUp);
						break ;
					case 'mousemove':
						if ((Math.abs(this._prePoint.x-evt.clientX)+Math.abs(this._prePoint.y-evt.clientY))>=this.mouseMoveAccuracy){
							this._prePoint.x=evt.clientX;
							this._prePoint.y=evt.clientY;
							_this.initEvent(evt);
							_this.check(_this._stage,_this.mouseX,_this.mouseY,_this.onMouseMove);
						}
						break ;
					case "touchstart":
						MouseManager._isTouchRespond=true;
						_this._isLeftMouse=true;
						var touches=evt.changedTouches;
						for (j=0,n=touches.length;j < n;j++){
							touch=touches[j];
							if (MouseManager.multiTouchEnabled || isNaN(this._curTouchID)){
								this._curTouchID=touch.identifier;
								if (this._id % 200===0)this._touchIDs={};
								this._touchIDs[touch.identifier]=this._id++;
								_this.initEvent(touch,evt);
								_this.check(_this._stage,_this.mouseX,_this.mouseY,_this.onMouseDown);
							}
						}
						break ;
					case "touchend":
					case "touchcancel":
						MouseManager._isTouchRespond=true;
						_this._isLeftMouse=true;
						var touchends=evt.changedTouches;
						for (j=0,n=touchends.length;j < n;j++){
							touch=touchends[j];
							if (MouseManager.multiTouchEnabled || touch.identifier==this._curTouchID){
								this._curTouchID=NaN;
								_this.initEvent(touch,evt);
								var isChecked=false;
								isChecked=_this.check(_this._stage,_this.mouseX,_this.mouseY,_this.onMouseUp);
								if (!isChecked){
									_this.onMouseUp(null);
								}
							}
						}
						break ;
					case "touchmove":;
						var touchemoves=evt.changedTouches;
						for (j=0,n=touchemoves.length;j < n;j++){
							touch=touchemoves[j];
							if (MouseManager.multiTouchEnabled || touch.identifier==this._curTouchID){
								_this.initEvent(touch,evt);
								_this.check(_this._stage,_this.mouseX,_this.mouseY,_this.onMouseMove);
							}
						}
						break ;
					case "wheel":
					case "mousewheel":
					case "DOMMouseScroll":
						_this.checkMouseWheel(evt);
						break ;
					case "mouseout":
						TouchManager.I.stageMouseOut();
						break ;
					case "mouseover":
						_this._stage.event("mouseover",_this._event.setTo("mouseover",_this._stage,_this._stage));
						break ;
					}
				i++;
			}
			this._eventList.length=0;
		}

		MouseManager.enabled=true;
		MouseManager.multiTouchEnabled=true;
		MouseManager._isTouchRespond=false;
		MouseManager._isFirstTouch=true;
		__static(MouseManager,
		['instance',function(){return this.instance=new MouseManager();}
		]);
		return MouseManager;
	})()


	//class laya.events.TouchManager
	var TouchManager=(function(){
		function TouchManager(){
			this.preOvers=[];
			this.preDowns=[];
			this.preRightDowns=[];
			this.enable=true;
			this._lastClickTime=0;
			this._event=new Event();
		}

		__class(TouchManager,'laya.events.TouchManager');
		var __proto=TouchManager.prototype;
		__proto._clearTempArrs=function(){
			TouchManager._oldArr.length=0;
			TouchManager._newArr.length=0;
			TouchManager._tEleArr.length=0;
		}

		/**
		*从touch表里查找对应touchID的数据
		*@param touchID touch ID
		*@param arr touch表
		*@return
		*
		*/
		__proto.getTouchFromArr=function(touchID,arr){
			var i=0,len=0;
			len=arr.length;
			var tTouchO;
			for (i=0;i < len;i++){
				tTouchO=arr[i];
				if (tTouchO.id==touchID){
					return tTouchO;
				}
			}
			return null;
		}

		/**
		*从touch表里移除一个元素
		*@param touchID touch ID
		*@param arr touch表
		*
		*/
		__proto.removeTouchFromArr=function(touchID,arr){
			var i=0;
			for (i=arr.length-1;i >=0;i--){
				if (arr[i].id==touchID){
					arr.splice(i,1);
				}
			}
		}

		/**
		*创建一个touch数据
		*@param ele 当前的根节点
		*@param touchID touchID
		*@return
		*
		*/
		__proto.createTouchO=function(ele,touchID){
			var rst;
			rst=Pool.getItem("TouchData")|| {};
			rst.id=touchID;
			rst.tar=ele;
			return rst;
		}

		/**
		*处理touchStart
		*@param ele 根节点
		*@param touchID touchID
		*@param isLeft （可选）是否为左键
		*/
		__proto.onMouseDown=function(ele,touchID,isLeft){
			(isLeft===void 0)&& (isLeft=false);
			if (!this.enable)
				return;
			var preO;
			var tO;
			var arrs;
			preO=this.getTouchFromArr(touchID,this.preOvers);
			arrs=this.getEles(ele,null,TouchManager._tEleArr);
			if (!preO){
				tO=this.createTouchO(ele,touchID);
				this.preOvers.push(tO);
				}else {
				preO.tar=ele;
			}
			if (Browser.onMobile)
				this.sendEvents(arrs,"mouseover",touchID);
			var preDowns;
			preDowns=isLeft ? this.preDowns :this.preRightDowns;
			preO=this.getTouchFromArr(touchID,preDowns);
			if (!preO){
				tO=this.createTouchO(ele,touchID);
				preDowns.push(tO);
				}else {
				preO.tar=ele;
			}
			this.sendEvents(arrs,isLeft ? "mousedown" :"rightmousedown",touchID);
			this._clearTempArrs();
		}

		/**
		*派发事件。
		*@param eles 对象列表。
		*@param type 事件类型。
		*@param touchID （可选）touchID，默认为0。
		*/
		__proto.sendEvents=function(eles,type,touchID){
			(touchID===void 0)&& (touchID=0);
			var i=0,len=0;
			len=eles.length;
			this._event._stoped=false;
			var _target;
			_target=eles[0];
			var tE;
			for (i=0;i < len;i++){
				tE=eles[i];
				if (tE.destroyed)return;
				tE.event(type,this._event.setTo(type,tE,_target));
				if (this._event._stoped)
					break ;
			}
		}

		/**
		*获取对象列表。
		*@param start 起始节点。
		*@param end 结束节点。
		*@param rst 返回值。如果此值不为空，则将其赋值为计算结果，从而避免创建新数组；如果此值为空，则创建新数组返回。
		*@return Array 返回节点列表。
		*/
		__proto.getEles=function(start,end,rst){
			if (!rst){
				rst=[];
				}else {
				rst.length=0;
			}
			while (start && start !=end){
				rst.push(start);
				start=start.parent;
			}
			return rst;
		}

		/**
		*touchMove时处理out事件和over时间。
		*@param eleNew 新的根节点。
		*@param elePre 旧的根节点。
		*@param touchID （可选）touchID，默认为0。
		*/
		__proto.checkMouseOutAndOverOfMove=function(eleNew,elePre,touchID){
			(touchID===void 0)&& (touchID=0);
			if (elePre==eleNew)
				return;
			var tar;
			var arrs;
			var i=0,len=0;
			if (elePre.contains(eleNew)){
				arrs=this.getEles(eleNew,elePre,TouchManager._tEleArr);
				this.sendEvents(arrs,"mouseover",touchID);
				}else if (eleNew.contains(elePre)){
				arrs=this.getEles(elePre,eleNew,TouchManager._tEleArr);
				this.sendEvents(arrs,"mouseout",touchID);
				}else {
				arrs=TouchManager._tEleArr;
				arrs.length=0;
				var oldArr;
				oldArr=this.getEles(elePre,null,TouchManager._oldArr);
				var newArr;
				newArr=this.getEles(eleNew,null,TouchManager._newArr);
				len=oldArr.length;
				var tIndex=0;
				for (i=0;i < len;i++){
					tar=oldArr[i];
					tIndex=newArr.indexOf(tar);
					if (tIndex >=0){
						newArr.splice(tIndex,newArr.length-tIndex);
						break ;
						}else {
						arrs.push(tar);
					}
				}
				if (arrs.length > 0){
					this.sendEvents(arrs,"mouseout",touchID);
				}
				if (newArr.length > 0){
					this.sendEvents(newArr,"mouseover",touchID);
				}
			}
		}

		/**
		*处理TouchMove事件
		*@param ele 根节点
		*@param touchID touchID
		*
		*/
		__proto.onMouseMove=function(ele,touchID){
			if (!this.enable)
				return;
			var preO;
			preO=this.getTouchFromArr(touchID,this.preOvers);
			var arrs;
			var tO;
			if (!preO){
				arrs=this.getEles(ele,null,TouchManager._tEleArr);
				this.sendEvents(arrs,"mouseover",touchID);
				this.preOvers.push(this.createTouchO(ele,touchID));
				}else {
				this.checkMouseOutAndOverOfMove(ele,preO.tar);
				preO.tar=ele;
				arrs=this.getEles(ele,null,TouchManager._tEleArr);
			}
			this.sendEvents(arrs,"mousemove",touchID);
			this._clearTempArrs();
		}

		__proto.getLastOvers=function(){
			TouchManager._tEleArr.length=0;
			if (this.preOvers.length > 0 && this.preOvers[0].tar){
				return this.getEles(this.preOvers[0].tar,null,TouchManager._tEleArr);
			}
			TouchManager._tEleArr.push(Laya.stage);
			return TouchManager._tEleArr;
		}

		__proto.stageMouseOut=function(){
			var lastOvers;
			lastOvers=this.getLastOvers();
			this.preOvers.length=0;
			this.sendEvents(lastOvers,"mouseout",0);
		}

		/**
		*处理TouchEnd事件
		*@param ele 根节点
		*@param touchID touchID
		*@param isLeft 是否为左键
		*/
		__proto.onMouseUp=function(ele,touchID,isLeft){
			(isLeft===void 0)&& (isLeft=false);
			if (!this.enable)
				return;
			var preO;
			var tO;
			var arrs;
			var oldArr;
			var i=0,len=0;
			var tar;
			var sendArr;
			var onMobile=Browser.onMobile;
			arrs=this.getEles(ele,null,TouchManager._tEleArr);
			this.sendEvents(arrs,isLeft ? "mouseup" :"rightmouseup",touchID);
			var preDowns;
			preDowns=isLeft ? this.preDowns :this.preRightDowns;
			preO=this.getTouchFromArr(touchID,preDowns);
			if (!preO){
				}else {
				var isDouble=false;
				var now=Browser.now();
				isDouble=now-this._lastClickTime < 300;
				this._lastClickTime=now;
				if (ele==preO.tar){
					sendArr=arrs;
					}else {
					oldArr=this.getEles(preO.tar,null,TouchManager._oldArr);
					sendArr=TouchManager._newArr;
					sendArr.length=0;
					len=oldArr.length;
					for (i=0;i < len;i++){
						tar=oldArr[i];
						if (arrs.indexOf(tar)>=0){
							sendArr.push(tar);
						}
					}
				}
				if (sendArr.length > 0){
					this.sendEvents(sendArr,isLeft ? "click" :"rightclick",touchID);
				}
				if (isLeft && isDouble){
					this.sendEvents(sendArr,"doubleclick",touchID);
				}
				this.removeTouchFromArr(touchID,preDowns);
				preO.tar=null;
				Pool.recover("TouchData",preO);
			}
			preO=this.getTouchFromArr(touchID,this.preOvers);
			if (!preO){
				}else {
				if (onMobile){
					sendArr=this.getEles(preO.tar,null,sendArr);
					if (sendArr && sendArr.length > 0){
						this.sendEvents(sendArr,"mouseout",touchID);
					}
					this.removeTouchFromArr(touchID,this.preOvers);
					preO.tar=null;
					Pool.recover("TouchData",preO);
				}
			}
			this._clearTempArrs();
		}

		TouchManager._oldArr=[];
		TouchManager._newArr=[];
		TouchManager._tEleArr=[];
		__static(TouchManager,
		['I',function(){return this.I=new TouchManager();}
		]);
		return TouchManager;
	})()


	//class laya.filters.Filter
	var Filter=(function(){
		function Filter(){
			this._action=null;
		}

		__class(Filter,'laya.filters.Filter');
		var __proto=Filter.prototype;
		Laya.imps(__proto,{"laya.filters.IFilter":true})
		/**@private */
		__proto.callNative=function(sp){}
		/**@private 滤镜类型。*/
		__getset(0,__proto,'type',function(){return-1});
		/**@private 滤镜动作。*/
		__getset(0,__proto,'action',function(){return this._action });
		Filter.BLUR=0x10;
		Filter.COLOR=0x20;
		Filter.GLOW=0x08;
		Filter._filterStart=null
		Filter._filterEnd=null
		Filter._EndTarget=null
		Filter._recycleScope=null
		Filter._filter=null
		Filter._useSrc=null
		Filter._endSrc=null
		Filter._useOut=null
		Filter._endOut=null
		return Filter;
	})()


	//class laya.filters.ColorFilterAction
	var ColorFilterAction=(function(){
		function ColorFilterAction(){
			this.data=null;
		}

		__class(ColorFilterAction,'laya.filters.ColorFilterAction');
		var __proto=ColorFilterAction.prototype;
		Laya.imps(__proto,{"laya.filters.IFilterAction":true})
		/**
		*给指定的对象应用颜色滤镜。
		*@param srcCanvas 需要应用画布对象。
		*@return 应用了滤镜后的画布对象。
		*/
		__proto.apply=function(srcCanvas){
			var ctx=srcCanvas.ctx.ctx;
			var canvas=srcCanvas.ctx.ctx.canvas;
			if (canvas.width==0 || canvas.height==0)return canvas;
			var imgdata=ctx.getImageData(0,0,canvas.width,canvas.height);
			var data=imgdata.data;
			var nData;
			for (var i=0,n=data.length;i < n;i+=4){
				nData=this.getColor(data[i],data[i+1],data[i+2],data[i+3]);
				if (data[i+3]==0)continue ;
				data[i]=nData[0];
				data[i+1]=nData[1];
				data[i+2]=nData[2];
				data[i+3]=nData[3];
			}
			ctx.putImageData(imgdata,0,0);
			return srcCanvas;
		}

		__proto.getColor=function(red,green,blue,alpha){
			var rst=[];
			if (this.data._mat && this.data._alpha){
				var mat=this.data._mat;
				var tempAlpha=this.data._alpha;
				rst[0]=mat[0] *red+mat[1] *green+mat[2] *blue+mat[3] *alpha+tempAlpha[0];
				rst[1]=mat[4] *red+mat[5] *green+mat[6] *blue+mat[7] *alpha+tempAlpha[1];
				rst[2]=mat[8] *red+mat[9] *green+mat[10] *blue+mat[11] *alpha+tempAlpha[2];
				rst[3]=mat[12] *red+mat[13] *green+mat[14] *blue+mat[15] *alpha+tempAlpha[3];
			}
			return rst;
		}

		return ColorFilterAction;
	})()


	//class laya.filters.webgl.FilterActionGL
	var FilterActionGL=(function(){
		function FilterActionGL(){}
		__class(FilterActionGL,'laya.filters.webgl.FilterActionGL');
		var __proto=FilterActionGL.prototype;
		Laya.imps(__proto,{"laya.filters.IFilterActionGL":true})
		__proto.setValue=function(shader){}
		__proto.setValueMix=function(shader){}
		__proto.apply3d=function(scope,sprite,context,x,y){return null;}
		__proto.apply=function(srcCanvas){return null;}
		__getset(0,__proto,'typeMix',function(){
			return 0;
		});

		return FilterActionGL;
	})()


	//class laya.html.utils.HTMLParse
	var HTMLParse=(function(){
		function HTMLParse(){};
		__class(HTMLParse,'laya.html.utils.HTMLParse');
		HTMLParse.parse=function(ower,xmlString,url){
			xmlString=xmlString.replace(/<br>/g,"<br/>");
			xmlString="<root>"+xmlString+"</root>";
			xmlString=xmlString.replace(HTMLParse.spacePattern,HTMLParse.char255);
			var xml=Utils.parseXMLFromString(xmlString);
			HTMLParse._parseXML(ower,xml.childNodes[0].childNodes,url);
		}

		HTMLParse._parseXML=function(parent,xml,url,href){
			var i=0,n=0;
			if (xml.join || xml.item){
				for (i=0,n=xml.length;i < n;++i){
					HTMLParse._parseXML(parent,xml[i],url,href);
				}
				}else {
				var node;
				var nodeName;
				if (xml.nodeType==3){
					var txt;
					if ((parent instanceof laya.html.dom.HTMLDivElement )){
						if (xml.nodeName==null){
							xml.nodeName="#text";
						}
						nodeName=xml.nodeName.toLowerCase();
						txt=xml.textContent.replace(/^\s+|\s+$/g,'');
						if (txt.length > 0){
							node=ClassUtils.getInstance(nodeName);
							if (node){
								parent.addChild(node);
								((node).innerTEXT=txt.replace(HTMLParse.char255AndOneSpacePattern," "));
							}
						}
						}else {
						txt=xml.textContent.replace(/^\s+|\s+$/g,'');
						if (txt.length > 0){
							((parent).innerTEXT=txt.replace(HTMLParse.char255AndOneSpacePattern," "));
						}
					}
					return;
					}else {
					nodeName=xml.nodeName.toLowerCase();
					if (nodeName=="#comment")return;
					node=ClassUtils.getInstance(nodeName);
					if (node){
						node=parent.addChild(node);
						(node).URI=url;
						(node).href=href;
						var attributes=xml.attributes;
						if (attributes && attributes.length > 0){
							for (i=0,n=attributes.length;i < n;++i){
								var attribute=attributes[i];
								var attrName=attribute.nodeName;
								var value=attribute.value;
								node._setAttributes(attrName,value);
							}
						}
						HTMLParse._parseXML(node,xml.childNodes,url,(node).href);
						}else {
						HTMLParse._parseXML(parent,xml.childNodes,url,href);
					}
				}
			}
		}

		HTMLParse.char255=String.fromCharCode(255);
		HTMLParse.spacePattern=/&nbsp;|&#160;/g;
		HTMLParse.char255AndOneSpacePattern=new RegExp(String.fromCharCode(255)+"|(\\s+)","g");
		return HTMLParse;
	})()


	//class laya.html.utils.Layout
	var Layout=(function(){
		function Layout(){};
		__class(Layout,'laya.html.utils.Layout');
		Layout.later=function(element){
			if (Layout._will==null){
				Layout._will=[];
				Laya.stage.frameLoop(1,null,function(){
					if (Layout._will.length < 1)
						return;
					for (var i=0;i < Layout._will.length;i++){
						laya.html.utils.Layout.layout(Layout._will[i]);
					}
					Layout._will.length=0;
				});
			}
			Layout._will.push(element);
		}

		Layout.layout=function(element){
			if (!element || !element._style)return null;
			if ((element._style._type & 0x200)===0)
				return null;
			element.getStyle()._type &=~0x200;
			var arr=Layout._multiLineLayout(element);
			if (Render.isConchApp&&element["layaoutCallNative"]){
				(element).layaoutCallNative();
			}
			return arr;
		}

		Layout._multiLineLayout=function(element){
			if (Text.RightToLeft)return Layout._multiLineLayout2(element);
			var elements=new Array;
			element._addChildsToLayout(elements);
			var i=0,n=elements.length,j=0;
			var style=element._getCSSStyle();
			var letterSpacing=style.letterSpacing;
			var leading=style.leading;
			var lineHeight=style.lineHeight;
			var widthAuto=style._widthAuto()|| !style.wordWrap;
			var width=widthAuto ? 999999 :element.width;
			var height=element.height;
			var maxWidth=0;
			var exWidth=style.italic ? style.fontSize / 3 :0;
			var align=style._getAlign();
			var valign=style._getValign();
			var endAdjust=valign!==0 || align!==0 || lineHeight !=0;
			var oneLayout;
			var x=0;
			var y=0;
			var w=0;
			var h=0;
			var tBottom=0;
			var lines=new Array;
			var curStyle;
			var curPadding;
			var curLine=lines[0]=new LayoutLine();
			var newLine=false,nextNewline=false;
			var htmlWord;
			var sprite;
			curLine.h=0;
			if (style.italic)
				width-=style.fontSize / 3;
			var tWordWidth=0;
			var tLineFirstKey=true;
			function addLine (){
				curLine.y=y;
				y+=curLine.h+leading;
				if (curLine.h==0)y+=lineHeight;
				curLine.mWidth=tWordWidth;
				tWordWidth=0;
				curLine=new LayoutLine();
				lines.push(curLine);
				curLine.h=0;
				x=0;
				tLineFirstKey=true;
				newLine=false;
			}
			for (i=0;i < n;i++){
				oneLayout=elements[i];
				if (oneLayout==null){
					if (!tLineFirstKey){
						x+=Layout.DIV_ELEMENT_PADDING;
					}
					curLine.wordStartIndex=curLine.elements.length;
					continue ;
				}
				tLineFirstKey=false;
				if ((oneLayout instanceof laya.html.dom.HTMLBrElement )){
					addLine();
					curLine.y=y;
					continue ;
					}else if (oneLayout._isChar()){
					htmlWord=oneLayout;
					if (!htmlWord.isWord){
						if (lines.length > 0 && (x+w)> width && curLine.wordStartIndex > 0){
							var tLineWord=0;
							tLineWord=curLine.elements.length-curLine.wordStartIndex+1;
							curLine.elements.length=curLine.wordStartIndex;
							i-=tLineWord;
							addLine();
							continue ;
						}
						newLine=false;
						tWordWidth+=htmlWord.width;
						}else {
						newLine=nextNewline || (htmlWord.char==='\n');
						curLine.wordStartIndex=curLine.elements.length;
					}
					w=htmlWord.width+letterSpacing;
					h=htmlWord.height;
					nextNewline=false;
					newLine=newLine || ((x+w)> width);
					newLine && addLine();
					curLine.minTextHeight=Math.min(curLine.minTextHeight,oneLayout.height);
					}else {
					curStyle=oneLayout._getCSSStyle();
					sprite=oneLayout;
					curPadding=curStyle.padding;
					curStyle._getCssFloat()===0 || (endAdjust=true);
					newLine=nextNewline || curStyle.lineElement;
					w=sprite.width *sprite._style._tf.scaleX+curPadding[1]+curPadding[3]+letterSpacing;
					h=sprite.height *sprite._style._tf.scaleY+curPadding[0]+curPadding[2];
					nextNewline=curStyle.lineElement;
					newLine=newLine || ((x+w)> width && curStyle.wordWrap);
					newLine && addLine();
				}
				curLine.elements.push(oneLayout);
				curLine.h=Math.max(curLine.h,h);
				oneLayout.x=x;
				oneLayout.y=y;
				x+=w;
				curLine.w=x-letterSpacing;
				curLine.y=y;
				maxWidth=Math.max(x+exWidth,maxWidth);
			}
			y=curLine.y+curLine.h;
			if (endAdjust){
				var tY=0;
				var tWidth=width;
				if (widthAuto && element.width > 0){
					tWidth=element.width;
				}
				for (i=0,n=lines.length;i < n;i++){
					lines[i].updatePos(0,tWidth,i,tY,align,valign,lineHeight);
					tY+=Math.max(lineHeight,lines[i].h+leading);
				}
				y=tY;
			}
			widthAuto && (element.width=maxWidth);
			(y > element.height)&& (element.height=y);
			return [maxWidth,y];
		}

		Layout._multiLineLayout2=function(element){
			var elements=new Array;
			element._addChildsToLayout(elements);
			var i=0,n=elements.length,j=0;
			var style=element._getCSSStyle();
			var letterSpacing=style.letterSpacing;
			var leading=style.leading;
			var lineHeight=style.lineHeight;
			var widthAuto=style._widthAuto()|| !style.wordWrap;
			var width=widthAuto ? 999999 :element.width;
			var height=element.height;
			var maxWidth=0;
			var exWidth=style.italic ? style.fontSize / 3 :0;
			var align=2-style._getAlign();
			var valign=style._getValign();
			var endAdjust=valign!==0 || align!==0 || lineHeight !=0;
			var oneLayout;
			var x=0;
			var y=0;
			var w=0;
			var h=0;
			var tBottom=0;
			var lines=new Array;
			var curStyle;
			var curPadding;
			var curLine=lines[0]=new LayoutLine();
			var newLine=false,nextNewline=false;
			var htmlWord;
			var sprite;
			curLine.h=0;
			if (style.italic)
				width-=style.fontSize / 3;
			var tWordWidth=0;
			var tLineFirstKey=true;
			function addLine (){
				curLine.y=y;
				y+=curLine.h+leading;
				if (curLine.h==0)y+=lineHeight;
				curLine.mWidth=tWordWidth;
				tWordWidth=0;
				curLine=new LayoutLine();
				lines.push(curLine);
				curLine.h=0;
				x=0;
				tLineFirstKey=true;
				newLine=false;
			}
			for (i=0;i < n;i++){
				oneLayout=elements[i];
				if (oneLayout==null){
					if (!tLineFirstKey){
						x+=Layout.DIV_ELEMENT_PADDING;
					}
					curLine.wordStartIndex=curLine.elements.length;
					continue ;
				}
				tLineFirstKey=false;
				if ((oneLayout instanceof laya.html.dom.HTMLBrElement )){
					addLine();
					curLine.y=y;
					continue ;
					}else if (oneLayout._isChar()){
					htmlWord=oneLayout;
					if (!htmlWord.isWord){
						if (lines.length > 0 && (x+w)> width && curLine.wordStartIndex > 0){
							var tLineWord=0;
							tLineWord=curLine.elements.length-curLine.wordStartIndex+1;
							curLine.elements.length=curLine.wordStartIndex;
							i-=tLineWord;
							addLine();
							continue ;
						}
						newLine=false;
						tWordWidth+=htmlWord.width;
						}else {
						newLine=nextNewline || (htmlWord.char==='\n');
						curLine.wordStartIndex=curLine.elements.length;
					}
					w=htmlWord.width+letterSpacing;
					h=htmlWord.height;
					nextNewline=false;
					newLine=newLine || ((x+w)> width);
					newLine && addLine();
					curLine.minTextHeight=Math.min(curLine.minTextHeight,oneLayout.height);
					}else {
					curStyle=oneLayout._getCSSStyle();
					sprite=oneLayout;
					curPadding=curStyle.padding;
					curStyle._getCssFloat()===0 || (endAdjust=true);
					newLine=nextNewline || curStyle.lineElement;
					w=sprite.width *sprite._style._tf.scaleX+curPadding[1]+curPadding[3]+letterSpacing;
					h=sprite.height *sprite._style._tf.scaleY+curPadding[0]+curPadding[2];
					nextNewline=curStyle.lineElement;
					newLine=newLine || ((x+w)> width && curStyle.wordWrap);
					newLine && addLine();
				}
				curLine.elements.push(oneLayout);
				curLine.h=Math.max(curLine.h,h);
				oneLayout.x=x;
				oneLayout.y=y;
				x+=w;
				curLine.w=x-letterSpacing;
				curLine.y=y;
				maxWidth=Math.max(x+exWidth,maxWidth);
			}
			y=curLine.y+curLine.h;
			if (endAdjust){
				var tY=0;
				var tWidth=width;
				for (i=0,n=lines.length;i < n;i++){
					lines[i].updatePos(0,tWidth,i,tY,align,valign,lineHeight);
					tY+=Math.max(lineHeight,lines[i].h+leading);
				}
				y=tY;
			}
			widthAuto && (element.width=maxWidth);
			(y > element.height)&& (element.height=y);
			for (i=0,n=lines.length;i < n;i++){
				lines[i].revertOrder(width);
			}
			return [maxWidth,y];
		}

		Layout._will=null
		Layout.DIV_ELEMENT_PADDING=0;
		return Layout;
	})()


	//class laya.html.utils.LayoutLine
	var LayoutLine=(function(){
		function LayoutLine(){
			this.x=0;
			this.y=0;
			this.w=0;
			this.h=0;
			this.wordStartIndex=0;
			this.minTextHeight=99999;
			this.mWidth=0;
			this.elements=new Array;
		}

		__class(LayoutLine,'laya.html.utils.LayoutLine');
		var __proto=LayoutLine.prototype;
		/**
		*底对齐（默认）
		*@param left
		*@param width
		*@param dy
		*@param align 水平
		*@param valign 垂直
		*@param lineHeight 行高
		*/
		__proto.updatePos=function(left,width,lineNum,dy,align,valign,lineHeight){
			var w=0;
			var one
			if (this.elements.length > 0){
				one=this.elements[this.elements.length-1];
				w=one.x+one.width-this.elements[0].x;
			};
			var dx=0,ddy=NaN;
			align===1 && (dx=(width-w)/ 2);
			align===2 && (dx=(width-w));
			lineHeight===0 || valign !=0 || (valign=1);
			for (var i=0,n=this.elements.length;i < n;i++){
				one=this.elements[i];
				var tCSSStyle=one._getCSSStyle();
				dx!==0 && (one.x+=dx);
				switch (tCSSStyle._getValign()){
					case 0:
						one.y=dy;
						break ;
					case 1:;
						var tMinTextHeight=0;
						if (this.minTextHeight !=99999){
							tMinTextHeight=this.minTextHeight;
						};
						var tBottomLineY=(tMinTextHeight+lineHeight)/ 2;
						tBottomLineY=Math.max(tBottomLineY,this.h);
						if ((one instanceof laya.html.dom.HTMLImageElement )){
							ddy=dy+tBottomLineY-one.height;
							}else {
							ddy=dy+tBottomLineY-one.height;
						}
						one.y=ddy;
						break ;
					case 2:
						one.y=dy+(lineHeight-one.height);
						break ;
					}
			}
		}

		/**
		*布局反向,目前用于将ltr模式布局转为rtl模式布局
		*/
		__proto.revertOrder=function(width){
			var one
			if (this.elements.length > 0){
				var i=0,len=0;
				len=this.elements.length;
				for (i=0;i < len;i++){
					one=this.elements[i];
					one.x=width-one.x-one.width;
				}
			}
		}

		return LayoutLine;
	})()


	//class laya.maths.Arith
	var Arith=(function(){
		function Arith(){};
		__class(Arith,'laya.maths.Arith');
		Arith.formatR=function(r){
			if (r > Math.PI)r-=Math.PI *2;
			if (r <-Math.PI)r+=Math.PI *2;
			return r;
		}

		Arith.isPOT=function(w,h){
			return (w > 0 && (w & (w-1))===0 && h > 0 && (h & (h-1))===0);
		}

		Arith.setMatToArray=function(mat,array){
			mat.a,mat.b,0,0,mat.c,mat.d,0,0,0,0,1,0,mat.tx+20,mat.ty+20,0,1
			array[0]=mat.a;
			array[1]=mat.b;
			array[4]=mat.c;
			array[5]=mat.d;
			array[12]=mat.tx;
			array[13]=mat.ty;
		}

		return Arith;
	})()


	//class laya.maths.Bezier
	var Bezier=(function(){
		function Bezier(){
			this._controlPoints=[new Point(),new Point(),new Point()];
			this._calFun=this.getPoint2;
		}

		__class(Bezier,'laya.maths.Bezier');
		var __proto=Bezier.prototype;
		/**@private */
		__proto._switchPoint=function(x,y){
			var tPoint=this._controlPoints.shift();
			tPoint.setTo(x,y);
			this._controlPoints.push(tPoint);
		}

		/**
		*计算二次贝塞尔点。
		*@param t
		*@param rst
		*
		*/
		__proto.getPoint2=function(t,rst){
			var p1=this._controlPoints[0];
			var p2=this._controlPoints[1];
			var p3=this._controlPoints[2];
			var lineX=Math.pow((1-t),2)*p1.x+2 *t *(1-t)*p2.x+Math.pow(t,2)*p3.x;
			var lineY=Math.pow((1-t),2)*p1.y+2 *t *(1-t)*p2.y+Math.pow(t,2)*p3.y;
			rst.push(lineX,lineY);
		}

		/**
		*计算三次贝塞尔点
		*@param t
		*@param rst
		*
		*/
		__proto.getPoint3=function(t,rst){
			var p1=this._controlPoints[0];
			var p2=this._controlPoints[1];
			var p3=this._controlPoints[2];
			var p4=this._controlPoints[3];
			var lineX=Math.pow((1-t),3)*p1.x+3 *p2.x *t *(1-t)*(1-t)+3 *p3.x *t *t *(1-t)+p4.x *Math.pow(t,3);
			var lineY=Math.pow((1-t),3)*p1.y+3 *p2.y *t *(1-t)*(1-t)+3 *p3.y *t *t *(1-t)+p4.y *Math.pow(t,3);
			rst.push(lineX,lineY);
		}

		/**
		*计算贝塞尔点序列
		*@param count
		*@param rst
		*
		*/
		__proto.insertPoints=function(count,rst){
			var i=NaN;
			count=count > 0 ? count :5;
			var dLen=NaN;
			dLen=1 / count;
			for (i=0;i <=1;i+=dLen){
				this._calFun(i,rst);
			}
		}

		/**
		*获取贝塞尔曲线上的点。
		*@param pList 控制点[x0,y0,x1,y1...]
		*@param inSertCount 每次曲线的插值数量
		*@return
		*
		*/
		__proto.getBezierPoints=function(pList,inSertCount,count){
			(inSertCount===void 0)&& (inSertCount=5);
			(count===void 0)&& (count=2);
			var i=0,len=0;
			len=pList.length;
			if (len < (count+1)*2)return [];
			var rst;
			rst=[];
			switch (count){
				case 2:
					this._calFun=this.getPoint2;
					break ;
				case 3:
					this._calFun=this.getPoint3;
					break ;
				default :
					return [];
				}
			while (this._controlPoints.length <=count){
				this._controlPoints.push(new Point());
			}
			for (i=0;i < count *2;i+=2){
				this._switchPoint(pList[i],pList[i+1]);
			}
			for (i=count *2;i < len;i+=2){
				this._switchPoint(pList[i],pList[i+1]);
				if ((i / 2)% count==0)
					this.insertPoints(inSertCount,rst);
			}
			return rst;
		}

		__static(Bezier,
		['I',function(){return this.I=new Bezier();}
		]);
		return Bezier;
	})()


	//class laya.maths.GrahamScan
	var GrahamScan=(function(){
		function GrahamScan(){};
		__class(GrahamScan,'laya.maths.GrahamScan');
		GrahamScan.multiply=function(p1,p2,p0){
			return ((p1.x-p0.x)*(p2.y-p0.y)-(p2.x-p0.x)*(p1.y-p0.y));
		}

		GrahamScan.dis=function(p1,p2){
			return (p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y);
		}

		GrahamScan._getPoints=function(count,tempUse,rst){
			(tempUse===void 0)&& (tempUse=false);
			if (!GrahamScan._mPointList)GrahamScan._mPointList=[];
			while (GrahamScan._mPointList.length < count)GrahamScan._mPointList.push(new Point());
			if (!rst)rst=[];
			rst.length=0;
			if (tempUse){
				GrahamScan.getFrom(rst,GrahamScan._mPointList,count);
				}else {
				GrahamScan.getFromR(rst,GrahamScan._mPointList,count);
			}
			return rst;
		}

		GrahamScan.getFrom=function(rst,src,count){
			var i=0;
			for (i=0;i < count;i++){
				rst.push(src[i]);
			}
			return rst;
		}

		GrahamScan.getFromR=function(rst,src,count){
			var i=0;
			for (i=0;i < count;i++){
				rst.push(src.pop());
			}
			return rst;
		}

		GrahamScan.pListToPointList=function(pList,tempUse){
			(tempUse===void 0)&& (tempUse=false);
			var i=0,len=pList.length / 2,rst=GrahamScan._getPoints(len,tempUse,GrahamScan._tempPointList);
			for (i=0;i < len;i++){
				rst[i].setTo(pList[i+i],pList[i+i+1]);
			}
			return rst;
		}

		GrahamScan.pointListToPlist=function(pointList){
			var i=0,len=pointList.length,rst=GrahamScan._temPList,tPoint;
			rst.length=0;
			for (i=0;i < len;i++){
				tPoint=pointList[i];
				rst.push(tPoint.x,tPoint.y);
			}
			return rst;
		}

		GrahamScan.scanPList=function(pList){
			return Utils.copyArray(pList,GrahamScan.pointListToPlist(GrahamScan.scan(GrahamScan.pListToPointList(pList,true))));
		}

		GrahamScan.scan=function(PointSet){
			var i=0,j=0,k=0,top=2,tmp,n=PointSet.length,ch;
			var _tmpDic={};
			var key;
			ch=GrahamScan._temArr;
			ch.length=0;
			n=PointSet.length;
			for (i=n-1;i >=0;i--){
				tmp=PointSet[i];
				key=tmp.x+"_"+tmp.y;
				if (!_tmpDic.hasOwnProperty(key)){
					_tmpDic[key]=true;
					ch.push(tmp);
				}
			}
			n=ch.length;
			Utils.copyArray(PointSet,ch);
			for (i=1;i < n;i++)
			if ((PointSet[i].y < PointSet[k].y)|| ((PointSet[i].y==PointSet[k].y)&& (PointSet[i].x < PointSet[k].x)))
				k=i;
			tmp=PointSet[0];
			PointSet[0]=PointSet[k];
			PointSet[k]=tmp;
			for (i=1;i < n-1;i++){
				k=i;
				for (j=i+1;j < n;j++)
				if ((GrahamScan.multiply(PointSet[j],PointSet[k],PointSet[0])> 0)|| ((GrahamScan.multiply(PointSet[j],PointSet[k],PointSet[0])==0)&& (GrahamScan.dis(PointSet[0],PointSet[j])< GrahamScan.dis(PointSet[0],PointSet[k]))))
					k=j;
				tmp=PointSet[i];
				PointSet[i]=PointSet[k];
				PointSet[k]=tmp;
			}
			ch=GrahamScan._temArr;
			ch.length=0;
			if (PointSet.length < 3){
				return Utils.copyArray(ch,PointSet);
			}
			ch.push(PointSet[0],PointSet[1],PointSet[2]);
			for (i=3;i < n;i++){
				while (ch.length >=2 && GrahamScan.multiply(PointSet[i],ch[ch.length-1],ch[ch.length-2])>=0)ch.pop();
				PointSet[i] && ch.push(PointSet[i]);
			}
			return ch;
		}

		GrahamScan._mPointList=null
		GrahamScan._tempPointList=[];
		GrahamScan._temPList=[];
		GrahamScan._temArr=[];
		return GrahamScan;
	})()


	//class laya.maths.Matrix
	var Matrix=(function(){
		function Matrix(a,b,c,d,tx,ty){
			//this.a=NaN;
			//this.b=NaN;
			//this.c=NaN;
			//this.d=NaN;
			//this.tx=NaN;
			//this.ty=NaN;
			this.inPool=false;
			this.bTransform=false;
			(a===void 0)&& (a=1);
			(b===void 0)&& (b=0);
			(c===void 0)&& (c=0);
			(d===void 0)&& (d=1);
			(tx===void 0)&& (tx=0);
			(ty===void 0)&& (ty=0);
			this.a=a;
			this.b=b;
			this.c=c;
			this.d=d;
			this.tx=tx;
			this.ty=ty;
			this._checkTransform();
		}

		__class(Matrix,'laya.maths.Matrix');
		var __proto=Matrix.prototype;
		/**
		*将本矩阵设置为单位矩阵。
		*@return 返回当前矩形。
		*/
		__proto.identity=function(){
			this.a=this.d=1;
			this.b=this.tx=this.ty=this.c=0;
			this.bTransform=false;
			return this;
		}

		/**@private */
		__proto._checkTransform=function(){
			return this.bTransform=(this.a!==1 || this.b!==0 || this.c!==0 || this.d!==1);
		}

		/**
		*设置沿 x 、y 轴平移每个点的距离。
		*@param x 沿 x 轴平移每个点的距离。
		*@param y 沿 y 轴平移每个点的距离。
		*@return 返回对象本身
		*/
		__proto.setTranslate=function(x,y){
			this.tx=x;
			this.ty=y;
			return this;
		}

		/**
		*沿 x 和 y 轴平移矩阵，平移的变化量由 x 和 y 参数指定。
		*@param x 沿 x 轴向右移动的量（以像素为单位）。
		*@param y 沿 y 轴向下移动的量（以像素为单位）。
		*@return 返回此矩形对象。
		*/
		__proto.translate=function(x,y){
			this.tx+=x;
			this.ty+=y;
			return this;
		}

		/**
		*对矩阵应用缩放转换。
		*@param x 用于沿 x 轴缩放对象的乘数。
		*@param y 用于沿 y 轴缩放对象的乘数。
		*/
		__proto.scale=function(x,y){
			this.a *=x;
			this.d *=y;
			this.c *=x;
			this.b *=y;
			this.tx *=x;
			this.ty *=y;
			this.bTransform=true;
		}

		/**
		*对 Matrix 对象应用旋转转换。
		*@param angle 以弧度为单位的旋转角度。
		*/
		__proto.rotate=function(angle){
			var cos=Math.cos(angle);
			var sin=Math.sin(angle);
			var a1=this.a;
			var c1=this.c;
			var tx1=this.tx;
			this.a=a1 *cos-this.b *sin;
			this.b=a1 *sin+this.b *cos;
			this.c=c1 *cos-this.d *sin;
			this.d=c1 *sin+this.d *cos;
			this.tx=tx1 *cos-this.ty *sin;
			this.ty=tx1 *sin+this.ty *cos;
			this.bTransform=true;
		}

		/**
		*对 Matrix 对象应用倾斜转换。
		*@param x 沿着 X 轴的 2D 倾斜弧度。
		*@param y 沿着 Y 轴的 2D 倾斜弧度。
		*@return 当前 Matrix 对象。
		*/
		__proto.skew=function(x,y){
			var tanX=Math.tan(x);
			var tanY=Math.tan(y);
			var a1=this.a;
			var b1=this.b;
			this.a+=tanY *this.c;
			this.b+=tanY *this.d;
			this.c+=tanX *a1;
			this.d+=tanX *b1;
			return this;
		}

		/**
		*对指定的点应用当前矩阵的逆转化并返回此点。
		*@param out 待转化的点 Point 对象。
		*@return 返回out
		*/
		__proto.invertTransformPoint=function(out){
			var a1=this.a;
			var b1=this.b;
			var c1=this.c;
			var d1=this.d;
			var tx1=this.tx;
			var n=a1 *d1-b1 *c1;
			var a2=d1 / n;
			var b2=-b1 / n;
			var c2=-c1 / n;
			var d2=a1 / n;
			var tx2=(c1 *this.ty-d1 *tx1)/ n;
			var ty2=-(a1 *this.ty-b1 *tx1)/ n;
			return out.setTo(a2 *out.x+c2 *out.y+tx2,b2 *out.x+d2 *out.y+ty2);
		}

		/**
		*将 Matrix 对象表示的几何转换应用于指定点。
		*@param out 用来设定输出结果的点。
		*@return 返回out
		*/
		__proto.transformPoint=function(out){
			return out.setTo(this.a *out.x+this.c *out.y+this.tx,this.b *out.x+this.d *out.y+this.ty);
		}

		/**
		*将 Matrix 对象表示的几何转换应用于指定点，忽略tx、ty。
		*@param out 用来设定输出结果的点。
		*@return 返回out
		*/
		__proto.transformPointN=function(out){
			return out.setTo(this.a *out.x+this.c *out.y ,this.b *out.x+this.d *out.y);
		}

		/**
		*@private
		*将 Matrix 对象表示的几何转换应用于指定点。
		*@param data 点集合。
		*@param out 存储应用转化的点的列表。
		*@return 返回out数组
		*/
		__proto.transformPointArray=function(data,out){
			var len=data.length;
			for (var i=0;i < len;i+=2){
				var x=data[i],y=data[i+1];
				out[i]=this.a *x+this.c *y+this.tx;
				out[i+1]=this.b *x+this.d *y+this.ty;
			}
			return out;
		}

		/**
		*@private
		*将 Matrix 对象表示的几何缩放转换应用于指定点。
		*@param data 点集合。
		*@param out 存储应用转化的点的列表。
		*@return 返回out数组
		*/
		__proto.transformPointArrayScale=function(data,out){
			var len=data.length;
			for (var i=0;i < len;i+=2){
				var x=data[i],y=data[i+1];
				out[i]=this.a *x+this.c *y;
				out[i+1]=this.b *x+this.d *y;
			}
			return out;
		}

		/**
		*获取 X 轴缩放值。
		*@return X 轴缩放值。
		*/
		__proto.getScaleX=function(){
			return this.b===0 ? this.a :Math.sqrt(this.a *this.a+this.b *this.b);
		}

		/**
		*获取 Y 轴缩放值。
		*@return Y 轴缩放值。
		*/
		__proto.getScaleY=function(){
			return this.c===0 ? this.d :Math.sqrt(this.c *this.c+this.d *this.d);
		}

		/**
		*执行原始矩阵的逆转换。
		*@return 当前矩阵对象。
		*/
		__proto.invert=function(){
			var a1=this.a;
			var b1=this.b;
			var c1=this.c;
			var d1=this.d;
			var tx1=this.tx;
			var n=a1 *d1-b1 *c1;
			this.a=d1 / n;
			this.b=-b1 / n;
			this.c=-c1 / n;
			this.d=a1 / n;
			this.tx=(c1 *this.ty-d1 *tx1)/ n;
			this.ty=-(a1 *this.ty-b1 *tx1)/ n;
			return this;
		}

		/**
		*将 Matrix 的成员设置为指定值。
		*@param a 缩放或旋转图像时影响像素沿 x 轴定位的值。
		*@param b 旋转或倾斜图像时影响像素沿 y 轴定位的值。
		*@param c 旋转或倾斜图像时影响像素沿 x 轴定位的值。
		*@param d 缩放或旋转图像时影响像素沿 y 轴定位的值。
		*@param tx 沿 x 轴平移每个点的距离。
		*@param ty 沿 y 轴平移每个点的距离。
		*@return 当前矩阵对象。
		*/
		__proto.setTo=function(a,b,c,d,tx,ty){
			this.a=a,this.b=b,this.c=c,this.d=d,this.tx=tx,this.ty=ty;
			return this;
		}

		/**
		*将指定矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。
		*@param matrix 要连接到源矩阵的矩阵。
		*@return 当前矩阵。
		*/
		__proto.concat=function(matrix){
			var a=this.a;
			var c=this.c;
			var tx=this.tx;
			this.a=a *matrix.a+this.b *matrix.c;
			this.b=a *matrix.b+this.b *matrix.d;
			this.c=c *matrix.a+this.d *matrix.c;
			this.d=c *matrix.b+this.d *matrix.d;
			this.tx=tx *matrix.a+this.ty *matrix.c+matrix.tx;
			this.ty=tx *matrix.b+this.ty *matrix.d+matrix.ty;
			return this;
		}

		/**
		*@private
		*对矩阵应用缩放转换。反向相乘
		*@param x 用于沿 x 轴缩放对象的乘数。
		*@param y 用于沿 y 轴缩放对象的乘数。
		*/
		__proto.scaleEx=function(x,y){
			var ba=this.a,bb=this.b,bc=this.c,bd=this.d;
			if (bb!==0 || bc!==0){
				this.a=x *ba;
				this.b=x *bb;
				this.c=y *bc;
				this.d=y *bd;
				}else {
				this.a=x *ba;
				this.b=0 *bd;
				this.c=0 *ba;
				this.d=y *bd;
			}
			this.bTransform=true;
		}

		/**
		*@private
		*对 Matrix 对象应用旋转转换。反向相乘
		*@param angle 以弧度为单位的旋转角度。
		*/
		__proto.rotateEx=function(angle){
			var cos=Math.cos(angle);
			var sin=Math.sin(angle);
			var ba=this.a,bb=this.b,bc=this.c,bd=this.d;
			if (bb!==0 || bc!==0){
				this.a=cos *ba+sin *bc;
				this.b=cos *bb+sin *bd;
				this.c=-sin *ba+cos *bc;
				this.d=-sin *bb+cos *bd;
				}else {
				this.a=cos *ba;
				this.b=sin *bd;
				this.c=-sin *ba;
				this.d=cos *bd;
			}
			this.bTransform=true;
		}

		/**
		*返回此 Matrix 对象的副本。
		*@return 与原始实例具有完全相同的属性的新 Matrix 实例。
		*/
		__proto.clone=function(){
			var dec=Matrix.create();
			dec.a=this.a;
			dec.b=this.b;
			dec.c=this.c;
			dec.d=this.d;
			dec.tx=this.tx;
			dec.ty=this.ty;
			dec.bTransform=this.bTransform;
			return dec;
		}

		/**
		*将当前 Matrix 对象中的所有矩阵数据复制到指定的 Matrix 对象中。
		*@param dec 要复制当前矩阵数据的 Matrix 对象。
		*@return 已复制当前矩阵数据的 Matrix 对象。
		*/
		__proto.copyTo=function(dec){
			dec.a=this.a;
			dec.b=this.b;
			dec.c=this.c;
			dec.d=this.d;
			dec.tx=this.tx;
			dec.ty=this.ty;
			dec.bTransform=this.bTransform;
			return dec;
		}

		/**
		*返回列出该 Matrix 对象属性的文本值。
		*@return 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。
		*/
		__proto.toString=function(){
			return this.a+","+this.b+","+this.c+","+this.d+","+this.tx+","+this.ty;
		}

		/**
		*销毁此对象。
		*/
		__proto.destroy=function(){
			if (this.inPool)return;
			var cache=Matrix._cache;
			this.inPool=true;
			cache._length || (cache._length=0);
			cache[cache._length++]=this;
			this.a=this.d=1;
			this.b=this.c=this.tx=this.ty=0;
			this.bTransform=false;
		}

		Matrix.mul=function(m1,m2,out){
			var aa=m1.a,ab=m1.b,ac=m1.c,ad=m1.d,atx=m1.tx,aty=m1.ty;
			var ba=m2.a,bb=m2.b,bc=m2.c,bd=m2.d,btx=m2.tx,bty=m2.ty;
			if (bb!==0 || bc!==0){
				out.a=aa *ba+ab *bc;
				out.b=aa *bb+ab *bd;
				out.c=ac *ba+ad *bc;
				out.d=ac *bb+ad *bd;
				out.tx=ba *atx+bc *aty+btx;
				out.ty=bb *atx+bd *aty+bty;
				}else {
				out.a=aa *ba;
				out.b=ab *bd;
				out.c=ac *ba;
				out.d=ad *bd;
				out.tx=ba *atx+btx;
				out.ty=bd *aty+bty;
			}
			return out;
		}

		Matrix.mul16=function(m1,m2,out){
			var aa=m1.a,ab=m1.b,ac=m1.c,ad=m1.d,atx=m1.tx,aty=m1.ty;
			var ba=m2.a,bb=m2.b,bc=m2.c,bd=m2.d,btx=m2.tx,bty=m2.ty;
			if (bb!==0 || bc!==0){
				out[0]=aa *ba+ab *bc;
				out[1]=aa *bb+ab *bd;
				out[4]=ac *ba+ad *bc;
				out[5]=ac *bb+ad *bd;
				out[12]=ba *atx+bc *aty+btx;
				out[13]=bb *atx+bd *aty+bty;
				}else {
				out[0]=aa *ba;
				out[1]=ab *bd;
				out[4]=ac *ba;
				out[5]=ad *bd;
				out[12]=ba *atx+btx;
				out[13]=bd *aty+bty;
			}
			return out;
		}

		Matrix.mulPre=function(m1,ba,bb,bc,bd,btx,bty,out){
			var aa=m1.a,ab=m1.b,ac=m1.c,ad=m1.d,atx=m1.tx,aty=m1.ty;
			if (bb!==0 || bc!==0){
				out.a=aa *ba+ab *bc;
				out.b=aa *bb+ab *bd;
				out.c=ac *ba+ad *bc;
				out.d=ac *bb+ad *bd;
				out.tx=ba *atx+bc *aty+btx;
				out.ty=bb *atx+bd *aty+bty;
				}else {
				out.a=aa *ba;
				out.b=ab *bd;
				out.c=ac *ba;
				out.d=ad *bd;
				out.tx=ba *atx+btx;
				out.ty=bd *aty+bty;
			}
			return out;
		}

		Matrix.mulPos=function(m1,aa,ab,ac,ad,atx,aty,out){
			var ba=m1.a,bb=m1.b,bc=m1.c,bd=m1.d,btx=m1.tx,bty=m1.ty;
			if (bb!==0 || bc!==0){
				out.a=aa *ba+ab *bc;
				out.b=aa *bb+ab *bd;
				out.c=ac *ba+ad *bc;
				out.d=ac *bb+ad *bd;
				out.tx=ba *atx+bc *aty+btx;
				out.ty=bb *atx+bd *aty+bty;
				}else {
				out.a=aa *ba;
				out.b=ab *bd;
				out.c=ac *ba;
				out.d=ad *bd;
				out.tx=ba *atx+btx;
				out.ty=bd *aty+bty;
			}
			return out;
		}

		Matrix.preMul=function(parent,self,out){
			var pa=parent.a,pb=parent.b,pc=parent.c,pd=parent.d;
			var na=self.a,nb=self.b,nc=self.c,nd=self.d,ntx=self.tx,nty=self.ty;
			out.a=na *pa;
			out.b=out.c=0;
			out.d=nd *pd;
			out.tx=ntx *pa+parent.tx;
			out.ty=nty *pd+parent.ty;
			if (nb!==0 || nc!==0 || pb!==0 || pc!==0){
				out.a+=nb *pc;
				out.d+=nc *pb;
				out.b+=na *pb+nb *pd;
				out.c+=nc *pa+nd *pc;
				out.tx+=nty *pc;
				out.ty+=ntx *pb;
			}
			return out;
		}

		Matrix.preMulXY=function(parent,x,y,out){
			var pa=parent.a,pb=parent.b,pc=parent.c,pd=parent.d;
			out.a=pa;
			out.b=pb;
			out.c=pc;
			out.d=pd;
			out.tx=x *pa+parent.tx+y *pc;
			out.ty=y *pd+parent.ty+x *pb;
			return out;
		}

		Matrix.create=function(){
			var cache=Matrix._cache;
			var mat=!cache._length ? (new Matrix()):cache[--cache._length];
			mat.inPool=false;
			return mat;
		}

		Matrix.EMPTY=new Matrix();
		Matrix.TEMP=new Matrix();
		Matrix._cache=[];
		return Matrix;
	})()


	//class laya.maths.Point
	var Point=(function(){
		function Point(x,y){
			//this.x=NaN;
			//this.y=NaN;
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			this.x=x;
			this.y=y;
		}

		__class(Point,'laya.maths.Point');
		var __proto=Point.prototype;
		/**
		*将 <code>Point</code> 的成员设置为指定值。
		*@param x 水平坐标。
		*@param y 垂直坐标。
		*@return 当前 Point 对象。
		*/
		__proto.setTo=function(x,y){
			this.x=x;
			this.y=y;
			return this;
		}

		/**
		*计算当前点和目标点(x，y)的距离。
		*@param x 水平坐标。
		*@param y 垂直坐标。
		*@return 返回当前点和目标点之间的距离。
		*/
		__proto.distance=function(x,y){
			return Math.sqrt((this.x-x)*(this.x-x)+(this.y-y)*(this.y-y));
		}

		/**返回包含 x 和 y 坐标的值的字符串。*/
		__proto.toString=function(){
			return this.x+","+this.y;
		}

		/**
		*标准化向量。
		*/
		__proto.normalize=function(){
			var d=Math.sqrt(this.x *this.x+this.y *this.y);
			if (d > 0){
				var id=1.0 / d;
				this.x *=id;
				this.y *=id;
			}
		}

		Point.TEMP=new Point();
		Point.EMPTY=new Point();
		return Point;
	})()


	//class laya.maths.Rectangle
	var Rectangle=(function(){
		function Rectangle(x,y,width,height){
			//this.x=NaN;
			//this.y=NaN;
			//this.width=NaN;
			//this.height=NaN;
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			this.x=x;
			this.y=y;
			this.width=width;
			this.height=height;
		}

		__class(Rectangle,'laya.maths.Rectangle');
		var __proto=Rectangle.prototype;
		/**
		*将 Rectangle 的属性设置为指定值。
		*@param x x 矩形左上角的 X 轴坐标。
		*@param y x 矩形左上角的 Y 轴坐标。
		*@param width 矩形的宽度。
		*@param height 矩形的高。
		*@return 返回属性值修改后的矩形对象本身。
		*/
		__proto.setTo=function(x,y,width,height){
			this.x=x;
			this.y=y;
			this.width=width;
			this.height=height;
			return this;
		}

		/**
		*复制 source 对象的属性值到此矩形对象中。
		*@param sourceRect 源 Rectangle 对象。
		*@return 返回属性值修改后的矩形对象本身。
		*/
		__proto.copyFrom=function(source){
			this.x=source.x;
			this.y=source.y;
			this.width=source.width;
			this.height=source.height;
			return this;
		}

		/**
		*确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。
		*@param x 点的 X 轴坐标值（水平位置）。
		*@param y 点的 Y 轴坐标值（垂直位置）。
		*@return 如果 Rectangle 对象包含指定的点，则值为 true；否则为 false。
		*/
		__proto.contains=function(x,y){
			if (this.width <=0 || this.height <=0)return false;
			if (x >=this.x && x < this.right){
				if (y >=this.y && y < this.bottom){
					return true;
				}
			}
			return false;
		}

		/**
		*确定在 rect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。
		*@param rect Rectangle 对象。
		*@return 如果传入的矩形对象与此对象相交，则返回 true 值，否则返回 false。
		*/
		__proto.intersects=function(rect){
			return !(rect.x > (this.x+this.width)|| (rect.x+rect.width)< this.x || rect.y > (this.y+this.height)|| (rect.y+rect.height)< this.y);
		}

		/**
		*如果在 rect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，则此方法返回null。
		*@param rect 待比较的矩形区域。
		*@param out （可选）待输出的矩形区域。如果为空则创建一个新的。建议：尽量复用对象，减少对象创建消耗。
		*@return 返回相交的矩形区域对象。
		*/
		__proto.intersection=function(rect,out){
			if (!this.intersects(rect))return null;
			out || (out=new Rectangle());
			out.x=Math.max(this.x,rect.x);
			out.y=Math.max(this.y,rect.y);
			out.width=Math.min(this.right,rect.right)-out.x;
			out.height=Math.min(this.bottom,rect.bottom)-out.y;
			return out;
		}

		/**
		*<p>矩形联合，通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。</p>
		*<p>注意：union()方法忽略高度或宽度值为 0 的矩形，如：var rect2:Rectangle=new Rectangle(300,300,50,0);</p>
		*@param 要添加到此 Rectangle 对象的 Rectangle 对象。
		*@param out 用于存储输出结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。
		*@return 充当两个矩形的联合的新 Rectangle 对象。
		*/
		__proto.union=function(source,out){
			out || (out=new Rectangle());
			this.clone(out);
			if (source.width <=0 || source.height <=0)return out;
			out.addPoint(source.x,source.y);
			out.addPoint(source.right,source.bottom);
			return this;
		}

		/**
		*返回一个 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。
		*@param out （可选）用于存储结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。。Rectangle.TEMP对象用于对象复用。
		*@return Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。
		*/
		__proto.clone=function(out){
			out || (out=new Rectangle());
			out.x=this.x;
			out.y=this.y;
			out.width=this.width;
			out.height=this.height;
			return out;
		}

		/**
		*当前 Rectangle 对象的水平位置 x 和垂直位置 y 以及高度 width 和宽度 height 以逗号连接成的字符串。
		*/
		__proto.toString=function(){
			return this.x+","+this.y+","+this.width+","+this.height;
		}

		/**
		*检测传入的 Rectangle 对象的属性是否与当前 Rectangle 对象的属性 x、y、width、height 属性值都相等。
		*@param rect 待比较的 Rectangle 对象。
		*@return 如果判断的属性都相等，则返回 true ,否则返回 false。
		*/
		__proto.equals=function(rect){
			if (!rect || rect.x!==this.x || rect.y!==this.y || rect.width!==this.width || rect.height!==this.height)return false;
			return true;
		}

		/**
		*<p>为当前矩形对象加一个点，以使当前矩形扩展为包含当前矩形和此点的最小矩形。</p>
		*<p>此方法会修改本对象。</p>
		*@param x 点的 X 坐标。
		*@param y 点的 Y 坐标。
		*@return 返回此 Rectangle 对象。
		*/
		__proto.addPoint=function(x,y){
			this.x > x && (this.width+=this.x-x,this.x=x);
			this.y > y && (this.height+=this.y-y,this.y=y);
			if (this.width < x-this.x)this.width=x-this.x;
			if (this.height < y-this.y)this.height=y-this.y;
			return this;
		}

		/**
		*@private
		*返回代表当前矩形的顶点数据。
		*@return 顶点数据。
		*/
		__proto._getBoundPoints=function(){
			var rst=Rectangle._temB;
			rst.length=0;
			if (this.width==0 || this.height==0)return rst;
			rst.push(this.x,this.y,this.x+this.width,this.y,this.x,this.y+this.height,this.x+this.width,this.y+this.height);
			return rst;
		}

		/**
		*确定此 Rectangle 对象是否为空。
		*@return 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。
		*/
		__proto.isEmpty=function(){
			if (this.width <=0 || this.height <=0)return true;
			return false;
		}

		/**此矩形右侧的 X 轴坐标。 x 和 width 属性的和。*/
		__getset(0,__proto,'right',function(){
			return this.x+this.width;
		});

		/**此矩形底端的 Y 轴坐标。y 和 height 属性的和。*/
		__getset(0,__proto,'bottom',function(){
			return this.y+this.height;
		});

		Rectangle._getBoundPointS=function(x,y,width,height){
			var rst=Rectangle._temA;
			rst.length=0;
			if (width==0 || height==0)return rst;
			rst.push(x,y,x+width,y,x,y+height,x+width,y+height);
			return rst;
		}

		Rectangle._getWrapRec=function(pointList,rst){
			if (!pointList || pointList.length < 1)return rst ? rst.setTo(0,0,0,0):Rectangle.TEMP.setTo(0,0,0,0);
			rst=rst ? rst :new Rectangle();
			var i,len=pointList.length,minX,maxX,minY,maxY,tPoint=Point.TEMP;
			minX=minY=99999;
			maxX=maxY=-minX;
			for (i=0;i < len;i+=2){
				tPoint.x=pointList[i];
				tPoint.y=pointList[i+1];
				minX=minX < tPoint.x ? minX :tPoint.x;
				minY=minY < tPoint.y ? minY :tPoint.y;
				maxX=maxX > tPoint.x ? maxX :tPoint.x;
				maxY=maxY > tPoint.y ? maxY :tPoint.y;
			}
			return rst.setTo(minX,minY,maxX-minX,maxY-minY);
		}

		Rectangle.EMPTY=new Rectangle();
		Rectangle.TEMP=new Rectangle();
		Rectangle._temB=[];
		Rectangle._temA=[];
		return Rectangle;
	})()


	//class laya.media.SoundManager
	var SoundManager=(function(){
		function SoundManager(){};
		__class(SoundManager,'laya.media.SoundManager');
		__getset(1,SoundManager,'useAudioMusic',function(){
			return SoundManager._useAudioMusic;
			},function(value){
			SoundManager._useAudioMusic=value;
			if (value){
				SoundManager._musicClass=AudioSound;
				}else{
				SoundManager._musicClass=null;
			}
		});

		/**
		*失去焦点后是否自动停止背景音乐。
		*@param v Boolean 失去焦点后是否自动停止背景音乐。
		*
		*/
		/**
		*失去焦点后是否自动停止背景音乐。
		*/
		__getset(1,SoundManager,'autoStopMusic',function(){
			return SoundManager._autoStopMusic;
			},function(v){
			Laya.stage.off("blur",null,SoundManager._stageOnBlur);
			Laya.stage.off("focus",null,SoundManager._stageOnFocus);
			Laya.stage.off("visibilitychange",null,SoundManager._visibilityChange);
			SoundManager._autoStopMusic=v;
			if (v){
				Laya.stage.on("blur",null,SoundManager._stageOnBlur);
				Laya.stage.on("focus",null,SoundManager._stageOnFocus);
				Laya.stage.on("visibilitychange",null,SoundManager._visibilityChange);
			}
		});

		/**
		*背景音乐和所有音效是否静音。
		*/
		__getset(1,SoundManager,'muted',function(){
			return SoundManager._muted;
			},function(value){
			if (value==SoundManager._muted)return;
			if (value){
				SoundManager.stopAllSound();
			}
			SoundManager.musicMuted=value;
			SoundManager._muted=value;
		});

		/**
		*背景音乐（不包括音效）是否静音。
		*/
		__getset(1,SoundManager,'musicMuted',function(){
			return SoundManager._musicMuted;
			},function(value){
			if (value==SoundManager._musicMuted)return;
			if (value){
				if (SoundManager._tMusic){
					if (SoundManager._musicChannel&&!SoundManager._musicChannel.isStopped){
						SoundManager._musicChannel.pause();
						}else{
						SoundManager._musicChannel=null;
					}
					}else{
					SoundManager._musicChannel=null;
				}
				SoundManager._musicMuted=value;
				}else {
				SoundManager._musicMuted=value;
				if (SoundManager._tMusic){
					if (SoundManager._musicChannel){
						SoundManager._musicChannel.resume();
					}
				}
			}
		});

		/**
		*所有音效（不包括背景音乐）是否静音。
		*/
		__getset(1,SoundManager,'soundMuted',function(){
			return SoundManager._soundMuted;
			},function(value){
			SoundManager._soundMuted=value;
		});

		SoundManager.addChannel=function(channel){
			if (SoundManager._channels.indexOf(channel)>=0)return;
			SoundManager._channels.push(channel);
		}

		SoundManager.removeChannel=function(channel){
			var i=0;
			for (i=SoundManager._channels.length-1;i >=0;i--){
				if (SoundManager._channels[i]==channel){
					SoundManager._channels.splice(i,1);
				}
			}
		}

		SoundManager.disposeSoundIfNotUsed=function(url){
			var i=0;
			for (i=SoundManager._channels.length-1;i >=0;i--){
				if (SoundManager._channels[i].url==url){
					return;
				}
			}
			SoundManager.destroySound(url);
		}

		SoundManager._visibilityChange=function(){
			if (Laya.stage.isVisibility){
				SoundManager._stageOnFocus();
				}else {
				SoundManager._stageOnBlur();
			}
		}

		SoundManager._stageOnBlur=function(){
			SoundManager._isActive=false;
			if (SoundManager._musicChannel){
				if (!SoundManager._musicChannel.isStopped){
					SoundManager._blurPaused=true;
					SoundManager._musicChannel.pause();
				}
			}
			SoundManager.stopAllSound();
			Laya.stage.once("mousedown",null,SoundManager._stageOnFocus);
		}

		SoundManager._recoverWebAudio=function(){
			if(WebAudioSound.ctx&&WebAudioSound.ctx.state!="running")
				WebAudioSound.ctx.resume();
		}

		SoundManager._stageOnFocus=function(){
			SoundManager._isActive=true;
			SoundManager._recoverWebAudio();
			Laya.stage.off("mousedown",null,SoundManager._stageOnFocus);
			if (SoundManager._blurPaused){
				if (SoundManager._musicChannel && SoundManager._musicChannel.isStopped){
					SoundManager._blurPaused=false;
					SoundManager._musicChannel.resume();
				}
			}
		}

		SoundManager.playSound=function(url,loops,complete,soundClass,startTime){
			(loops===void 0)&& (loops=1);
			(startTime===void 0)&& (startTime=0);
			if (!SoundManager._isActive || !url)return null;
			if (SoundManager._muted)return null;
			SoundManager._recoverWebAudio();
			url=URL.formatURL(url);
			if (url==SoundManager._tMusic){
				if (SoundManager._musicMuted)return null;
				}else {
				if (Render.isConchApp){
					var ext=Utils.getFileExtension(url);
					if (ext !="wav" && ext !="ogg"){
						alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document.");
						return null;
					}
				}
				if (SoundManager._soundMuted)return null;
			};
			var tSound;
			if (!Browser.onMiniGame){
				tSound=Laya.loader.getRes(url);
			}
			if (!soundClass)soundClass=SoundManager._soundClass;
			if (!tSound){
				tSound=new soundClass();
				tSound.load(url);
				Loader.cacheRes(url,tSound);
			};
			var channel;
			channel=tSound.play(startTime,loops);
			if (!channel)return null;
			channel.url=url;
			channel.volume=(url==SoundManager._tMusic)? SoundManager.musicVolume :SoundManager.soundVolume;
			channel.completeHandler=complete;
			return channel;
		}

		SoundManager.destroySound=function(url){
			var tSound=Laya.loader.getRes(url);
			if (tSound){
				Loader.clearRes(url);
				tSound.dispose();
			}
		}

		SoundManager.playMusic=function(url,loops,complete,startTime){
			(loops===void 0)&& (loops=0);
			(startTime===void 0)&& (startTime=0);
			url=URL.formatURL(url);
			SoundManager._tMusic=url;
			if (SoundManager._musicChannel)SoundManager._musicChannel.stop();
			return SoundManager._musicChannel=SoundManager.playSound(url,loops,complete,SoundManager._musicClass,startTime);
		}

		SoundManager.stopSound=function(url){
			url=URL.formatURL(url);
			var i=0;
			var channel;
			for (i=SoundManager._channels.length-1;i >=0;i--){
				channel=SoundManager._channels[i];
				if (channel.url==url){
					channel.stop();
				}
			}
		}

		SoundManager.stopAll=function(){
			SoundManager._tMusic=null;
			var i=0;
			var channel;
			for (i=SoundManager._channels.length-1;i >=0;i--){
				channel=SoundManager._channels[i];
				channel.stop();
			}
		}

		SoundManager.stopAllSound=function(){
			var i=0;
			var channel;
			for (i=SoundManager._channels.length-1;i >=0;i--){
				channel=SoundManager._channels[i];
				if (channel.url !=SoundManager._tMusic){
					channel.stop();
				}
			}
		}

		SoundManager.stopMusic=function(){
			if (SoundManager._musicChannel)SoundManager._musicChannel.stop();
			SoundManager._tMusic=null;
		}

		SoundManager.setSoundVolume=function(volume,url){
			if (url){
				url=URL.formatURL(url);
				SoundManager._setVolume(url,volume);
				}else {
				SoundManager.soundVolume=volume;
				var i=0;
				var channel;
				for (i=SoundManager._channels.length-1;i >=0;i--){
					channel=SoundManager._channels[i];
					if (channel.url !=SoundManager._tMusic){
						channel.volume=volume;
					}
				}
			}
		}

		SoundManager.setMusicVolume=function(volume){
			SoundManager.musicVolume=volume;
			SoundManager._setVolume(SoundManager._tMusic,volume);
		}

		SoundManager._setVolume=function(url,volume){
			url=URL.formatURL(url);
			var i=0;
			var channel;
			for (i=SoundManager._channels.length-1;i >=0;i--){
				channel=SoundManager._channels[i];
				if (channel.url==url){
					channel.volume=volume;
				}
			}
		}

		SoundManager.musicVolume=1;
		SoundManager.soundVolume=1;
		SoundManager.playbackRate=1;
		SoundManager._useAudioMusic=true;
		SoundManager._muted=false;
		SoundManager._soundMuted=false;
		SoundManager._musicMuted=false;
		SoundManager._tMusic=null;
		SoundManager._musicChannel=null;
		SoundManager._channels=[];
		SoundManager._autoStopMusic=false;
		SoundManager._blurPaused=false;
		SoundManager._isActive=true;
		SoundManager._soundClass=null
		SoundManager._musicClass=null
		SoundManager.autoReleaseSound=true;
		return SoundManager;
	})()


	//class laya.net.LocalStorage
	var LocalStorage=(function(){
		var Storage;
		function LocalStorage(){};
		__class(LocalStorage,'laya.net.LocalStorage');
		LocalStorage.__init__=function(){
			if (!LocalStorage._baseClass){
				LocalStorage._baseClass=Storage;
				Storage.init();
			}
			LocalStorage.items=LocalStorage._baseClass.items;
			LocalStorage.support=LocalStorage._baseClass.support;
		}

		LocalStorage.setItem=function(key,value){
			LocalStorage._baseClass.setItem(key,value);
		}

		LocalStorage.getItem=function(key){
			return LocalStorage._baseClass.getItem(key);
		}

		LocalStorage.setJSON=function(key,value){
			LocalStorage._baseClass.setJSON(key,value);
		}

		LocalStorage.getJSON=function(key){
			return LocalStorage._baseClass.getJSON(key);
		}

		LocalStorage.removeItem=function(key){
			LocalStorage._baseClass.removeItem(key);
		}

		LocalStorage.clear=function(){
			LocalStorage._baseClass.clear();
		}

		LocalStorage._baseClass=null
		LocalStorage.items=null
		LocalStorage.support=false;
		LocalStorage.__init$=function(){
			//class Storage
			Storage=(function(){
				function Storage(){};
				__class(Storage,'');
				Storage.init=function(){
					try{Storage.items=window.localStorage;Storage.setItem('laya','1');Storage.removeItem('laya');Storage.support=true;}catch(e){}if(!Storage.support)console.log('LocalStorage is not supprot or browser is private mode.');
				}
				Storage.setItem=function(key,value){
					try {
						Storage.support && Storage.items.setItem(key,value);
						}catch (e){
						console.warn("set localStorage failed",e);
					}
				}
				Storage.getItem=function(key){
					return Storage.support ? Storage.items.getItem(key):null;
				}
				Storage.setJSON=function(key,value){
					try {
						Storage.support && Storage.items.setItem(key,JSON.stringify(value));
						}catch (e){
						console.warn("set localStorage failed",e);
					}
				}
				Storage.getJSON=function(key){
					return JSON.parse(Storage.support ? Storage.items.getItem(key):null);
				}
				Storage.removeItem=function(key){
					Storage.support && Storage.items.removeItem(key);
				}
				Storage.clear=function(){
					Storage.support && Storage.items.clear();
				}
				Storage.items=null
				Storage.support=false;
				return Storage;
			})()
		}

		return LocalStorage;
	})()


	//class laya.net.ResourceVersion
	var ResourceVersion=(function(){
		function ResourceVersion(){};
		__class(ResourceVersion,'laya.net.ResourceVersion');
		ResourceVersion.enable=function(manifestFile,callback,type){
			(type===void 0)&& (type=2);
			laya.net.ResourceVersion.type=type;
			Laya.loader.load(manifestFile,Handler.create(null,ResourceVersion.onManifestLoaded,[callback]),null,"json");
			URL.customFormat=ResourceVersion.addVersionPrefix;
		}

		ResourceVersion.onManifestLoaded=function(callback,data){
			ResourceVersion.manifest=data;
			callback.run();
			if (!data){
				console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。");
			}
		}

		ResourceVersion.addVersionPrefix=function(originURL){
			if (ResourceVersion.manifest && ResourceVersion.manifest[originURL]){
				if (ResourceVersion.type==2)return ResourceVersion.manifest[originURL];
				return ResourceVersion.manifest[originURL]+"/"+originURL;
			}
			return originURL;
		}

		ResourceVersion.FOLDER_VERSION=1;
		ResourceVersion.FILENAME_VERSION=2;
		ResourceVersion.manifest=null
		ResourceVersion.type=1;
		return ResourceVersion;
	})()


	//class laya.net.TTFLoader
	var TTFLoader=(function(){
		function TTFLoader(){
			this.fontName=null;
			this.complete=null;
			this.err=null;
			this._fontTxt=null;
			this._url=null;
			this._div=null;
			this._txtWidth=NaN;
			this._http=null;
		}

		__class(TTFLoader,'laya.net.TTFLoader');
		var __proto=TTFLoader.prototype;
		__proto.load=function(fontPath){
			this._url=fontPath;
			var tArr=fontPath.split(".ttf")[0].split("/");
			this.fontName=tArr[tArr.length-1];
			if (Browser.window.conch){
				this._loadConch();
			}else
			if (Browser.window.FontFace){
				this._loadWithFontFace()
			}
			else {
				this._loadWithCSS();
			}
		}

		__proto._loadConch=function(){
			this._http=new HttpRequest();
			this._http.on("error",this,this._onErr);
			this._http.on("complete",this,this._onHttpLoaded);
			this._http.send(this._url,null,"get","arraybuffer");
		}

		__proto._onHttpLoaded=function(data){
			Browser.window.conch.setFontFaceFromBuffer(this.fontName,data);
			this._clearHttp();
			this._complete();
		}

		__proto._clearHttp=function(){
			if (this._http){
				this._http.off("error",this,this._onErr);
				this._http.off("complete",this,this._onHttpLoaded);
				this._http=null;
			}
		}

		__proto._onErr=function(){
			this._clearHttp();
			if (this.err){
				this.err.runWith("fail:"+this._url);
				this.err=null;
			}
		}

		__proto._complete=function(){
			Laya.timer.clear(this,this._complete);
			Laya.timer.clear(this,this._checkComplete);
			if (this._div && this._div.parentNode){
				this._div.parentNode.removeChild(this._div);
				this._div=null;
			}
			if (this.complete){
				this.complete.runWith(this);
				this.complete=null;
			}
		}

		__proto._checkComplete=function(){
			if (RunDriver.measureText("LayaTTFFont",this._fontTxt).width !=this._txtWidth){
				this._complete();
			}
		}

		__proto._loadWithFontFace=function(){
			var fontFace=new Browser.window.FontFace(this.fontName,"url('"+this._url+"')");
			Browser.window.document.fonts.add(fontFace);
			var self=this;
			fontFace.loaded.then((function(){
				self._complete()
			}));
			fontFace.load();
		}

		__proto._createDiv=function(){
			this._div=Browser.createElement("div");
			this._div.innerHTML="laya";
			var _style=this._div.style;
			_style.fontFamily=this.fontName;
			_style.position="absolute";
			_style.left="-100px";
			_style.top="-100px";
			Browser.document.body.appendChild(this._div);
		}

		__proto._loadWithCSS=function(){
			var _$this=this;
			var fontStyle=Browser.createElement("style");
			fontStyle.type="text/css";
			Browser.document.body.appendChild(fontStyle);
			fontStyle.textContent="@font-face { font-family:'"+this.fontName+"'; src:url('"+this._url+"');}";
			this._fontTxt="40px "+this.fontName;
			this._txtWidth=RunDriver.measureText("LayaTTFFont",this._fontTxt).width;
			var self=this;
			fontStyle.onload=function (){
				Laya.timer.once(10000,self,_$this._complete);
			};
			Laya.timer.loop(20,this,this._checkComplete);
			this._createDiv();
		}

		TTFLoader._testString="LayaTTFFont";
		return TTFLoader;
	})()


	//class laya.net.URL
	var URL=(function(){
		function URL(url){
			this._url=null;
			this._path=null;
			this._url=URL.formatURL(url);
			this._path=URL.getPath(url);
		}

		__class(URL,'laya.net.URL');
		var __proto=URL.prototype;
		/**地址的路径。*/
		__getset(0,__proto,'path',function(){
			return this._path;
		});

		/**格式化后的地址。*/
		__getset(0,__proto,'url',function(){
			return this._url;
		});

		URL.formatURL=function(url,base){
			if (!url)return "null path";
			if (url.indexOf(":")> 0)return url;
			if (URL.customFormat !=null)url=URL.customFormat(url,base);
			var char1=url.charAt(0);
			if (char1==="."){
				return URL.formatRelativePath((base || URL.basePath)+url);
				}else if (char1==='~'){
				return URL.rootPath+url.substring(1);
				}else if (char1==="d"){
				if (url.indexOf("data:image")===0)return url;
				}else if (char1==="/"){
				return url;
			}
			return (base || URL.basePath)+url;
		}

		URL.formatRelativePath=function(value){
			var parts=value.split("/");
			for (var i=0,len=parts.length;i < len;i++){
				if (parts[i]=='..'){
					parts.splice(i-1,2);
					i-=2;
				}
			}
			return parts.join('/');
		}

		URL.isAbsolute=function(url){
			return url.indexOf(":")> 0 || url.charAt(0)=='/';
		}

		URL.getPath=function(url){
			var ofs=url.lastIndexOf('/');
			return ofs > 0 ? url.substr(0,ofs+1):"";
		}

		URL.getFileName=function(url){
			var ofs=url.lastIndexOf('/');
			return ofs > 0 ? url.substr(ofs+1):url;
		}

		URL.version={};
		URL.basePath="";
		URL.rootPath="";
		URL.customFormat=function(url){
			var newUrl=URL.version[url];
			if (!Render.isConchApp && newUrl)url+="?v="+newUrl;
			return url;
		}

		return URL;
	})()


	//class laya.webgl.shader.ShaderValue
	var ShaderValue=(function(){
		function ShaderValue(){}
		__class(ShaderValue,'laya.webgl.shader.ShaderValue');
		return ShaderValue;
	})()


	//class laya.renders.Render
	var Render=(function(){
		function Render(width,height){
			this._timeId=0;
			var style=Render._mainCanvas.source.style;
			style.position='absolute';
			style.top=style.left="0px";
			style.background="#000000";
			Render._mainCanvas.source.id="layaCanvas";
			var isWebGl=laya.renders.Render.isWebGL;
			Render._mainCanvas.source.width=width;
			Render._mainCanvas.source.height=height;
			isWebGl && Render.WebGL.init(Render._mainCanvas,width,height);
			Browser.container.appendChild(Render._mainCanvas.source);
			Render._context=new RenderContext(width,height,isWebGl ? null :Render._mainCanvas);
			Render._context.ctx.setIsMainContext();
			Browser.window.requestAnimationFrame(loop);
			function loop (){
				Laya.stage._loop();
				Browser.window.requestAnimationFrame(loop);
			}
			Laya.stage.on("visibilitychange",this,this._onVisibilitychange);
		}

		__class(Render,'laya.renders.Render');
		var __proto=Render.prototype;
		/**@private */
		__proto._onVisibilitychange=function(){
			if (!Laya.stage.isVisibility){
				this._timeId=Browser.window.setInterval(this._enterFrame,1000);
				}else if (this._timeId !=0){
				Browser.window.clearInterval(this._timeId);
			}
		}

		/**@private */
		__proto._enterFrame=function(e){
			Laya.stage._loop();
		}

		/**目前使用的渲染器。*/
		__getset(1,Render,'context',function(){
			return Render._context;
		});

		/**渲染使用的原生画布引用。 */
		__getset(1,Render,'canvas',function(){
			return Render._mainCanvas.source;
		});

		Render._context=null
		Render._mainCanvas=null
		Render.WebGL=null
		Render.isConchNode=false;
		Render.isConchApp=false;
		Render.isConchWebGL=false;
		Render.isWebGL=false;
		Render.is3DMode=false;
		Render.optimizeTextureMemory=function(url,texture){
			return true;
		}

		Render.__init$=function(){
			window.ConchRenderType=window.ConchRenderType||1;
			window.ConchRenderType|=(!window.conch?0:0x04);;{
				Render.isConchNode=(window.ConchRenderType & 5)==5;
				Render.isConchApp=(window.ConchRenderType & 0x04)==0x04;
				Render.isConchWebGL=window.ConchRenderType==6;
			};;
		}

		return Render;
	})()


	//class laya.renders.RenderContext
	var RenderContext=(function(){
		function RenderContext(width,height,canvas){
			this.x=0;
			this.y=0;
			//this.canvas=null;
			//this.ctx=null;
			this._drawTexture=function(x,y,args){
				if (args[0].loaded)this.ctx.drawTexture(args[0],args[1],args[2],args[3],args[4],x,y);
			}
			this._fillTexture=function(x,y,args){
				if (args[0].loaded)this.ctx.fillTexture(args[0],args[1]+x,args[2]+y,args[3],args[4],args[5],args[6],args[7]);
			}
			this._drawTextureWithTransform=function(x,y,args){
				if (args[0].loaded)this.ctx.drawTextureWithTransform(args[0],args[1],args[2],args[3],args[4],args[5],x,y,args[6]);
			}
			this._fillQuadrangle=function(x,y,args){
				this.ctx.fillQuadrangle(args[0],args[1],args[2],args[3],args[4]);
			}
			this._drawRect=function(x,y,args){
				var ctx=this.ctx;
				if (args[4] !=null){
					ctx.fillStyle=args[4];
					ctx.fillRect(x+args[0],y+args[1],args[2],args[3],null);
				}
				if (args[5] !=null){
					ctx.strokeStyle=args[5];
					ctx.lineWidth=args[6];
					ctx.strokeRect(x+args[0],y+args[1],args[2],args[3],args[6]);
				}
			}
			this._drawPie=function(x,y,args){
				var ctx=this.ctx;
				Render.isWebGL && ctx.setPathId(args[8]);
				ctx.beginPath();
				if (Render.isWebGL){
					ctx.movePath(args[0]+x,args[1]+y);
					ctx.moveTo(0,0);
					}else {
					ctx.moveTo(x+args[0],y+args[1]);
				}
				ctx.arc(x+args[0],y+args[1],args[2],args[3],args[4]);
				ctx.closePath();
				this._fillAndStroke(args[5],args[6],args[7],true);
			}
			this._clipRect=function(x,y,args){
				this.ctx.clipRect(x+args[0],y+args[1],args[2],args[3]);
			}
			this._fillRect=function(x,y,args){
				this.ctx.fillRect(x+args[0],y+args[1],args[2],args[3],args[4]);
			}
			this._drawCircle=function(x,y,args){
				var ctx=this.ctx;
				Render.isWebGL && ctx.setPathId(args[6]);
				Stat.drawCall++;
				ctx.beginPath();
				Render.isWebGL && ctx.movePath(args[0]+x,args[1]+y);
				ctx.arc(args[0]+x,args[1]+y,args[2],0,RenderContext.PI2);
				ctx.closePath();
				this._fillAndStroke(args[3],args[4],args[5],true);
			}
			this._fillCircle=function(x,y,args){
				Stat.drawCall++;
				var ctx=this.ctx;
				ctx.beginPath();
				ctx.fillStyle=args[3];
				ctx.arc(args[0]+x,args[1]+y,args[2],0,RenderContext.PI2);
				ctx.fill();
			}
			this._setShader=function(x,y,args){
				this.ctx.setShader(args[0]);
			}
			this._drawLine=function(x,y,args){
				var ctx=this.ctx;
				Render.isWebGL && ctx.setPathId(args[6]);
				ctx.beginPath();
				ctx.strokeStyle=args[4];
				ctx.lineWidth=args[5];
				if (Render.isWebGL){
					ctx.movePath(x,y);
					ctx.moveTo(args[0],args[1]);
					ctx.lineTo(args[2],args[3]);
					}else {
					ctx.moveTo(x+args[0],y+args[1]);
					ctx.lineTo(x+args[2],y+args[3]);
				}
				ctx.stroke();
			}
			this._drawLines=function(x,y,args){
				var ctx=this.ctx;
				Render.isWebGL && ctx.setPathId(args[5]);
				ctx.beginPath();
				x+=args[0],y+=args[1];
				Render.isWebGL && ctx.movePath(x,y);
				ctx.strokeStyle=args[3];
				ctx.lineWidth=args[4];
				var points=args[2];
				var i=2,n=points.length;
				if (Render.isWebGL){
					ctx.moveTo(points[0],points[1]);
					while (i < n){
						ctx.lineTo(points[i++],points[i++]);
					}
					}else {
					ctx.moveTo(x+points[0],y+points[1]);
					while (i < n){
						ctx.lineTo(x+points[i++],y+points[i++]);
					}
				}
				ctx.stroke();
			}
			this._drawLinesWebGL=function(x,y,args){
				this.ctx.drawLines(x+this.x+args[0],y+this.y+args[1],args[2],args[3],args[4]);
			}
			this._drawCurves=function(x,y,args){
				this.ctx.drawCurves(x,y,args);
			}
			this._draw=function(x,y,args){
				args[0].call(null,this,x,y);
			}
			this._transformByMatrix=function(x,y,args){
				this.ctx.transformByMatrix(args[0]);
			}
			this._setTransform=function(x,y,args){
				this.ctx.setTransform(args[0],args[1],args[2],args[3],args[4],args[5]);
			}
			this._setTransformByMatrix=function(x,y,args){
				this.ctx.setTransformByMatrix(args[0]);
			}
			this._save=function(x,y,args){
				this.ctx.save();
			}
			this._restore=function(x,y,args){
				this.ctx.restore();
			}
			this._translate=function(x,y,args){
				this.ctx.translate(args[0],args[1]);
			}
			this._transform=function(x,y,args){
				this.ctx.translate(args[1]+x,args[2]+y);
				var mat=args[0];
				this.ctx.transform(mat.a,mat.b,mat.c,mat.d,mat.tx,mat.ty);
				this.ctx.translate(-x-args[1],-y-args[2]);
			}
			this._rotate=function(x,y,args){
				this.ctx.translate(args[1]+x,args[2]+y);
				this.ctx.rotate(args[0]);
				this.ctx.translate(-x-args[1],-y-args[2]);
			}
			this._scale=function(x,y,args){
				this.ctx.translate(args[2]+x,args[3]+y);
				this.ctx.scale(args[0],args[1]);
				this.ctx.translate(-x-args[2],-y-args[3]);
			}
			this._alpha=function(x,y,args){
				this.ctx.globalAlpha *=args[0];
			}
			this._setAlpha=function(x,y,args){
				this.ctx.globalAlpha=args[0];
			}
			this._fillText=function(x,y,args){
				this.ctx.fillText(args[0],args[1]+x,args[2]+y,args[3],args[4],args[5]);
			}
			this._strokeText=function(x,y,args){
				this.ctx.strokeText(args[0],args[1]+x,args[2]+y,args[3],args[4],args[5],args[6]);
			}
			this._fillBorderText=function(x,y,args){
				this.ctx.fillBorderText(args[0],args[1]+x,args[2]+y,args[3],args[4],args[5],args[6],args[7]);
			}
			this._blendMode=function(x,y,args){
				this.ctx.globalCompositeOperation=args[0];
			}
			this._beginClip=function(x,y,args){
				this.ctx.beginClip && this.ctx.beginClip(x+args[0],y+args[1],args[2],args[3]);
			}
			this._setIBVB=function(x,y,args){
				this.ctx.setIBVB(args[0]+x,args[1]+y,args[2],args[3],args[4],args[5],args[6],args[7]);
			}
			this._fillTrangles=function(x,y,args){
				this.ctx.fillTrangles(args[0],args[1]+x,args[2]+y,args[3],args[4]);
			}
			this._drawPath=function(x,y,args){
				var ctx=this.ctx;
				Render.isWebGL && ctx.setPathId(-1);
				ctx.beginPath();
				x+=args[0],y+=args[1];
				Render.isWebGL && ctx.movePath(x,y);
				var paths=args[2];
				for (var i=0,n=paths.length;i < n;i++){
					var path=paths[i];
					switch (path[0]){
						case "moveTo":
							Render.isWebGL ? ctx.moveTo(path[1],path[2]):ctx.moveTo(x+path[1],y+path[2]);
							break ;
						case "lineTo":
							Render.isWebGL ? ctx.lineTo(path[1],path[2]):ctx.lineTo(x+path[1],y+path[2]);
							break ;
						case "arcTo":
							Render.isWebGL ? ctx.arcTo(path[1],path[2],path[3],path[4],path[5]):ctx.arcTo(x+path[1],y+path[2],x+path[3],y+path[4],path[5]);
							break ;
						case "closePath":
							ctx.closePath();
							break ;
						}
				};
				var brush=args[3];
				if (brush !=null){
					ctx.fillStyle=brush.fillStyle;
					ctx.fill();
				};
				var pen=args[4];
				if (pen !=null){
					ctx.strokeStyle=pen.strokeStyle;
					ctx.lineWidth=pen.lineWidth || 1;
					ctx.lineJoin=pen.lineJoin;
					ctx.lineCap=pen.lineCap;
					ctx.miterLimit=pen.miterLimit;
					ctx.stroke();
				}
			}
			this.drawPoly=function(x,y,args){
				this.ctx.drawPoly(x+this.x+args[0],y+this.y+args[1],args[2],args[3],args[4],args[5],args[6]);
			}
			this._drawPoly=function(x,y,args){
				var ctx=this.ctx;
				var points=args[2];
				var i=2,n=points.length;
				if (Render.isWebGL){
					ctx.setPathId(args[6]);
					ctx.beginPath();
					x+=args[0],y+=args[1];
					ctx.movePath(x,y);
					ctx.moveTo(points[0],points[1]);
					while (i < n){
						ctx.lineTo(points[i++],points[i++]);
					}
					}else {
					ctx.beginPath();
					x+=args[0],y+=args[1];
					ctx.moveTo(x+points[0],y+points[1]);
					while (i < n){
						ctx.lineTo(x+points[i++],y+points[i++]);
					}
				}
				ctx.closePath();
				this._fillAndStroke(args[3],args[4],args[5],args[7]);
			}
			this._drawSkin=function(x,y,args){
				var tSprite=args[0];
				if (tSprite){
					var ctx=this.ctx;
					tSprite.render(ctx,x,y);
				}
			}
			this._drawParticle=function(x,y,args){
				this.ctx.drawParticle(x+this.x,y+this.y,args[0]);
			}
			this._setFilters=function(x,y,args){
				this.ctx.setFilters(args);
			}
			if (canvas){
				this.ctx=canvas.getContext('2d');
				}else {
				canvas=HTMLCanvas.create("3D");
				this.ctx=RunDriver.createWebGLContext2D(canvas);
				canvas._setContext(this.ctx);
			}
			canvas.size(width,height);
			this.canvas=canvas;
		}

		__class(RenderContext,'laya.renders.RenderContext');
		var __proto=RenderContext.prototype;
		/**销毁当前渲染环境*/
		__proto.destroy=function(){
			if (this.canvas){
				this.canvas.destroy();
				this.canvas=null;
				this.ctx=null;
			}
			if (this.ctx){
				this.ctx.destroy();
				this.ctx=null;
			}
		}

		__proto.drawTexture=function(tex,x,y,width,height){
			if (tex.loaded)this.ctx.drawTexture(tex,x,y,width,height,this.x,this.y);
		}

		__proto._drawTextures=function(x,y,args){
			if (args[0].loaded)this.ctx.drawTextures(args[0],args[1],x+this.x,y+this.y);
		}

		__proto.drawTextureWithTransform=function(tex,x,y,width,height,m,alpha){
			if (tex.loaded)this.ctx.drawTextureWithTransform(tex,x,y,width,height,m,this.x,this.y,alpha);
		}

		__proto.fillQuadrangle=function(tex,x,y,point4,m){
			this.ctx.fillQuadrangle(tex,x,y,point4,m);
		}

		__proto.drawCanvas=function(canvas,x,y,width,height){
			this.ctx.drawCanvas(canvas,x+this.x,y+this.y,width,height);
		}

		__proto.drawRect=function(x,y,width,height,color,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var ctx=this.ctx;
			ctx.strokeStyle=color;
			ctx.lineWidth=lineWidth;
			ctx.strokeRect(x+this.x,y+this.y,width,height,lineWidth);
		}

		__proto._fillAndStroke=function(fillColor,strokeColor,lineWidth,isConvexPolygon){
			(isConvexPolygon===void 0)&& (isConvexPolygon=false);
			var ctx=this.ctx;
			if (fillColor !=null){
				ctx.fillStyle=fillColor;
				if (Render.isWebGL){
					ctx.fill(isConvexPolygon);
					}else {
					ctx.fill();
				}
			}
			if (strokeColor !=null && lineWidth > 0){
				ctx.strokeStyle=strokeColor;
				ctx.lineWidth=lineWidth;
				ctx.stroke();
			}
		}

		//ctx.translate(-x-args[0],-y-args[1]);
		__proto.clipRect=function(x,y,width,height){
			this.ctx.clipRect(x+this.x,y+this.y,width,height);
		}

		__proto.fillRect=function(x,y,width,height,fillStyle){
			this.ctx.fillRect(x+this.x,y+this.y,width,height,fillStyle);
		}

		__proto.drawCircle=function(x,y,radius,color,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			Stat.drawCall++;
			var ctx=this.ctx;
			ctx.beginPath();
			ctx.strokeStyle=color;
			ctx.lineWidth=lineWidth;
			ctx.arc(x+this.x,y+this.y,radius,0,RenderContext.PI2);
			ctx.stroke();
		}

		/**
		*绘制三角形
		*@param x
		*@param y
		*@param tex
		*@param args [x,y,texture,vertices,indices,uvs,matrix]
		*/
		__proto.drawTriangles=function(x,y,args){
			if (Render.isWebGL){
				this.ctx.drawTriangles(args[0],x+args[1],y+args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
				}else {
				var indices=args[5];
				var i=0,len=indices.length;
				var ctx=this.ctx;
				for (i=0;i < len;i+=3){
					var index0=indices[i] *2;
					var index1=indices[i+1] *2;
					var index2=indices[i+2] *2;
					ctx.drawTriangle(args[0],args[3],args[4],index0,index1,index2,args[6],true);
				}
			}
		}

		__proto.fillCircle=function(x,y,radius,color){
			Stat.drawCall++;
			var ctx=this.ctx;
			ctx.beginPath();
			ctx.fillStyle=color;
			ctx.arc(x+this.x,y+this.y,radius,0,RenderContext.PI2);
			ctx.fill();
		}

		__proto.setShader=function(shader){
			this.ctx.setShader(shader);
		}

		__proto.drawLine=function(fromX,fromY,toX,toY,color,lineWidth){
			(lineWidth===void 0)&& (lineWidth=1);
			var ctx=this.ctx;
			ctx.beginPath();
			ctx.strokeStyle=color;
			ctx.lineWidth=lineWidth;
			ctx.moveTo(this.x+fromX,this.y+fromY);
			ctx.lineTo(this.x+toX,this.y+toY);
			ctx.stroke();
		}

		__proto.clear=function(){
			this.ctx.clear();
		}

		__proto.transformByMatrix=function(value){
			this.ctx.transformByMatrix(value);
		}

		__proto.setTransform=function(a,b,c,d,tx,ty){
			this.ctx.setTransform(a,b,c,d,tx,ty);
		}

		__proto.setTransformByMatrix=function(value){
			this.ctx.setTransformByMatrix(value);
		}

		__proto.save=function(){
			this.ctx.save();
		}

		__proto.restore=function(){
			this.ctx.restore();
		}

		__proto.translate=function(x,y){
			this.ctx.translate(x,y);
		}

		__proto.transform=function(a,b,c,d,tx,ty){
			this.ctx.transform(a,b,c,d,tx,ty);
		}

		__proto.rotate=function(angle){
			this.ctx.rotate(angle);
		}

		__proto.scale=function(scaleX,scaleY){
			this.ctx.scale(scaleX,scaleY);
		}

		__proto.alpha=function(value){
			this.ctx.globalAlpha *=value;
		}

		__proto.setAlpha=function(value){
			this.ctx.globalAlpha=value;
		}

		__proto.fillWords=function(words,x,y,font,color,underLine){
			(underLine===void 0)&& (underLine=0);
			this.ctx.fillWords(words,x,y,font,color,underLine);
		}

		/***@private */
		__proto.fillBorderWords=function(words,x,y,font,fillColor,borderColor,lineWidth){
			this.ctx.fillBorderWords(words,x,y,font,fillColor,borderColor,lineWidth);
		}

		__proto.fillText=function(text,x,y,font,color,textAlign){
			this.ctx.fillText(text,x+this.x,y+this.y,font,color,textAlign);
		}

		__proto.strokeText=function(text,x,y,font,color,lineWidth,textAlign){
			this.ctx.strokeText(text,x+this.x,y+this.y,font,color,lineWidth,textAlign);
		}

		__proto.blendMode=function(type){
			this.ctx.globalCompositeOperation=type;
		}

		__proto.flush=function(){
			this.ctx.flush && this.ctx.flush();
		}

		__proto.addRenderObject=function(o){
			this.ctx.addRenderObject(o);
		}

		__proto.beginClip=function(x,y,w,h){
			this.ctx.beginClip && this.ctx.beginClip(x,y,w,h);
		}

		__proto.endClip=function(){
			this.ctx.endClip && this.ctx.endClip();
		}

		__proto.fillTrangles=function(x,y,args){
			this.ctx.fillTrangles(args[0],args[1],args[2],args[3],args.length > 4 ? args[4] :null);
		}

		RenderContext.PI2=2 *Math.PI;
		return RenderContext;
	})()


	//class laya.renders.RenderSprite
	var RenderSprite=(function(){
		function RenderSprite(type,next){
			//this._next=null;
			//this._fun=null;
			this._next=next || RenderSprite.NORENDER;
			switch (type){
				case 0:
					this._fun=this._no;
					return;
				case 0x01:
					this._fun=this._image;
					return;
				case 0x02:
					this._fun=this._alpha;
					return;
				case 0x04:
					this._fun=this._transform;
					return;
				case 0x08:
					this._fun=this._blend;
					return;
				case 0x10:
					this._fun=this._canvas;
					return;
				case 0x40:
					this._fun=this._mask;
					return;
				case 0x80:
					this._fun=this._clip;
					return;
				case 0x100:
					this._fun=this._style;
					return;
				case 0x200:
					this._fun=this._graphics;
					return;
				case 0x800:
					this._fun=this._childs;
					return;
				case 0x400:
					this._fun=this._custom;
					return;
				case 0x01 | 0x200:
					this._fun=this._image2;
					return;
				case 0x01 | 0x04 | 0x200:
					this._fun=this._image2;
					return;
				case 0x20:
					this._fun=Filter._filter;
					return;
				case 0x11111:
					this._fun=RenderSprite._initRenderFun;
					return;
				}
			this.onCreate(type);
		}

		__class(RenderSprite,'laya.renders.RenderSprite');
		var __proto=RenderSprite.prototype;
		__proto.onCreate=function(type){}
		__proto._style=function(sprite,context,x,y){
			sprite._style.render(sprite,context,x,y);
			var next=this._next;
			next._fun.call(next,sprite,context,x,y);
		}

		__proto._no=function(sprite,context,x,y){}
		__proto._custom=function(sprite,context,x,y){
			sprite.customRender(context,x,y);
			var tf=sprite._style._tf;
			this._next._fun.call(this._next,sprite,context,x-tf.translateX,y-tf.translateY);
		}

		__proto._clip=function(sprite,context,x,y){
			var next=this._next;
			if (next==RenderSprite.NORENDER)return;
			var r=sprite._style.scrollRect;
			context.ctx.save();
			context.ctx.clipRect(x,y,r.width,r.height);
			next._fun.call(next,sprite,context,x-r.x,y-r.y);
			context.ctx.restore();
		}

		__proto._blend=function(sprite,context,x,y){
			var style=sprite._style;
			if (style.blendMode){
				context.ctx.globalCompositeOperation=style.blendMode;
			};
			var next=this._next;
			next._fun.call(next,sprite,context,x,y);
			context.ctx.globalCompositeOperation="source-over";
		}

		__proto._mask=function(sprite,context,x,y){
			var next=this._next;
			next._fun.call(next,sprite,context,x,y);
			var mask=sprite.mask;
			if (mask){
				context.ctx.globalCompositeOperation="destination-in";
				if (mask.numChildren > 0 || !mask.graphics._isOnlyOne()){
					mask.cacheAsBitmap=true;
				}
				mask.render(context,x-sprite.pivotX,y-sprite.pivotY);
			}
			context.ctx.globalCompositeOperation="source-over";
		}

		__proto._graphics=function(sprite,context,x,y){
			var tf=sprite._style._tf;
			sprite._graphics && sprite._graphics._render(sprite,context,x-tf.translateX,y-tf.translateY);
			var next=this._next;
			next._fun.call(next,sprite,context,x,y);
		}

		__proto._image=function(sprite,context,x,y){
			var style=sprite._style;
			context.ctx.drawTexture2(x,y,style._tf.translateX,style._tf.translateY,sprite.transform,style.alpha,style.blendMode,sprite._graphics._one);
		}

		__proto._image2=function(sprite,context,x,y){
			var tf=sprite._style._tf;
			context.ctx.drawTexture2(x,y,tf.translateX,tf.translateY,sprite.transform,1,null,sprite._graphics._one);
		}

		__proto._alpha=function(sprite,context,x,y){
			var style=sprite._style;
			var alpha;
			if ((alpha=style.alpha)> 0.01 || sprite._needRepaint()){
				var temp=context.ctx.globalAlpha;
				context.ctx.globalAlpha *=alpha;
				var next=this._next;
				next._fun.call(next,sprite,context,x,y);
				context.ctx.globalAlpha=temp;
			}
		}

		__proto._transform=function(sprite,context,x,y){
			var transform=sprite.transform,_next=this._next;
			if (transform && _next !=RenderSprite.NORENDER){
				context.save();
				context.transform(transform.a,transform.b,transform.c,transform.d,transform.tx+x,transform.ty+y);
				_next._fun.call(_next,sprite,context,0,0);
				context.restore();
			}else
			_next._fun.call(_next,sprite,context,x,y);
		}

		__proto._childs=function(sprite,context,x,y){
			var style=sprite._style;
			var tf=style._tf;
			x=x-tf.translateX+style.paddingLeft;
			y=y-tf.translateY+style.paddingTop;
			if (style._calculation){
				var words=sprite._getWords();
				if (words){
					var tStyle=style;
					if (tStyle){
						if (tStyle.stroke){
							context.fillBorderWords(words,x,y,tStyle.font,tStyle.color,tStyle.strokeColor,tStyle.stroke);
							}else{
							context.fillWords(words,x,y,tStyle.font,tStyle.color,tStyle.underLine);
						}
					}
				}
			};
			var childs=sprite._childs,n=childs.length,ele;
			if (sprite.viewport || (sprite.optimizeScrollRect && sprite._style.scrollRect)){
				var rect=sprite.viewport || sprite._style.scrollRect;
				var left=rect.x;
				var top=rect.y;
				var right=rect.right;
				var bottom=rect.bottom;
				var _x=NaN,_y=NaN;
				for (i=0;i < n;++i){
					if ((ele=childs [i]).visible && ((_x=ele._x)< right && (_x+ele.width)> left && (_y=ele._y)< bottom && (_y+ele.height)> top)){
						ele.render(context,x,y);
					}
				}
				}else {
				for (var i=0;i < n;++i)
				(ele=(childs [i]))._style.visible && ele.render(context,x,y);
			}
		}

		//}
		__proto._canvas=function(sprite,context,x,y){
			var _cacheCanvas=sprite._$P.cacheCanvas;
			if (!_cacheCanvas){
				this._next._fun.call(this._next,sprite,context,x,y);
				return;
			}
			_cacheCanvas.type==='bitmap' ? (Stat.canvasBitmap++):(Stat.canvasNormal++);
			var tx=_cacheCanvas.ctx;
			if (sprite._needRepaint()|| !tx){
				this._canvas_repaint(sprite,context,x,y);
			}
			else{
				var tRec=_cacheCanvas._cacheRec;
				context.drawCanvas(tx.canvas,x+tRec.x,y+tRec.y,tRec.width,tRec.height);
			}
		}

		__proto._canvas_repaint=function(sprite,context,x,y){
			var _cacheCanvas=sprite._$P.cacheCanvas;
			var _next=this._next;
			if (!_cacheCanvas){
				_next._fun.call(_next,sprite,tx,x,y);
				return;
			};
			var tx=_cacheCanvas.ctx;
			var _repaint=sprite._needRepaint()|| (!tx);
			var canvas;
			var left;
			var top;
			var tRec;
			var tCacheType=_cacheCanvas.type;
			tCacheType==='bitmap' ? (Stat.canvasBitmap++):(Stat.canvasNormal++);
			if (_repaint){
				if (!_cacheCanvas._cacheRec)
					_cacheCanvas._cacheRec=new Rectangle();
				var w,h;
				if (!Render.isWebGL || tCacheType==="bitmap"){
					tRec=sprite.getSelfBounds();
					tRec.x=tRec.x-sprite.pivotX;
					tRec.y=tRec.y-sprite.pivotY;
					tRec.x=tRec.x-16;
					tRec.y=tRec.y-16;
					tRec.width=tRec.width+32;
					tRec.height=tRec.height+32;
					tRec.x=Math.floor(tRec.x+x)-x;
					tRec.y=Math.floor(tRec.y+y)-y;
					tRec.width=Math.floor(tRec.width);
					tRec.height=Math.floor(tRec.height);
					_cacheCanvas._cacheRec.copyFrom(tRec);
					}else{
					_cacheCanvas._cacheRec.setTo(-sprite.pivotX,-sprite.pivotY,1,1);
				}
				tRec=_cacheCanvas._cacheRec;
				var scaleX=Render.isWebGL ? 1 :Browser.pixelRatio *Laya.stage.clientScaleX;
				var scaleY=Render.isWebGL ? 1 :Browser.pixelRatio *Laya.stage.clientScaleY;
				if (!Render.isWebGL){
					var chainScaleX=1;
					var chainScaleY=1;
					var tar;
					tar=sprite;
					while (tar && tar !=Laya.stage){
						chainScaleX *=tar.scaleX;
						chainScaleY *=tar.scaleY;
						tar=tar.parent;
					}
					if (Render.isWebGL){
						if (chainScaleX < 1)scaleX *=chainScaleX;
						if (chainScaleY < 1)scaleY *=chainScaleY;
						}else {
						if (chainScaleX > 1)scaleX *=chainScaleX;
						if (chainScaleY > 1)scaleY *=chainScaleY;
					}
				}
				if (sprite.scrollRect){
					var scrollRect=sprite.scrollRect;
					tRec.x-=scrollRect.x;
					tRec.y-=scrollRect.y;
				}
				w=tRec.width *scaleX;
				h=tRec.height *scaleY;
				left=tRec.x;
				top=tRec.y;
				if (Render.isWebGL && tCacheType==='bitmap' && (w > 2048 || h > 2048)){
					console.warn("cache bitmap size larger than 2048,cache ignored");
					if (_cacheCanvas.ctx){
						Pool.recover("RenderContext",_cacheCanvas.ctx);
						_cacheCanvas.ctx.canvas.size(0,0);
						_cacheCanvas.ctx=null;
					}
					_next._fun.call(_next,sprite,context,x,y);
					return;
				}
				if (!tx){
					tx=_cacheCanvas.ctx=Pool.getItem("RenderContext")|| new RenderContext(w,h,HTMLCanvas.create("AUTO"));
				}
				tx.ctx.sprite=sprite;
				canvas=tx.canvas;
				canvas.clear();
				(canvas.width !=w || canvas.height !=h)&& canvas.size(w,h);
				if (tCacheType==='bitmap')canvas.context.asBitmap=true;
				else if(tCacheType==='normal')canvas.context.asBitmap=false;
				var t;
				if (scaleX !=1 || scaleY !=1){
					var ctx=(tx).ctx;
					ctx.save();
					ctx.scale(scaleX,scaleY);
					if (!Render.isConchWebGL && Render.isConchApp){
						t=sprite._$P.cf;
						t && ctx.setFilterMatrix && ctx.setFilterMatrix(t._mat,t._alpha);
					}
					_next._fun.call(_next,sprite,tx,-left,-top);
					ctx.restore();
					if (!Render.isConchApp || Render.isConchWebGL)sprite._applyFilters();
					}else {
					ctx=(tx).ctx;
					if (!Render.isConchWebGL && Render.isConchApp){
						t=sprite._$P.cf;
						t && ctx.setFilterMatrix && ctx.setFilterMatrix(t._mat,t._alpha);
					}
					_next._fun.call(_next,sprite,tx,-left,-top);
					if (!Render.isConchApp || Render.isConchWebGL)sprite._applyFilters();
				}
				if (sprite._$P.staticCache)_cacheCanvas.reCache=false;
				Stat.canvasReCache++;
				}else {
				tRec=_cacheCanvas._cacheRec;
				left=tRec.x;
				top=tRec.y;
				canvas=tx.canvas;
			}
			context.drawCanvas(canvas,x+left,y+top,tRec.width,tRec.height);
		}

		RenderSprite.__init__=function(){
			var i=0,len=0;
			var initRender;
			initRender=RunDriver.createRenderSprite(0x11111,null);
			len=RenderSprite.renders.length=0x800 *2;
			for (i=0;i < len;i++)
			RenderSprite.renders[i]=initRender;
			RenderSprite.renders[0]=RunDriver.createRenderSprite(0,null);
			function _initSame (value,o){
				var n=0;
				for (var i=0;i < value.length;i++){
					n |=value[i];
					RenderSprite.renders[n]=o;
				}
			}
			_initSame([0x01,0x200,0x04,0x02],new RenderSprite(0x01,null));
			RenderSprite.renders[0x01 | 0x200]=RunDriver.createRenderSprite(0x01 | 0x200,null);
			RenderSprite.renders[0x01 | 0x04 | 0x200]=new RenderSprite(0x01 | 0x04 | 0x200,null);
		}

		RenderSprite._initRenderFun=function(sprite,context,x,y){
			var type=sprite._renderType;
			var r=RenderSprite.renders[type]=RenderSprite._getTypeRender(type);
			r._fun(sprite,context,x,y);
		}

		RenderSprite._getTypeRender=function(type){
			var rst=null;
			var tType=0x800;
			while (tType > 1){
				if (tType & type)
					rst=RunDriver.createRenderSprite(tType,rst);
				tType=tType >> 1;
			}
			return rst;
		}

		RenderSprite.IMAGE=0x01;
		RenderSprite.ALPHA=0x02;
		RenderSprite.TRANSFORM=0x04;
		RenderSprite.BLEND=0x08;
		RenderSprite.CANVAS=0x10;
		RenderSprite.FILTERS=0x20;
		RenderSprite.MASK=0x40;
		RenderSprite.CLIP=0x80;
		RenderSprite.STYLE=0x100;
		RenderSprite.GRAPHICS=0x200;
		RenderSprite.CUSTOM=0x400;
		RenderSprite.CHILDS=0x800;
		RenderSprite.INIT=0x11111;
		RenderSprite.renders=[];
		RenderSprite.NORENDER=new RenderSprite(0,null);
		return RenderSprite;
	})()


	//class laya.resource.Context
	var Context=(function(){
		function Context(){
			//this._canvas=null;
			this._repaint=false;
		}

		__class(Context,'laya.resource.Context');
		var __proto=Context.prototype;
		__proto.replaceReset=function(){
			var i=0,len=0;
			len=Context.replaceKeys.length;
			var key;
			for (i=0;i < len;i++){
				key=Context.replaceKeys[i];
				this[Context.newKeys[i]]=this[key];
			}
		}

		__proto.replaceResotre=function(){
			this.__restore();
			this.__reset();
		}

		__proto.setIsMainContext=function(){}
		__proto.drawTextures=function(tex,pos,tx,ty){
			Stat.drawCall+=pos.length / 2;
			var w=tex.width;
			var h=tex.height;
			for (var i=0,sz=pos.length;i < sz;i+=2){
				this.drawTexture(tex,pos[i],pos[i+1],w,h,tx,ty);
			}
		}

		/***@private */
		__proto.drawCanvas=function(canvas,x,y,width,height){
			Stat.drawCall++;
			this.drawImage(canvas.source,x,y,width,height);
		}

		/***@private */
		__proto.fillRect=function(x,y,width,height,style){
			Stat.drawCall++;
			style && (this.fillStyle=style);
			this.__fillRect(x,y,width,height);
		}

		/***@private */
		__proto.fillText=function(text,x,y,font,color,textAlign){
			Stat.drawCall++;
			if (arguments.length > 3 && font !=null){
				this.font=font;
				this.fillStyle=color;
				this.textAlign=textAlign;
				this.textBaseline="top";
			}
			this.__fillText(text,x,y);
		}

		/***@private */
		__proto.fillBorderText=function(text,x,y,font,fillColor,borderColor,lineWidth,textAlign){
			Stat.drawCall++;
			this.font=font;
			this.fillStyle=fillColor;
			this.textBaseline="top";
			this.strokeStyle=borderColor;
			this.lineWidth=lineWidth;
			this.textAlign=textAlign;
			this.__strokeText(text,x,y);
			this.__fillText(text,x,y);
		}

		/***@private */
		__proto.strokeText=function(text,x,y,font,color,lineWidth,textAlign){
			Stat.drawCall++;
			if (arguments.length > 3 && font !=null){
				this.font=font;
				this.strokeStyle=color;
				this.lineWidth=lineWidth;
				this.textAlign=textAlign;
				this.textBaseline="top";
			}
			this.__strokeText(text,x,y);
		}

		/***@private */
		__proto.transformByMatrix=function(value){
			this.transform(value.a,value.b,value.c,value.d,value.tx,value.ty);
		}

		/***@private */
		__proto.setTransformByMatrix=function(value){
			this.setTransform(value.a,value.b,value.c,value.d,value.tx,value.ty);
		}

		/***@private */
		__proto.clipRect=function(x,y,width,height){
			Stat.drawCall++;
			this.beginPath();
			this.rect(x,y,width,height);
			this.clip();
		}

		/***@private */
		__proto.drawTexture=function(tex,x,y,width,height,tx,ty){
			Stat.drawCall++;
			var uv=tex.uv,w=tex.bitmap.width,h=tex.bitmap.height;
			this.drawImage(tex.source,uv[0] *w,uv[1] *h,(uv[2]-uv[0])*w,(uv[5]-uv[3])*h,x+tx,y+ty,width,height);
		}

		/***@private */
		__proto.drawTextureWithTransform=function(tex,x,y,width,height,m,tx,ty,alpha){
			Stat.drawCall++;
			var uv=tex.uv,w=tex.bitmap.width,h=tex.bitmap.height;
			this.save();
			alpha !=1 && (this.globalAlpha *=alpha);
			if (m){
				this.transform(m.a,m.b,m.c,m.d,m.tx+tx,m.ty+ty);
				this.drawImage(tex.source,uv[0] *w,uv[1] *h,(uv[2]-uv[0])*w,(uv[5]-uv[3])*h,x ,y,width,height);
				}else {
				this.drawImage(tex.source,uv[0] *w,uv[1] *h,(uv[2]-uv[0])*w,(uv[5]-uv[3])*h,x+tx ,y+ty,width,height);
			}
			this.restore();
		}

		/***@private */
		__proto.drawTexture2=function(x,y,pivotX,pivotY,m,alpha,blendMode,args2){
			var tex=args2[0];
			if (!(tex.loaded && tex.bitmap && tex.source)){
				return;
			}
			Stat.drawCall++;
			var alphaChanged=alpha!==1;
			if (alphaChanged){
				var temp=this.globalAlpha;
				this.globalAlpha *=alpha;
			};
			var uv=tex.uv,w=tex.bitmap.width,h=tex.bitmap.height;
			if (m){
				this.save();
				this.transform(m.a,m.b,m.c,m.d,m.tx+x,m.ty+y);
				this.drawImage(tex.source,uv[0] *w,uv[1] *h,(uv[2]-uv[0])*w,(uv[5]-uv[3])*h,args2[1]-pivotX ,args2[2]-pivotY,args2[3],args2[4]);
				this.restore();
				}else {
				this.drawImage(tex.source,uv[0] *w,uv[1] *h,(uv[2]-uv[0])*w,(uv[5]-uv[3])*h,args2[1]-pivotX+x ,args2[2]-pivotY+y,args2[3],args2[4]);
			}
			if (alphaChanged)this.globalAlpha=temp;
		}

		__proto.fillTexture=function(texture,x,y,width,height,type,offset,other){
			if (!other.pat){
				if (texture.uv !=Texture.DEF_UV){
					var canvas=new HTMLCanvas("2D");
					canvas.getContext('2d');
					canvas.size(texture.width,texture.height);
					canvas.context.drawTexture(texture,0,0,texture.width,texture.height,0,0);
					texture=new Texture(canvas);
				}
				other.pat=this.createPattern(texture.bitmap.source,type);
			};
			var oX=x,oY=y;
			var sX=0,sY=0;
			if (offset){
				oX+=offset.x % texture.width;
				oY+=offset.y % texture.height;
				sX-=offset.x % texture.width;
				sY-=offset.y % texture.height;
			}
			this.translate(oX,oY);
			this.fillRect(sX,sY,width,height,other.pat);
			this.translate(-oX,-oY);
		}

		__proto.drawTriangle=function(texture,vertices,uvs,index0,index1,index2,matrix,canvasPadding){
			var source=texture.bitmap;
			var textureSource=source.source;
			var textureWidth=texture.width;
			var textureHeight=texture.height;
			var sourceWidth=source.width;
			var sourceHeight=source.height;
			var u0=uvs[index0] *sourceWidth;
			var u1=uvs[index1] *sourceWidth;
			var u2=uvs[index2] *sourceWidth;
			var v0=uvs[index0+1] *sourceHeight;
			var v1=uvs[index1+1] *sourceHeight;
			var v2=uvs[index2+1] *sourceHeight;
			var x0=vertices[index0];
			var x1=vertices[index1];
			var x2=vertices[index2];
			var y0=vertices[index0+1];
			var y1=vertices[index1+1];
			var y2=vertices[index2+1];
			if (canvasPadding){
				var paddingX=1;
				var paddingY=1;
				var centerX=(x0+x1+x2)/ 3;
				var centerY=(y0+y1+y2)/ 3;
				var normX=x0-centerX;
				var normY=y0-centerY;
				var dist=Math.sqrt((normX *normX)+(normY *normY));
				x0=centerX+((normX / dist)*(dist+paddingX));
				y0=centerY+((normY / dist)*(dist+paddingY));
				normX=x1-centerX;
				normY=y1-centerY;
				dist=Math.sqrt((normX *normX)+(normY *normY));
				x1=centerX+((normX / dist)*(dist+paddingX));
				y1=centerY+((normY / dist)*(dist+paddingY));
				normX=x2-centerX;
				normY=y2-centerY;
				dist=Math.sqrt((normX *normX)+(normY *normY));
				x2=centerX+((normX / dist)*(dist+paddingX));
				y2=centerY+((normY / dist)*(dist+paddingY));
			}
			this.save();
			if (matrix)
				this.transform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
			this.beginPath();
			this.moveTo(x0,y0);
			this.lineTo(x1,y1);
			this.lineTo(x2,y2);
			this.closePath();
			this.clip();
			var delta=(u0 *v1)+(v0 *u2)+(u1 *v2)-(v1 *u2)-(v0 *u1)-(u0 *v2);
			var dDelta=1 / delta;
			var deltaA=(x0 *v1)+(v0 *x2)+(x1 *v2)-(v1 *x2)-(v0 *x1)-(x0 *v2);
			var deltaB=(u0 *x1)+(x0 *u2)+(u1 *x2)-(x1 *u2)-(x0 *u1)-(u0 *x2);
			var deltaC=(u0 *v1 *x2)+(v0 *x1 *u2)+(x0 *u1 *v2)-(x0 *v1 *u2)-(v0 *u1 *x2)-(u0 *x1 *v2);
			var deltaD=(y0 *v1)+(v0 *y2)+(y1 *v2)-(v1 *y2)-(v0 *y1)-(y0 *v2);
			var deltaE=(u0 *y1)+(y0 *u2)+(u1 *y2)-(y1 *u2)-(y0 *u1)-(u0 *y2);
			var deltaF=(u0 *v1 *y2)+(v0 *y1 *u2)+(y0 *u1 *v2)-(y0 *v1 *u2)-(v0 *u1 *y2)-(u0 *y1 *v2);
			this.transform(deltaA *dDelta,deltaD *dDelta,deltaB *dDelta,deltaE *dDelta,deltaC *dDelta,deltaF *dDelta);
			this.drawImage(textureSource,texture.uv[0] *sourceWidth,texture.uv[1] *sourceHeight,textureWidth,textureHeight,texture.uv[0] *sourceWidth,texture.uv[1] *sourceHeight,textureWidth,textureHeight);
			this.restore();
		}

		/***@private */
		__proto.flush=function(){
			return 0;
		}

		/***@private */
		__proto.fillWords=function(words,x,y,font,color,underLine){
			font && (this.font=font);
			color && (this.fillStyle=color);
			var _this=this;
			this.textBaseline="top";
			this.textAlign='left';
			for (var i=0,n=words.length;i < n;i++){
				var a=words[i];
				this.__fillText(a.char,a.x+x,a.y+y);
				if (underLine===1){
					var tHeight=a.height;
					var dX=a.style.letterSpacing*0.5;
					if (!dX)dX=0;
					this.beginPath();
					this.strokeStyle=color;
					this.lineWidth=1;
					this.moveTo(x+a.x-dX+0.5,y+a.y+tHeight+0.5);
					this.lineTo(x+a.x+a.width+dX+0.5,y+a.y+tHeight+0.5);
					this.stroke();
				}
			}
		}

		/***@private */
		__proto.fillBorderWords=function(words,x,y,font,color,borderColor,lineWidth){
			font && (this.font=font);
			color && (this.fillStyle=color);
			this.textBaseline="top";
			this.lineWidth=lineWidth;
			this.textAlign='left';
			this.strokeStyle=borderColor;
			for (var i=0,n=words.length;i < n;i++){
				var a=words[i];
				this.__strokeText(a.char,a.x+x,a.y+y);
				this.__fillText(a.char,a.x+x,a.y+y);
			}
		}

		/***@private */
		__proto.destroy=function(){
			this.canvas.width=this.canvas.height=0;
		}

		/***@private */
		__proto.clear=function(){
			this.clearRect(0,0,this._canvas.width,this._canvas.height);
			this._repaint=false;
		}

		__proto.drawCurves=function(x,y,args){
			this.beginPath();
			this.strokeStyle=args[3];
			this.lineWidth=args[4];
			var points=args[2];
			x+=args[0],y+=args[1];
			this.moveTo(x+points[0],y+points[1]);
			var i=2,n=points.length;
			while (i < n){
				this.quadraticCurveTo(x+points[i++],y+points[i++],x+points[i++],y+points[i++]);
			}
			this.stroke();
		}

		Context.__init__=function(to){
			var from=laya.resource.Context.prototype;
			to=to || CanvasRenderingContext2D.prototype;
			if (to.inited)return;
			to.inited=true;
			to.__fillText=to.fillText;
			to.__fillRect=to.fillRect;
			to.__strokeText=to.strokeText;
			var funs=['drawTextures',"drawTriangle",'fillWords','fillBorderWords','setIsMainContext','fillRect','strokeText','fillTexture','fillText','transformByMatrix','setTransformByMatrix','clipRect','drawTexture','drawTexture2','drawTextureWithTransform','flush','clear','destroy','drawCanvas','fillBorderText','drawCurves'];
			funs.forEach(function(i){
				to[i]=from[i];
			});
		}

		Context.replaceCanvasGetSet=function(tar,key){
			var oldO=Object.getOwnPropertyDescriptor(tar,key);
			if (!oldO||!oldO.configurable)return false;
			var newO={};
			var tkey;
			for (tkey in oldO){
				if (tkey !="set"){
					newO[tkey]=oldO[tkey];
				}
			};
			var preFun=oldO["set"];
			newO["set"]=function (v){
				var _self=this;
				preFun.call(_self,v);
				var _ct=_self.getContext("2d");
				if (_ct && "__reset" in _ct){
					_ct.__reset();
				}
			}
			Object.defineProperty(tar,key,newO);
			return true;
		}

		Context.replaceGetSet=function(tar,key){
			var oldO=Object.getOwnPropertyDescriptor(tar,key);
			if (!oldO||!oldO.configurable)return false;
			var newO={};
			var tkey;
			for (tkey in oldO){
				if (tkey !="set"){
					newO[tkey]=oldO[tkey];
				}
			};
			var preFun=oldO["set"];
			var dataKey="___"+key+"__";
			Context.newKeys.push(dataKey);
			newO["set"]=function (v){
				var _self=this;
				if (v !=_self[dataKey]){
					_self[dataKey]=v;
					preFun.call(_self,v);
				}
			}
			Object.defineProperty(tar,key,newO);
			return true;
		}

		Context._default=new Context();
		Context.newKeys=[];
		__static(Context,
		['replaceKeys',function(){return this.replaceKeys=["font","fillStyle","textBaseline"];}
		]);
		return Context;
	})()


	//class laya.resource.ResourceManager
	var ResourceManager=(function(){
		function ResourceManager(name){
			this._id=0;
			this._name=null;
			this._resources=null;
			this._memorySize=0;
			this._garbageCollectionRate=NaN;
			this._isOverflow=false;
			this.autoRelease=false;
			this.autoReleaseMaxSize=0;
			this._id=++ResourceManager._uniqueIDCounter;
			this._name=name ? name :"Content Manager";
			ResourceManager._isResourceManagersSorted=false;
			this._memorySize=0;
			this._isOverflow=false;
			this.autoRelease=false;
			this.autoReleaseMaxSize=1024 *1024 *512;
			this._garbageCollectionRate=0.2;
			ResourceManager._resourceManagers.push(this);
			this._resources=[];
		}

		__class(ResourceManager,'laya.resource.ResourceManager');
		var __proto=ResourceManager.prototype;
		Laya.imps(__proto,{"laya.resource.IDispose":true})
		/**
		*获取指定索引的资源 Resource 对象。
		*@param 索引。
		*@return 资源 Resource 对象。
		*/
		__proto.getResourceByIndex=function(index){
			return this._resources[index];
		}

		/**
		*获取此管理器所管理的资源个数。
		*@return 资源个数。
		*/
		__proto.getResourcesLength=function(){
			return this._resources.length;
		}

		/**
		*添加指定资源。
		*@param resource 需要添加的资源 Resource 对象。
		*@return 是否添加成功。
		*/
		__proto.addResource=function(resource){
			if (resource.resourceManager)
				resource.resourceManager.removeResource(resource);
			var index=this._resources.indexOf(resource);
			if (index===-1){
				resource._resourceManager=this;
				this._resources.push(resource);
				this.addSize(resource.memorySize);
				return true;
			}
			return false;
		}

		/**
		*移除指定资源。
		*@param resource 需要移除的资源 Resource 对象
		*@return 是否移除成功。
		*/
		__proto.removeResource=function(resource){
			var index=this._resources.indexOf(resource);
			if (index!==-1){
				this._resources.splice(index,1);
				resource._resourceManager=null;
				this._memorySize-=resource.memorySize;
				return true;
			}
			return false;
		}

		/**
		*卸载此资源管理器载入的资源。
		*/
		__proto.unload=function(){
			var tempResources=this._resources.slice(0,this._resources.length);
			for (var i=0;i < tempResources.length;i++){
				var resource=tempResources[i];
				resource.destroy();
			}
			tempResources.length=0;
		}

		/**释放资源。*/
		__proto.dispose=function(){
			if (this===ResourceManager._systemResourceManager)
				throw new Error("systemResourceManager不能被释放！");
			ResourceManager._resourceManagers.splice(ResourceManager._resourceManagers.indexOf(this),1);
			ResourceManager._isResourceManagersSorted=false;
			var tempResources=this._resources.slice(0,this._resources.length);
			for (var i=0;i < tempResources.length;i++){
				var resource=tempResources[i];
				resource.resourceManager.removeResource(resource);
				resource.destroy();
			}
			tempResources.length=0;
		}

		/**
		*增加内存。
		*@param add 需要增加的内存大小。
		*/
		__proto.addSize=function(add){
			if (add){
				if (this.autoRelease && add > 0)
					((this._memorySize+add)> this.autoReleaseMaxSize)&& (this.garbageCollection((1-this._garbageCollectionRate)*this.autoReleaseMaxSize));
				this._memorySize+=add;
			}
		}

		/**
		*垃圾回收。
		*@param reserveSize 保留尺寸。
		*/
		__proto.garbageCollection=function(reserveSize){
			var all=this._resources;
			all=all.slice();
			all.sort(function(a,b){
				if (!a || !b)
					throw new Error("a或b不能为空！");
				if (a.released && b.released)
					return 0;
				else if (a.released)
				return 1;
				else if (b.released)
				return-1;
				return a._lastUseFrameCount-b._lastUseFrameCount;
			});
			var currentFrameCount=Stat.loopCount;
			for (var i=0,n=all.length;i < n;i++){
				var resou=all[i];
				if (currentFrameCount-resou._lastUseFrameCount > 1){
					resou.releaseResource();
					}else {
					if (this._memorySize >=reserveSize)
						this._isOverflow=true;
					return;
				}
				if (this._memorySize < reserveSize){
					this._isOverflow=false;
					return;
				}
			}
		}

		/**
		*唯一标识 ID 。
		*/
		__getset(0,__proto,'id',function(){
			return this._id;
		});

		/**
		*名字。
		*/
		__getset(0,__proto,'name',function(){
			return this._name;
			},function(value){
			if ((value || value!=="")&& this._name!==value){
				this._name=value;
				ResourceManager._isResourceManagersSorted=false;
			}
		});

		/**
		*此管理器所管理资源的累计内存，以字节为单位。
		*/
		__getset(0,__proto,'memorySize',function(){
			return this._memorySize;
		});

		/**
		*系统资源管理器。
		*/
		__getset(1,ResourceManager,'systemResourceManager',function(){
			return ResourceManager._systemResourceManager;
		});

		ResourceManager.__init__=function(){
			ResourceManager.currentResourceManager=ResourceManager.systemResourceManager;
		}

		ResourceManager.getLoadedResourceManagerByIndex=function(index){
			return ResourceManager._resourceManagers[index];
		}

		ResourceManager.getLoadedResourceManagersCount=function(){
			return ResourceManager._resourceManagers.length;
		}

		ResourceManager.recreateContentManagers=function(force){
			(force===void 0)&& (force=false);
			var temp=ResourceManager.currentResourceManager;
			for (var i=0;i < ResourceManager._resourceManagers.length;i++){
				ResourceManager.currentResourceManager=ResourceManager._resourceManagers[i];
				for (var j=0;j < ResourceManager.currentResourceManager._resources.length;j++){
					ResourceManager.currentResourceManager._resources[j].releaseResource(force);
					ResourceManager.currentResourceManager._resources[j].activeResource(force);
				}
			}
			ResourceManager.currentResourceManager=temp;
		}

		ResourceManager.releaseContentManagers=function(force){
			(force===void 0)&& (force=false);
			var temp=ResourceManager.currentResourceManager;
			for (var i=0;i < ResourceManager._resourceManagers.length;i++){
				ResourceManager.currentResourceManager=ResourceManager._resourceManagers[i];
				for (var j=0;j < ResourceManager.currentResourceManager._resources.length;j++){
					var resource=ResourceManager.currentResourceManager._resources[j];
					(!resource.released)&& (resource.releaseResource(force));
				}
			}
			ResourceManager.currentResourceManager=temp;
		}

		ResourceManager._uniqueIDCounter=0;
		ResourceManager._isResourceManagersSorted=false;
		ResourceManager._resourceManagers=[];
		__static(ResourceManager,
		['_systemResourceManager',function(){return this._systemResourceManager=new ResourceManager("System Resource Manager");},'currentResourceManager',function(){return this.currentResourceManager=ResourceManager._systemResourceManager;}
		]);
		return ResourceManager;
	})()


	//class laya.system.System
	var System=(function(){
		function System(){};
		__class(System,'laya.system.System');
		System.changeDefinition=function(name,classObj){
			Laya[name]=classObj;
			var str=name+"=classObj";
			Laya._runScript(str);
		}

		System.__init__=function(){
			if (Render.isConchApp){
				conch.disableConchResManager();
				conch.disableConchAutoRestoreLostedDevice();
			}
		}

		return System;
	})()


	//class laya.ui.LayoutStyle
	var LayoutStyle=(function(){
		function LayoutStyle(){
			this.enable=false;
			this.top=NaN;
			this.bottom=NaN;
			this.left=NaN;
			this.right=NaN;
			this.centerX=NaN;
			this.centerY=NaN;
			this.anchorX=NaN;
			this.anchorY=NaN;
		}

		__class(LayoutStyle,'laya.ui.LayoutStyle');
		__static(LayoutStyle,
		['EMPTY',function(){return this.EMPTY=new LayoutStyle();}
		]);
		return LayoutStyle;
	})()


	//class laya.ui.Styles
	var Styles=(function(){
		function Styles(){};
		__class(Styles,'laya.ui.Styles');
		Styles.labelColor="#000000";
		Styles.buttonStateNum=3;
		Styles.scrollBarMinNum=15;
		Styles.scrollBarDelayTime=500;
		__static(Styles,
		['defaultSizeGrid',function(){return this.defaultSizeGrid=[4,4,4,4,0];},'labelPadding',function(){return this.labelPadding=[2,2,2,2];},'inputLabelPadding',function(){return this.inputLabelPadding=[1,1,1,3];},'buttonLabelColors',function(){return this.buttonLabelColors=["#32556b","#32cc6b","#ff0000","#C0C0C0"];},'comboBoxItemColors',function(){return this.comboBoxItemColors=["#5e95b6","#ffffff","#000000","#8fa4b1","#ffffff"];}
		]);
		return Styles;
	})()


	//class laya.ui.UIUtils
	var UIUtils=(function(){
		function UIUtils(){};
		__class(UIUtils,'laya.ui.UIUtils');
		UIUtils.fillArray=function(arr,str,type){
			var temp=arr.concat();
			if (str){
				var a=str.split(",");
				for (var i=0,n=Math.min(temp.length,a.length);i < n;i++){
					var value=a[i];
					temp[i]=(value=="true" ? true :(value=="false" ? false :value));
					if (type !=null)temp[i]=type(value);
				}
			}
			return temp;
		}

		UIUtils.toColor=function(color){
			return Utils.toHexColor(color);
		}

		UIUtils.gray=function(traget,isGray){
			(isGray===void 0)&& (isGray=true);
			if (isGray){
				UIUtils.addFilter(traget,UIUtils.grayFilter);
				}else {
				UIUtils.clearFilter(traget,ColorFilter);
			}
		}

		UIUtils.addFilter=function(target,filter){
			var filters=target.filters || [];
			filters.push(filter);
			target.filters=filters;
		}

		UIUtils.clearFilter=function(target,filterType){
			var filters=target.filters;
			if (filters !=null && filters.length > 0){
				for (var i=filters.length-1;i >-1;i--){
					var filter=filters[i];
					if (Laya.__typeof(filter,filterType))filters.splice(i,1);
				}
				target.filters=filters;
			}
		}

		UIUtils._getReplaceStr=function(word){
			return UIUtils.escapeSequence[word];
		}

		UIUtils.adptString=function(str){
			return str.replace(/\\(\w)/g,UIUtils._getReplaceStr);
		}

		UIUtils.getBindFun=function(value){
			var fun=UIUtils._funMap.get(value);
			if (fun==null){
				var temp="\""+value+"\"";
				temp=temp.replace(/^"\${|}"$/g,"").replace(/\${/g,"\"+").replace(/}/g,"+\"");
				var str="(function(data){if(data==null)return;with(data){try{\nreturn "+temp+"\n}catch(e){}}})";
				fun=Laya._runScript(str);
				UIUtils._funMap.set(value,fun);
			}
			return fun;
		}

		__static(UIUtils,
		['grayFilter',function(){return this.grayFilter=new ColorFilter([0.3086,0.6094,0.082,0,0,0.3086,0.6094,0.082,0,0,0.3086,0.6094,0.082,0,0,0,0,0,1,0]);},'escapeSequence',function(){return this.escapeSequence={"\\n":"\n","\\t":"\t"};},'_funMap',function(){return this._funMap=new WeakObject();}
		]);
		return UIUtils;
	})()


	//class laya.utils.Browser
	var Browser=(function(){
		function Browser(){};
		__class(Browser,'laya.utils.Browser');
		/**设备像素比。*/
		__getset(1,Browser,'pixelRatio',function(){
			Browser.__init__();
			if (Browser.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)")>-1)return 2;
			return RunDriver.getPixelRatio();
		});

		/**浏览器窗口物理高度，其值等于clientHeight *pixelRatio，并且浏览器发生反转之后，宽高会互换。*/
		__getset(1,Browser,'height',function(){
			Browser.__init__();
			return ((Laya.stage && Laya.stage.canvasRotation)? Browser.clientWidth :Browser.clientHeight)*Browser.pixelRatio;
		});

		/**
		*浏览器窗口可视宽度。
		*通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerWidth(包含滚动条宽度)> document.body.clientWidth(不包含滚动条宽度)，如果前者为0或为空，则选择后者。
		*/
		__getset(1,Browser,'clientWidth',function(){
			Browser.__init__();
			return Browser.window.innerWidth || Browser.document.body.clientWidth;
		});

		/**浏览器原生 window 对象的引用。*/
		__getset(1,Browser,'window',function(){
			Browser.__init__();
			return Browser._window;
		});

		/**
		*浏览器窗口可视高度。
		*通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerHeight(包含滚动条高度)> document.body.clientHeight(不包含滚动条高度)> document.documentElement.clientHeight(不包含滚动条高度)，如果前者为0或为空，则选择后者。
		*/
		__getset(1,Browser,'clientHeight',function(){
			Browser.__init__();
			return Browser.window.innerHeight || Browser.document.body.clientHeight || Browser.document.documentElement.clientHeight;
		});

		/**浏览器窗口物理宽度，其值等于clientWidth *pixelRatio，并且浏览器发生反转之后，宽高会互换。*/
		__getset(1,Browser,'width',function(){
			Browser.__init__();
			return ((Laya.stage && Laya.stage.canvasRotation)? Browser.clientHeight :Browser.clientWidth)*Browser.pixelRatio;
		});

		/**画布容器，用来盛放画布的容器。方便对画布进行控制*/
		__getset(1,Browser,'container',function(){
			Browser.__init__();
			if (!Browser._container){
				Browser._container=Browser.createElement("div");
				Browser._container.id="layaContainer";
				Browser.document.body.appendChild(Browser._container);
			}
			return Browser._container;
			},function(value){
			Browser._container=value;
		});

		/**浏览器原生 document 对象的引用。*/
		__getset(1,Browser,'document',function(){
			Browser.__init__();
			return Browser._document;
		});

		Browser.__init__=function(){
			SoundManager;
			if (Browser._window)return;
			Browser._window=RunDriver.getWindow();
			Browser._document=Browser.window.document;
			Browser._window.addEventListener('message',function(e){
				laya.utils.Browser._onMessage(e);
			},false);
			Browser.document.__createElement=Browser.document.createElement;
			window.requestAnimationFrame=window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (c){return window.setTimeout(c,1000 / 60);};;
			Browser.userAgent=/*[SAFE]*/ Browser.window.navigator.userAgent;
			Browser.u=/*[SAFE]*/ Browser.userAgent;
			Browser.onIOS=/*[SAFE]*/ !!Browser.u.match(/\(i[^;]+;(U;)? CPU.+Mac OS X/);
			Browser.onMobile=/*[SAFE]*/ Browser.u.indexOf("Mobile")>-1;
			Browser.onIPhone=/*[SAFE]*/ Browser.u.indexOf("iPhone")>-1;
			Browser.onMac=/*[SAFE]*/ Browser.u.indexOf("Mac OS X")>-1;
			Browser.onIPad=/*[SAFE]*/ Browser.u.indexOf("iPad")>-1;
			Browser.onAndriod=/*[SAFE]*/ Browser.u.indexOf('Android')>-1 || Browser.u.indexOf('Adr')>-1;
			Browser.onWP=/*[SAFE]*/ Browser.u.indexOf("Windows Phone")>-1;
			Browser.onQQBrowser=/*[SAFE]*/ Browser.u.indexOf("QQBrowser")>-1;
			Browser.onMQQBrowser=/*[SAFE]*/ Browser.u.indexOf("MQQBrowser")>-1 || (Browser.u.indexOf("Mobile")>-1 && Browser.u.indexOf("QQ")>-1);
			Browser.onIE=/*[SAFE]*/ !!Browser.window.ActiveXObject || "ActiveXObject" in Browser.window;
			Browser.onWeiXin=/*[SAFE]*/ Browser.u.indexOf('MicroMessenger')>-1;
			Browser.onPC=/*[SAFE]*/ !Browser.onMobile;
			Browser.onSafari=/*[SAFE]*/ Browser.u.indexOf("Safari")>-1;
			Browser.onFirefox=/*[SAFE]*/ Browser.u.indexOf('Firefox')>-1;
			Browser.onEdge=/*[SAFE]*/ Browser.u.indexOf('Edge')>-1;
			Browser.onMiniGame=/*[SAFE]*/ Browser.u.indexOf('MiniGame')>-1;
			Browser.onLimixiu=/*[SAFE]*/ Browser.u.indexOf('limixiu')>-1;
			Browser.httpProtocol=/*[SAFE]*/ Browser.window.location.protocol=="http:";
			if (Browser.onMiniGame && Browser.window.focus==null){
				console.error("请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0");
			}
			Browser.webAudioEnabled=/*[SAFE]*/ Browser.window["AudioContext"] || Browser.window["webkitAudioContext"] || Browser.window["mozAudioContext"] ? true :false;
			Browser.soundType=/*[SAFE]*/ Browser.webAudioEnabled ? "WEBAUDIOSOUND" :"AUDIOSOUND";
			Sound=Browser.webAudioEnabled?WebAudioSound:AudioSound;;
			if (Browser.webAudioEnabled)WebAudioSound.initWebAudio();;
			AudioSound._initMusicAudio();
			Browser.enableTouch=(('ontouchstart' in window)|| window.DocumentTouch && document instanceof DocumentTouch);
			window.focus();
			SoundManager._soundClass=Sound;;
			SoundManager._musicClass=AudioSound;
			Render._mainCanvas=Render._mainCanvas || HTMLCanvas.create('2D');
			if (Browser.canvas)return;
			Browser.canvas=HTMLCanvas.create('2D');
			Browser.context=Browser.canvas.getContext('2d');
		}

		Browser._onMessage=function(e){
			if (!e.data)return;
			if (e.data.name=="size"){
				Browser.window.innerWidth=e.data.width;
				Browser.window.innerHeight=e.data.height;
				Browser.window.__innerHeight=e.data.clientHeight;
				if (!Browser.document.createEvent){
					console.warn("no document.createEvent");
					return;
				};
				var evt=Browser.document.createEvent("HTMLEvents");
				evt.initEvent("resize",false,false);
				Browser.window.dispatchEvent(evt);
				return;
			}
		}

		Browser.createElement=function(type){
			Browser.__init__();
			return Browser.document.__createElement(type);
		}

		Browser.getElementById=function(type){
			Browser.__init__();
			return Browser.document.getElementById(type);
		}

		Browser.removeElement=function(ele){
			if (ele && ele.parentNode)ele.parentNode.removeChild(ele);
		}

		Browser.now=function(){
			return RunDriver.now();
		}

		Browser._window=null
		Browser._document=null
		Browser._container=null
		Browser.userAgent=null
		Browser.u=null
		Browser.onIOS=false;
		Browser.onMac=false;
		Browser.onMobile=false;
		Browser.onIPhone=false;
		Browser.onIPad=false;
		Browser.onAndriod=false;
		Browser.onAndroid=false;
		Browser.onWP=false;
		Browser.onQQBrowser=false;
		Browser.onMQQBrowser=false;
		Browser.onSafari=false;
		Browser.onFirefox=false;
		Browser.onEdge=false;
		Browser.onIE=false;
		Browser.onWeiXin=false;
		Browser.onMiniGame=false;
		Browser.onLimixiu=false;
		Browser.onPC=false;
		Browser.httpProtocol=false;
		Browser.webAudioEnabled=false;
		Browser.soundType=null
		Browser.enableTouch=false;
		Browser.canvas=null
		Browser.context=null
		Browser.__init$=function(){
			AudioSound;
			WebAudioSound;
		}

		return Browser;
	})()


	//class laya.utils.Byte
	var Byte=(function(){
		function Byte(data){
			this._xd_=true;
			this._allocated_=8;
			//this._d_=null;
			//this._u8d_=null;
			this._pos_=0;
			this._length=0;
			if (data){
				this._u8d_=new Uint8Array(data);
				this._d_=new DataView(this._u8d_.buffer);
				this._length=this._d_.byteLength;
				}else {
				this.___resizeBuffer(this._allocated_);
			}
		}

		__class(Byte,'laya.utils.Byte');
		var __proto=Byte.prototype;
		/**@private */
		__proto.___resizeBuffer=function(len){
			try {
				var newByteView=new Uint8Array(len);
				if (this._u8d_ !=null){
					if (this._u8d_.length <=len)newByteView.set(this._u8d_);
					else newByteView.set(this._u8d_.subarray(0,len));
				}
				this._u8d_=newByteView;
				this._d_=new DataView(newByteView.buffer);
				}catch (err){
				throw "___resizeBuffer err:"+len;
			}
		}

		/**
		*<p>常用于解析固定格式的字节流。</p>
		*<p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>
		*@return 读取的字符串。
		*/
		__proto.getString=function(){
			return this.rUTF(this.getUint16());
		}

		/**
		*从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。
		*@param start 开始位置。
		*@param len 需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。
		*@return 读取的 Float32Array 对象。
		*/
		__proto.getFloat32Array=function(start,len){
			var end=start+len;
			end=(end > this._length)? this._length :end;
			var v=new Float32Array(this._d_.buffer.slice(start,end));
			this._pos_=end;
			return v;
		}

		/**
		*从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。
		*@param start 开始位置。
		*@param len 需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。
		*@return 读取的 Uint8Array 对象。
		*/
		__proto.getUint8Array=function(start,len){
			var end=start+len;
			end=(end > this._length)? this._length :end;
			var v=new Uint8Array(this._d_.buffer.slice(start,end));
			this._pos_=end;
			return v;
		}

		/**
		*从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。
		*@param start 开始读取的字节偏移量位置。
		*@param len 需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。
		*@return 读取的 Uint8Array 对象。
		*/
		__proto.getInt16Array=function(start,len){
			var end=start+len;
			end=(end > this._length)? this._length :end;
			var v=new Int16Array(this._d_.buffer.slice(start,end));
			this._pos_=end;
			return v;
		}

		/**
		*从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。
		*@return 单精度（32 位）浮点数。
		*/
		__proto.getFloat32=function(){
			if (this._pos_+4 > this._length)throw "getFloat32 error - Out of bounds";
			var v=this._d_.getFloat32(this._pos_,this._xd_);
			this._pos_+=4;
			return v;
		}

		/**
		*从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。
		*@return 双精度（64 位）浮点数。
		*/
		__proto.getFloat64=function(){
			if (this._pos_+8 > this._length)throw "getFloat64 error - Out of bounds";
			var v=this._d_.getFloat64(this._pos_,this._xd_);
			this._pos_+=8;
			return v;
		}

		/**
		*在字节流的当前字节偏移量位置处写入一个 IEEE 754 单精度（32 位）浮点数。
		*@param value 单精度（32 位）浮点数。
		*/
		__proto.writeFloat32=function(value){
			this.ensureWrite(this._pos_+4);
			this._d_.setFloat32(this._pos_,value,this._xd_);
			this._pos_+=4;
		}

		/**
		*在字节流的当前字节偏移量位置处写入一个 IEEE 754 双精度（64 位）浮点数。
		*@param value 双精度（64 位）浮点数。
		*/
		__proto.writeFloat64=function(value){
			this.ensureWrite(this._pos_+8);
			this._d_.setFloat64(this._pos_,value,this._xd_);
			this._pos_+=8;
		}

		/**
		*从字节流的当前字节偏移量位置处读取一个 Int32 值。
		*@return Int32 值。
		*/
		__proto.getInt32=function(){
			if (this._pos_+4 > this._length)throw "getInt32 error - Out of bounds";
			var float=this._d_.getInt32(this._pos_,this._xd_);
			this._pos_+=4;
			return float;
		}

		/**
		*从字节流的当前字节偏移量位置处读取一个 Uint32 值。
		*@return Uint32 值。
		*/
		__proto.getUint32=function(){
			if (this._pos_+4 > this._length)throw "getUint32 error - Out of bounds";
			var v=this._d_.getUint32(this._pos_,this._xd_);
			this._pos_+=4;
			return v;
		}

		/**
		*在字节流的当前字节偏移量位置处写入指定的 Int32 值。
		*@param value 需要写入的 Int32 值。
		*/
		__proto.writeInt32=function(value){
			this.ensureWrite(this._pos_+4);
			this._d_.setInt32(this._pos_,value,this._xd_);
			this._pos_+=4;
		}

		/**
		*在字节流的当前字节偏移量位置处写入 Uint32 值。
		*@param value 需要写入的 Uint32 值。
		*/
		__proto.writeUint32=function(value){
			this.ensureWrite(this._pos_+4);
			this._d_.setUint32(this._pos_,value,this._xd_);
			this._pos_+=4;
		}

		/**
		*从字节流的当前字节偏移量位置处读取一个 Int16 值。
		*@return Int16 值。
		*/
		__proto.getInt16=function(){
			if (this._pos_+2 > this._length)throw "getInt16 error - Out of bounds";
			var us=this._d_.getInt16(this._pos_,this._xd_);
			this._pos_+=2;
			return us;
		}

		/**
		*从字节流的当前字节偏移量位置处读取一个 Uint16 值。
		*@return Uint16 值。
		*/
		__proto.getUint16=function(){
			if (this._pos_+2 > this._length)throw "getUint16 error - Out of bounds";
			var us=this._d_.getUint16(this._pos_,this._xd_);
			this._pos_+=2;
			return us;
		}

		/**
		*在字节流的当前字节偏移量位置处写入指定的 Uint16 值。
		*@param value 需要写入的Uint16 值。
		*/
		__proto.writeUint16=function(value){
			this.ensureWrite(this._pos_+2);
			this._d_.setUint16(this._pos_,value,this._xd_);
			this._pos_+=2;
		}

		/**
		*在字节流的当前字节偏移量位置处写入指定的 Int16 值。
		*@param value 需要写入的 Int16 值。
		*/
		__proto.writeInt16=function(value){
			this.ensureWrite(this._pos_+2);
			this._d_.setInt16(this._pos_,value,this._xd_);
			this._pos_+=2;
		}

		/**
		*从字节流的当前字节偏移量位置处读取一个 Uint8 值。
		*@return Uint8 值。
		*/
		__proto.getUint8=function(){
			if (this._pos_+1 > this._length)throw "getUint8 error - Out of bounds";
			return this._d_.getUint8(this._pos_++);
		}

		/**
		*在字节流的当前字节偏移量位置处写入指定的 Uint8 值。
		*@param value 需要写入的 Uint8 值。
		*/
		__proto.writeUint8=function(value){
			this.ensureWrite(this._pos_+1);
			this._d_.setUint8(this._pos_,value);
			this._pos_++;
		}

		/**
		*@private
		*从字节流的指定字节偏移量位置处读取一个 Uint8 值。
		*@param pos 字节读取位置。
		*@return Uint8 值。
		*/
		__proto._getUInt8=function(pos){
			return this._d_.getUint8(pos);
		}

		/**
		*@private
		*从字节流的指定字节偏移量位置处读取一个 Uint16 值。
		*@param pos 字节读取位置。
		*@return Uint16 值。
		*/
		__proto._getUint16=function(pos){
			return this._d_.getUint16(pos,this._xd_);
		}

		/**
		*@private
		*使用 getFloat32()读取6个值，用于创建并返回一个 Matrix 对象。
		*@return Matrix 对象。
		*/
		__proto._getMatrix=function(){
			var rst=new Matrix(this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32());
			return rst;
		}

		/**
		*@private
		*读取指定长度的 UTF 型字符串。
		*@param len 需要读取的长度。
		*@return 读取的字符串。
		*/
		__proto.rUTF=function(len){
			var v="",max=this._pos_+len,c=0,c2=0,c3=0,f=String.fromCharCode;
			var u=this._u8d_,i=0;
			while (this._pos_ < max){
				c=u[this._pos_++];
				if (c < 0x80){
					if (c !=0){
						v+=f(c);
					}
					}else if (c < 0xE0){
					v+=f(((c & 0x3F)<< 6)| (u[this._pos_++] & 0x7F));
					}else if (c < 0xF0){
					c2=u[this._pos_++];
					v+=f(((c & 0x1F)<< 12)| ((c2 & 0x7F)<< 6)| (u[this._pos_++] & 0x7F));
					}else {
					c2=u[this._pos_++];
					c3=u[this._pos_++];
					v+=f(((c & 0x0F)<< 18)| ((c2 & 0x7F)<< 12)| ((c3 << 6)& 0x7F)| (u[this._pos_++] & 0x7F));
				}
				i++;
			}
			return v;
		}

		/**
		*@private
		*读取 <code>len</code> 参数指定的长度的字符串。
		*@param len 要读取的字符串的长度。
		*@return 指定长度的字符串。
		*/
		__proto.getCustomString=function(len){
			var v="",ulen=0,c=0,c2=0,f=String.fromCharCode;
			var u=this._u8d_,i=0;
			while (len > 0){
				c=u[this._pos_];
				if (c < 0x80){
					v+=f(c);
					this._pos_++;
					len--;
					}else {
					ulen=c-0x80;
					this._pos_++;
					len-=ulen;
					while (ulen > 0){
						c=u[this._pos_++];
						c2=u[this._pos_++];
						v+=f((c2 << 8)| c);
						ulen--;
					}
				}
			}
			return v;
		}

		/**
		*清除字节数组的内容，并将 length 和 pos 属性重置为 0。调用此方法将释放 Byte 实例占用的内存。
		*/
		__proto.clear=function(){
			this._pos_=0;
			this.length=0;
		}

		/**
		*@private
		*获取此对象的 ArrayBuffer 引用。
		*@return
		*/
		__proto.__getBuffer=function(){
			return this._d_.buffer;
		}

		/**
		*<p>将 UTF-8 字符串写入字节流。类似于 writeUTF()方法，但 writeUTFBytes()不使用 16 位长度的字为字符串添加前缀。</p>
		*<p>对应的读取方法为： getUTFBytes 。</p>
		*@param value 要写入的字符串。
		*/
		__proto.writeUTFBytes=function(value){
			value=value+"";
			for (var i=0,sz=value.length;i < sz;i++){
				var c=value.charCodeAt(i);
				if (c <=0x7F){
					this.writeByte(c);
					}else if (c <=0x7FF){
					this.ensureWrite(this._pos_+2);
					this._u8d_.set([0xC0 | (c >> 6),0x80 | (c & 0x3F)],this._pos_);
					this._pos_+=2;
					}else if (c <=0xFFFF){
					this.ensureWrite(this._pos_+3);
					this._u8d_.set([0xE0 | (c >> 12),0x80 | ((c >> 6)& 0x3F),0x80 | (c & 0x3F)],this._pos_);
					this._pos_+=3;
					}else {
					this.ensureWrite(this._pos_+4);
					this._u8d_.set([0xF0 | (c >> 18),0x80 | ((c >> 12)& 0x3F),0x80 | ((c >> 6)& 0x3F),0x80 | (c & 0x3F)],this._pos_);
					this._pos_+=4;
				}
			}
		}

		/**
		*<p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节。</p>
		*<p>对应的读取方法为： getUTFString 。</p>
		*@param value 要写入的字符串值。
		*/
		__proto.writeUTFString=function(value){
			var tPos=this.pos;
			this.writeUint16(1);
			this.writeUTFBytes(value);
			var dPos=this.pos-tPos-2;
			if (dPos >=65536){
				throw "writeUTFString byte len more than 65536";
			}
			this._d_.setUint16(tPos,dPos,this._xd_);
		}

		/**
		*@private
		*读取 UTF-8 字符串。
		*@return 读取的字符串。
		*/
		__proto.readUTFString=function(){
			return this.readUTFBytes(this.getUint16());
		}

		/**
		*<p>从字节流中读取一个 UTF-8 字符串。假定字符串的前缀是一个无符号的短整型（以此字节表示要读取的长度）。</p>
		*<p>对应的写入方法为： writeUTFString 。</p>
		*@return 读取的字符串。
		*/
		__proto.getUTFString=function(){
			return this.readUTFString();
		}

		/**
		*@private
		*读字符串，必须是 writeUTFBytes 方法写入的字符串。
		*@param len 要读的buffer长度，默认将读取缓冲区全部数据。
		*@return 读取的字符串。
		*/
		__proto.readUTFBytes=function(len){
			(len===void 0)&& (len=-1);
			if (len==0)return "";
			var lastBytes=this.bytesAvailable;
			if (len > lastBytes)throw "readUTFBytes error - Out of bounds";
			len=len > 0 ? len :lastBytes;
			return this.rUTF(len);
		}

		/**
		*<p>从字节流中读取一个由 length 参数指定的长度的 UTF-8 字节序列，并返回一个字符串。</p>
		*<p>一般读取的是由 writeUTFBytes 方法写入的字符串。</p>
		*@param len 要读的buffer长度，默认将读取缓冲区全部数据。
		*@return 读取的字符串。
		*/
		__proto.getUTFBytes=function(len){
			(len===void 0)&& (len=-1);
			return this.readUTFBytes(len);
		}

		/**
		*<p>在字节流中写入一个字节。</p>
		*<p>使用参数的低 8 位。忽略高 24 位。</p>
		*@param value
		*/
		__proto.writeByte=function(value){
			this.ensureWrite(this._pos_+1);
			this._d_.setInt8(this._pos_,value);
			this._pos_+=1;
		}

		/**
		*@private
		*从字节流中读取带符号的字节。
		*/
		__proto.readByte=function(){
			if (this._pos_+1 > this._length)throw "readByte error - Out of bounds";
			return this._d_.getInt8(this._pos_++);
		}

		/**
		*<p>从字节流中读取带符号的字节。</p>
		*<p>返回值的范围是从-128 到 127。</p>
		*@return 介于-128 和 127 之间的整数。
		*/
		__proto.getByte=function(){
			return this.readByte();
		}

		/**
		*<p>保证该字节流的可用长度不小于 <code>lengthToEnsure</code> 参数指定的值。</p>
		*@param lengthToEnsure 指定的长度。
		*/
		__proto.ensureWrite=function(lengthToEnsure){
			if (this._length < lengthToEnsure)this._length=lengthToEnsure;
			if (this._allocated_ < lengthToEnsure)this.length=lengthToEnsure;
		}

		/**
		*<p>将指定 arraybuffer 对象中的以 offset 为起始偏移量， length 为长度的字节序列写入字节流。</p>
		*<p>如果省略 length 参数，则使用默认长度 0，该方法将从 offset 开始写入整个缓冲区；如果还省略了 offset 参数，则写入整个缓冲区。</p>
		*<p>如果 offset 或 length 小于0，本函数将抛出异常。</p>
		*$NEXTBIG 由于没有判断length和arraybuffer的合法性，当开发者填写了错误的length值时，会导致写入多余的空白数据甚至内存溢出，为了避免影响开发者正在使用此方法的功能，下个重大版本会修复这些问题。
		*@param arraybuffer 需要写入的 Arraybuffer 对象。
		*@param offset Arraybuffer 对象的索引的偏移量（以字节为单位）
		*@param length 从 Arraybuffer 对象写入到 Byte 对象的长度（以字节为单位）
		*/
		__proto.writeArrayBuffer=function(arraybuffer,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			if (offset < 0 || length < 0)throw "writeArrayBuffer error - Out of bounds";
			if (length==0)length=arraybuffer.byteLength-offset;
			this.ensureWrite(this._pos_+length);
			var uint8array=new Uint8Array(arraybuffer);
			this._u8d_.set(uint8array.subarray(offset,offset+length),this._pos_);
			this._pos_+=length;
		}

		/**
		*获取此对象的 ArrayBuffer 数据，数据只包含有效数据部分。
		*/
		__getset(0,__proto,'buffer',function(){
			var rstBuffer=this._d_.buffer;
			if (rstBuffer.byteLength==this.length)return rstBuffer;
			return rstBuffer.slice(0,this.length);
		});

		/**
		*<p> <code>Byte</code> 实例的字节序。取值为：<code>BIG_ENDIAN</code> 或 <code>BIG_ENDIAN</code> 。</p>
		*<p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>
		*<p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>
		*<code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>
		*/
		__getset(0,__proto,'endian',function(){
			return this._xd_ ? "littleEndian" :"bigEndian";
			},function(endianStr){
			this._xd_=(endianStr=="littleEndian");
		});

		/**
		*<p> <code>Byte</code> 对象的长度（以字节为单位）。</p>
		*<p>如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧；如果将长度设置为小于当前长度的值，将会截断该字节数组。</p>
		*<p>如果要设置的长度大于当前已分配的内存空间的字节长度，则重新分配内存空间，大小为以下两者较大者：要设置的长度、当前已分配的长度的2倍，并将原有数据拷贝到新的内存空间中；如果要设置的长度小于当前已分配的内存空间的字节长度，也会重新分配内存空间，大小为要设置的长度，并将原有数据从头截断为要设置的长度存入新的内存空间中。</p>
		*/
		__getset(0,__proto,'length',function(){
			return this._length;
			},function(value){
			if (this._allocated_ < value)
				this.___resizeBuffer(this._allocated_=Math.floor(Math.max(value,this._allocated_ *2)));
			else if (this._allocated_ > value)
			this.___resizeBuffer(this._allocated_=value);
			this._length=value;
		});

		/**
		*移动或返回 Byte 对象的读写指针的当前位置（以字节为单位）。下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。
		*/
		__getset(0,__proto,'pos',function(){
			return this._pos_;
			},function(value){
			this._pos_=value;
		});

		/**
		*可从字节流的当前位置到末尾读取的数据的字节数。
		*/
		__getset(0,__proto,'bytesAvailable',function(){
			return this._length-this._pos_;
		});

		Byte.getSystemEndian=function(){
			if (!Byte._sysEndian){
				var buffer=new ArrayBuffer(2);
				new DataView(buffer).setInt16(0,256,true);
				Byte._sysEndian=(new Int16Array(buffer))[0]===256 ? "littleEndian" :"bigEndian";
			}
			return Byte._sysEndian;
		}

		Byte.BIG_ENDIAN="bigEndian";
		Byte.LITTLE_ENDIAN="littleEndian";
		Byte._sysEndian=null;
		return Byte;
	})()


	//class laya.utils.CacheManager
	var CacheManager=(function(){
		function CacheManager(){}
		__class(CacheManager,'laya.utils.CacheManager');
		CacheManager.regCacheByFunction=function(disposeFunction,getCacheListFunction){
			CacheManager.unRegCacheByFunction(disposeFunction,getCacheListFunction);
			var cache;
			cache={tryDispose:disposeFunction,getCacheList:getCacheListFunction};
			CacheManager._cacheList.push(cache);
		}

		CacheManager.unRegCacheByFunction=function(disposeFunction,getCacheListFunction){
			var i=0,len=0;
			len=CacheManager._cacheList.length;
			for (i=0;i < len;i++){
				if (CacheManager._cacheList[i].tryDispose==disposeFunction && CacheManager._cacheList[i].getCacheList==getCacheListFunction){
					CacheManager._cacheList.splice(i,1);
					return;
				}
			}
		}

		CacheManager.forceDispose=function(){
			var i=0,len=CacheManager._cacheList.length;
			for (i=0;i < len;i++){
				CacheManager._cacheList[i].tryDispose(true);
			}
		}

		CacheManager.beginCheck=function(waitTime){
			(waitTime===void 0)&& (waitTime=15000);
			Laya.timer.loop(waitTime,null,CacheManager._checkLoop);
		}

		CacheManager.stopCheck=function(){
			Laya.timer.clear(null,CacheManager._checkLoop);
		}

		CacheManager._checkLoop=function(){
			var cacheList=CacheManager._cacheList;
			if (cacheList.length < 1)return;
			var tTime=Browser.now();
			var count=0;
			var len=0;
			len=count=cacheList.length;
			while (count > 0){
				CacheManager._index++;
				CacheManager._index=CacheManager._index % len;
				cacheList[CacheManager._index].tryDispose(false);
				if (Browser.now()-tTime > CacheManager.loopTimeLimit)break ;
				count--;
			}
		}

		CacheManager.loopTimeLimit=2;
		CacheManager._cacheList=[];
		CacheManager._index=0;
		return CacheManager;
	})()


	//class laya.utils.ClassUtils
	var ClassUtils=(function(){
		function ClassUtils(){};
		__class(ClassUtils,'laya.utils.ClassUtils');
		ClassUtils.regClass=function(className,classDef){
			ClassUtils._classMap[className]=classDef;
		}

		ClassUtils.getRegClass=function(className){
			return ClassUtils._classMap[className];
		}

		ClassUtils.getInstance=function(className){
			var compClass=ClassUtils.getClass(className);
			if (compClass)
				return new compClass();
			else
			console.warn("[error] Undefined class:",className);
			return null;
		}

		ClassUtils.createByJson=function(json,node,root,customHandler,instanceHandler){
			if ((typeof json=='string'))
				json=JSON.parse(json);
			var props=json.props;
			if (!node){
				node=instanceHandler ? instanceHandler.runWith(json):ClassUtils.getInstance(props.runtime || json.type);
				if (!node)
					return null;
			};
			var child=json.child;
			if (child){
				for (var i=0,n=child.length;i < n;i++){
					var data=child[i];
					if ((data.props.name==="render" || data.props.renderType==="render")&& node["_$set_itemRender"])
						node.itemRender=data;
					else {
						if (data.type=="Graphic"){
							ClassUtils.addGraphicsToSprite(data,node);
							}else if (ClassUtils.isDrawType(data.type)){
							ClassUtils.addGraphicToSprite(data,node,true);
							}else {
							var tChild=ClassUtils.createByJson(data,null,root,customHandler,instanceHandler)
							if (data.type=="Script"){
								if (tChild.hasOwnProperty("owner")){
									tChild["owner"]=node;
									}else if (tChild.hasOwnProperty("target")){
									tChild["target"]=node;
								}
								}else if (data.props.renderType=="mask"){
								node.mask=tChild;
								}else {
								node.addChild(tChild);
							}
						}
					}
				}
			}
			if (props){
				for (var prop in props){
					var value=props[prop];
					if (prop==="var" && root){
						root[value]=node;
						}else if ((value instanceof Array)&& (typeof (node[prop])=='function')){
						node[prop].apply(node,value);
						}else {
						node[prop]=value;
					}
				}
			}
			if (customHandler && json.customProps){
				customHandler.runWith([node,json]);
			}
			if (node["created"])
				node.created();
			return node;
		}

		ClassUtils.addGraphicsToSprite=function(graphicO,sprite){
			var graphics;
			graphics=graphicO.child;
			if (!graphics || graphics.length < 1)
				return;
			var g;
			g=ClassUtils._getGraphicsFromSprite(graphicO,sprite);
			var ox=0;
			var oy=0;
			if (graphicO.props){
				ox=ClassUtils._getObjVar(graphicO.props,"x",0);
				oy=ClassUtils._getObjVar(graphicO.props,"y",0);
			}
			if (ox !=0 && oy !=0){
				g.translate(ox,oy);
			};
			var i=0,len=0;
			len=graphics.length;
			for (i=0;i < len;i++){
				ClassUtils._addGraphicToGraphics(graphics[i],g);
			}
			if (ox !=0 && oy !=0){
				g.translate(-ox,-oy);
			}
		}

		ClassUtils.addGraphicToSprite=function(graphicO,sprite,isChild){
			(isChild===void 0)&& (isChild=false);
			var g;
			g=isChild ? ClassUtils._getGraphicsFromSprite(graphicO,sprite):sprite.graphics;
			ClassUtils._addGraphicToGraphics(graphicO,g);
		}

		ClassUtils._getGraphicsFromSprite=function(dataO,sprite){
			var g;
			if (!dataO || !dataO.props)
				return sprite.graphics;
			var propsName;
			propsName=dataO.props.renderType;
			switch (propsName){
				case "hit":
				case "unHit":;
					var hitArea;
					if (!sprite.hitArea){
						sprite.hitArea=new HitArea();
					}
					hitArea=sprite.hitArea;
					if (!hitArea[propsName]){
						hitArea[propsName]=new Graphics();
					}
					g=hitArea[propsName];
					break ;
				default :
				}
			if (!g)
				g=sprite.graphics;
			return g;
		}

		ClassUtils._getTransformData=function(propsO){
			var m;
			if (propsO.hasOwnProperty("pivotX")|| propsO.hasOwnProperty("pivotY")){
				m=m || new Matrix();
				m.translate(-ClassUtils._getObjVar(propsO,"pivotX",0),-ClassUtils._getObjVar(propsO,"pivotY",0));
			};
			var sx=ClassUtils._getObjVar(propsO,"scaleX",1),sy=ClassUtils._getObjVar(propsO,"scaleY",1);
			var rotate=ClassUtils._getObjVar(propsO,"rotation",0);
			var skewX=ClassUtils._getObjVar(propsO,"skewX",0);
			var skewY=ClassUtils._getObjVar(propsO,"skewY",0);
			if (sx !=1 || sy !=1 || rotate !=0){
				m=m || new Matrix();
				m.scale(sx,sy);
				m.rotate(rotate *0.0174532922222222);
			}
			return m;
		}

		ClassUtils._addGraphicToGraphics=function(graphicO,graphic){
			var propsO;
			propsO=graphicO.props;
			if (!propsO)
				return;
			var drawConfig;
			drawConfig=ClassUtils.DrawTypeDic[graphicO.type];
			if (!drawConfig)
				return;
			var g;
			g=graphic;
			var m;
			var params=ClassUtils._getParams(propsO,drawConfig[1],drawConfig[2],drawConfig[3]);
			m=ClassUtils._tM;
			if (m || ClassUtils._alpha !=1){
				g.save();
				if (m)
					g.transform(m);
				if (ClassUtils._alpha !=1)
					g.alpha(ClassUtils._alpha);
			}
			g[drawConfig[0]].apply(g,params);
			if (m || ClassUtils._alpha !=1){
				g.restore();
			}
		}

		ClassUtils._adptLineData=function(params){
			params[2]=parseFloat(params[0])+parseFloat(params[2]);
			params[3]=parseFloat(params[1])+parseFloat(params[3]);
			return params;
		}

		ClassUtils._adptTextureData=function(params){
			params[0]=Loader.getRes(params[0]);
			return params;
		}

		ClassUtils._adptLinesData=function(params){
			params[2]=ClassUtils._getPointListByStr(params[2]);
			return params;
		}

		ClassUtils.isDrawType=function(type){
			if (type=="Image")
				return false;
			return ClassUtils.DrawTypeDic.hasOwnProperty(type);
		}

		ClassUtils._getParams=function(obj,params,xPos,adptFun){
			(xPos===void 0)&& (xPos=0);
			var rst;
			rst=ClassUtils._temParam;
			rst.length=params.length;
			var i=0,len=0;
			len=params.length;
			for (i=0;i < len;i++){
				rst[i]=ClassUtils._getObjVar(obj,params[i][0],params[i][1]);
			}
			ClassUtils._alpha=ClassUtils._getObjVar(obj,"alpha",1);
			var m;
			m=ClassUtils._getTransformData(obj);
			if (m){
				if (!xPos)xPos=0;
				m.translate(rst[xPos],rst[xPos+1]);
				rst[xPos]=rst[xPos+1]=0;
				ClassUtils._tM=m;
				}else {
				ClassUtils._tM=null;
			}
			if (adptFun && ClassUtils[adptFun]){
				rst=ClassUtils[adptFun](rst);
			}
			return rst;
		}

		ClassUtils._getPointListByStr=function(str){
			var pointArr;
			pointArr=str.split(",");
			var i=0,len=0;
			len=pointArr.length;
			for (i=0;i < len;i++){
				pointArr[i]=parseFloat(pointArr[i]);
			}
			return pointArr;
		}

		ClassUtils._getObjVar=function(obj,key,noValue){
			if (obj.hasOwnProperty(key)){
				return obj[key];
			}
			return noValue;
		}

		ClassUtils._temParam=[];
		ClassUtils._classMap={'Sprite':'laya.display.Sprite','Text':'laya.display.Text','Animation':'laya.display.Animation','Skeleton':'laya.ani.bone.Skeleton','Particle2D':'laya.particle.Particle2D','div':'laya.html.dom.HTMLDivElement','p':'laya.html.dom.HTMLElement','img':'laya.html.dom.HTMLImageElement','span':'laya.html.dom.HTMLElement','br':'laya.html.dom.HTMLBrElement','style':'laya.html.dom.HTMLStyleElement','font':'laya.html.dom.HTMLElement','a':'laya.html.dom.HTMLElement','#text':'laya.html.dom.HTMLElement'};
		ClassUtils.getClass=function(className){
			var classObject=ClassUtils._classMap[className] || className;
			if ((typeof classObject=='string'))
				return Laya["__classmap"][classObject];
			return classObject;
		}

		ClassUtils._tM=null
		ClassUtils._alpha=NaN
		__static(ClassUtils,
		['DrawTypeDic',function(){return this.DrawTypeDic={"Rect":["drawRect",[["x",0],["y",0],["width",0],["height",0],["fillColor",null],["lineColor",null],["lineWidth",1]]],"Circle":["drawCircle",[["x",0],["y",0],["radius",0],["fillColor",null],["lineColor",null],["lineWidth",1]]],"Pie":["drawPie",[["x",0],["y",0],["radius",0],["startAngle",0],["endAngle",0],["fillColor",null],["lineColor",null],["lineWidth",1]]],"Image":["drawTexture",[["x",0],["y",0],["width",0],["height",0]]],"Texture":["drawTexture",[["skin",null],["x",0],["y",0],["width",0],["height",0]],1,"_adptTextureData"],"FillTexture":["fillTexture",[["skin",null],["x",0],["y",0],["width",0],["height",0],["repeat",null]],1,"_adptTextureData"],"FillText":["fillText",[["text",""],["x",0],["y",0],["font",null],["color",null],["textAlign",null]],1],"Line":["drawLine",[["x",0],["y",0],["toX",0],["toY",0],["lineColor",null],["lineWidth",0]],0,"_adptLineData"],"Lines":["drawLines",[["x",0],["y",0],["points",""],["lineColor",null],["lineWidth",0]],0,"_adptLinesData"],"Curves":["drawCurves",[["x",0],["y",0],["points",""],["lineColor",null],["lineWidth",0]],0,"_adptLinesData"],"Poly":["drawPoly",[["x",0],["y",0],["points",""],["fillColor",null],["lineColor",null],["lineWidth",1]],0,"_adptLinesData"]};}
		]);
		return ClassUtils;
	})()


	//class laya.utils.Color
	var Color$1=(function(){
		function Color(str){
			this._color=[];
			//this.strColor=null;
			//this.numColor=0;
			//this._drawStyle=null;
			if ((typeof str=='string')){
				this.strColor=str;
				if (str===null)str="#000000";
				str.charAt(0)=='#' && (str=str.substr(1));
				var len=str.length;
				if (len==3 || len==4){
					var temp="";
					for (var i=0;i < len;i++){
						temp+=(str[i]+str[i]);
					}
					str=temp;
				};
				var color=this.numColor=parseInt(str,16);
				var flag=(str.length==8);
				if (flag){
					this._color=[parseInt(str.substr(0,2),16)/ 255,((0x00FF0000 & color)>> 16)/ 255,((0x0000FF00 & color)>> 8)/ 255,(0x000000FF & color)/ 255];
					return;
				}
				}else {
				color=this.numColor=str;
				this.strColor=Utils.toHexColor(color);
			}
			this._color=[((0xFF0000 & color)>> 16)/ 255,((0xFF00 & color)>> 8)/ 255,(0xFF & color)/ 255,1];
			(this._color).__id=++Color._COLODID;
		}

		__class(Color,'laya.utils.Color',null,'Color$1');
		Color._initDefault=function(){
			Color._DEFAULT={};
			for (var i in Color._COLOR_MAP)Color._SAVE[i]=Color._DEFAULT[i]=new Color(Color._COLOR_MAP[i]);
			return Color._DEFAULT;
		}

		Color._initSaveMap=function(){
			Color._SAVE_SIZE=0;
			Color._SAVE={};
			for (var i in Color._DEFAULT)Color._SAVE[i]=Color._DEFAULT[i];
		}

		Color.create=function(str){
			var color=Color._SAVE[str+""];
			if (color !=null)return color;
			(Color._SAVE_SIZE < 1000)|| Color._initSaveMap();
			return Color._SAVE[str+""]=new Color(str);
		}

		Color._SAVE={};
		Color._SAVE_SIZE=0;
		Color._COLOR_MAP={"white":'#FFFFFF',"red":'#FF0000',"green":'#00FF00',"blue":'#0000FF',"black":'#000000',"yellow":'#FFFF00','gray':'#AAAAAA'};
		Color._DEFAULT=Color._initDefault();
		Color._COLODID=1;
		return Color;
	})()


	//class laya.utils.Dictionary
	var Dictionary=(function(){
		function Dictionary(){
			this._values=[];
			this._keys=[];
		}

		__class(Dictionary,'laya.utils.Dictionary');
		var __proto=Dictionary.prototype;
		/**
		*给指定的键名设置值。
		*@param key 键名。
		*@param value 值。
		*/
		__proto.set=function(key,value){
			var index=this.indexOf(key);
			if (index >=0){
				this._values[index]=value;
				return;
			}
			this._keys.push(key);
			this._values.push(value);
		}

		/**
		*获取指定对象的键名索引。
		*@param key 键名对象。
		*@return 键名索引。
		*/
		__proto.indexOf=function(key){
			var index=this._keys.indexOf(key);
			if (index >=0)return index;
			key=((typeof key=='string'))? Number(key):(((typeof key=='number'))? key.toString():key);
			return this._keys.indexOf(key);
		}

		/**
		*返回指定键名的值。
		*@param key 键名对象。
		*@return 指定键名的值。
		*/
		__proto.get=function(key){
			var index=this.indexOf(key);
			return index < 0 ? null :this._values[index];
		}

		/**
		*移除指定键名的值。
		*@param key 键名对象。
		*@return 是否成功移除。
		*/
		__proto.remove=function(key){
			var index=this.indexOf(key);
			if (index >=0){
				this._keys.splice(index,1);
				this._values.splice(index,1);
				return true;
			}
			return false;
		}

		/**
		*清除此对象的键名列表和键值列表。
		*/
		__proto.clear=function(){
			this._values.length=0;
			this._keys.length=0;
		}

		/**
		*获取所有的子元素列表。
		*/
		__getset(0,__proto,'values',function(){
			return this._values;
		});

		/**
		*获取所有的子元素键名列表。
		*/
		__getset(0,__proto,'keys',function(){
			return this._keys;
		});

		return Dictionary;
	})()


	//class laya.utils.Dragging
	var Dragging=(function(){
		function Dragging(){
			//this.target=null;
			this.ratio=0.92;
			this.maxOffset=60;
			//this.area=null;
			//this.hasInertia=false;
			//this.elasticDistance=NaN;
			//this.elasticBackTime=NaN;
			//this.data=null;
			this._dragging=false;
			this._clickOnly=true;
			//this._elasticRateX=NaN;
			//this._elasticRateY=NaN;
			//this._lastX=NaN;
			//this._lastY=NaN;
			//this._offsetX=NaN;
			//this._offsetY=NaN;
			//this._offsets=null;
			//this._disableMouseEvent=false;
			//this._tween=null;
			//this._parent=null;
		}

		__class(Dragging,'laya.utils.Dragging');
		var __proto=Dragging.prototype;
		/**
		*开始拖拽。
		*@param target 待拖拽的 <code>Sprite</code> 对象。
		*@param area 滑动范围。
		*@param hasInertia 拖动是否有惯性。
		*@param elasticDistance 橡皮筋最大值。
		*@param elasticBackTime 橡皮筋回弹时间，单位为毫秒。
		*@param data 事件携带数据。
		*@param disableMouseEvent 鼠标事件是否有效。
		*@param ratio 惯性阻尼系数
		*/
		__proto.start=function(target,area,hasInertia,elasticDistance,elasticBackTime,data,disableMouseEvent,ratio){
			(ratio===void 0)&& (ratio=0.92);
			this.clearTimer();
			this.target=target;
			this.area=area;
			this.hasInertia=hasInertia;
			this.elasticDistance=area ? elasticDistance :0;
			this.elasticBackTime=elasticBackTime;
			this.data=data;
			this._disableMouseEvent=disableMouseEvent;
			this.ratio=ratio;
			if (target.globalScaleX !=1 || target.globalScaleY !=1){
				this._parent=target.parent;
				}else {
				this._parent=Laya.stage;
			}
			this._clickOnly=true;
			this._dragging=true;
			this._elasticRateX=this._elasticRateY=1;
			this._lastX=this._parent.mouseX;
			this._lastY=this._parent.mouseY;
			Laya.stage.on("mouseup",this,this.onStageMouseUp);
			Laya.stage.on("mouseout",this,this.onStageMouseUp);
			Laya.timer.frameLoop(1,this,this.loop);
		}

		/**
		*清除计时器。
		*/
		__proto.clearTimer=function(){
			Laya.timer.clear(this,this.loop);
			Laya.timer.clear(this,this.tweenMove);
			if (this._tween){
				this._tween.recover();
				this._tween=null;
			}
		}

		/**
		*停止拖拽。
		*/
		__proto.stop=function(){
			if (this._dragging){
				MouseManager.instance.disableMouseEvent=false;
				Laya.stage.off("mouseup",this,this.onStageMouseUp);
				Laya.stage.off("mouseout",this,this.onStageMouseUp);
				this._dragging=false;
				this.target && this.area && this.backToArea();
				this.clear();
			}
		}

		/**
		*拖拽的循环处理函数。
		*/
		__proto.loop=function(){
			var point=this._parent.getMousePoint();
			var mouseX=point.x;
			var mouseY=point.y;
			var offsetX=mouseX-this._lastX;
			var offsetY=mouseY-this._lastY;
			if (this._clickOnly){
				if (Math.abs(offsetX *Laya.stage._canvasTransform.getScaleX())> 1 || Math.abs(offsetY *Laya.stage._canvasTransform.getScaleY())> 1){
					this._clickOnly=false;
					this._offsets || (this._offsets=[]);
					this._offsets.length=0;
					this.target.event("dragstart",this.data);
					MouseManager.instance.disableMouseEvent=this._disableMouseEvent;
					this.target._set$P("$_MOUSEDOWN",false);
				}else return;
				}else {
				this._offsets.push(offsetX,offsetY);
			}
			if (offsetX===0 && offsetY===0)return;
			this._lastX=mouseX;
			this._lastY=mouseY;
			this.target.x+=offsetX *this._elasticRateX;
			this.target.y+=offsetY *this._elasticRateY;
			this.area && this.checkArea();
			this.target.event("dragmove",this.data);
		}

		/**
		*拖拽区域检测。
		*/
		__proto.checkArea=function(){
			if (this.elasticDistance <=0){
				this.backToArea();
				}else {
				if (this.target.x < this.area.x){
					var offsetX=this.area.x-this.target.x;
					}else if (this.target.x > this.area.x+this.area.width){
					offsetX=this.target.x-this.area.x-this.area.width;
					}else {
					offsetX=0;
				}
				this._elasticRateX=Math.max(0,1-(offsetX / this.elasticDistance));
				if (this.target.y < this.area.y){
					var offsetY=this.area.y-this.target.y;
					}else if (this.target.y > this.area.y+this.area.height){
					offsetY=this.target.y-this.area.y-this.area.height;
					}else {
					offsetY=0;
				}
				this._elasticRateY=Math.max(0,1-(offsetY / this.elasticDistance));
			}
		}

		/**
		*移动至设定的拖拽区域。
		*/
		__proto.backToArea=function(){
			this.target.x=Math.min(Math.max(this.target.x,this.area.x),this.area.x+this.area.width);
			this.target.y=Math.min(Math.max(this.target.y,this.area.y),this.area.y+this.area.height);
		}

		/**
		*舞台的抬起事件侦听函数。
		*@param e Event 对象。
		*/
		__proto.onStageMouseUp=function(e){
			MouseManager.instance.disableMouseEvent=false;
			Laya.stage.off("mouseup",this,this.onStageMouseUp);
			Laya.stage.off("mouseout",this,this.onStageMouseUp);
			Laya.timer.clear(this,this.loop);
			if (this._clickOnly || !this.target)return;
			if (this.hasInertia){
				if (this._offsets.length < 1){
					this._offsets.push(this._parent.mouseX-this._lastX,this._parent.mouseY-this._lastY);
				}
				this._offsetX=this._offsetY=0;
				var len=this._offsets.length;
				var n=Math.min(len,6);
				var m=this._offsets.length-n;
				for (var i=len-1;i > m;i--){
					this._offsetY+=this._offsets[i--];
					this._offsetX+=this._offsets[i];
				}
				this._offsetX=this._offsetX / n *2;
				this._offsetY=this._offsetY / n *2;
				if (Math.abs(this._offsetX)> this.maxOffset)this._offsetX=this._offsetX > 0 ? this.maxOffset :-this.maxOffset;
				if (Math.abs(this._offsetY)> this.maxOffset)this._offsetY=this._offsetY > 0 ? this.maxOffset :-this.maxOffset;
				Laya.timer.frameLoop(1,this,this.tweenMove);
				}else if (this.elasticDistance > 0){
				this.checkElastic();
				}else {
				this.clear();
			}
		}

		/**
		*橡皮筋效果检测。
		*/
		__proto.checkElastic=function(){
			var tx=NaN;
			var ty=NaN;
			if (this.target.x < this.area.x)tx=this.area.x;
			else if (this.target.x > this.area.x+this.area.width)tx=this.area.x+this.area.width;
			if (this.target.y < this.area.y)ty=this.area.y;
			else if (this.target.y > this.area.y+this.area.height)ty=this.area.y+this.area.height;
			if (!isNaN(tx)|| !isNaN(ty)){
				var obj={};
				if (!isNaN(tx))obj.x=tx;
				if (!isNaN(ty))obj.y=ty;
				this._tween=Tween.to(this.target,obj,this.elasticBackTime,Ease.sineOut,Handler.create(this,this.clear),0,false,false);
				}else {
				this.clear();
			}
		}

		/**
		*移动。
		*/
		__proto.tweenMove=function(){
			this._offsetX *=this.ratio *this._elasticRateX;
			this._offsetY *=this.ratio *this._elasticRateY;
			this.target.x+=this._offsetX;
			this.target.y+=this._offsetY;
			this.area && this.checkArea();
			this.target.event("dragmove",this.data);
			if ((Math.abs(this._offsetX)< 1 && Math.abs(this._offsetY)< 1)|| this._elasticRateX < 0.5 || this._elasticRateY < 0.5){
				Laya.timer.clear(this,this.tweenMove);
				if (this.elasticDistance > 0)this.checkElastic();
				else this.clear();
			}
		}

		/**
		*结束拖拽。
		*/
		__proto.clear=function(){
			if (this.target){
				this.clearTimer();
				var sp=this.target;
				this.target=null;
				this._parent=null;
				sp.event("dragend",this.data);
			}
		}

		return Dragging;
	})()


	//class laya.utils.Ease
	var Ease=(function(){
		function Ease(){};
		__class(Ease,'laya.utils.Ease');
		Ease.linearNone=function(t,b,c,d){
			return c *t / d+b;
		}

		Ease.linearIn=function(t,b,c,d){
			return c *t / d+b;
		}

		Ease.linearInOut=function(t,b,c,d){
			return c *t / d+b;
		}

		Ease.linearOut=function(t,b,c,d){
			return c *t / d+b;
		}

		Ease.bounceIn=function(t,b,c,d){
			return c-Ease.bounceOut(d-t,0,c,d)+b;
		}

		Ease.bounceInOut=function(t,b,c,d){
			if (t < d *0.5)return Ease.bounceIn(t *2,0,c,d)*.5+b;
			else return Ease.bounceOut(t *2-d,0,c,d)*.5+c *.5+b;
		}

		Ease.bounceOut=function(t,b,c,d){
			if ((t /=d)< (1 / 2.75))return c *(7.5625 *t *t)+b;
			else if (t < (2 / 2.75))return c *(7.5625 *(t-=(1.5 / 2.75))*t+.75)+b;
			else if (t < (2.5 / 2.75))return c *(7.5625 *(t-=(2.25 / 2.75))*t+.9375)+b;
			else return c *(7.5625 *(t-=(2.625 / 2.75))*t+.984375)+b;
		}

		Ease.backIn=function(t,b,c,d,s){
			(s===void 0)&& (s=1.70158);
			return c *(t /=d)*t *((s+1)*t-s)+b;
		}

		Ease.backInOut=function(t,b,c,d,s){
			(s===void 0)&& (s=1.70158);
			if ((t /=d *0.5)< 1)return c *0.5 *(t *t *(((s *=(1.525))+1)*t-s))+b;
			return c / 2 *((t-=2)*t *(((s *=(1.525))+1)*t+s)+2)+b;
		}

		Ease.backOut=function(t,b,c,d,s){
			(s===void 0)&& (s=1.70158);
			return c *((t=t / d-1)*t *((s+1)*t+s)+1)+b;
		}

		Ease.elasticIn=function(t,b,c,d,a,p){
			(a===void 0)&& (a=0);
			(p===void 0)&& (p=0);
			var s;
			if (t==0)return b;
			if ((t /=d)==1)return b+c;
			if (!p)p=d *.3;
			if (!a || (c > 0 && a < c)|| (c < 0 && a <-c)){
				a=c;
				s=p / 4;
			}else s=p / Ease.PI2 *Math.asin(c / a);
			return-(a *Math.pow(2,10 *(t-=1))*Math.sin((t *d-s)*Ease.PI2 / p))+b;
		}

		Ease.elasticInOut=function(t,b,c,d,a,p){
			(a===void 0)&& (a=0);
			(p===void 0)&& (p=0);
			var s;
			if (t==0)return b;
			if ((t /=d *0.5)==2)return b+c;
			if (!p)p=d *(.3 *1.5);
			if (!a || (c > 0 && a < c)|| (c < 0 && a <-c)){
				a=c;
				s=p / 4;
			}else s=p / Ease.PI2 *Math.asin(c / a);
			if (t < 1)return-.5 *(a *Math.pow(2,10 *(t-=1))*Math.sin((t *d-s)*Ease.PI2 / p))+b;
			return a *Math.pow(2,-10 *(t-=1))*Math.sin((t *d-s)*Ease.PI2 / p)*.5+c+b;
		}

		Ease.elasticOut=function(t,b,c,d,a,p){
			(a===void 0)&& (a=0);
			(p===void 0)&& (p=0);
			var s;
			if (t==0)return b;
			if ((t /=d)==1)return b+c;
			if (!p)p=d *.3;
			if (!a || (c > 0 && a < c)|| (c < 0 && a <-c)){
				a=c;
				s=p / 4;
			}else s=p / Ease.PI2 *Math.asin(c / a);
			return (a *Math.pow(2,-10 *t)*Math.sin((t *d-s)*Ease.PI2 / p)+c+b);
		}

		Ease.strongIn=function(t,b,c,d){
			return c *(t /=d)*t *t *t *t+b;
		}

		Ease.strongInOut=function(t,b,c,d){
			if ((t /=d *0.5)< 1)return c *0.5 *t *t *t *t *t+b;
			return c *0.5 *((t-=2)*t *t *t *t+2)+b;
		}

		Ease.strongOut=function(t,b,c,d){
			return c *((t=t / d-1)*t *t *t *t+1)+b;
		}

		Ease.sineInOut=function(t,b,c,d){
			return-c *0.5 *(Math.cos(Math.PI *t / d)-1)+b;
		}

		Ease.sineIn=function(t,b,c,d){
			return-c *Math.cos(t / d *Ease.HALF_PI)+c+b;
		}

		Ease.sineOut=function(t,b,c,d){
			return c *Math.sin(t / d *Ease.HALF_PI)+b;
		}

		Ease.quintIn=function(t,b,c,d){
			return c *(t /=d)*t *t *t *t+b;
		}

		Ease.quintInOut=function(t,b,c,d){
			if ((t /=d *0.5)< 1)return c *0.5 *t *t *t *t *t+b;
			return c *0.5 *((t-=2)*t *t *t *t+2)+b;
		}

		Ease.quintOut=function(t,b,c,d){
			return c *((t=t / d-1)*t *t *t *t+1)+b;
		}

		Ease.quartIn=function(t,b,c,d){
			return c *(t /=d)*t *t *t+b;
		}

		Ease.quartInOut=function(t,b,c,d){
			if ((t /=d *0.5)< 1)return c *0.5 *t *t *t *t+b;
			return-c *0.5 *((t-=2)*t *t *t-2)+b;
		}

		Ease.quartOut=function(t,b,c,d){
			return-c *((t=t / d-1)*t *t *t-1)+b;
		}

		Ease.cubicIn=function(t,b,c,d){
			return c *(t /=d)*t *t+b;
		}

		Ease.cubicInOut=function(t,b,c,d){
			if ((t /=d *0.5)< 1)return c *0.5 *t *t *t+b;
			return c *0.5 *((t-=2)*t *t+2)+b;
		}

		Ease.cubicOut=function(t,b,c,d){
			return c *((t=t / d-1)*t *t+1)+b;
		}

		Ease.quadIn=function(t,b,c,d){
			return c *(t /=d)*t+b;
		}

		Ease.quadInOut=function(t,b,c,d){
			if ((t /=d *0.5)< 1)return c *0.5 *t *t+b;
			return-c *0.5 *((--t)*(t-2)-1)+b;
		}

		Ease.quadOut=function(t,b,c,d){
			return-c *(t /=d)*(t-2)+b;
		}

		Ease.expoIn=function(t,b,c,d){
			return (t==0)? b :c *Math.pow(2,10 *(t / d-1))+b-c *0.001;
		}

		Ease.expoInOut=function(t,b,c,d){
			if (t==0)return b;
			if (t==d)return b+c;
			if ((t /=d *0.5)< 1)return c *0.5 *Math.pow(2,10 *(t-1))+b;
			return c *0.5 *(-Math.pow(2,-10 *--t)+2)+b;
		}

		Ease.expoOut=function(t,b,c,d){
			return (t==d)? b+c :c *(-Math.pow(2,-10 *t / d)+1)+b;
		}

		Ease.circIn=function(t,b,c,d){
			return-c *(Math.sqrt(1-(t /=d)*t)-1)+b;
		}

		Ease.circInOut=function(t,b,c,d){
			if ((t /=d *0.5)< 1)return-c *0.5 *(Math.sqrt(1-t *t)-1)+b;
			return c *0.5 *(Math.sqrt(1-(t-=2)*t)+1)+b;
		}

		Ease.circOut=function(t,b,c,d){
			return c *Math.sqrt(1-(t=t / d-1)*t)+b;
		}

		Ease.HALF_PI=Math.PI *0.5;
		Ease.PI2=Math.PI *2;
		return Ease;
	})()


	//class laya.utils.Handler
	var Handler=(function(){
		function Handler(caller,method,args,once){
			//this.caller=null;
			//this.method=null;
			//this.args=null;
			this.once=false;
			this._id=0;
			(once===void 0)&& (once=false);
			this.setTo(caller,method,args,once);
		}

		__class(Handler,'laya.utils.Handler');
		var __proto=Handler.prototype;
		/**
		*设置此对象的指定属性值。
		*@param caller 执行域(this)。
		*@param method 回调方法。
		*@param args 携带的参数。
		*@param once 是否只执行一次，如果为true，执行后执行recover()进行回收。
		*@return 返回 handler 本身。
		*/
		__proto.setTo=function(caller,method,args,once){
			this._id=Handler._gid++;
			this.caller=caller;
			this.method=method;
			this.args=args;
			this.once=once;
			return this;
		}

		/**
		*执行处理器。
		*/
		__proto.run=function(){
			if (this.method==null)return null;
			var id=this._id;
			var result=this.method.apply(this.caller,this.args);
			this._id===id && this.once && this.recover();
			return result;
		}

		/**
		*执行处理器，携带额外数据。
		*@param data 附加的回调数据，可以是单数据或者Array(作为多参)。
		*/
		__proto.runWith=function(data){
			if (this.method==null)return null;
			var id=this._id;
			if (data==null)
				var result=this.method.apply(this.caller,this.args);
			else if (!this.args && !data.unshift)result=this.method.call(this.caller,data);
			else if (this.args)result=this.method.apply(this.caller,this.args.concat(data));
			else result=this.method.apply(this.caller,data);
			this._id===id && this.once && this.recover();
			return result;
		}

		/**
		*清理对象引用。
		*/
		__proto.clear=function(){
			this.caller=null;
			this.method=null;
			this.args=null;
			return this;
		}

		/**
		*清理并回收到 Handler 对象池内。
		*/
		__proto.recover=function(){
			if (this._id > 0){
				this._id=0;
				Handler._pool.push(this.clear());
			}
		}

		Handler.create=function(caller,method,args,once){
			(once===void 0)&& (once=true);
			if (Handler._pool.length)return Handler._pool.pop().setTo(caller,method,args,once);
			return new Handler(caller,method,args,once);
		}

		Handler._pool=[];
		Handler._gid=1;
		return Handler;
	})()


	//class laya.utils.HitArea
	var HitArea=(function(){
		function HitArea(){
			this._hit=null;
			this._unHit=null;
		}

		__class(HitArea,'laya.utils.HitArea');
		var __proto=HitArea.prototype;
		/**
		*是否包含某个点
		*@param x x坐标
		*@param y y坐标
		*@return 是否点击到
		*/
		__proto.isHit=function(x,y){
			if (!HitArea.isHitGraphic(x,y,this.hit))return false;
			return !HitArea.isHitGraphic(x,y,this.unHit);
		}

		/**
		*检测对象是否包含指定的点。
		*@param x 点的 X 轴坐标值（水平位置）。
		*@param y 点的 Y 轴坐标值（垂直位置）。
		*@return 如果包含指定的点，则值为 true；否则为 false。
		*/
		__proto.contains=function(x,y){
			return this.isHit(x,y);
		}

		/**
		*可点击区域，可以设置绘制一系列矢量图作为点击区域（目前只支持圆形，矩形，多边形）
		*/
		__getset(0,__proto,'hit',function(){
			if (!this._hit)this._hit=new Graphics();
			return this._hit;
			},function(value){
			this._hit=value;
		});

		/**
		*不可点击区域，可以设置绘制一系列矢量图作为非点击区域（目前只支持圆形，矩形，多边形）
		*/
		__getset(0,__proto,'unHit',function(){
			if (!this._unHit)this._unHit=new Graphics();
			return this._unHit;
			},function(value){
			this._unHit=value;
		});

		HitArea.isHitGraphic=function(x,y,graphic){
			if (!graphic)return false;
			var cmds;
			cmds=graphic.cmds;
			if (!cmds && graphic._one){
				cmds=HitArea._cmds;
				cmds.length=1;
				cmds[0]=graphic._one;
			}
			if (!cmds)return false;
			var i=0,len=0;
			len=cmds.length;
			var cmd;
			for (i=0;i < len;i++){
				cmd=cmds[i];
				if (!cmd)continue ;
				var context=Render._context;
				switch (cmd.callee){
					case context._translate:
					case 6:
						x-=cmd[0];
						y-=cmd[1];
					default :
					}
				if (HitArea.isHitCmd(x,y,cmd))return true;
			}
			return false;
		}

		HitArea.isHitCmd=function(x,y,cmd){
			if (!cmd)return false;
			var context=Render._context;
			var rst=false;
			switch (cmd["callee"]){
				case context._drawRect:
				case 13:
					HitArea._rec.setTo(cmd[0],cmd[1],cmd[2],cmd[3]);
					rst=HitArea._rec.contains(x,y);
					break ;
				case context._drawCircle:
				case context._fillCircle:
				case 14:;
					var d=NaN;
					x-=cmd[0];
					y-=cmd[1];
					d=x *x+y *y;
					rst=d < cmd[2] *cmd[2];
					break ;
				case context._drawPoly:
				case 18:
					x-=cmd[0];
					y-=cmd[1];
					rst=HitArea.ptInPolygon(x,y,cmd[2]);
					break ;
				default :
					break ;
				}
			return rst;
		}

		HitArea.ptInPolygon=function(x,y,areaPoints){
			var p;
			p=HitArea._ptPoint;
			p.setTo(x,y);
			var nCross=0;
			var p1x=NaN,p1y=NaN,p2x=NaN,p2y=NaN;
			var len=0;
			len=areaPoints.length;
			for (var i=0;i < len;i+=2){
				p1x=areaPoints[i];
				p1y=areaPoints[i+1];
				p2x=areaPoints[(i+2)% len];
				p2y=areaPoints[(i+3)% len];
				if (p1y==p2y)
					continue ;
				if (p.y < Math.min(p1y,p2y))
					continue ;
				if (p.y >=Math.max(p1y,p2y))
					continue ;
				var tx=(p.y-p1y)*(p2x-p1x)/ (p2y-p1y)+p1x;
				if (tx > p.x){
					nCross++;
				}
			}
			return (nCross % 2==1);
		}

		HitArea._cmds=[];
		__static(HitArea,
		['_rec',function(){return this._rec=new Rectangle();},'_ptPoint',function(){return this._ptPoint=new Point();}
		]);
		return HitArea;
	})()


	//class laya.utils.HTMLChar
	var HTMLChar=(function(){
		function HTMLChar(char,w,h,style){
			//this._sprite=null;
			//this._x=NaN;
			//this._y=NaN;
			//this._w=NaN;
			//this._h=NaN;
			//this.isWord=false;
			//this.char=null;
			//this.charNum=NaN;
			//this.style=null;
			this.char=char;
			this.charNum=char.charCodeAt(0);
			this._x=this._y=0;
			this.width=w;
			this.height=h;
			this.style=style;
			this.isWord=!HTMLChar._isWordRegExp.test(char);
		}

		__class(HTMLChar,'laya.utils.HTMLChar');
		var __proto=HTMLChar.prototype;
		Laya.imps(__proto,{"laya.display.ILayout":true})
		/**
		*设置与此对象绑定的显示对象 <code>Sprite</code> 。
		*@param sprite 显示对象 <code>Sprite</code> 。
		*/
		__proto.setSprite=function(sprite){
			this._sprite=sprite;
		}

		/**
		*获取与此对象绑定的显示对象 <code>Sprite</code>。
		*@return
		*/
		__proto.getSprite=function(){
			return this._sprite;
		}

		/**@private */
		__proto._isChar=function(){
			return true;
		}

		/**@private */
		__proto._getCSSStyle=function(){
			return this.style;
		}

		/**
		*宽度。
		*/
		__getset(0,__proto,'width',function(){
			return this._w;
			},function(value){
			this._w=value;
		});

		/**
		*此对象存储的 X 轴坐标值。
		*当设置此值时，如果此对象有绑定的 Sprite 对象，则改变 Sprite 对象的属性 x 的值。
		*/
		__getset(0,__proto,'x',function(){
			return this._x;
			},function(value){
			if (this._sprite){
				this._sprite.x=value;
			}
			this._x=value;
		});

		/**
		*此对象存储的 Y 轴坐标值。
		*当设置此值时，如果此对象有绑定的 Sprite 对象，则改变 Sprite 对象的属性 y 的值。
		*/
		__getset(0,__proto,'y',function(){
			return this._y;
			},function(value){
			if (this._sprite){
				this._sprite.y=value;
			}
			this._y=value;
		});

		/**
		*高度。
		*/
		__getset(0,__proto,'height',function(){
			return this._h;
			},function(value){
			this._h=value;
		});

		HTMLChar._isWordRegExp=new RegExp("[\\w\.]","");
		return HTMLChar;
	})()


	//class laya.utils.Log
	var Log=(function(){
		function Log(){};
		__class(Log,'laya.utils.Log');
		Log.enable=function(){
			if (!Log._logdiv){
				Log._logdiv=Browser.window.document.createElement('div');
				Browser.window.document.body.appendChild(Log._logdiv);
				Log._logdiv.style.cssText="pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;";
			}
		}

		Log.toggle=function(){
			var style=Log._logdiv.style;
			if (style.width=="1px"){
				style.width=style.height="50%";
				}else {
				style.width=style.height="1px";
			}
		}

		Log.print=function(value){
			if (Log._logdiv){
				if (Log._count >=Log.maxCount)Log.clear();
				Log._count++;
				Log._logdiv.innerText+=value+"\n";
				Log._logdiv.scrollTop=Log._logdiv.scrollHeight;
			}
		}

		Log.clear=function(){
			Log._logdiv.innerText="";
			Log._count=0;
		}

		Log._logdiv=null
		Log._count=0;
		Log.maxCount=20;
		return Log;
	})()


	//class laya.utils.Mouse
	var Mouse=(function(){
		function Mouse(){}
		__class(Mouse,'laya.utils.Mouse');
		/**
		*设置鼠标样式
		*@param cursorStr
		*例如auto move no-drop col-resize
		*all-scroll pointer not-allowed row-resize
		*crosshair progress e-resize ne-resize
		*default text n-resize nw-resize
		*help vertical-text s-resize se-resize
		*inherit wait w-resize sw-resize
		*
		*/
		__getset(1,Mouse,'cursor',function(){
			return Mouse._style.cursor;
			},function(cursorStr){
			Mouse._style.cursor=cursorStr;
		});

		Mouse.hide=function(){
			if (Mouse.cursor !="none"){
				Mouse._preCursor=Mouse.cursor;
				Mouse.cursor="none";
			}
		}

		Mouse.show=function(){
			if (Mouse.cursor=="none"){
				if (Mouse._preCursor){
					Mouse.cursor=Mouse._preCursor;
					}else {
					Mouse.cursor="auto";
				}
			}
		}

		Mouse._preCursor=null
		__static(Mouse,
		['_style',function(){return this._style=Browser.document.body.style;}
		]);
		return Mouse;
	})()


	//class laya.utils.Pool
	var Pool=(function(){
		function Pool(){};
		__class(Pool,'laya.utils.Pool');
		Pool.getPoolBySign=function(sign){
			return Pool._poolDic[sign] || (Pool._poolDic[sign]=[]);
		}

		Pool.clearBySign=function(sign){
			if (Pool._poolDic[sign])Pool._poolDic[sign].length=0;
		}

		Pool.recover=function(sign,item){
			if (item["__InPool"])return;
			item["__InPool"]=true;
			Pool.getPoolBySign(sign).push(item);
		}

		Pool.getItemByClass=function(sign,cls){
			var pool=Pool.getPoolBySign(sign);
			var rst=pool.length ? pool.pop():new cls();
			rst["__InPool"]=false;
			return rst;
		}

		Pool.getItemByCreateFun=function(sign,createFun){
			var pool=Pool.getPoolBySign(sign);
			var rst=pool.length ? pool.pop():createFun();
			rst["__InPool"]=false;
			return rst;
		}

		Pool.getItem=function(sign){
			var pool=Pool.getPoolBySign(sign);
			var rst=pool.length ? pool.pop():null;
			if (rst){
				rst["__InPool"]=false;
			}
			return rst;
		}

		Pool._poolDic={};
		Pool.InPoolSign="__InPool";
		return Pool;
	})()


	//class laya.utils.RunDriver
	var RunDriver=(function(){
		function RunDriver(){};
		__class(RunDriver,'laya.utils.RunDriver');
		RunDriver.FILTER_ACTIONS=[];
		RunDriver.pixelRatio=-1;
		RunDriver._charSizeTestDiv=null
		RunDriver.now=function(){
			return Date.now();
		}

		RunDriver.getWindow=function(){
			return window;
		}

		RunDriver.getPixelRatio=function(){
			if (RunDriver.pixelRatio < 0){
				var ctx=Browser.context;
				var backingStore=ctx.backingStorePixelRatio || ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;
				RunDriver.pixelRatio=(Browser.window.devicePixelRatio || 1)/ backingStore;
				if (RunDriver.pixelRatio < 1)RunDriver.pixelRatio=1;
			}
			return RunDriver.pixelRatio;
		}

		RunDriver.getIncludeStr=function(name){
			return null;
		}

		RunDriver.createShaderCondition=function(conditionScript){
			var fn="(function() {return "+conditionScript+";})";
			return Laya._runScript(fn);
		}

		RunDriver.fontMap=[];
		RunDriver.measureText=function(txt,font){
			var isChinese=RunDriver.hanzi.test(txt);
			if (isChinese && RunDriver.fontMap[font]){
				return RunDriver.fontMap[font];
			};
			var ctx=Browser.context;
			ctx.font=font;
			var r=ctx.measureText(txt);
			if (isChinese)RunDriver.fontMap[font]=r;
			return r;
		}

		RunDriver.getWebGLContext=function(canvas){
		};

		RunDriver.beginFlush=function(){
		};

		RunDriver.endFinish=function(){
		};

		RunDriver.addToAtlas=null
		RunDriver.flashFlushImage=function(atlasWebGLCanvas){
		};

		RunDriver.drawToCanvas=function(sprite,_renderType,canvasWidth,canvasHeight,offsetX,offsetY){
			var canvas=HTMLCanvas.create("2D");
			var context=new RenderContext(canvasWidth,canvasHeight,canvas);
			RenderSprite.renders[_renderType]._fun(sprite,context,offsetX,offsetY);
			return canvas;
		}

		RunDriver.createParticleTemplate2D=null
		RunDriver.createGLTextur=null;
		RunDriver.createWebGLContext2D=null;
		RunDriver.changeWebGLSize=function(w,h){
		};

		RunDriver.createRenderSprite=function(type,next){
			return new RenderSprite(type,next);
		}

		RunDriver.createFilterAction=function(type){
			return new ColorFilterAction();
		}

		RunDriver.createGraphics=function(){
			return new Graphics();
		}

		RunDriver.clear=function(value){
			Render._context.ctx.clear();
		}

		RunDriver.cancelLoadByUrl=function(url){
		};

		RunDriver.clearAtlas=function(value){
		};

		RunDriver.isAtlas=function(bitmap){
			return false;
		}

		RunDriver.addTextureToAtlas=function(value){
		};

		RunDriver.getTexturePixels=function(value,x,y,width,height){
			return null;
		}

		RunDriver.skinAniSprite=function(){
			return null;
		}

		RunDriver.update3DLoop=function(){
		};

		__static(RunDriver,
		['hanzi',function(){return this.hanzi=new RegExp("^[\u4E00-\u9FA5]$");}
		]);
		return RunDriver;
	})()


	//class laya.utils.Stat
	var Stat=(function(){
		function Stat(){};
		__class(Stat,'laya.utils.Stat');
		/**
		*点击性能统计显示区域的处理函数。
		*/
		__getset(1,Stat,'onclick',null,function(fn){
			if (Stat._sp){
				Stat._sp.on("click",Stat._sp,fn);
			}
			if (Stat._canvas){
				Stat._canvas.source.onclick=fn;
				Stat._canvas.source.style.pointerEvents='';
			}
		});

		Stat.show=function(x,y){
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			if (Render.isConchApp && !Render.isConchWebGL){
				Browser.window.conch.showFPS && Browser.window.conch.showFPS(x,y);
				return;
			}
			if (!Render.isConchWebGL && !Browser.onMiniGame &&! Browser.onLimixiu)Stat._useCanvas=true;
			Stat._show=true;
			Stat._fpsData.length=60;
			Stat._view[0]={title:"FPS(Canvas)",value:"_fpsStr",color:"yellow",units:"int"};
			Stat._view[1]={title:"Sprite",value:"_spriteStr",color:"white",units:"int"};
			Stat._view[2]={title:"DrawCall",value:"drawCall",color:"white",units:"int"};
			Stat._view[3]={title:"CurMem",value:"currentMemorySize",color:"yellow",units:"M"};
			if (Render.isWebGL){
				Stat._view[4]={title:"Shader",value:"shaderCall",color:"white",units:"int"};
				if (!Render.is3DMode){
					Stat._view[0].title="FPS(WebGL)";
					Stat._view[5]={title:"Canvas",value:"_canvasStr",color:"white",units:"int"};
					}else {
					Stat._view[0].title="FPS(3D)";
					Stat._view[5]={title:"TriFaces",value:"trianglesFaces",color:"white",units:"int"};
					Stat._view[6]={title:"treeNodeColl",value:"treeNodeCollision",color:"white",units:"int"};
					Stat._view[7]={title:"treeSpriteColl",value:"treeSpriteCollision",color:"white",units:"int"};
				}
				}else {
				Stat._view[4]={title:"Canvas",value:"_canvasStr",color:"white",units:"int"};
			}
			if (Stat._useCanvas){
				Stat.createUIPre(x,y);
			}else
			Stat.createUI(x,y);
			Stat.enable();
		}

		Stat.createUIPre=function(x,y){
			var pixel=Browser.pixelRatio;
			Stat._width=pixel *130;
			Stat._vx=pixel *75;
			Stat._height=pixel *(Stat._view.length *12+3 *pixel)+4;
			Stat._fontSize=12 *pixel;
			for (var i=0;i < Stat._view.length;i++){
				Stat._view[i].x=4;
				Stat._view[i].y=i *Stat._fontSize+2 *pixel;
			}
			if (!Stat._canvas){
				Stat._canvas=new HTMLCanvas('2D');
				Stat._canvas.size(Stat._width,Stat._height);
				Stat._ctx=Stat._canvas.getContext('2d');
				Stat._ctx.textBaseline="top";
				Stat._ctx.font=Stat._fontSize+"px Sans-serif";
				Stat._canvas.source.style.cssText="pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:"+x+"px;top:"+y+"px;width:"+(Stat._width / pixel)+"px;height:"+(Stat._height / pixel)+"px;";
			}
			Stat._first=true;
			Stat.loop();
			Stat._first=false;
			Browser.container.appendChild(Stat._canvas.source);
		}

		Stat.createUI=function(x,y){
			var stat=Stat._sp;
			var pixel=Browser.pixelRatio;
			if (!stat){
				stat=new Sprite();
				Stat._leftText=new Text();
				Stat._leftText.pos(5,5);
				Stat._leftText.color="#ffffff";
				stat.addChild(Stat._leftText);
				Stat._txt=new Text();
				Stat._txt.pos(80*pixel,5);
				Stat._txt.color="#ffffff";
				stat.addChild(Stat._txt);
				Stat._sp=stat;
			}
			stat.pos(x,y);
			var text="";
			for (var i=0;i < Stat._view.length;i++){
				var one=Stat._view[i];
				text+=one.title+"\n";
			}
			Stat._leftText.text=text;
			var width=pixel *138;
			var height=pixel *(Stat._view.length *12+3 *pixel)+4;
			Stat._txt.fontSize=Stat._fontSize *pixel;
			Stat._leftText.fontSize=Stat._fontSize *pixel;
			stat.size(width,height);
			stat.graphics.clear();
			stat.graphics.setAlpha(0.5);
			stat.graphics.drawRect(0,0,width,height,"#999999");
			stat.graphics.setAlpha(1);
			Stat.loop();
		}

		Stat.enable=function(){
			Laya.timer.frameLoop(1,Stat,Stat.loop);
		}

		Stat.hide=function(){
			Stat._show=false;
			Laya.timer.clear(Stat,Stat.loop);
			if (Stat._canvas){
				Browser.removeElement(Stat._canvas.source);
			}
		}

		Stat.clear=function(){
			Stat.trianglesFaces=Stat.drawCall=Stat.shaderCall=Stat.spriteCount=Stat.spriteRenderUseCacheCount=Stat.treeNodeCollision=Stat.treeSpriteCollision=Stat.canvasNormal=Stat.canvasBitmap=Stat.canvasReCache=0;
		}

		Stat.loop=function(){
			Stat._count++;
			var timer=Browser.now();
			if (timer-Stat._timer < 1000)return;
			var count=Stat._count;
			Stat.FPS=Math.round((count *1000)/ (timer-Stat._timer));
			if (Stat._show){
				Stat.trianglesFaces=Math.round(Stat.trianglesFaces / count);
				if (!Stat._useCanvas){
					Stat.drawCall=Math.round(Stat.drawCall / count)-2;
					Stat.shaderCall=Math.round(Stat.shaderCall / count)-4;
					Stat.spriteCount=Math.round(Stat.spriteCount / count)-4;
					}else{
					Stat.drawCall=Math.round(Stat.drawCall / count)-2;
					Stat.shaderCall=Math.round(Stat.shaderCall / count);
					Stat.spriteCount=Math.round(Stat.spriteCount / count)-1;
				}
				Stat.spriteRenderUseCacheCount=Math.round(Stat.spriteRenderUseCacheCount / count);
				Stat.canvasNormal=Math.round(Stat.canvasNormal / count);
				Stat.canvasBitmap=Math.round(Stat.canvasBitmap / count);
				Stat.canvasReCache=Math.ceil(Stat.canvasReCache / count);
				Stat.treeNodeCollision=Math.round(Stat.treeNodeCollision / count);
				Stat.treeSpriteCollision=Math.round(Stat.treeSpriteCollision / count);
				var delay=Stat.FPS > 0 ? Math.floor(1000 / Stat.FPS).toString():" ";
				Stat._fpsStr=Stat.FPS+(Stat.renderSlow ? " slow" :"")+" "+delay;
				Stat._spriteStr=Stat.spriteCount+(Stat.spriteRenderUseCacheCount ? ("/"+Stat.spriteRenderUseCacheCount):'');
				Stat._canvasStr=Stat.canvasReCache+"/"+Stat.canvasNormal+"/"+Stat.canvasBitmap;
				Stat.currentMemorySize=ResourceManager.systemResourceManager.memorySize;
				if (Stat._useCanvas){
					Stat.renderInfoPre();
				}else
				Stat.renderInfo();
				Stat.clear();
			}
			Stat._count=0;
			Stat._timer=timer;
		}

		Stat.renderInfoPre=function(){
			if (Stat._canvas){
				var ctx=Stat._ctx;
				ctx.clearRect(Stat._first ? 0 :Stat._vx,0,Stat._width,Stat._height);
				for (var i=0;i < Stat._view.length;i++){
					var one=Stat._view[i];
					if (Stat._first){
						ctx.fillStyle="white";
						ctx.fillText(one.title,one.x,one.y,null,null,null);
					}
					ctx.fillStyle=one.color;
					var value=Stat[one.value];
					(one.units=="M")&& (value=Math.floor(value / (1024 *1024)*100)/ 100+" M");
					ctx.fillText(value+"",one.x+Stat._vx,one.y,null,null,null);
				}
			}
		}

		Stat.renderInfo=function(){
			var text="";
			for (var i=0;i < Stat._view.length;i++){
				var one=Stat._view[i];
				var value=Stat[one.value];
				(one.units=="M")&& (value=Math.floor(value / (1024 *1024)*100)/ 100+" M");
				(one.units=="K")&& (value=Math.floor(value / (1024)*100)/ 100+" K");
				text+=value+"\n";
			}
			Stat._txt.text=text;
		}

		Stat.FPS=0;
		Stat.loopCount=0;
		Stat.shaderCall=0;
		Stat.drawCall=0;
		Stat.trianglesFaces=0;
		Stat.spriteCount=0;
		Stat.spriteRenderUseCacheCount=0;
		Stat.treeNodeCollision=0;
		Stat.treeSpriteCollision=0;
		Stat.canvasNormal=0;
		Stat.canvasBitmap=0;
		Stat.canvasReCache=0;
		Stat.renderSlow=false;
		Stat.currentMemorySize=0;
		Stat._fpsStr=null
		Stat._canvasStr=null
		Stat._spriteStr=null
		Stat._fpsData=[];
		Stat._timer=0;
		Stat._count=0;
		Stat._view=[];
		Stat._fontSize=12;
		Stat._txt=null
		Stat._leftText=null
		Stat._sp=null
		Stat._show=false;
		Stat._useCanvas=false;
		Stat._canvas=null
		Stat._ctx=null
		Stat._first=false;
		Stat._vx=NaN
		Stat._width=0;
		Stat._height=100;
		return Stat;
	})()


	//class laya.utils.StringKey
	var StringKey=(function(){
		function StringKey(){
			this._strsToID={};
			this._idToStrs=[];
			this._length=0;
		}

		__class(StringKey,'laya.utils.StringKey');
		var __proto=StringKey.prototype;
		/**
		*添加一个字符。
		*@param str 字符，将作为key 存储相应生成的数字。
		*@return 此字符对应的数字。
		*/
		__proto.add=function(str){
			var index=this._strsToID[str];
			if (index !=null)return index;
			this._idToStrs[this._length]=str;
			return this._strsToID[str]=this._length++;
		}

		/**
		*获取指定字符对应的ID。
		*@param str 字符。
		*@return 此字符对应的ID。
		*/
		__proto.getID=function(str){
			var index=this._strsToID[str];
			return index==null ?-1 :index;
		}

		/**
		*根据指定ID获取对应字符。
		*@param id ID。
		*@return 此id对应的字符。
		*/
		__proto.getName=function(id){
			var str=this._idToStrs[id];
			return str==null ? undefined :str;
		}

		return StringKey;
	})()


	//class laya.utils.Timer
	var Timer=(function(){
		var TimerHandler;
		function Timer(){
			this._delta=0;
			this.scale=1;
			this.currFrame=0;
			this._mid=1;
			this._map=[];
			this._laters=[];
			this._handlers=[];
			this._temp=[];
			this._count=0;
			this.currTimer=this._now();
			this._lastTimer=this._now();
			this._init();
		}

		__class(Timer,'laya.utils.Timer');
		var __proto=Timer.prototype;
		/**@private */
		__proto._init=function(){
			Laya.timer && Laya.timer.frameLoop(1,this,this._update);
		}

		/**@private */
		__proto._now=function(){
			return Date.now();
		}

		/**
		*@private
		*帧循环处理函数。
		*/
		__proto._update=function(){
			if (this.scale <=0){
				this._lastTimer=this._now();
				return;
			};
			var frame=this.currFrame=this.currFrame+this.scale;
			var now=this._now();
			this._delta=(now-this._lastTimer)*this.scale;
			var timer=this.currTimer=this.currTimer+this._delta;
			this._lastTimer=now;
			var handlers=this._handlers;
			this._count=0;
			for (i=0,n=handlers.length;i < n;i++){
				handler=handlers[i];
				if (handler.method!==null){
					var t=handler.userFrame ? frame :timer;
					if (t >=handler.exeTime){
						if (handler.repeat){
							if (!handler.jumpFrame){
								handler.exeTime+=handler.delay;
								handler.run(false);
								if (t > handler.exeTime){
									handler.exeTime+=Math.ceil((t-handler.exeTime)/ handler.delay)*handler.delay;
								}
								}else {
								while (t >=handler.exeTime){
									handler.exeTime+=handler.delay;
									handler.run(false);
								}
							}
							}else {
							handler.run(true);
						}
					}
					}else {
					this._count++;
				}
			}
			if (this._count > 30 || frame % 200===0)this._clearHandlers();
			var laters=this._laters;
			for (var i=0,n=laters.length-1;i <=n;i++){
				var handler=laters[i];
				if (handler.method!==null){
					this._map[handler.key]=null;
					handler.run(false);
				}
				this._recoverHandler(handler);
				i===n && (n=laters.length-1);
			}
			laters.length=0;
		}

		/**@private */
		__proto._clearHandlers=function(){
			var handlers=this._handlers;
			for (var i=0,n=handlers.length;i < n;i++){
				var handler=handlers[i];
				if (handler.method!==null)this._temp.push(handler);
				else this._recoverHandler(handler);
			}
			this._handlers=this._temp;
			this._temp=handlers;
			this._temp.length=0;
		}

		/**@private */
		__proto._recoverHandler=function(handler){
			if(this._map[handler.key]==handler)this._map[handler.key]=null;
			handler.clear();
			Timer._pool.push(handler);
		}

		/**@private */
		__proto._create=function(useFrame,repeat,delay,caller,method,args,coverBefore){
			if (!delay){
				method.apply(caller,args);
				return null;
			}
			if (coverBefore){
				var handler=this._getHandler(caller,method);
				if (handler){
					handler.repeat=repeat;
					handler.userFrame=useFrame;
					handler.delay=delay;
					handler.caller=caller;
					handler.method=method;
					handler.args=args;
					handler.exeTime=delay+(useFrame ? this.currFrame :this.currTimer+this._now()-this._lastTimer);
					return handler;
				}
			}
			handler=Timer._pool.length > 0 ? Timer._pool.pop():new TimerHandler();
			handler.repeat=repeat;
			handler.userFrame=useFrame;
			handler.delay=delay;
			handler.caller=caller;
			handler.method=method;
			handler.args=args;
			handler.exeTime=delay+(useFrame ? this.currFrame :this.currTimer+this._now()-this._lastTimer)+1;
			this._indexHandler(handler);
			this._handlers.push(handler);
			return handler;
		}

		/**@private */
		__proto._indexHandler=function(handler){
			var caller=handler.caller;
			var method=handler.method;
			var cid=caller ? caller.$_GID || (caller.$_GID=Utils.getGID()):0;
			var mid=method.$_TID || (method.$_TID=(this._mid++)*100000);
			handler.key=cid+mid;
			this._map[handler.key]=handler;
		}

		/**
		*定时执行一次。
		*@param delay 延迟时间(单位为毫秒)。
		*@param caller 执行域(this)。
		*@param method 定时器回调函数。
		*@param args 回调参数。
		*@param coverBefore 是否覆盖之前的延迟执行，默认为 true 。
		*/
		__proto.once=function(delay,caller,method,args,coverBefore){
			(coverBefore===void 0)&& (coverBefore=true);
			this._create(false,false,delay,caller,method,args,coverBefore);
		}

		/**
		*定时重复执行。
		*@param delay 间隔时间(单位毫秒)。
		*@param caller 执行域(this)。
		*@param method 定时器回调函数。
		*@param args 回调参数。
		*@param coverBefore 是否覆盖之前的延迟执行，默认为 true 。
		*@param jumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次
		*/
		__proto.loop=function(delay,caller,method,args,coverBefore,jumpFrame){
			(coverBefore===void 0)&& (coverBefore=true);
			(jumpFrame===void 0)&& (jumpFrame=false);
			var handler=this._create(false,true,delay,caller,method,args,coverBefore);
			if (handler)handler.jumpFrame=jumpFrame;
		}

		/**
		*定时执行一次(基于帧率)。
		*@param delay 延迟几帧(单位为帧)。
		*@param caller 执行域(this)。
		*@param method 定时器回调函数。
		*@param args 回调参数。
		*@param coverBefore 是否覆盖之前的延迟执行，默认为 true 。
		*/
		__proto.frameOnce=function(delay,caller,method,args,coverBefore){
			(coverBefore===void 0)&& (coverBefore=true);
			this._create(true,false,delay,caller,method,args,coverBefore);
		}

		/**
		*定时重复执行(基于帧率)。
		*@param delay 间隔几帧(单位为帧)。
		*@param caller 执行域(this)。
		*@param method 定时器回调函数。
		*@param args 回调参数。
		*@param coverBefore 是否覆盖之前的延迟执行，默认为 true 。
		*/
		__proto.frameLoop=function(delay,caller,method,args,coverBefore){
			(coverBefore===void 0)&& (coverBefore=true);
			this._create(true,true,delay,caller,method,args,coverBefore);
		}

		/**返回统计信息。*/
		__proto.toString=function(){
			return "callLater:"+this._laters.length+" handlers:"+this._handlers.length+" pool:"+Timer._pool.length;
		}

		/**
		*清理定时器。
		*@param caller 执行域(this)。
		*@param method 定时器回调函数。
		*/
		__proto.clear=function(caller,method){
			var handler=this._getHandler(caller,method);
			if (handler){
				this._map[handler.key]=null;handler.key=0;
				handler.clear();
			}
		}

		/**
		*清理对象身上的所有定时器。
		*@param caller 执行域(this)。
		*/
		__proto.clearAll=function(caller){
			if (!caller)return;
			for (var i=0,n=this._handlers.length;i < n;i++){
				var handler=this._handlers[i];
				if (handler.caller===caller){
					this._map[handler.key]=null;handler.key=0;
					handler.clear();
				}
			}
		}

		/**@private */
		__proto._getHandler=function(caller,method){
			var cid=caller ? caller.$_GID || (caller.$_GID=Utils.getGID()):0;
			var mid=method.$_TID || (method.$_TID=(this._mid++)*100000);
			return this._map[cid+mid];
		}

		/**
		*延迟执行。
		*@param caller 执行域(this)。
		*@param method 定时器回调函数。
		*@param args 回调参数。
		*/
		__proto.callLater=function(caller,method,args){
			if (this._getHandler(caller,method)==null){
				if (Timer._pool.length)
					var handler=Timer._pool.pop();
				else handler=new TimerHandler();
				handler.caller=caller;
				handler.method=method;
				handler.args=args;
				this._indexHandler(handler);
				this._laters.push(handler);
			}
		}

		/**
		*立即执行 callLater 。
		*@param caller 执行域(this)。
		*@param method 定时器回调函数。
		*/
		__proto.runCallLater=function(caller,method){
			var handler=this._getHandler(caller,method);
			if (handler && handler.method !=null){
				this._map[handler.key]=null;
				handler.run(true);
			}
		}

		/**
		*立即提前执行定时器，执行之后从队列中删除
		*@param caller 执行域(this)。
		*@param method 定时器回调函数。
		*/
		__proto.runTimer=function(caller,method){
			this.runCallLater(caller,method);
		}

		/**
		*两帧之间的时间间隔,单位毫秒。
		*/
		__getset(0,__proto,'delta',function(){
			return this._delta;
		});

		Timer._pool=[];
		Timer.__init$=function(){
			/**@private */
			//class TimerHandler
			TimerHandler=(function(){
				function TimerHandler(){
					this.key=0;
					this.repeat=false;
					this.delay=0;
					this.userFrame=false;
					this.exeTime=0;
					this.caller=null;
					this.method=null;
					this.args=null;
					this.jumpFrame=false;
				}
				__class(TimerHandler,'');
				var __proto=TimerHandler.prototype;
				__proto.clear=function(){
					this.caller=null;
					this.method=null;
					this.args=null;
				}
				__proto.run=function(withClear){
					var caller=this.caller;
					if (caller && caller.destroyed)return this.clear();
					var method=this.method;
					var args=this.args;
					withClear && this.clear();
					if (method==null)return;
					args ? method.apply(caller,args):method.call(caller);
				}
				return TimerHandler;
			})()
		}

		return Timer;
	})()


	//class laya.utils.Tween
	var Tween=(function(){
		function Tween(){
			//this._complete=null;
			//this._target=null;
			//this._ease=null;
			//this._props=null;
			//this._duration=0;
			//this._delay=0;
			//this._startTimer=0;
			//this._usedTimer=0;
			//this._usedPool=false;
			//this._delayParam=null;
			this.gid=0;
			//this.update=null;
		}

		__class(Tween,'laya.utils.Tween');
		var __proto=Tween.prototype;
		/**
		*缓动对象的props属性到目标值。
		*@param target 目标对象(即将更改属性值的对象)。
		*@param props 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。
		*@param duration 花费的时间，单位毫秒。
		*@param ease 缓动类型，默认为匀速运动。
		*@param complete 结束回调函数。
		*@param delay 延迟执行时间。
		*@param coverBefore 是否覆盖之前的缓动。
		*@return 返回Tween对象。
		*/
		__proto.to=function(target,props,duration,ease,complete,delay,coverBefore){
			(delay===void 0)&& (delay=0);
			(coverBefore===void 0)&& (coverBefore=false);
			return this._create(target,props,duration,ease,complete,delay,coverBefore,true,false,true);
		}

		/**
		*从props属性，缓动到当前状态。
		*@param target 目标对象(即将更改属性值的对象)。
		*@param props 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。
		*@param duration 花费的时间，单位毫秒。
		*@param ease 缓动类型，默认为匀速运动。
		*@param complete 结束回调函数。
		*@param delay 延迟执行时间。
		*@param coverBefore 是否覆盖之前的缓动。
		*@return 返回Tween对象。
		*/
		__proto.from=function(target,props,duration,ease,complete,delay,coverBefore){
			(delay===void 0)&& (delay=0);
			(coverBefore===void 0)&& (coverBefore=false);
			return this._create(target,props,duration,ease,complete,delay,coverBefore,false,false,true);
		}

		/**@private */
		__proto._create=function(target,props,duration,ease,complete,delay,coverBefore,isTo,usePool,runNow){
			if (!target)throw new Error("Tween:target is null");
			this._target=target;
			this._duration=duration;
			this._ease=ease || props.ease || Tween.easeNone;
			this._complete=complete || props.complete;
			this._delay=delay;
			this._props=[];
			this._usedTimer=0;
			this._startTimer=Browser.now();
			this._usedPool=usePool;
			this._delayParam=null;
			this.update=props.update;
			var gid=(target.$_GID || (target.$_GID=Utils.getGID()));
			if (!Tween.tweenMap[gid]){
				Tween.tweenMap[gid]=[this];
				}else {
				if (coverBefore)Tween.clearTween(target);
				Tween.tweenMap[gid].push(this);
			}
			if (runNow){
				if (delay <=0)this.firstStart(target,props,isTo);
				else{
					this._delayParam=[target,props,isTo];
					Laya.scaleTimer.once(delay,this,this.firstStart,this._delayParam);
				}
				}else {
				this._initProps(target,props,isTo);
			}
			return this;
		}

		__proto.firstStart=function(target,props,isTo){
			this._delayParam=null;
			if (target.destroyed){
				this.clear();
				return;
			}
			this._initProps(target,props,isTo);
			this._beginLoop();
		}

		__proto._initProps=function(target,props,isTo){
			for (var p in props){
				if ((typeof (target[p])=='number')){
					var start=isTo ? target[p] :props[p];
					var end=isTo ? props[p] :target[p];
					this._props.push([p,start,end-start]);
					if (!isTo)target[p]=start;
				}
			}
		}

		__proto._beginLoop=function(){
			Laya.scaleTimer.frameLoop(1,this,this._doEase);
		}

		/**执行缓动**/
		__proto._doEase=function(){
			this._updateEase(Browser.now());
		}

		/**@private */
		__proto._updateEase=function(time){
			var target=this._target;
			if (!target)return;
			if (target.destroyed)return Tween.clearTween(target);
			var usedTimer=this._usedTimer=time-this._startTimer-this._delay;
			if (usedTimer < 0)return;
			if (usedTimer >=this._duration)return this.complete();
			var ratio=usedTimer > 0 ? this._ease(usedTimer,0,1,this._duration):0;
			var props=this._props;
			for (var i=0,n=props.length;i < n;i++){
				var prop=props[i];
				target[prop[0]]=prop[1]+(ratio *prop[2]);
			}
			if (this.update)this.update.run();
		}

		/**
		*立即结束缓动并到终点。
		*/
		__proto.complete=function(){
			if (!this._target)return;
			Laya.scaleTimer.runTimer(this,this.firstStart);
			var target=this._target;
			var props=this._props;
			var handler=this._complete;
			for (var i=0,n=props.length;i < n;i++){
				var prop=props[i];
				target[prop[0]]=prop[1]+prop[2];
			}
			if (this.update)this.update.run();
			this.clear();
			handler && handler.run();
		}

		/**
		*暂停缓动，可以通过resume或restart重新开始。
		*/
		__proto.pause=function(){
			Laya.scaleTimer.clear(this,this._beginLoop);
			Laya.scaleTimer.clear(this,this._doEase);
			Laya.scaleTimer.clear(this,this.firstStart);
			var time=Browser.now();
			var dTime=NaN;
			dTime=time-this._startTimer-this._delay;
			if (dTime < 0){
				this._usedTimer=dTime;
			}
		}

		/**
		*设置开始时间。
		*@param startTime 开始时间。
		*/
		__proto.setStartTime=function(startTime){
			this._startTimer=startTime;
		}

		/**
		*停止并清理当前缓动。
		*/
		__proto.clear=function(){
			if (this._target){
				this._remove();
				this._clear();
			}
		}

		/**
		*@private
		*/
		__proto._clear=function(){
			this.pause();
			Laya.scaleTimer.clear(this,this.firstStart);
			this._complete=null;
			this._target=null;
			this._ease=null;
			this._props=null;
			this._delayParam=null;
			if (this._usedPool){
				this.update=null;
				Pool.recover("tween",this);
			}
		}

		/**回收到对象池。*/
		__proto.recover=function(){
			this._usedPool=true;
			this._clear();
		}

		__proto._remove=function(){
			var tweens=Tween.tweenMap[this._target.$_GID];
			if (tweens){
				for (var i=0,n=tweens.length;i < n;i++){
					if (tweens[i]===this){
						tweens.splice(i,1);
						break ;
					}
				}
			}
		}

		/**
		*重新开始暂停的缓动。
		*/
		__proto.restart=function(){
			this.pause();
			this._usedTimer=0;
			this._startTimer=Browser.now();
			if (this._delayParam){
				Laya.scaleTimer.once(this._delay,this,this.firstStart,this._delayParam);
				return;
			};
			var props=this._props;
			for (var i=0,n=props.length;i < n;i++){
				var prop=props[i];
				this._target[prop[0]]=prop[1];
			}
			Laya.scaleTimer.once(this._delay,this,this._beginLoop);
		}

		/**
		*恢复暂停的缓动。
		*/
		__proto.resume=function(){
			if (this._usedTimer >=this._duration)return;
			this._startTimer=Browser.now()-this._usedTimer-this._delay;
			if (this._delayParam){
				if (this._usedTimer < 0){
					Laya.scaleTimer.once(-this._usedTimer,this,this.firstStart,this._delayParam);
					}else{
					this.firstStart.apply(this,this._delayParam);
				}
				}else{
				this._beginLoop();
			}
		}

		/**设置当前执行比例**/
		__getset(0,__proto,'progress',null,function(v){
			var uTime=v *this._duration;
			this._startTimer=Browser.now()-this._delay-uTime;
		});

		Tween.to=function(target,props,duration,ease,complete,delay,coverBefore,autoRecover){
			(delay===void 0)&& (delay=0);
			(coverBefore===void 0)&& (coverBefore=false);
			(autoRecover===void 0)&& (autoRecover=true);
			return Pool.getItemByClass("tween",Tween)._create(target,props,duration,ease,complete,delay,coverBefore,true,autoRecover,true);
		}

		Tween.from=function(target,props,duration,ease,complete,delay,coverBefore,autoRecover){
			(delay===void 0)&& (delay=0);
			(coverBefore===void 0)&& (coverBefore=false);
			(autoRecover===void 0)&& (autoRecover=true);
			return Pool.getItemByClass("tween",Tween)._create(target,props,duration,ease,complete,delay,coverBefore,false,autoRecover,true);
		}

		Tween.clearAll=function(target){
			if (!target || !target.$_GID)return;
			var tweens=Tween.tweenMap[target.$_GID];
			if (tweens){
				for (var i=0,n=tweens.length;i < n;i++){
					tweens[i]._clear();
				}
				tweens.length=0;
			}
		}

		Tween.clear=function(tween){
			tween.clear();
		}

		Tween.clearTween=function(target){
			Tween.clearAll(target);
		}

		Tween.easeNone=function(t,b,c,d){
			return c *t / d+b;
		}

		Tween.tweenMap={};
		return Tween;
	})()


	//class laya.utils.Utils
	var Utils=(function(){
		function Utils(){};
		__class(Utils,'laya.utils.Utils');
		Utils.toRadian=function(angle){
			return angle *Utils._pi2;
		}

		Utils.toAngle=function(radian){
			return radian *Utils._pi;
		}

		Utils.toHexColor=function(color){
			if (color < 0 || isNaN(color))return null;
			var str=color.toString(16);
			while (str.length < 6)str="0"+str;
			return "#"+str;
		}

		Utils.getGID=function(){
			return Utils._gid++;
		}

		Utils.concatArray=function(source,array){
			if (!array)return source;
			if (!source)return array;
			var i=0,len=array.length;
			for (i=0;i < len;i++){
				source.push(array[i]);
			}
			return source;
		}

		Utils.clearArray=function(array){
			if (!array)return array;
			array.length=0;
			return array;
		}

		Utils.copyArray=function(source,array){
			source || (source=[]);
			if (!array)return source;
			source.length=array.length;
			var i=0,len=array.length;
			for (i=0;i < len;i++){
				source[i]=array[i];
			}
			return source;
		}

		Utils.getGlobalRecByPoints=function(sprite,x0,y0,x1,y1){
			var newLTPoint;
			newLTPoint=new Point(x0,y0);
			newLTPoint=sprite.localToGlobal(newLTPoint);
			var newRBPoint;
			newRBPoint=new Point(x1,y1);
			newRBPoint=sprite.localToGlobal(newRBPoint);
			return Rectangle._getWrapRec([newLTPoint.x,newLTPoint.y,newRBPoint.x,newRBPoint.y]);
		}

		Utils.getGlobalPosAndScale=function(sprite){
			return Utils.getGlobalRecByPoints(sprite,0,0,1,1);
		}

		Utils.bind=function(fun,scope){
			var rst=fun;
			rst=fun.bind(scope);;
			return rst;
		}

		Utils.measureText=function(txt,font){
			return RunDriver.measureText(txt,font);
		}

		Utils.updateOrder=function(array){
			if (!array || array.length < 2)return false;
			var i=1,j=0,len=array.length,key=NaN,c;
			while (i < len){
				j=i;
				c=array[j];
				key=array[j]._zOrder;
				while (--j >-1){
					if (array[j]._zOrder > key)array[j+1]=array[j];
					else break ;
				}
				array[j+1]=c;
				i++;
			};
			var model=c.parent.conchModel;
			if (model){
				if (model.updateZOrder !=null){
					model.updateZOrder();
					}else {
					for (i=0;i < len;i++){
						model.removeChild(array[i].conchModel);
					}
					for (i=0;i < len;i++){
						model.addChildAt(array[i].conchModel,i);
					}
				}
			}
			return true;
		}

		Utils.transPointList=function(points,x,y){
			var i=0,len=points.length;
			for (i=0;i < len;i+=2){
				points[i]+=x;
				points[i+1]+=y;
			}
		}

		Utils.parseInt=function(str,radix){
			(radix===void 0)&& (radix=0);
			var result=Browser.window.parseInt(str,radix);
			if (isNaN(result))return 0;
			return result;
		}

		Utils.getFileExtension=function(path){
			Utils._extReg.lastIndex=path.lastIndexOf(".");
			var result=Utils._extReg.exec(path);
			if (result && result.length > 1){
				return result[1].toLowerCase();
			}
			return null;
		}

		Utils.getTransformRelativeToWindow=function(coordinateSpace,x,y){
			var stage=Laya.stage;
			var globalTransform=laya.utils.Utils.getGlobalPosAndScale(coordinateSpace);
			var canvasMatrix=stage._canvasTransform.clone();
			var canvasLeft=canvasMatrix.tx;
			var canvasTop=canvasMatrix.ty;
			canvasMatrix.rotate(-Math.PI / 180 *Laya.stage.canvasDegree);
			canvasMatrix.scale(Laya.stage.clientScaleX,Laya.stage.clientScaleY);
			var perpendicular=(Laya.stage.canvasDegree % 180 !=0);
			var tx=NaN,ty=NaN;
			if (perpendicular){
				tx=y+globalTransform.y;
				ty=x+globalTransform.x;
				tx *=canvasMatrix.d;
				ty *=canvasMatrix.a;
				if (Laya.stage.canvasDegree==90){
					tx=canvasLeft-tx;
					ty+=canvasTop;
				}
				else {
					tx+=canvasLeft;
					ty=canvasTop-ty;
				}
			}
			else {
				tx=x+globalTransform.x;
				ty=y+globalTransform.y;
				tx *=canvasMatrix.a;
				ty *=canvasMatrix.d;
				tx+=canvasLeft;
				ty+=canvasTop;
			};
			var domScaleX=NaN,domScaleY=NaN;
			if (perpendicular){
				domScaleX=canvasMatrix.d *globalTransform.height;
				domScaleY=canvasMatrix.a *globalTransform.width;
				}else {
				domScaleX=canvasMatrix.a *globalTransform.width;
				domScaleY=canvasMatrix.d *globalTransform.height;
			}
			return {x:tx,y:ty,scaleX:domScaleX,scaleY:domScaleY};
		}

		Utils.fitDOMElementInArea=function(dom,coordinateSpace,x,y,width,height){
			if (!dom._fitLayaAirInitialized){
				dom._fitLayaAirInitialized=true;
				dom.style.transformOrigin=dom.style.webKittransformOrigin="left top";
				dom.style.position="absolute"
			};
			var transform=Utils.getTransformRelativeToWindow(coordinateSpace,x,y);
			dom.style.transform=dom.style.webkitTransform="scale("+transform.scaleX+","+transform.scaleY+") rotate("+(Laya.stage.canvasDegree)+"deg)";
			dom.style.width=width+'px';
			dom.style.height=height+'px';
			dom.style.left=transform.x+'px';
			dom.style.top=transform.y+'px';
		}

		Utils.isOkTextureList=function(textureList){
			if (!textureList)return false;
			var i=0,len=textureList.length;
			var tTexture;
			for (i=0;i < len;i++){
				tTexture=textureList[i];
				if (!tTexture||!tTexture.source)return false;
			}
			return true;
		}

		Utils.isOKCmdList=function(cmds){
			if (!cmds)return false;
			var i=0,len=cmds.length;
			var context=Render._context;
			var cmd;
			var tex;
			for (i=0;i < len;i++){
				cmd=cmds[i];
				switch(cmd.callee){
					case context._drawTexture:
					case context._fillTexture:
					case context._drawTextureWithTransform:
						tex=cmd[0];
						if (!tex || !tex.source)return false;
					}
			}
			return true;
		}

		Utils._gid=1;
		Utils._pi=180 / Math.PI;
		Utils._pi2=Math.PI / 180;
		Utils._extReg=/\.(\w+)\??/g;
		Utils.parseXMLFromString=function(value){
			var rst;
			value=value.replace(/>\s+</g,'><');
			rst=(new DOMParser()).parseFromString(value,'text/xml');
			if (rst.firstChild.textContent.indexOf("This page contains the following errors")>-1){
				throw new Error(rst.firstChild.firstChild.textContent);
			}
			return rst;
		}

		return Utils;
	})()


	//class laya.utils.VectorGraphManager
	var VectorGraphManager=(function(){
		function VectorGraphManager(){
			this.useDic={};
			this.shapeDic={};
			this.shapeLineDic={};
			this._id=0;
			this._checkKey=false;
			this._freeIdArray=[];
			if (Render.isWebGL){
				CacheManager.regCacheByFunction(Utils.bind(this.startDispose,this),Utils.bind(this.getCacheList,this));
			}
		}

		__class(VectorGraphManager,'laya.utils.VectorGraphManager');
		var __proto=VectorGraphManager.prototype;
		/**
		*得到个空闲的ID
		*@return
		*/
		__proto.getId=function(){
			return this._id++;
		}

		/**
		*添加一个图形到列表中
		*@param id
		*@param shape
		*/
		__proto.addShape=function(id,shape){
			this.shapeDic[id]=shape;
			if (!this.useDic[id]){
				this.useDic[id]=true;
			}
		}

		/**
		*添加一个线图形到列表中
		*@param id
		*@param Line
		*/
		__proto.addLine=function(id,Line){
			this.shapeLineDic[id]=Line;
			if (!this.shapeLineDic[id]){
				this.shapeLineDic[id]=true;
			}
		}

		/**
		*检测一个对象是否在使用中
		*@param id
		*/
		__proto.getShape=function(id){
			if (this._checkKey){
				if (this.useDic[id] !=null){
					this.useDic[id]=true;
				}
			}
		}

		/**
		*删除一个图形对象
		*@param id
		*/
		__proto.deleteShape=function(id){
			if (this.shapeDic[id]){
				this.shapeDic[id]=null;
				delete this.shapeDic[id];
			}
			if (this.shapeLineDic[id]){
				this.shapeLineDic[id]=null;
				delete this.shapeLineDic[id];
			}
			if (this.useDic[id] !=null){
				delete this.useDic[id];
			}
		}

		/**
		*得到缓存列表
		*@return
		*/
		__proto.getCacheList=function(){
			var str;
			var list=[];
			for (str in this.shapeDic){
				list.push(this.shapeDic[str]);
			}
			for (str in this.shapeLineDic){
				list.push(this.shapeLineDic[str]);
			}
			return list;
		}

		/**
		*开始清理状态，准备销毁
		*/
		__proto.startDispose=function(key){
			var str;
			for (str in this.useDic){
				this.useDic[str]=false;
			}
			this._checkKey=true;
		}

		/**
		*确认销毁
		*/
		__proto.endDispose=function(){
			if (this._checkKey){
				var str;
				for (str in this.useDic){
					if (!this.useDic[str]){
						this.deleteShape(str);
					}
				}
				this._checkKey=false;
			}
		}

		VectorGraphManager.getInstance=function(){
			return VectorGraphManager.instance=VectorGraphManager.instance|| new VectorGraphManager();
		}

		VectorGraphManager.instance=null
		return VectorGraphManager;
	})()


	//class laya.utils.WeakObject
	var WeakObject=(function(){
		function WeakObject(){
			this._obj=null;
			this._obj=WeakObject.supportWeakMap ? new Browser.window.WeakMap():{};
			if (!WeakObject.supportWeakMap)WeakObject._maps.push(this);
		}

		__class(WeakObject,'laya.utils.WeakObject');
		var __proto=WeakObject.prototype;
		/**
		*设置缓存
		*@param key kye对象，可被回收
		*@param value object对象，可被回收
		*/
		__proto.set=function(key,value){
			if (key==null)return;
			if (WeakObject.supportWeakMap){
				var objKey=key;
				if ((typeof key=='string')|| (typeof key=='number')){
					objKey=WeakObject._keys[key];
					if (!objKey)objKey=WeakObject._keys[key]={k:key};
				}
				this._obj.set(objKey,value);
				}else {
				if ((typeof key=='string')|| (typeof key=='number')){
					this._obj[key]=value;
					}else {
					key.$_GID || (key.$_GID=Utils.getGID());
					this._obj[key.$_GID]=value;
				}
			}
		}

		/**
		*获取缓存
		*@param key kye对象，可被回收
		*/
		__proto.get=function(key){
			if (key==null)return null;
			if (WeakObject.supportWeakMap){
				var objKey=((typeof key=='string')|| (typeof key=='number'))? WeakObject._keys[key] :key;
				if (!objKey)return null;
				return this._obj.get(objKey);
				}else {
				if ((typeof key=='string')|| (typeof key=='number'))return this._obj[key];
				return this._obj[key.$_GID];
			}
		}

		/**
		*删除缓存
		*/
		__proto.del=function(key){
			if (key==null)return;
			if (WeakObject.supportWeakMap){
				var objKey=((typeof key=='string')|| (typeof key=='number'))? WeakObject._keys[key] :key;
				if (!objKey)return;
				this._obj.delete(objKey);
				}else {
				if ((typeof key=='string')|| (typeof key=='number'))delete this._obj[key];
				else delete this._obj[this._obj.$_GID];
			}
		}

		/**
		*是否有缓存
		*/
		__proto.has=function(key){
			if (key==null)return false;
			if (WeakObject.supportWeakMap){
				var objKey=((typeof key=='string')|| (typeof key=='number'))? WeakObject._keys[key] :key;
				return this._obj.has(objKey);
				}else {
				if ((typeof key=='string')|| (typeof key=='number'))return this._obj[key] !=null;
				return this._obj[this._obj.$_GID] !=null;
			}
		}

		WeakObject.__init__=function(){
			WeakObject.supportWeakMap=Browser.window.WeakMap !=null;
			if (!WeakObject.supportWeakMap)Laya.timer.loop(WeakObject.delInterval,null,WeakObject.clearCache);
		}

		WeakObject.clearCache=function(){
			for (var i=0,n=WeakObject._maps.length;i < n;i++){
				var obj=WeakObject._maps[i];
				obj._obj={};
			}
		}

		WeakObject.supportWeakMap=false;
		WeakObject.delInterval=5 *60 *1000;
		WeakObject._keys={};
		WeakObject._maps=[];
		__static(WeakObject,
		['I',function(){return this.I=new WeakObject();}
		]);
		return WeakObject;
	})()


	//class laya.utils.WordText
	var WordText=(function(){
		function WordText(){
			this.id=NaN;
			this.save=[];
			this.toUpperCase=null;
			this.changed=false;
			this._text=null;
		}

		__class(WordText,'laya.utils.WordText');
		var __proto=WordText.prototype;
		__proto.setText=function(txt){
			this.changed=true;
			this._text=txt;
		}

		__proto.toString=function(){
			return this._text;
		}

		__proto.charCodeAt=function(i){
			return this._text ? this._text.charCodeAt(i):NaN;
		}

		__proto.charAt=function(i){
			return this._text ? this._text.charAt(i):null;
		}

		__getset(0,__proto,'length',function(){
			return this._text ? this._text.length :0;
		});

		return WordText;
	})()


	//class laya.webgl.atlas.AtlasGrid
	var AtlasGrid=(function(){
		var TexRowInfo,TexMergeTexSize;
		function AtlasGrid(width,height,atlasID){
			this._atlasID=0;
			this._width=0;
			this._height=0;
			this._texCount=0;
			this._rowInfo=null;
			this._cells=null;
			this._failSize=new TexMergeTexSize();
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			(atlasID===void 0)&& (atlasID=0);
			this._cells=null;
			this._rowInfo=null;
			this._init(width,height);
			this._atlasID=atlasID;
		}

		__class(AtlasGrid,'laya.webgl.atlas.AtlasGrid');
		var __proto=AtlasGrid.prototype;
		//------------------------------------------------------------------------------
		__proto.getAltasID=function(){
			return this._atlasID;
		}

		//------------------------------------------------------------------------------
		__proto.setAltasID=function(atlasID){
			if (atlasID >=0){
				this._atlasID=atlasID;
			}
		}

		//------------------------------------------------------------------
		__proto.addTex=function(type,width,height){
			var result=this._get(width,height);
			if (result.ret==false){
				return result;
			}
			this._fill(result.x,result.y,width,height,type);
			this._texCount++;
			return result;
		}

		//------------------------------------------------------------------------------
		__proto._release=function(){
			if (this._cells !=null){
				this._cells.length=0;
				this._cells=null;
			}
			if (this._rowInfo){
				this._rowInfo.length=0;
				this._rowInfo=null;
			}
		}

		//------------------------------------------------------------------------------
		__proto._init=function(width,height){
			this._width=width;
			this._height=height;
			this._release();
			if (this._width==0)return false;
			this._cells=new Uint8Array(this._width *this._height*3);
			this._rowInfo=__newvec(this._height);
			for (var i=0;i < this._height;i++){
				this._rowInfo[i]=new TexRowInfo();
			}
			this._clear();
			return true;
		}

		//------------------------------------------------------------------
		__proto._get=function(width,height){
			var pFillInfo=new MergeFillInfo();
			if (width >=this._failSize.width && height >=this._failSize.height){
				return pFillInfo;
			};
			var rx=-1;
			var ry=-1;
			var nWidth=this._width;
			var nHeight=this._height;
			var pCellBox=this._cells;
			for (var y=0;y < nHeight;y++){
				if (this._rowInfo[y].spaceCount < width)continue ;
				for (var x=0;x < nWidth;){
					var tm=(y *nWidth+x)*3;
					if (pCellBox[tm] !=0 || pCellBox[tm+1] < width || pCellBox[tm+2] < height){
						x+=pCellBox[tm+1];
						continue ;
					}
					rx=x;
					ry=y;
					for (var xx=0;xx < width;xx++){
						if (pCellBox[3*xx+tm+2] < height){
							rx=-1;
							break ;
						}
					}
					if (rx < 0){
						x+=pCellBox[tm+1];
						continue ;
					}
					pFillInfo.ret=true;
					pFillInfo.x=rx;
					pFillInfo.y=ry;
					return pFillInfo;
				}
			}
			return pFillInfo;
		}

		//------------------------------------------------------------------
		__proto._fill=function(x,y,w,h,type){
			var nWidth=this._width;
			var nHeghit=this._height;
			this._check((x+w)<=nWidth && (y+h)<=nHeghit);
			for (var yy=y;yy < (h+y);++yy){
				this._check(this._rowInfo[yy].spaceCount >=w);
				this._rowInfo[yy].spaceCount-=w;
				for (var xx=0;xx < w;xx++){
					var tm=(x+yy *nWidth+xx)*3;
					this._check(this._cells[tm]==0);
					this._cells[tm]=type;
					this._cells[tm+1]=w;
					this._cells[tm+2]=h;
				}
			}
			if (x > 0){
				for (yy=0;yy < h;++yy){
					var s=0;
					for (xx=x-1;xx >=0;--xx,++s){
						if (this._cells[((y+yy)*nWidth+xx)*3] !=0)break ;
					}
					for (xx=s;xx > 0;--xx){
						this._cells[((y+yy)*nWidth+x-xx)*3+1]=xx;
						this._check(xx > 0);
					}
				}
			}
			if (y > 0){
				for (xx=x;xx < (x+w);++xx){
					s=0;
					for (yy=y-1;yy >=0;--yy,s++){
						if (this._cells[(xx+yy *nWidth)*3] !=0)break ;
					}
					for (yy=s;yy > 0;--yy){
						this._cells[(xx+(y-yy)*nWidth)*3+2]=yy;
						this._check(yy > 0);
					}
				}
			}
		}

		__proto._check=function(ret){
			if (ret==false){
				console.log("xtexMerger 错误啦");
			}
		}

		//------------------------------------------------------------------
		__proto._clear=function(){
			this._texCount=0;
			for (var y=0;y < this._height;y++){
				this._rowInfo[y].spaceCount=this._width;
			}
			for (var i=0;i < this._height;i++){
				for (var j=0;j < this._width;j++){
					var tm=(i *this._width+j)*3;
					this._cells[tm]=0;
					this._cells[tm+1]=this._width-j;
					this._cells[tm+2]=this._width-i;
				}
			}
			this._failSize.width=this._width+1;
			this._failSize.height=this._height+1;
		}

		AtlasGrid.__init$=function(){
			//------------------------------------------------------------------------------
			//class TexRowInfo
			TexRowInfo=(function(){
				function TexRowInfo(){
					this.spaceCount=0;
				}
				__class(TexRowInfo,'');
				return TexRowInfo;
			})()
			//------------------------------------------------------------------------------
			//class TexMergeTexSize
			TexMergeTexSize=(function(){
				function TexMergeTexSize(){
					this.width=0;
					this.height=0;
				}
				__class(TexMergeTexSize,'');
				return TexMergeTexSize;
			})()
		}

		return AtlasGrid;
	})()


	//class laya.webgl.atlas.AtlasResourceManager
	var AtlasResourceManager=(function(){
		function AtlasResourceManager(width,height,gridSize,maxTexNum){
			this._currentAtlasCount=0;
			this._maxAtlaserCount=0;
			this._width=0;
			this._height=0;
			this._gridSize=0;
			this._gridNumX=0;
			this._gridNumY=0;
			this._init=false;
			this._curAtlasIndex=0;
			this._setAtlasParam=false;
			this._atlaserArray=null;
			this._needGC=false;
			this._setAtlasParam=true;
			this._width=width;
			this._height=height;
			this._gridSize=gridSize;
			this._maxAtlaserCount=maxTexNum;
			this._gridNumX=width / gridSize;
			this._gridNumY=height / gridSize;
			this._curAtlasIndex=0;
			this._atlaserArray=[];
		}

		__class(AtlasResourceManager,'laya.webgl.atlas.AtlasResourceManager');
		var __proto=AtlasResourceManager.prototype;
		__proto.setAtlasParam=function(width,height,gridSize,maxTexNum){
			if (this._setAtlasParam==true){
				AtlasResourceManager._sid_=0;
				this._width=width;
				this._height=height;
				this._gridSize=gridSize;
				this._maxAtlaserCount=maxTexNum;
				this._gridNumX=width / gridSize;
				this._gridNumY=height / gridSize;
				this._curAtlasIndex=0;
				this.freeAll();
				return true;
				}else {
				console.log("设置大图合集参数错误，只能在开始页面设置各种参数");
				throw-1;
				return false;
			}
			return false;
		}

		//添加 图片到大图集
		__proto.pushData=function(texture){
			var bitmap=texture.bitmap;
			var nWebGLImageIndex=-1;
			var curAtlas=null;
			var i=0,n=0,altasIndex=0;
			for (i=0,n=this._atlaserArray.length;i < n;i++){
				altasIndex=(this._curAtlasIndex+i)% n;
				curAtlas=this._atlaserArray[altasIndex];
				nWebGLImageIndex=curAtlas.findBitmapIsExist(bitmap);
				if (nWebGLImageIndex !=-1){
					break ;
				}
			}
			if (nWebGLImageIndex !=-1){
				var offset=curAtlas.InAtlasWebGLImagesOffsetValue[nWebGLImageIndex];
				offsetX=offset[0];
				offsetY=offset[1];
				curAtlas.addToAtlas(texture,offsetX,offsetY);
				return true;
				}else {
				var tex=texture;
				this._setAtlasParam=false;
				var bFound=false;
				var nImageGridX=(Math.ceil((texture.bitmap.width+2)/ this._gridSize));
				var nImageGridY=(Math.ceil((texture.bitmap.height+2)/ this._gridSize));
				var bSuccess=false;
				for (var k=0;k < 2;k++){
					var maxAtlaserCount=this._maxAtlaserCount;
					for (i=0;i < maxAtlaserCount;i++){
						altasIndex=(this._curAtlasIndex+i)% maxAtlaserCount;
						(this._atlaserArray.length-1 >=altasIndex)|| (this._atlaserArray.push(new Atlaser(this._gridNumX,this._gridNumY,this._width,this._height,AtlasResourceManager._sid_++)));
						var atlas=this._atlaserArray[altasIndex];
						var offsetX=0,offsetY=0;
						var fillInfo=atlas.addTex(1,nImageGridX,nImageGridY);
						if (fillInfo.ret){
							offsetX=fillInfo.x *this._gridSize+1;
							offsetY=fillInfo.y *this._gridSize+1;
							bitmap.lock=true;
							atlas.addToAtlasTexture((bitmap),offsetX,offsetY);
							atlas.addToAtlas(texture,offsetX,offsetY);
							bSuccess=true;
							this._curAtlasIndex=altasIndex;
							break ;
						}
					}
					if (bSuccess)
						break ;
					this._atlaserArray.push(new Atlaser(this._gridNumX,this._gridNumY,this._width,this._height,AtlasResourceManager._sid_++));
					this._needGC=true;
					this.garbageCollection();
					this._curAtlasIndex=this._atlaserArray.length-1;
				}
				if (!bSuccess){
					console.log(">>>AtlasManager pushData error");
				}
				return bSuccess;
			}
		}

		__proto.addToAtlas=function(tex){
			laya.webgl.atlas.AtlasResourceManager.instance.pushData(tex);
		}

		/**
		*回收大图合集,不建议手动调用
		*@return
		*/
		__proto.garbageCollection=function(){
			if (this._needGC===true){
				var n=this._atlaserArray.length-this._maxAtlaserCount;
				for (var i=0;i < n;i++){
					this._atlaserArray[i].dispose();
					console.log("AtlasResourceManager:Dispose the inner Atlas。");
				}
				console.log(">>>>altas garbageCollection ="+n);
				this._atlaserArray.splice(0,n);
				this._needGC=false;
			}
			return true;
		}

		__proto.freeAll=function(){
			for (var i=0,n=this._atlaserArray.length;i < n;i++){
				this._atlaserArray[i].dispose();
			}
			this._atlaserArray.length=0;
			this._curAtlasIndex=0;
		}

		__proto.getAtlaserCount=function(){
			return this._atlaserArray.length;
		}

		__proto.getAtlaserByIndex=function(index){
			return this._atlaserArray[index];
		}

		__getset(1,AtlasResourceManager,'instance',function(){
			if (!AtlasResourceManager._Instance){
				AtlasResourceManager._Instance=new AtlasResourceManager(laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth,laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight,16,laya.webgl.atlas.AtlasResourceManager.maxTextureCount);
			}
			return AtlasResourceManager._Instance;
		});

		__getset(1,AtlasResourceManager,'enabled',function(){
			return Config.atlasEnable;
		});

		__getset(1,AtlasResourceManager,'atlasLimitWidth',function(){
			return AtlasResourceManager._atlasLimitWidth;
			},function(value){
			AtlasResourceManager._atlasLimitWidth=value;
		});

		__getset(1,AtlasResourceManager,'atlasLimitHeight',function(){
			return AtlasResourceManager._atlasLimitHeight;
			},function(value){
			AtlasResourceManager._atlasLimitHeight=value;
		});

		AtlasResourceManager._enable=function(){
			Config.atlasEnable=true;
		}

		AtlasResourceManager._disable=function(){
			Config.atlasEnable=false;
		}

		AtlasResourceManager.__init__=function(){
			AtlasResourceManager.atlasTextureWidth=2048;
			AtlasResourceManager.atlasTextureHeight=2048;
			AtlasResourceManager.maxTextureCount=6;
			AtlasResourceManager.atlasLimitWidth=512;
			AtlasResourceManager.atlasLimitHeight=512;
		}

		AtlasResourceManager._atlasLimitWidth=0;
		AtlasResourceManager._atlasLimitHeight=0;
		AtlasResourceManager.gridSize=16;
		AtlasResourceManager.atlasTextureWidth=0;
		AtlasResourceManager.atlasTextureHeight=0;
		AtlasResourceManager.maxTextureCount=0;
		AtlasResourceManager._atlasRestore=0;
		AtlasResourceManager.BOARDER_TYPE_NO=0;
		AtlasResourceManager.BOARDER_TYPE_RIGHT=1;
		AtlasResourceManager.BOARDER_TYPE_LEFT=2;
		AtlasResourceManager.BOARDER_TYPE_BOTTOM=4;
		AtlasResourceManager.BOARDER_TYPE_TOP=8;
		AtlasResourceManager.BOARDER_TYPE_ALL=15;
		AtlasResourceManager._sid_=0;
		AtlasResourceManager._Instance=null;
		return AtlasResourceManager;
	})()


	//class laya.webgl.atlas.MergeFillInfo
	var MergeFillInfo=(function(){
		function MergeFillInfo(){
			this.x=0;
			this.y=0;
			this.ret=false;
			this.ret=false;
			this.x=0;
			this.y=0;
		}

		__class(MergeFillInfo,'laya.webgl.atlas.MergeFillInfo');
		return MergeFillInfo;
	})()


	//class laya.webgl.canvas.BlendMode
	var BlendMode=(function(){
		function BlendMode(){};
		__class(BlendMode,'laya.webgl.canvas.BlendMode');
		BlendMode._init_=function(gl){
			BlendMode.fns=[BlendMode.BlendNormal,BlendMode.BlendAdd,BlendMode.BlendMultiply,BlendMode.BlendScreen,BlendMode.BlendOverlay,BlendMode.BlendLight,BlendMode.BlendMask,BlendMode.BlendDestinationOut];
			BlendMode.targetFns=[BlendMode.BlendNormalTarget,BlendMode.BlendAddTarget,BlendMode.BlendMultiplyTarget,BlendMode.BlendScreenTarget,BlendMode.BlendOverlayTarget,BlendMode.BlendLightTarget,BlendMode.BlendMask,BlendMode.BlendDestinationOut];
		}

		BlendMode.BlendNormal=function(gl){
			gl.blendFunc(1,0x0303);
		}

		BlendMode.BlendAdd=function(gl){
			gl.blendFunc(1,0x0304);
		}

		BlendMode.BlendMultiply=function(gl){
			gl.blendFunc(0x0306,0x0303);
		}

		BlendMode.BlendScreen=function(gl){
			gl.blendFunc(1,1);
		}

		BlendMode.BlendOverlay=function(gl){
			gl.blendFunc(1,0x0301);
		}

		BlendMode.BlendLight=function(gl){
			gl.blendFunc(1,1);
		}

		BlendMode.BlendNormalTarget=function(gl){
			gl.blendFunc(1,0x0303);
		}

		BlendMode.BlendAddTarget=function(gl){
			gl.blendFunc(1,0x0304);
		}

		BlendMode.BlendMultiplyTarget=function(gl){
			gl.blendFunc(0x0306,0x0303);
		}

		BlendMode.BlendScreenTarget=function(gl){
			gl.blendFunc(1,1);
		}

		BlendMode.BlendOverlayTarget=function(gl){
			gl.blendFunc(1,0x0301);
		}

		BlendMode.BlendLightTarget=function(gl){
			gl.blendFunc(1,1);
		}

		BlendMode.BlendMask=function(gl){
			gl.blendFunc(0,0x0302);
		}

		BlendMode.BlendDestinationOut=function(gl){
			gl.blendFunc(0,0);
		}

		BlendMode.activeBlendFunction=null;
		BlendMode.NAMES=["normal","add","multiply","screen","overlay","light","mask","destination-out"];
		BlendMode.TOINT={"normal":0,"add":1,"multiply":2,"screen":3 ,"lighter":1,"overlay":4,"light":5,"mask":6,"destination-out":7};
		BlendMode.NORMAL="normal";
		BlendMode.ADD="add";
		BlendMode.MULTIPLY="multiply";
		BlendMode.SCREEN="screen";
		BlendMode.LIGHT="light";
		BlendMode.OVERLAY="overlay";
		BlendMode.DESTINATIONOUT="destination-out";
		BlendMode.fns=[];
		BlendMode.targetFns=[];
		return BlendMode;
	})()


	//class laya.webgl.canvas.DrawStyle
	var DrawStyle=(function(){
		function DrawStyle(value){
			this._color=Color$1.create("black");
			this.setValue(value);
		}

		__class(DrawStyle,'laya.webgl.canvas.DrawStyle');
		var __proto=DrawStyle.prototype;
		__proto.setValue=function(value){
			if (value){
				if ((typeof value=='string')){
					this._color=Color$1.create(value);
					return;
				}
				if ((value instanceof laya.utils.Color )){
					this._color=value;
					return;
				}
			}
		}

		__proto.reset=function(){
			this._color=Color$1.create("black");
		}

		__proto.equal=function(value){
			if ((typeof value=='string'))return this._color.strColor===value;
			if ((value instanceof laya.utils.Color ))return this._color.numColor===(value).numColor;
			return false;
		}

		__proto.toColorStr=function(){
			return this._color.strColor;
		}

		DrawStyle.create=function(value){
			if (value){
				var color;
				if ((typeof value=='string'))color=Color$1.create(value);
				else if ((value instanceof laya.utils.Color ))color=value;
				if (color){
					return color._drawStyle || (color._drawStyle=new DrawStyle(value));
				}
			}
			return laya.webgl.canvas.DrawStyle.DEFAULT;
		}

		__static(DrawStyle,
		['DEFAULT',function(){return this.DEFAULT=new DrawStyle("#000000");}
		]);
		return DrawStyle;
	})()


	//class laya.webgl.canvas.Path
	var Path=(function(){
		function Path(){
			this._x=0;
			this._y=0;
			//this._rect=null;
			//this.ib=null;
			//this.vb=null;
			this.dirty=false;
			//this.geomatrys=null;
			//this._curGeomatry=null;
			this.offset=0;
			this.count=0;
			this.geoStart=0;
			this.tempArray=[];
			this.closePath=false;
			this.geomatrys=[];
			var gl=WebGL.mainContext;
			this.ib=IndexBuffer2D.create(0x88E8);
			this.vb=VertexBuffer2D.create(5);
		}

		__class(Path,'laya.webgl.canvas.Path');
		var __proto=Path.prototype;
		__proto.addPoint=function(pointX,pointY){
			this.tempArray.push(pointX,pointY);
		}

		__proto.getEndPointX=function(){
			return this.tempArray[this.tempArray.length-2];
		}

		__proto.getEndPointY=function(){
			return this.tempArray[this.tempArray.length-1];
		}

		__proto.polygon=function(x,y,points,color,borderWidth,borderColor){
			var geo;
			this.geomatrys.push(this._curGeomatry=geo=new Polygon(x,y,points,color,borderWidth,borderColor));
			if (!color)geo.fill=false;
			if (borderColor==undefined)geo.borderWidth=0;
			return geo;
		}

		__proto.setGeomtry=function(shape){
			this.geomatrys.push(this._curGeomatry=shape);
		}

		__proto.drawLine=function(x,y,points,width,color){
			var geo;
			if (this.closePath){
				this.geomatrys.push(this._curGeomatry=geo=new LoopLine(x,y,points,width,color));
				}else {
				this.geomatrys.push(this._curGeomatry=geo=new Line(x,y,points,width,color));
			}
			geo.fill=false;
			return geo;
		}

		__proto.update=function(){
			var si=this.ib._byteLength;
			var len=this.geomatrys.length;
			this.offset=si;
			for (var i=this.geoStart;i < len;i++){
				this.geomatrys[i].getData(this.ib,this.vb,this.vb._byteLength / 20);
			}
			this.geoStart=len;
			this.count=(this.ib._byteLength-si)/ CONST3D2D.BYTES_PIDX;
		}

		__proto.reset=function(){
			this.vb.clear();
			this.ib.clear();
			this.offset=this.count=this.geoStart=0;
			this.geomatrys.length=0;
		}

		__proto.recover=function(){
			this._curGeomatry=null;
			this.vb.destory();
			this.vb=null;
			this.ib.destory();
			this.ib=null;
		}

		return Path;
	})()


	//class laya.webgl.canvas.save.SaveBase
	var SaveBase=(function(){
		function SaveBase(){
			//this._valueName=null;
			//this._value=null;
			//this._dataObj=null;
			//this._newSubmit=false;
		}

		__class(SaveBase,'laya.webgl.canvas.save.SaveBase');
		var __proto=SaveBase.prototype;
		Laya.imps(__proto,{"laya.webgl.canvas.save.ISaveData":true})
		__proto.isSaveMark=function(){return false;}
		__proto.restore=function(context){
			this._dataObj[this._valueName]=this._value;
			SaveBase._cache[SaveBase._cache._length++]=this;
			this._newSubmit && (context._curSubmit=Submit.RENDERBASE,context._renderKey=0);
		}

		SaveBase._createArray=function(){
			var value=[];
			value._length=0;
			return value;
		}

		SaveBase._init=function(){
			var namemap=SaveBase._namemap={};
			namemap[0x1]="ALPHA";
			namemap[0x2]="fillStyle";
			namemap[0x8]="font";
			namemap[0x100]="lineWidth";
			namemap[0x200]="strokeStyle";
			namemap[0x2000]="_mergeID";
			namemap[0x400]=namemap[0x800]=namemap[0x1000]=[];
			namemap[0x4000]="textBaseline";
			namemap[0x8000]="textAlign";
			namemap[0x10000]="_nBlendType";
			namemap[0x100000]="shader";
			namemap[0x200000]="filters";
			return namemap;
		}

		SaveBase.save=function(context,type,dataObj,newSubmit){
			if ((context._saveMark._saveuse & type)!==type){
				context._saveMark._saveuse |=type;
				var cache=SaveBase._cache;
				var o=cache._length > 0 ? cache[--cache._length] :(new SaveBase());
				o._value=dataObj[o._valueName=SaveBase._namemap[type]];
				o._dataObj=dataObj;
				o._newSubmit=newSubmit;
				var _save=context._save;
				_save[_save._length++]=o;
			}
		}

		SaveBase._cache=laya.webgl.canvas.save.SaveBase._createArray();
		SaveBase._namemap=SaveBase._init();
		return SaveBase;
	})()


	//class laya.webgl.canvas.save.SaveClipRect
	var SaveClipRect=(function(){
		function SaveClipRect(){
			//this._clipSaveRect=null;
			//this._submitScissor=null;
			this._clipRect=new Rectangle();
		}

		__class(SaveClipRect,'laya.webgl.canvas.save.SaveClipRect');
		var __proto=SaveClipRect.prototype;
		Laya.imps(__proto,{"laya.webgl.canvas.save.ISaveData":true})
		__proto.isSaveMark=function(){return false;}
		__proto.restore=function(context){
			context._clipRect=this._clipSaveRect;
			SaveClipRect._cache[SaveClipRect._cache._length++]=this;
			this._submitScissor.submitLength=context._submits._length-this._submitScissor.submitIndex;
			context._curSubmit=Submit.RENDERBASE;
			context._renderKey=0;
		}

		SaveClipRect.save=function(context,submitScissor){
			if ((context._saveMark._saveuse & 0x20000)==0x20000)return;
			context._saveMark._saveuse |=0x20000;
			var cache=SaveClipRect._cache;
			var o=cache._length > 0 ? cache[--cache._length] :(new SaveClipRect());
			o._clipSaveRect=context._clipRect;
			context._clipRect=o._clipRect.copyFrom(context._clipRect);
			o._submitScissor=submitScissor;
			var _save=context._save;
			_save[_save._length++]=o;
		}

		__static(SaveClipRect,
		['_cache',function(){return this._cache=SaveBase._createArray();}
		]);
		return SaveClipRect;
	})()


	//class laya.webgl.canvas.save.SaveClipRectStencil
	var SaveClipRectStencil=(function(){
		function SaveClipRectStencil(){
			//this._clipSaveRect=null;
			//this._saveMatrix=null;
			this._contextX=0;
			this._contextY=0;
			//this._submitStencil=null;
			this._clipRect=new Rectangle();
			this._rect=new Rectangle();
			this._matrix=new Matrix();
		}

		__class(SaveClipRectStencil,'laya.webgl.canvas.save.SaveClipRectStencil');
		var __proto=SaveClipRectStencil.prototype;
		Laya.imps(__proto,{"laya.webgl.canvas.save.ISaveData":true})
		__proto.isSaveMark=function(){return false;}
		__proto.restore=function(context){
			SubmitStencil.restore(context,this._rect,this._saveMatrix,this._contextX,this._contextY);
			context._clipRect=this._clipSaveRect;
			context._curMat=this._saveMatrix;
			context._x=this._contextX;
			context._y=this._contextY;
			SaveClipRectStencil._cache[SaveClipRectStencil._cache._length++]=this;
			context._curSubmit=Submit.RENDERBASE;
		}

		SaveClipRectStencil.save=function(context,submitStencil,x,y,width,height,clipX,clipY,clipWidth,clipHeight){
			if ((context._saveMark._saveuse & 0x40000)==0x40000)return;
			context._saveMark._saveuse |=0x40000;
			var cache=SaveClipRectStencil._cache;
			var o=cache._length > 0 ? cache[--cache._length] :(new SaveClipRectStencil());
			o._clipSaveRect=context._clipRect;
			o._clipRect.setTo(clipX,clipY,clipWidth,clipHeight);
			context._clipRect=o._clipRect;
			o._rect.x=x;
			o._rect.y=y;
			o._rect.width=width;
			o._rect.height=height;
			o._contextX=context._x;
			o._contextY=context._y;
			o._saveMatrix=context._curMat;
			context._curMat.copyTo(o._matrix);
			context._curMat=o._matrix;
			o._submitStencil=submitStencil;
			var _save=context._save;
			_save[_save._length++]=o;
		}

		__static(SaveClipRectStencil,
		['_cache',function(){return this._cache=SaveBase._createArray();}
		]);
		return SaveClipRectStencil;
	})()


	//class laya.webgl.canvas.save.SaveMark
	var SaveMark=(function(){
		function SaveMark(){
			this._saveuse=0;
			//this._preSaveMark=null;
			;
		}

		__class(SaveMark,'laya.webgl.canvas.save.SaveMark');
		var __proto=SaveMark.prototype;
		Laya.imps(__proto,{"laya.webgl.canvas.save.ISaveData":true})
		__proto.isSaveMark=function(){
			return true;
		}

		__proto.restore=function(context){
			context._saveMark=this._preSaveMark;
			SaveMark._no[SaveMark._no._length++]=this;
		}

		SaveMark.Create=function(context){
			var no=SaveMark._no;
			var o=no._length > 0 ? no[--no._length] :(new SaveMark());
			o._saveuse=0;
			o._preSaveMark=context._saveMark;
			context._saveMark=o;
			return o;
		}

		__static(SaveMark,
		['_no',function(){return this._no=SaveBase._createArray();}
		]);
		return SaveMark;
	})()


	//class laya.webgl.canvas.save.SaveTransform
	var SaveTransform=(function(){
		function SaveTransform(){
			//this._savematrix=null;
			this._matrix=new Matrix();
		}

		__class(SaveTransform,'laya.webgl.canvas.save.SaveTransform');
		var __proto=SaveTransform.prototype;
		Laya.imps(__proto,{"laya.webgl.canvas.save.ISaveData":true})
		__proto.isSaveMark=function(){return false;}
		__proto.restore=function(context){
			context._curMat=this._savematrix;
			SaveTransform._no[SaveTransform._no._length++]=this;
		}

		SaveTransform.save=function(context){
			var _saveMark=context._saveMark;
			if ((_saveMark._saveuse & 0x800)===0x800)return;
			_saveMark._saveuse |=0x800;
			var no=SaveTransform._no;
			var o=no._length > 0 ? no[--no._length] :(new SaveTransform());
			o._savematrix=context._curMat;
			context._curMat=context._curMat.copyTo(o._matrix);
			var _save=context._save;
			_save[_save._length++]=o;
		}

		__static(SaveTransform,
		['_no',function(){return this._no=SaveBase._createArray();}
		]);
		return SaveTransform;
	})()


	//class laya.webgl.canvas.save.SaveTranslate
	var SaveTranslate=(function(){
		function SaveTranslate(){
			//this._x=NaN;
			//this._y=NaN;
		}

		__class(SaveTranslate,'laya.webgl.canvas.save.SaveTranslate');
		var __proto=SaveTranslate.prototype;
		Laya.imps(__proto,{"laya.webgl.canvas.save.ISaveData":true})
		__proto.isSaveMark=function(){return false;}
		__proto.restore=function(context){
			var mat=context._curMat;
			context._x=this._x;
			context._y=this._y;
			SaveTranslate._no[SaveTranslate._no._length++]=this;
		}

		SaveTranslate.save=function(context){
			var no=SaveTranslate._no;
			var o=no._length > 0 ? no[--no._length] :(new SaveTranslate());
			o._x=context._x;
			o._y=context._y;
			var _save=context._save;
			_save[_save._length++]=o;
		}

		__static(SaveTranslate,
		['_no',function(){return this._no=SaveBase._createArray();}
		]);
		return SaveTranslate;
	})()


	//class laya.webgl.resource.RenderTargetMAX
	var RenderTargetMAX=(function(){
		function RenderTargetMAX(){
			this.target=null;
			this.repaint=false;
			this._width=NaN;
			this._height=NaN;
			this._sp=null;
			this._clipRect=new Rectangle();
		}

		__class(RenderTargetMAX,'laya.webgl.resource.RenderTargetMAX');
		var __proto=RenderTargetMAX.prototype;
		__proto.setSP=function(sp){
			this._sp=sp;
		}

		__proto.size=function(w,h){
			var _$this=this;
			if (this._width===w && this._height===h){
				this.target.size(w,h);
				return;
			}
			this.repaint=true;
			this._width=w;
			this._height=h;
			if (!this.target)
				this.target=RenderTarget2D.create(w,h);
			else
			this.target.size(w,h);
			if (!this.target.hasListener("recovered")){
				this.target.on("recovered",this,function(e){
					Laya.timer.callLater(_$this._sp,_$this._sp.repaint);
				});
			}
		}

		__proto._flushToTarget=function(context,target){
			if (target._destroy)return;
			var worldScissorTest=RenderState2D.worldScissorTest;
			var preworldClipRect=RenderState2D.worldClipRect;
			RenderState2D.worldClipRect=this._clipRect;
			this._clipRect.x=this._clipRect.y=0;
			this._clipRect.width=this._width;
			this._clipRect.height=this._height;
			RenderState2D.worldScissorTest=false;
			WebGL.mainContext.disable(0x0C11);
			var preAlpha=RenderState2D.worldAlpha;
			var preMatrix4=RenderState2D.worldMatrix4;
			var preMatrix=RenderState2D.worldMatrix;
			var preFilters=RenderState2D.worldFilters;
			var preShaderDefines=RenderState2D.worldShaderDefines;
			RenderState2D.worldMatrix=Matrix.EMPTY;
			RenderState2D.restoreTempArray();
			RenderState2D.worldMatrix4=RenderState2D.TEMPMAT4_ARRAY;
			RenderState2D.worldAlpha=1;
			RenderState2D.worldFilters=null;
			RenderState2D.worldShaderDefines=null;
			BaseShader.activeShader=null;
			target.start();
			Config.showCanvasMark ? target.clear(0,1,0,0.3):target.clear(0,0,0,0);
			context.flush();
			target.end();
			BaseShader.activeShader=null;
			RenderState2D.worldAlpha=preAlpha;
			RenderState2D.worldMatrix4=preMatrix4;
			RenderState2D.worldMatrix=preMatrix;
			RenderState2D.worldFilters=preFilters;
			RenderState2D.worldShaderDefines=preShaderDefines;
			RenderState2D.worldScissorTest=worldScissorTest
			if (worldScissorTest){
				var y=RenderState2D.height-preworldClipRect.y-preworldClipRect.height;
				WebGL.mainContext.scissor(preworldClipRect.x,y,preworldClipRect.width,preworldClipRect.height);
				WebGL.mainContext.enable(0x0C11);
			}
			RenderState2D.worldClipRect=preworldClipRect;
		}

		__proto.flush=function(context){
			if (this.repaint){
				this._flushToTarget(context,this.target);
				this.repaint=false;
			}
		}

		__proto.drawTo=function(context,x,y,width,height){
			context.drawTexture(this.target.getTexture(),x,y,width,height,0,0);
		}

		__proto.destroy=function(){
			if (this.target){
				this.target.destroy();
				this.target=null;
				this._sp=null;
			}
		}

		return RenderTargetMAX;
	})()


	//class laya.webgl.shader.d2.Shader2D
	var Shader2D=(function(){
		function Shader2D(){
			this.ALPHA=1;
			//this.glTexture=null;
			//this.shader=null;
			//this.filters=null;
			this.shaderType=0;
			//this.colorAdd=null;
			//this.strokeStyle=null;
			//this.fillStyle=null;
			this.defines=new ShaderDefines2D();
		}

		__class(Shader2D,'laya.webgl.shader.d2.Shader2D');
		var __proto=Shader2D.prototype;
		__proto.destroy=function(){
			this.defines=null;
			this.filters=null;
			this.glTexture=null;
			this.strokeStyle=null;
			this.fillStyle=null;
		}

		Shader2D.__init__=function(){
			Shader.addInclude("parts/ColorFilter_ps_uniform.glsl","uniform vec4 colorAlpha;\nuniform mat4 colorMat;");
			Shader.addInclude("parts/ColorFilter_ps_logic.glsl","mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n");
			Shader.addInclude("parts/GlowFilter_ps_uniform.glsl","uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;");
			Shader.addInclude("parts/GlowFilter_ps_logic.glsl","const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n	for(float j = 0.0;j<=c_IterationTime; ++j){\n		vec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n		vec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n	}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;");
			Shader.addInclude("parts/BlurFilter_ps_logic.glsl","gl_FragColor =   blur();\ngl_FragColor.w*=alpha;");
			Shader.addInclude("parts/BlurFilter_ps_uniform.glsl","uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}");
			Shader.addInclude("parts/ColorAdd_ps_uniform.glsl","uniform vec4 colorAdd;\n");
			Shader.addInclude("parts/ColorAdd_ps_logic.glsl","gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;");
			var vs,ps;
			vs="attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}";
			ps="precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  \"parts/BlurFilter_ps_uniform.glsl\";\n#include?COLOR_FILTER \"parts/ColorFilter_ps_uniform.glsl\";\n#include?GLOW_FILTER \"parts/GlowFilter_ps_uniform.glsl\";\n#include?COLOR_ADD \"parts/ColorAdd_ps_uniform.glsl\";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD \"parts/ColorAdd_ps_logic.glsl\";   \n   #include?BLUR_FILTER  \"parts/BlurFilter_ps_logic.glsl\";\n   #include?COLOR_FILTER \"parts/ColorFilter_ps_logic.glsl\";\n   #include?GLOW_FILTER \"parts/GlowFilter_ps_logic.glsl\";\n}";
			Shader.preCompile2D(0,0x01,vs,ps,null);
			vs="attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}";
			ps="precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER \"parts/ColorFilter_ps_uniform.glsl\";\nvoid main() {\n	vec4 a = vec4(color.r, color.g, color.b, color.a);\n	a.w = alpha;\n	a.xyz *= alpha;\n	gl_FragColor = a;\n	#include?COLOR_FILTER \"parts/ColorFilter_ps_logic.glsl\";\n}";
			Shader.preCompile2D(0,0x02,vs,ps,null);
			vs="attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}";
			ps="precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n	//vec4 a=vec4(color.r, color.g, color.b, 1);\n	//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n	gl_FragColor.rgb*=alpha;\n}";
			Shader.preCompile2D(0,0x04,vs,ps,null);
			vs="attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}";
			ps="#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  \"parts/BlurFilter_ps_uniform.glsl\";\n#include?COLOR_FILTER \"parts/ColorFilter_ps_uniform.glsl\";\n#include?GLOW_FILTER \"parts/GlowFilter_ps_uniform.glsl\";\n#include?COLOR_ADD \"parts/ColorAdd_ps_uniform.glsl\";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD \"parts/ColorAdd_ps_logic.glsl\";   \n   #include?BLUR_FILTER  \"parts/BlurFilter_ps_logic.glsl\";\n   #include?COLOR_FILTER \"parts/ColorFilter_ps_logic.glsl\";\n   #include?GLOW_FILTER \"parts/GlowFilter_ps_logic.glsl\";\n}";
			Shader.preCompile2D(0,0x100,vs,ps,null);
			vs="attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}";
			ps="precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n	vec4 t_color = texture2D(texture, v_texcoord);\n	gl_FragColor = t_color.rgba * v_color;\n	gl_FragColor *= alpha;\n}";
			Shader.preCompile2D(0,0x200,vs,ps,null);
		}

		return Shader2D;
	})()


	//class laya.webgl.shader.ShaderDefines
	var ShaderDefines$1=(function(){
		function ShaderDefines(name2int,int2name,int2nameMap){
			this._value=0;
			//this._name2int=null;
			//this._int2name=null;
			//this._int2nameMap=null;
			this._name2int=name2int;
			this._int2name=int2name;
			this._int2nameMap=int2nameMap;
		}

		__class(ShaderDefines,'laya.webgl.shader.ShaderDefines',null,'ShaderDefines$1');
		var __proto=ShaderDefines.prototype;
		__proto.add=function(value){
			if ((typeof value=='string'))value=this._name2int[value];
			this._value |=value;
			return this._value;
		}

		__proto.addInt=function(value){
			this._value |=value;
			return this._value;
		}

		__proto.remove=function(value){
			if ((typeof value=='string'))value=this._name2int[value];
			this._value &=(~value);
			return this._value;
		}

		__proto.isDefine=function(def){
			return (this._value & def)===def;
		}

		__proto.getValue=function(){
			return this._value;
		}

		__proto.setValue=function(value){
			this._value=value;
		}

		__proto.toNameDic=function(){
			var r=this._int2nameMap[this._value];
			return r ? r :ShaderDefines._toText(this._value,this._int2name,this._int2nameMap);
		}

		ShaderDefines._reg=function(name,value,_name2int,_int2name){
			_name2int[name]=value;
			_int2name[value]=name;
		}

		ShaderDefines._toText=function(value,_int2name,_int2nameMap){
			var r=_int2nameMap[value];
			if (r)return r;
			var o={};
			var d=1;
			for (var i=0;i < 32;i++){
				d=1 << i;
				if (d > value)break ;
				if (value & d){
					var name=_int2name[d];
					name && (o[name]="");
				}
			}
			_int2nameMap[value]=o;
			return o;
		}

		ShaderDefines._toInt=function(names,_name2int){
			var words=names.split('.');
			var num=0;
			for (var i=0,n=words.length;i < n;i++){
				var value=_name2int[words[i]];
				if (!value)throw new Error("Defines to int err:"+names+"/"+words[i]);
				num |=value;
			}
			return num;
		}

		return ShaderDefines;
	})()


	//class laya.webgl.shader.d2.skinAnishader.SkinMesh
	var SkinMesh=(function(){
		function SkinMesh(){
			this.mVBBuffer=null;
			this.mIBBuffer=null;
			this.mVBData=null;
			this.mIBData=null;
			this.mEleNum=0;
			this.mTexture=null;
			this.transform=null;
			this._vs=null;
			this._ps=null;
			this._indexStart=-1;
			this._verticles=null;
			this._uvs=null;
			this._tempMatrix=new Matrix();
		}

		__class(SkinMesh,'laya.webgl.shader.d2.skinAnishader.SkinMesh');
		var __proto=SkinMesh.prototype;
		__proto.init=function(texture,vs,ps){
			if (vs){
				this._vs=vs;
				}else {
				this._vs=[];
				var tWidth=texture.width;
				var tHeight=texture.height;
				var tRed=1;
				var tGreed=1;
				var tBlue=1;
				var tAlpha=1;
				this._vs.push(0,0,0,0,tRed,tGreed,tBlue,tAlpha);
				this._vs.push(tWidth,0,1,0,tRed,tGreed,tBlue,tAlpha);
				this._vs.push(tWidth,tHeight,1,1,tRed,tGreed,tBlue,tAlpha);
				this._vs.push(0,tHeight,0,1,tRed,tGreed,tBlue,tAlpha);
			}
			if (ps){
				this._ps=ps;
				}else {
				if (!SkinMesh._defaultPS){
					SkinMesh._defaultPS=[];
					SkinMesh._defaultPS.push(0,1,3,3,1,2);
				}
				this._ps=SkinMesh._defaultPS;
			}
			this.mVBData=new Float32Array(this._vs);
			this.mIBData=new Uint16Array(this._ps.length);
			this.mIBData["start"]=-1;
			this.mEleNum=this._ps.length;
			this.mTexture=texture;
		}

		__proto.init2=function(texture,vs,ps,verticles,uvs){
			if (this.transform)this.transform=null;
			if (ps){
				this._ps=ps;
				}else {
				this._ps=[];
				this._ps.push(0,1,3,3,1,2);
			}
			this._verticles=verticles;
			this._uvs=uvs;
			this.mEleNum=this._ps.length;
			this.mTexture=texture;
			if (Render.isConchNode || Render.isConchApp){
				this._initMyData();
				this.mVBData=new Float32Array(this._vs);
			}
		}

		__proto._initMyData=function(){
			var vsI=0;
			var vI=0;
			var vLen=this._verticles.length;
			var tempVLen=vLen *4;
			this._vs=SkinMesh._tempVS;
			var insertNew=false;
			if (Render.isConchNode || Render.isConchApp){
				this._vs.length=tempVLen;
				insertNew=true;
				}else{
				if (this._vs.length < tempVLen){
					this._vs.length=tempVLen;
					insertNew=true;
				}
			}
			SkinMesh._tVSLen=tempVLen;
			if (insertNew){
				while (vsI < tempVLen){
					this._vs[vsI]=this._verticles[vI];
					this._vs[vsI+1]=this._verticles[vI+1];
					this._vs[vsI+2]=this._uvs[vI];
					this._vs[vsI+3]=this._uvs[vI+1];
					this._vs[vsI+4]=1;
					this._vs[vsI+5]=1;
					this._vs[vsI+6]=1;
					this._vs[vsI+7]=1;
					vsI+=8;
					vI+=2;
				}
				}else{
				while (vsI < tempVLen){
					this._vs[vsI]=this._verticles[vI];
					this._vs[vsI+1]=this._verticles[vI+1];
					this._vs[vsI+2]=this._uvs[vI];
					this._vs[vsI+3]=this._uvs[vI+1];
					vsI+=8;
					vI+=2;
				}
			}
		}

		__proto.getData2=function(vb,ib,start){
			this.mVBBuffer=vb;
			this.mIBBuffer=ib;
			this._initMyData();
			vb.appendEx2(this._vs,Float32Array,SkinMesh._tVSLen,4);
			this._indexStart=ib._byteLength;
			var tIB;
			tIB=SkinMesh._tempIB;
			if (tIB.length < this._ps.length){
				tIB.length=this._ps.length;
			}
			for (var i=0,n=this._ps.length;i < n;i++){
				tIB[i]=this._ps[i]+start;
			}
			ib.appendEx2(tIB,Uint16Array,this._ps.length,2);
		}

		__proto.getData=function(vb,ib,start){
			this.mVBBuffer=vb;
			this.mIBBuffer=ib;
			vb.append(this.mVBData);
			this._indexStart=ib._byteLength;
			if (this.mIBData["start"] !=start){
				for (var i=0,n=this._ps.length;i < n;i++){
					this.mIBData[i]=this._ps[i]+start;
				}
				this.mIBData["start"]=start;
			}
			ib.append(this.mIBData);
		}

		__proto.render=function(context,x,y){
			if (Render.isWebGL && this.mTexture){
				context._renderKey=0;
				context._shader2D.glTexture=null;
				SkinMeshBuffer.getInstance().addSkinMesh(this);
				var tempSubmit=Submit.createShape(context,this.mIBBuffer,this.mVBBuffer,this.mEleNum,this._indexStart,Value2D.create(0x200,0));
				this.transform || (this.transform=Matrix.EMPTY);
				this.transform.translate(x,y);
				Matrix.mul(this.transform,context._curMat,this._tempMatrix);
				this.transform.translate(-x,-y);
				var tShaderValue=tempSubmit.shaderValue;
				var tArray=tShaderValue.u_mmat2||RenderState2D.getMatrArray();
				RenderState2D.mat2MatArray(this._tempMatrix,tArray);
				tShaderValue.textureHost=this.mTexture;
				tShaderValue.offsetX=0;
				tShaderValue.offsetY=0;
				tShaderValue.u_mmat2=tArray;
				tShaderValue.ALPHA=context._shader2D.ALPHA;
				context._submits[context._submits._length++]=tempSubmit;
			}
			else if (Render.isConchApp&&this.mTexture){
				this.transform || (this.transform=Matrix.EMPTY);
				context.setSkinMesh&&context.setSkinMesh(x,y,this._ps,this.mVBData,this.mEleNum,0,this.mTexture,this.transform);
			}
		}

		SkinMesh._tempVS=[];
		SkinMesh._tempIB=[];
		SkinMesh._defaultPS=null
		SkinMesh._tVSLen=0;
		return SkinMesh;
	})()


	//class laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer
	var SkinMeshBuffer=(function(){
		function SkinMeshBuffer(){
			this.ib=null;
			this.vb=null;
			var gl=WebGL.mainContext;
			this.ib=IndexBuffer2D.create(0x88E8);
			this.vb=VertexBuffer2D.create(8);
		}

		__class(SkinMeshBuffer,'laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer');
		var __proto=SkinMeshBuffer.prototype;
		__proto.addSkinMesh=function(skinMesh){
			skinMesh.getData2(this.vb,this.ib,this.vb._byteLength / 32);
		}

		__proto.reset=function(){
			this.vb.clear();
			this.ib.clear();
		}

		SkinMeshBuffer.getInstance=function(){
			return SkinMeshBuffer.instance=SkinMeshBuffer.instance|| new SkinMeshBuffer();
		}

		SkinMeshBuffer.instance=null
		return SkinMeshBuffer;
	})()


	//class laya.webgl.shapes.BasePoly
	var BasePoly=(function(){
		function BasePoly(x,y,width,height,edges,color,borderWidth,borderColor,round){
			//this.x=NaN;
			//this.y=NaN;
			//this.r=NaN;
			//this.width=NaN;
			//this.height=NaN;
			//this.edges=NaN;
			this.r0=0
			//this.color=0;
			//this.borderColor=NaN;
			//this.borderWidth=NaN;
			//this.round=0;
			this.fill=true;
			//this.mUint16Array=null;
			//this.mFloat32Array=null;
			this.r1=Math.PI / 2;
			(round===void 0)&& (round=0);
			this.x=x;
			this.y=y;
			this.width=width;
			this.height=height;
			this.edges=edges;
			this.color=color;
			this.borderWidth=borderWidth;
			this.borderColor=borderColor;
		}

		__class(BasePoly,'laya.webgl.shapes.BasePoly');
		var __proto=BasePoly.prototype;
		Laya.imps(__proto,{"laya.webgl.shapes.IShape":true})
		__proto.getData=function(ib,vb,start){}
		__proto.rebuild=function(points){}
		__proto.setMatrix=function(mat){}
		__proto.needUpdate=function(mat){
			return true;
		}

		__proto.sector=function(outVert,outIndex,start){
			var x=this.x,y=this.y,edges=this.edges,seg=(this.r1-this.r0)/ edges;
			var w=this.width,h=this.height,color=this.color;
			var r=((color >> 16)& 0x0000ff)/ 255,g=((color >> 8)& 0xff)/ 255,b=(color & 0x0000ff)/ 255;
			outVert.push(x,y,r,g,b);
			for (var i=0;i < edges+1;i++){
				outVert.push(x+Math.sin(seg *i+this.r0)*w,y+Math.cos(seg *i+this.r0)*h);
				outVert.push(r,g,b);
			}
			for (i=0;i < edges;i++){
				outIndex.push(start,start+i+1,start+i+2);
			}
		}

		//用于画线
		__proto.createLine2=function(p,indices,lineWidth,len,outVertex,indexCount){
			var points=p.concat();
			var result=outVertex;
			var color=this.borderColor;
			var r=((color >> 16)& 0x0000ff)/ 255,g=((color >> 8)& 0xff)/ 255,b=(color & 0x0000ff)/ 255;
			var length=points.length / 2;
			var iStart=len,w=lineWidth / 2;
			var px,py,p1x,p1y,p2x,p2y,p3x,p3y;
			var perpx,perpy,perp2x,perp2y,perp3x,perp3y;
			var a1,b1,c1,a2,b2,c2;
			var denom,pdist,dist;
			p1x=points[0];
			p1y=points[1];
			p2x=points[2];
			p2y=points[3];
			perpx=-(p1y-p2y);
			perpy=p1x-p2x;
			dist=Math.sqrt(perpx *perpx+perpy *perpy);
			perpx=perpx / dist *w;
			perpy=perpy / dist *w;
			result.push(p1x-perpx+this.x,p1y-perpy+this.y,r,g,b,p1x+perpx+this.x,p1y+perpy+this.y,r,g,b);
			for (var i=1;i < length-1;i++){
				p1x=points[(i-1)*2];
				p1y=points[(i-1)*2+1];
				p2x=points[(i)*2];
				p2y=points[(i)*2+1];
				p3x=points[(i+1)*2];
				p3y=points[(i+1)*2+1];
				perpx=-(p1y-p2y);
				perpy=p1x-p2x;
				dist=Math.sqrt(perpx *perpx+perpy *perpy);
				perpx=perpx / dist *w;
				perpy=perpy / dist *w;
				perp2x=-(p2y-p3y);
				perp2y=p2x-p3x;
				dist=Math.sqrt(perp2x *perp2x+perp2y *perp2y);
				perp2x=perp2x / dist *w;
				perp2y=perp2y / dist *w;
				a1=(-perpy+p1y)-(-perpy+p2y);
				b1=(-perpx+p2x)-(-perpx+p1x);
				c1=(-perpx+p1x)*(-perpy+p2y)-(-perpx+p2x)*(-perpy+p1y);
				a2=(-perp2y+p3y)-(-perp2y+p2y);
				b2=(-perp2x+p2x)-(-perp2x+p3x);
				c2=(-perp2x+p3x)*(-perp2y+p2y)-(-perp2x+p2x)*(-perp2y+p3y);
				denom=a1 *b2-a2 *b1;
				if (Math.abs(denom)< 0.1){
					denom+=10.1;
					result.push(p2x-perpx+this.x,p2y-perpy+this.y,r,g,b,p2x+perpx+this.x,p2y+perpy+this.y,r,g,b);
					continue ;
				}
				px=(b1 *c2-b2 *c1)/ denom;
				py=(a2 *c1-a1 *c2)/ denom;
				pdist=(px-p2x)*(px-p2x)+(py-p2y)+(py-p2y);
				result.push(px+this.x,py+this.y,r,g,b,p2x-(px-p2x)+this.x,p2y-(py-p2y)+this.y,r,g,b);
			}
			p1x=points[points.length-4];
			p1y=points[points.length-3];
			p2x=points[points.length-2];
			p2y=points[points.length-1];
			perpx=-(p1y-p2y);
			perpy=p1x-p2x;
			dist=Math.sqrt(perpx *perpx+perpy *perpy);
			perpx=perpx / dist *w;
			perpy=perpy / dist *w;
			result.push(p2x-perpx+this.x,p2y-perpy+this.y,r,g,b,p2x+perpx+this.x,p2y+perpy+this.y,r,g,b);
			var groupLen=indexCount;
			for (i=1;i < groupLen;i++){
				indices.push(iStart+(i-1)*2,iStart+(i-1)*2+1,iStart+i *2+1,iStart+i *2+1,iStart+i *2,iStart+(i-1)*2);
			}
			return result;
		}

		// /*,outVertex:Array,outIndex:Array*/
		__proto.createLine=function(p,indices,lineWidth,len){
			var points=p.concat();
			var result=p;
			var color=this.borderColor;
			var r=((color >> 16)& 0x0000ff)/ 255,g=((color >> 8)& 0xff)/ 255,b=(color & 0x0000ff)/ 255;
			points.splice(0,5);
			var length=points.length / 5;
			var iStart=len,w=lineWidth / 2;
			var px,py,p1x,p1y,p2x,p2y,p3x,p3y;
			var perpx,perpy,perp2x,perp2y,perp3x,perp3y;
			var a1,b1,c1,a2,b2,c2;
			var denom,pdist,dist;
			p1x=points[0];
			p1y=points[1];
			p2x=points[5];
			p2y=points[6];
			perpx=-(p1y-p2y);
			perpy=p1x-p2x;
			dist=Math.sqrt(perpx *perpx+perpy *perpy);
			perpx=perpx / dist *w;
			perpy=perpy / dist *w;
			result.push(p1x-perpx,p1y-perpy,r,g,b,p1x+perpx,p1y+perpy,r,g,b);
			for (var i=1;i < length-1;i++){
				p1x=points[(i-1)*5];
				p1y=points[(i-1)*5+1];
				p2x=points[(i)*5];
				p2y=points[(i)*5+1];
				p3x=points[(i+1)*5];
				p3y=points[(i+1)*5+1];
				perpx=-(p1y-p2y);
				perpy=p1x-p2x;
				dist=Math.sqrt(perpx *perpx+perpy *perpy);
				perpx=perpx / dist *w;
				perpy=perpy / dist *w;
				perp2x=-(p2y-p3y);
				perp2y=p2x-p3x;
				dist=Math.sqrt(perp2x *perp2x+perp2y *perp2y);
				perp2x=perp2x / dist *w;
				perp2y=perp2y / dist *w;
				a1=(-perpy+p1y)-(-perpy+p2y);
				b1=(-perpx+p2x)-(-perpx+p1x);
				c1=(-perpx+p1x)*(-perpy+p2y)-(-perpx+p2x)*(-perpy+p1y);
				a2=(-perp2y+p3y)-(-perp2y+p2y);
				b2=(-perp2x+p2x)-(-perp2x+p3x);
				c2=(-perp2x+p3x)*(-perp2y+p2y)-(-perp2x+p2x)*(-perp2y+p3y);
				denom=a1 *b2-a2 *b1;
				if (Math.abs(denom)< 0.1){
					denom+=10.1;
					result.push(p2x-perpx,p2y-perpy,r,g,b,p2x+perpx,p2y+perpy,r,g,b);
					continue ;
				}
				px=(b1 *c2-b2 *c1)/ denom;
				py=(a2 *c1-a1 *c2)/ denom;
				pdist=(px-p2x)*(px-p2x)+(py-p2y)+(py-p2y);
				result.push(px,py,r,g,b,p2x-(px-p2x),p2y-(py-p2y),r,g,b);
			}
			p1x=points[points.length-10];
			p1y=points[points.length-9];
			p2x=points[points.length-5];
			p2y=points[points.length-4];
			perpx=-(p1y-p2y);
			perpy=p1x-p2x;
			dist=Math.sqrt(perpx *perpx+perpy *perpy);
			perpx=perpx / dist *w;
			perpy=perpy / dist *w;
			result.push(p2x-perpx,p2y-perpy,r,g,b,p2x+perpx,p2y+perpy,r,g,b);
			var groupLen=this.edges+1;
			for (i=1;i < groupLen;i++){
				indices.push(iStart+(i-1)*2,iStart+(i-1)*2+1,iStart+i *2+1,iStart+i *2+1,iStart+i *2,iStart+(i-1)*2);
			}
			return result;
		}

		//闭合路径
		__proto.createLoopLine=function(p,indices,lineWidth,len,outVertex,outIndex){
			var points=p.concat();
			var result=outVertex ? outVertex :p;
			var color=this.borderColor;
			var r=((color >> 16)& 0x0000ff)/ 255,g=((color >> 8)& 0xff)/ 255,b=(color & 0x0000ff)/ 255;
			points.splice(0,5);
			var firstPoint=[points[0],points[1]];
			var lastPoint=[points[points.length-5],points[points.length-4]];
			var midPointX=lastPoint[0]+(firstPoint[0]-lastPoint[0])*0.5;
			var midPointY=lastPoint[1]+(firstPoint[1]-lastPoint[1])*0.5;
			points.unshift(midPointX,midPointY,0,0,0);
			points.push(midPointX,midPointY,0,0,0);
			var length=points.length / 5;
			var iStart=len,w=lineWidth / 2;
			var px,py,p1x,p1y,p2x,p2y,p3x,p3y;
			var perpx,perpy,perp2x,perp2y,perp3x,perp3y;
			var a1,b1,c1,a2,b2,c2;
			var denom,pdist,dist;
			p1x=points[0];
			p1y=points[1];
			p2x=points[5];
			p2y=points[6];
			perpx=-(p1y-p2y);
			perpy=p1x-p2x;
			dist=Math.sqrt(perpx *perpx+perpy *perpy);
			perpx=perpx / dist *w;
			perpy=perpy / dist *w;
			result.push(p1x-perpx,p1y-perpy,r,g,b,p1x+perpx,p1y+perpy,r,g,b);
			for (var i=1;i < length-1;i++){
				p1x=points[(i-1)*5];
				p1y=points[(i-1)*5+1];
				p2x=points[(i)*5];
				p2y=points[(i)*5+1];
				p3x=points[(i+1)*5];
				p3y=points[(i+1)*5+1];
				perpx=-(p1y-p2y);
				perpy=p1x-p2x;
				dist=Math.sqrt(perpx *perpx+perpy *perpy);
				perpx=perpx / dist *w;
				perpy=perpy / dist *w;
				perp2x=-(p2y-p3y);
				perp2y=p2x-p3x;
				dist=Math.sqrt(perp2x *perp2x+perp2y *perp2y);
				perp2x=perp2x / dist *w;
				perp2y=perp2y / dist *w;
				a1=(-perpy+p1y)-(-perpy+p2y);
				b1=(-perpx+p2x)-(-perpx+p1x);
				c1=(-perpx+p1x)*(-perpy+p2y)-(-perpx+p2x)*(-perpy+p1y);
				a2=(-perp2y+p3y)-(-perp2y+p2y);
				b2=(-perp2x+p2x)-(-perp2x+p3x);
				c2=(-perp2x+p3x)*(-perp2y+p2y)-(-perp2x+p2x)*(-perp2y+p3y);
				denom=a1 *b2-a2 *b1;
				if (Math.abs(denom)< 0.1){
					denom+=10.1;
					result.push(p2x-perpx,p2y-perpy,r,g,b,p2x+perpx,p2y+perpy,r,g,b);
					continue ;
				}
				px=(b1 *c2-b2 *c1)/ denom;
				py=(a2 *c1-a1 *c2)/ denom;
				pdist=(px-p2x)*(px-p2x)+(py-p2y)+(py-p2y);
				result.push(px,py,r,g,b,p2x-(px-p2x),p2y-(py-p2y),r,g,b);
			}
			if (outIndex){
				indices=outIndex;
			};
			var groupLen=this.edges+1;
			for (i=1;i < groupLen;i++){
				indices.push(iStart+(i-1)*2,iStart+(i-1)*2+1,iStart+i *2+1,iStart+i *2+1,iStart+i *2,iStart+(i-1)*2);
			}
			indices.push(iStart+(i-1)*2,iStart+(i-1)*2+1,iStart+1,iStart+1,iStart,iStart+(i-1)*2);
			return result;
		}

		return BasePoly;
	})()


	//class laya.webgl.shapes.Earcut
	var Earcut=(function(){
		function Earcut(){};
		__class(Earcut,'laya.webgl.shapes.Earcut');
		Earcut.earcut=function(data,holeIndices,dim){
			dim=dim || 2;
			var hasHoles=holeIndices && holeIndices.length,
			outerLen=hasHoles ? holeIndices[0] *dim :data.length,
			outerNode=Earcut.linkedList(data,0,outerLen,dim,true),
			triangles=[];
			if (!outerNode)return triangles;
			var minX,minY,maxX,maxY,x,y,invSize;
			if (hasHoles)outerNode=Earcut.eliminateHoles(data,holeIndices,outerNode,dim);
			if (data.length > 80 *dim){
				minX=maxX=data[0];
				minY=maxY=data[1];
				for (var i=dim;i < outerLen;i+=dim){
					x=data[i];
					y=data[i+1];
					if (x < minX)minX=x;
					if (y < minY)minY=y;
					if (x > maxX)maxX=x;
					if (y > maxY)maxY=y;
				}
				invSize=Math.max(maxX-minX,maxY-minY);
				invSize=invSize!==0 ? 1 / invSize :0;
			}
			Earcut.earcutLinked(outerNode,triangles,dim,minX,minY,invSize);
			return triangles;
		}

		Earcut.linkedList=function(data,start,end,dim,clockwise){
			var i,last;
			if (clockwise===(Earcut.signedArea(data,start,end,dim)> 0)){
				for (i=start;i < end;i+=dim)last=Earcut.insertNode(i,data[i],data[i+1],last);
				}else {
				for (i=end-dim;i >=start;i-=dim)last=Earcut.insertNode(i,data[i],data[i+1],last);
			}
			if (last && Earcut.equals(last,last.next)){
				Earcut.removeNode(last);
				last=last.next;
			}
			return last;
		}

		Earcut.filterPoints=function(start,end){
			if (!start)return start;
			if (!end)end=start;
			var p=start,
			again;
			do {
				again=false;
				if (!p.steiner && (Earcut.equals(p,p.next)|| Earcut.area(p.prev,p,p.next)===0)){
					Earcut.removeNode(p);
					p=end=p.prev;
					if (p===p.next)break ;
					again=true;
					}else {
					p=p.next;
				}
			}while (again || p!==end);
			return end;
		}

		Earcut.earcutLinked=function(ear,triangles,dim,minX,minY,invSize,pass){
			if (!ear)return;
			if (!pass && invSize)Earcut.indexCurve(ear,minX,minY,invSize);
			var stop=ear,
			prev,next;
			while (ear.prev!==ear.next){
				prev=ear.prev;
				next=ear.next;
				if (invSize ? Earcut.isEarHashed(ear,minX,minY,invSize):Earcut.isEar(ear)){
					triangles.push(prev.i / dim);
					triangles.push(ear.i / dim);
					triangles.push(next.i / dim);
					Earcut.removeNode(ear);
					ear=next.next;
					stop=next.next;
					continue ;
				}
				ear=next;
				if (ear===stop){
					if (!pass){
						Earcut.earcutLinked(Earcut.filterPoints(ear,null),triangles,dim,minX,minY,invSize,1);
						}else if (pass===1){
						ear=Earcut.cureLocalIntersections(ear,triangles,dim);
						Earcut.earcutLinked(ear,triangles,dim,minX,minY,invSize,2);
						}else if (pass===2){
						Earcut.splitEarcut(ear,triangles,dim,minX,minY,invSize);
					}
					break ;
				}
			}
		}

		Earcut.isEar=function(ear){
			var a=ear.prev,
			b=ear,
			c=ear.next;
			if (Earcut.area(a,b,c)>=0)return false;
			var p=ear.next.next;
			while (p!==ear.prev){
				if (Earcut.pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&
					Earcut.area(p.prev,p,p.next)>=0)return false;
				p=p.next;
			}
			return true;
		}

		Earcut.isEarHashed=function(ear,minX,minY,invSize){
			var a=ear.prev,
			b=ear,
			c=ear.next;
			if (Earcut.area(a,b,c)>=0)return false;
			var minTX=a.x < b.x ? (a.x < c.x ? a.x :c.x):(b.x < c.x ? b.x :c.x),
			minTY=a.y < b.y ? (a.y < c.y ? a.y :c.y):(b.y < c.y ? b.y :c.y),
			maxTX=a.x > b.x ? (a.x > c.x ? a.x :c.x):(b.x > c.x ? b.x :c.x),
			maxTY=a.y > b.y ? (a.y > c.y ? a.y :c.y):(b.y > c.y ? b.y :c.y);
			var minZ=Earcut.zOrder(minTX,minTY,minX,minY,invSize),
			maxZ=Earcut.zOrder(maxTX,maxTY,minX,minY,invSize);
			var p=ear.nextZ;
			while (p && p.z <=maxZ){
				if (p!==ear.prev && p!==ear.next &&
					Earcut.pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&
				Earcut.area(p.prev,p,p.next)>=0)return false;
				p=p.nextZ;
			}
			p=ear.prevZ;
			while (p && p.z >=minZ){
				if (p!==ear.prev && p!==ear.next &&
					Earcut.pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&
				Earcut.area(p.prev,p,p.next)>=0)return false;
				p=p.prevZ;
			}
			return true;
		}

		Earcut.cureLocalIntersections=function(start,triangles,dim){
			var p=start;
			do {
				var a=p.prev,
				b=p.next.next;
				if (!Earcut.equals(a,b)&& Earcut.intersects(a,p,p.next,b)&& Earcut.locallyInside(a,b)&& Earcut.locallyInside(b,a)){
					triangles.push(a.i / dim);
					triangles.push(p.i / dim);
					triangles.push(b.i / dim);
					Earcut.removeNode(p);
					Earcut.removeNode(p.next);
					p=start=b;
				}
				p=p.next;
			}while (p!==start);
			return p;
		}

		Earcut.splitEarcut=function(start,triangles,dim,minX,minY,invSize){
			var a=start;
			do {
				var b=a.next.next;
				while (b!==a.prev){
					if (a.i!==b.i && Earcut.isValidDiagonal(a,b)){
						var c=Earcut.splitPolygon(a,b);
						a=Earcut.filterPoints(a,a.next);
						c=Earcut.filterPoints(c,c.next);
						Earcut.earcutLinked(a,triangles,dim,minX,minY,invSize);
						Earcut.earcutLinked(c,triangles,dim,minX,minY,invSize);
						return;
					}
					b=b.next;
				}
				a=a.next;
			}while (a!==start);
		}

		Earcut.eliminateHoles=function(data,holeIndices,outerNode,dim){
			var queue=[],
			i,len,start,end,list;
			for (i=0,len=holeIndices.length;i < len;i++){
				start=holeIndices[i] *dim;
				end=i < len-1 ? holeIndices[i+1] *dim :data.length;
				list=Earcut.linkedList(data,start,end,dim,false);
				if (list===list.next)list.steiner=true;
				queue.push(Earcut.getLeftmost(list));
			}
			queue.sort(Earcut.compareX);
			for (i=0;i < queue.length;i++){
				Earcut.eliminateHole(queue[i],outerNode);
				outerNode=Earcut.filterPoints(outerNode,outerNode.next);
			}
			return outerNode;
		}

		Earcut.compareX=function(a,b){
			return a.x-b.x;
		}

		Earcut.eliminateHole=function(hole,outerNode){
			outerNode=Earcut.findHoleBridge(hole,outerNode);
			if (outerNode){
				var b=Earcut.splitPolygon(outerNode,hole);
				Earcut.filterPoints(b,b.next);
			}
		}

		Earcut.findHoleBridge=function(hole,outerNode){
			var p=outerNode,
			hx=hole.x,
			hy=hole.y,
			qx=-Infinity,
			m;
			do {
				if (hy <=p.y && hy >=p.next.y && p.next.y!==p.y){
					var x=p.x+(hy-p.y)*(p.next.x-p.x)/ (p.next.y-p.y);
					if (x <=hx && x > qx){
						qx=x;
						if (x===hx){
							if (hy===p.y)return p;
							if (hy===p.next.y)return p.next;
						}
						m=p.x < p.next.x ? p :p.next;
					}
				}
				p=p.next;
			}while (p!==outerNode);
			if (!m)return null;
			if (hx===qx)return m.prev;
			var stop=m,
			mx=m.x,
			my=m.y,
			tanMin=Infinity,
			tan;
			p=m.next;
			while (p!==stop){
				if (hx >=p.x && p.x >=mx && hx!==p.x &&
					Earcut.pointInTriangle(hy < my ? hx :qx,hy,mx,my,hy < my ? qx :hx,hy,p.x,p.y)){
					tan=Math.abs(hy-p.y)/ (hx-p.x);
					if ((tan < tanMin || (tan===tanMin && p.x > m.x))&& Earcut.locallyInside(p,hole)){
						m=p;
						tanMin=tan;
					}
				}
				p=p.next;
			}
			return m;
		}

		Earcut.indexCurve=function(start,minX,minY,invSize){
			var p=start;
			do {
				if (p.z===null)p.z=Earcut.zOrder(p.x,p.y,minX,minY,invSize);
				p.prevZ=p.prev;
				p.nextZ=p.next;
				p=p.next;
			}while (p!==start);
			p.prevZ.nextZ=null;
			p.prevZ=null;
			Earcut.sortLinked(p);
		}

		Earcut.sortLinked=function(list){
			var i,p,q,e,tail,numMerges,pSize,qSize,
			inSize=1;
			do {
				p=list;
				list=null;
				tail=null;
				numMerges=0;
				while (p){
					numMerges++;
					q=p;
					pSize=0;
					for (i=0;i < inSize;i++){
						pSize++;
						q=q.nextZ;
						if (!q)break ;
					}
					qSize=inSize;
					while (pSize > 0 || (qSize > 0 && q)){
						if (pSize!==0 && (qSize===0 || !q || p.z <=q.z)){
							e=p;
							p=p.nextZ;
							pSize--;
							}else {
							e=q;
							q=q.nextZ;
							qSize--;
						}
						if (tail)tail.nextZ=e;
						else list=e;
						e.prevZ=tail;
						tail=e;
					}
					p=q;
				}
				tail.nextZ=null;
				inSize *=2;
			}while (numMerges > 1);
			return list;
		}

		Earcut.zOrder=function(x,y,minX,minY,invSize){
			x=32767 *(x-minX)*invSize;
			y=32767 *(y-minY)*invSize;
			x=(x | (x << 8))& 0x00FF00FF;
			x=(x | (x << 4))& 0x0F0F0F0F;
			x=(x | (x << 2))& 0x33333333;
			x=(x | (x << 1))& 0x55555555;
			y=(y | (y << 8))& 0x00FF00FF;
			y=(y | (y << 4))& 0x0F0F0F0F;
			y=(y | (y << 2))& 0x33333333;
			y=(y | (y << 1))& 0x55555555;
			return x | (y << 1);
		}

		Earcut.getLeftmost=function(start){
			var p=start,
			leftmost=start;
			do {
				if (p.x < leftmost.x)leftmost=p;
				p=p.next;
			}while (p!==start);
			return leftmost;
		}

		Earcut.pointInTriangle=function(ax,ay,bx,by,cx,cy,px,py){
			return (cx-px)*(ay-py)-(ax-px)*(cy-py)>=0 &&
			(ax-px)*(by-py)-(bx-px)*(ay-py)>=0 &&
			(bx-px)*(cy-py)-(cx-px)*(by-py)>=0;
		}

		Earcut.isValidDiagonal=function(a,b){
			return a.next.i!==b.i && a.prev.i!==b.i && !Earcut.intersectsPolygon(a,b)&&
			Earcut.locallyInside(a,b)&& Earcut.locallyInside(b,a)&& Earcut.middleInside(a,b);
		}

		Earcut.area=function(p,q,r){
			return (q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y);
		}

		Earcut.equals=function(p1,p2){
			return p1.x===p2.x && p1.y===p2.y;
		}

		Earcut.intersects=function(p1,q1,p2,q2){
			if ((Earcut.equals(p1,q1)&& Earcut.equals(p2,q2))||
				(Earcut.equals(p1,q2)&& Earcut.equals(p2,q1)))return true;
			return Earcut.area(p1,q1,p2)> 0!==Earcut.area(p1,q1,q2)> 0 &&
			Earcut.area(p2,q2,p1)> 0!==Earcut.area(p2,q2,q1)> 0;
		}

		Earcut.intersectsPolygon=function(a,b){
			var p=a;
			do {
				if (p.i!==a.i && p.next.i!==a.i && p.i!==b.i && p.next.i!==b.i &&
					Earcut.intersects(p,p.next,a,b))return true;
				p=p.next;
			}while (p!==a);
			return false;
		}

		Earcut.locallyInside=function(a,b){
			return Earcut.area(a.prev,a,a.next)< 0 ?
			Earcut.area(a,b,a.next)>=0 && Earcut.area(a,a.prev,b)>=0 :
			Earcut.area(a,b,a.prev)< 0 || Earcut.area(a,a.next,b)< 0;
		}

		Earcut.middleInside=function(a,b){
			var p=a,
			inside=false,
			px=(a.x+b.x)/ 2,
			py=(a.y+b.y)/ 2;
			do {
				if (((p.y > py)!==(p.next.y > py))&& p.next.y!==p.y &&
					(px < (p.next.x-p.x)*(py-p.y)/ (p.next.y-p.y)+p.x))
				inside=!inside;
				p=p.next;
			}while (p!==a);
			return inside;
		}

		Earcut.splitPolygon=function(a,b){
			var a2=new EarcutNode(a.i,a.x,a.y),
			b2=new EarcutNode(b.i,b.x,b.y),
			an=a.next,
			bp=b.prev;
			a.next=b;
			b.prev=a;
			a2.next=an;
			an.prev=a2;
			b2.next=a2;
			a2.prev=b2;
			bp.next=b2;
			b2.prev=bp;
			return b2;
		}

		Earcut.insertNode=function(i,x,y,last){
			var p=new EarcutNode(i,x,y);
			if (!last){
				p.prev=p;
				p.next=p;
				}else {
				p.next=last.next;
				p.prev=last;
				last.next.prev=p;
				last.next=p;
			}
			return p;
		}

		Earcut.removeNode=function(p){
			p.next.prev=p.prev;
			p.prev.next=p.next;
			if (p.prevZ)p.prevZ.nextZ=p.nextZ;
			if (p.nextZ)p.nextZ.prevZ=p.prevZ;
		}

		Earcut.signedArea=function(data,start,end,dim){
			var sum=0;
			for (var i=start,j=end-dim;i < end;i+=dim){
				sum+=(data[j]-data[i])*(data[i+1]+data[j+1]);
				j=i;
			}
			return sum;
		}

		return Earcut;
	})()


	//class laya.webgl.shapes.EarcutNode
	var EarcutNode=(function(){
		function EarcutNode(i,x,y){
			this.i=null;
			this.x=null;
			this.y=null;
			this.prev=null;
			this.next=null;
			this.z=null;
			this.prevZ=null;
			this.nextZ=null;
			this.steiner=null;
			this.i=i;
			this.x=x;
			this.y=y;
			this.prev=null;
			this.next=null;
			this.z=null;
			this.prevZ=null;
			this.nextZ=null;
			this.steiner=false;
		}

		__class(EarcutNode,'laya.webgl.shapes.EarcutNode');
		return EarcutNode;
	})()


	//class laya.webgl.submit.Submit
	var Submit=(function(){
		function Submit(renderType){
			//this._selfVb=null;
			//this._ib=null;
			//this._blendFn=null;
			//this._renderType=0;
			//this._vb=null;
			//this._startIdx=0;
			//this._numEle=0;
			//this.shaderValue=null;
			(renderType===void 0)&& (renderType=10000);
			this._renderType=renderType;
		}

		__class(Submit,'laya.webgl.submit.Submit');
		var __proto=Submit.prototype;
		Laya.imps(__proto,{"laya.webgl.submit.ISubmit":true})
		__proto.releaseRender=function(){
			var cache=Submit._cache;
			cache[cache._length++]=this;
			this.shaderValue.release();
			this._vb=null;
		}

		__proto.getRenderType=function(){
			return this._renderType;
		}

		__proto.renderSubmit=function(){
			if (this._numEle===0)return 1;
			var _tex=this.shaderValue.textureHost;
			if (_tex){
				var source=_tex.source;
				if (!_tex.bitmap || !source)
					return 1;
				this.shaderValue.texture=source;
			}
			this._vb.bind_upload(this._ib);
			var gl=WebGL.mainContext;
			this.shaderValue.upload();
			if (BlendMode.activeBlendFunction!==this._blendFn){
				gl.enable(0x0BE2);
				this._blendFn(gl);
				BlendMode.activeBlendFunction=this._blendFn;
			}
			Stat.drawCall++;
			Stat.trianglesFaces+=this._numEle / 3;
			gl.drawElements(0x0004,this._numEle,0x1403,this._startIdx);
			return 1;
		}

		Submit.__init__=function(){
			var s=Submit.RENDERBASE=new Submit(-1);
			s.shaderValue=new Value2D(0,0);
			s.shaderValue.ALPHA=-1234;
		}

		Submit.createSubmit=function(context,ib,vb,pos,sv){
			var o=Submit._cache._length ? Submit._cache[--Submit._cache._length] :new Submit();
			if (vb==null){
				vb=o._selfVb || (o._selfVb=VertexBuffer2D.create(-1));
				vb.clear();
				pos=0;
			}
			o._ib=ib;
			o._vb=vb;
			o._startIdx=pos *CONST3D2D.BYTES_PIDX;
			o._numEle=0;
			var blendType=context._nBlendType;
			o._blendFn=context._targets ? BlendMode.targetFns[blendType] :BlendMode.fns[blendType];
			o.shaderValue=sv;
			o.shaderValue.setValue(context._shader2D);
			var filters=context._shader2D.filters;
			filters && o.shaderValue.setFilters(filters);
			return o;
		}

		Submit.createShape=function(ctx,ib,vb,numEle,offset,sv){
			var o=(!Submit._cache._length)? (new Submit()):Submit._cache[--Submit._cache._length];
			o._ib=ib;
			o._vb=vb;
			o._numEle=numEle;
			o._startIdx=offset;
			o.shaderValue=sv;
			o.shaderValue.setValue(ctx._shader2D);
			var blendType=ctx._nBlendType;
			o._blendFn=ctx._targets ? BlendMode.targetFns[blendType] :BlendMode.fns[blendType];
			return o;
		}

		Submit.TYPE_2D=10000;
		Submit.TYPE_CANVAS=10003;
		Submit.TYPE_CMDSETRT=10004;
		Submit.TYPE_CUSTOM=10005;
		Submit.TYPE_BLURRT=10006;
		Submit.TYPE_CMDDESTORYPRERT=10007;
		Submit.TYPE_DISABLESTENCIL=10008;
		Submit.TYPE_OTHERIBVB=10009;
		Submit.TYPE_PRIMITIVE=10010;
		Submit.TYPE_RT=10011;
		Submit.TYPE_BLUR_RT=10012;
		Submit.TYPE_TARGET=10013;
		Submit.TYPE_CHANGE_VALUE=10014;
		Submit.TYPE_SHAPE=10015;
		Submit.TYPE_TEXTURE=10016;
		Submit.TYPE_FILLTEXTURE=10017;
		Submit.RENDERBASE=null
		Submit._cache=(Submit._cache=[],Submit._cache._length=0,Submit._cache);
		return Submit;
	})()


	//class laya.webgl.submit.SubmitCMD
	var SubmitCMD=(function(){
		function SubmitCMD(){
			this.fun=null;
			this.args=null;
		}

		__class(SubmitCMD,'laya.webgl.submit.SubmitCMD');
		var __proto=SubmitCMD.prototype;
		Laya.imps(__proto,{"laya.webgl.submit.ISubmit":true})
		__proto.renderSubmit=function(){
			this.fun.apply(null,this.args);
			return 1;
		}

		__proto.getRenderType=function(){
			return 0;
		}

		__proto.releaseRender=function(){
			var cache=SubmitCMD._cache;
			cache[cache._length++]=this;
		}

		SubmitCMD.create=function(args,fun){
			var o=SubmitCMD._cache._length?SubmitCMD._cache[--SubmitCMD._cache._length]:new SubmitCMD();
			o.fun=fun;
			o.args=args;
			return o;
		}

		SubmitCMD._cache=(SubmitCMD._cache=[],SubmitCMD._cache._length=0,SubmitCMD._cache);
		return SubmitCMD;
	})()


	//class laya.webgl.submit.SubmitCMDScope
	var SubmitCMDScope=(function(){
		function SubmitCMDScope(){
			this.variables={};
		}

		__class(SubmitCMDScope,'laya.webgl.submit.SubmitCMDScope');
		var __proto=SubmitCMDScope.prototype;
		__proto.getValue=function(name){
			return this.variables[name];
		}

		__proto.addValue=function(name,value){
			return this.variables[name]=value;
		}

		__proto.setValue=function(name,value){
			if(this.variables.hasOwnProperty(name)){
				return this.variables[name]=value;
			}
			return null;
		}

		__proto.clear=function(){
			for(var key in this.variables){
				delete this.variables[key];
			}
		}

		__proto.recycle=function(){
			this.clear();
			SubmitCMDScope.POOL.push(this);
		}

		SubmitCMDScope.create=function(){
			var scope=SubmitCMDScope.POOL.pop();
			scope||(scope=new SubmitCMDScope());
			return scope;
		}

		SubmitCMDScope.POOL=[];
		return SubmitCMDScope;
	})()


	//class laya.webgl.submit.SubmitOtherIBVB
	var SubmitOtherIBVB=(function(){
		function SubmitOtherIBVB(){
			this.offset=0;
			//this._vb=null;
			//this._ib=null;
			//this._blendFn=null;
			//this._mat=null;
			//this._shader=null;
			//this._shaderValue=null;
			//this._numEle=0;
			this.startIndex=0;
			;
			this._mat=Matrix.create();
		}

		__class(SubmitOtherIBVB,'laya.webgl.submit.SubmitOtherIBVB');
		var __proto=SubmitOtherIBVB.prototype;
		Laya.imps(__proto,{"laya.webgl.submit.ISubmit":true})
		__proto.releaseRender=function(){
			var cache=SubmitOtherIBVB._cache;
			cache[cache._length++]=this;
		}

		__proto.getRenderType=function(){
			return 10009;
		}

		__proto.renderSubmit=function(){
			var _tex=this._shaderValue.textureHost;
			if (_tex){
				var source=_tex.source;
				if (!_tex.bitmap || !source)
					return 1;
				this._shaderValue.texture=source;
			}
			this._vb.bind_upload(this._ib);
			var w=RenderState2D.worldMatrix4;
			var wmat=Matrix.TEMP;
			Matrix.mulPre(this._mat,w[0],w[1],w[4],w[5],w[12],w[13],wmat);
			var tmp=RenderState2D.worldMatrix4=SubmitOtherIBVB.tempMatrix4;
			tmp[0]=wmat.a;
			tmp[1]=wmat.b;
			tmp[4]=wmat.c;
			tmp[5]=wmat.d;
			tmp[12]=wmat.tx;
			tmp[13]=wmat.ty;
			this._shader._offset=this.offset;
			this._shaderValue.refresh();
			this._shader.upload(this._shaderValue);
			this._shader._offset=0;
			var gl=WebGL.mainContext;
			if (BlendMode.activeBlendFunction!==this._blendFn){
				gl.enable(0x0BE2);
				this._blendFn(gl);
				BlendMode.activeBlendFunction=this._blendFn;
			}
			Stat.drawCall++;
			Stat.trianglesFaces+=this._numEle / 3;
			gl.drawElements(0x0004,this._numEle,0x1403,this.startIndex);
			RenderState2D.worldMatrix4=w;
			BaseShader.activeShader=null;
			return 1;
		}

		SubmitOtherIBVB.create=function(context,vb,ib,numElement,shader,shaderValue,startIndex,offset,type){
			(type===void 0)&& (type=0);
			var o=(!SubmitOtherIBVB._cache._length)? (new SubmitOtherIBVB()):SubmitOtherIBVB._cache[--SubmitOtherIBVB._cache._length];
			o._ib=ib;
			o._vb=vb;
			o._numEle=numElement;
			o._shader=shader;
			o._shaderValue=shaderValue;
			var blendType=context._nBlendType;
			o._blendFn=context._targets ? BlendMode.targetFns[blendType] :BlendMode.fns[blendType];
			switch(type){
				case 0:
					o.offset=0;
					o.startIndex=offset / (CONST3D2D.BYTES_PE *vb.vertexStride)*1.5;
					o.startIndex *=CONST3D2D.BYTES_PIDX;
					break ;
				case 1:
					o.startIndex=startIndex;
					o.offset=offset;
					break ;
				}
			return o;
		}

		SubmitOtherIBVB._cache=(SubmitOtherIBVB._cache=[],SubmitOtherIBVB._cache._length=0,SubmitOtherIBVB._cache);
		SubmitOtherIBVB.tempMatrix4=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,];
		return SubmitOtherIBVB;
	})()


	//class laya.webgl.submit.SubmitScissor
	var SubmitScissor=(function(){
		function SubmitScissor(){
			this.submitIndex=0;
			this.submitLength=0;
			this.context=null;
			this.clipRect=new Rectangle();
			this.screenRect=new Rectangle();
		}

		__class(SubmitScissor,'laya.webgl.submit.SubmitScissor');
		var __proto=SubmitScissor.prototype;
		Laya.imps(__proto,{"laya.webgl.submit.ISubmit":true})
		__proto._scissor=function(x,y,w,h){
			var m=RenderState2D.worldMatrix4;
			var a=m[0],d=m[5],tx=m[12],ty=m[13];
			x=x *a+tx;
			y=y *d+ty;
			w *=a;
			h *=d;
			if (w < 1 || h < 1){
				return false;
			};
			var r=x+w;
			var b=y+h;
			x < 0 && (x=0,w=r-x);
			y < 0 && (y=0,h=b-y);
			var screen=RenderState2D.worldClipRect;
			x=Math.max(x,screen.x);
			y=Math.max(y,screen.y);
			w=Math.min(r,screen.right)-x;
			h=Math.min(b,screen.bottom)-y;
			if (w < 1 || h < 1){
				return false;
			};
			var worldScissorTest=RenderState2D.worldScissorTest;
			this.screenRect.copyFrom(screen);
			screen.x=x;
			screen.y=y;
			screen.width=w;
			screen.height=h;
			RenderState2D.worldScissorTest=true;
			y=RenderState2D.height-y-h;
			WebGL.mainContext.scissor(x,y,w,h);
			WebGL.mainContext.enable(0x0C11);
			this.context.submitElement(this.submitIndex,this.submitIndex+this.submitLength);
			if (worldScissorTest){
				y=RenderState2D.height-this.screenRect.y-this.screenRect.height;
				WebGL.mainContext.scissor(this.screenRect.x,y,this.screenRect.width,this.screenRect.height);
				WebGL.mainContext.enable(0x0C11);
			}
			else{
				WebGL.mainContext.disable(0x0C11);
				RenderState2D.worldScissorTest=false;
			}
			screen.copyFrom(this.screenRect);
			return true;
		}

		__proto._scissorWithTagart=function(x,y,w,h){
			if (w < 1 || h < 1){
				return false;
			};
			var r=x+w;
			var b=y+h;
			x < 0 && (x=0,w=r-x);
			y < 0 && (y=0,h=b-y);
			var screen=RenderState2D.worldClipRect;
			x=Math.max(x,screen.x);
			y=Math.max(y,screen.y);
			w=Math.min(r,screen.right)-x;
			h=Math.min(b,screen.bottom)-y;
			if (w < 1 || h < 1){
				return false;
			};
			var worldScissorTest=RenderState2D.worldScissorTest;
			this.screenRect.copyFrom(screen);
			RenderState2D.worldScissorTest=true;
			screen.x=x;
			screen.y=y;
			screen.width=w;
			screen.height=h;
			y=RenderState2D.height-y-h;
			WebGL.mainContext.scissor(x,y,w,h);
			WebGL.mainContext.enable(0x0C11);
			this.context.submitElement(this.submitIndex,this.submitIndex+this.submitLength);
			if (worldScissorTest){
				y=RenderState2D.height-this.screenRect.y-this.screenRect.height;
				WebGL.mainContext.scissor(this.screenRect.x,y,this.screenRect.width,this.screenRect.height);
				WebGL.mainContext.enable(0x0C11);
			}
			else{
				WebGL.mainContext.disable(0x0C11);
				RenderState2D.worldScissorTest=false;
			}
			screen.copyFrom(this.screenRect);
			return true;
		}

		__proto.renderSubmit=function(){
			this.submitLength=Math.min(this.context._submits._length-1,this.submitLength);
			if (this.submitLength < 1 || this.clipRect.width < 1 || this.clipRect.height < 1)
				return this.submitLength+1;
			if (this.context._targets)
				this._scissorWithTagart(this.clipRect.x,this.clipRect.y,this.clipRect.width,this.clipRect.height);
			else this._scissor(this.clipRect.x,this.clipRect.y,this.clipRect.width,this.clipRect.height);
			return this.submitLength+1;
		}

		__proto.getRenderType=function(){
			return 0;
		}

		__proto.releaseRender=function(){
			var cache=SubmitScissor._cache;
			cache[cache._length++]=this;
			this.context=null;
		}

		SubmitScissor.create=function(context){
			var o=SubmitScissor._cache._length?SubmitScissor._cache[--SubmitScissor._cache._length]:new SubmitScissor();
			o.context=context;
			return o;
		}

		SubmitScissor._cache=(SubmitScissor._cache=[],SubmitScissor._cache._length=0,SubmitScissor._cache);
		return SubmitScissor;
	})()


	//class laya.webgl.submit.SubmitStencil
	var SubmitStencil=(function(){
		function SubmitStencil(){
			this.step=0;
			this.blendMode=null;
			this.level=0;
		}

		__class(SubmitStencil,'laya.webgl.submit.SubmitStencil');
		var __proto=SubmitStencil.prototype;
		Laya.imps(__proto,{"laya.webgl.submit.ISubmit":true})
		__proto.renderSubmit=function(){
			switch(this.step){
				case 1:
					this.do1();
					break ;
				case 2:
					this.do2();
					break ;
				case 3:
					this.do3();
					break ;
				case 4:
					this.do4();
					break ;
				case 5:
					this.do5();
					break ;
				case 6:
					this.do6();
					break ;
				case 7:
					this.do7();
					break ;
				case 8:
					this.do8();
					break ;
				}
			return 1;
		}

		__proto.getRenderType=function(){
			return 0;
		}

		__proto.releaseRender=function(){
			var cache=SubmitStencil._cache;
			cache[cache._length++]=this;
		}

		__proto.do1=function(){
			var gl=WebGL.mainContext;
			gl.enable(0x0B90);
			gl.clear(0x00000400);
			gl.colorMask(false,false,false,false);
			gl.stencilFunc(0x0202,this.level,0xFF);
			gl.stencilOp(0x1E00,0x1E00,0x1E02);
		}

		//gl.stencilOp(WebGLContext.KEEP,WebGLContext.KEEP,WebGLContext.INVERT);//测试通过给模版缓冲 写入值 一开始是0 现在是 0xFF (模版缓冲中不知道是多少位的数据)
		__proto.do2=function(){
			var gl=WebGL.mainContext;
			gl.stencilFunc(0x0202,this.level+1,0xFF);
			gl.colorMask(true,true,true,true);
			gl.stencilOp(0x1E00,0x1E00,0x1E00);
		}

		__proto.do3=function(){
			var gl=WebGL.mainContext;
			gl.colorMask(true,true,true,true);
			gl.stencilOp(0x1E00,0x1E00,0x1E00);
			gl.clear(0x00000400);
			gl.disable(0x0B90);
		}

		__proto.do4=function(){
			var gl=WebGL.mainContext;
			if (this.level==0){
				gl.enable(0x0B90);
				gl.clear(0x00000400);
			}
			gl.colorMask(false,false,false,false);
			gl.stencilFunc(0x0207,0,0xFF);
			gl.stencilOp(0x1E00,0x1E00,0x1E02);
		}

		__proto.do5=function(){
			var gl=WebGL.mainContext;
			gl.stencilFunc(0x0202,this.level,0xFF);
			gl.colorMask(true,true,true,true);
			gl.stencilOp(0x1E00,0x1E00,0x1E00);
		}

		__proto.do6=function(){
			var gl=WebGL.mainContext;
			BlendMode.targetFns[BlendMode.TOINT[this.blendMode]](gl);
		}

		__proto.do7=function(){
			var gl=WebGL.mainContext;
			gl.colorMask(false,false,false,false);
			gl.stencilOp(0x1E00,0x1E00,0x1E03);
		}

		__proto.do8=function(){
			var gl=WebGL.mainContext;
			gl.colorMask(true,true,true,true);
			gl.stencilFunc(0x0202,this.level,0xFF);
			gl.stencilOp(0x1E00,0x1E00,0x1E00);
		}

		SubmitStencil.restore=function(context,clip,m,_x,_y){
			var submitStencil;
			context._renderKey=0;
			if (SubmitStencil._mask > 0){
				SubmitStencil._mask--;
			}
			if (SubmitStencil._mask==0){
				submitStencil=laya.webgl.submit.SubmitStencil.create(3);
				context.addRenderObject(submitStencil);
				context._curSubmit=Submit.RENDERBASE;
			}
			else{
				submitStencil=laya.webgl.submit.SubmitStencil.create(7);
				context.addRenderObject(submitStencil);
				var vb=context._vb;
				var nPos=(vb._byteLength >> 2);
				if (GlUtils.fillRectImgVb(vb,null,clip.x,clip.y,clip.width,clip.height,Texture.DEF_UV,m,_x,_y,0,0)){
					var shader=context._shader2D;
					shader.glTexture=null;
					var submit=context._curSubmit=Submit.createSubmit(context,context._ib,vb,((vb._byteLength-16 *4)/ 32)*3,Value2D.create(0x02,0));
					submit.shaderValue.ALPHA=1.0;
					context._submits[context._submits._length++]=submit;
					context._curSubmit._numEle+=6;
					context._curSubmit=Submit.RENDERBASE;
					}else {
					alert("clipRect calc stencil rect error");
				}
				submitStencil=laya.webgl.submit.SubmitStencil.create(8);
				context.addRenderObject(submitStencil);
			}
		}

		SubmitStencil.restore2=function(context,submit){
			var submitStencil;
			context._renderKey=0;
			if (SubmitStencil._mask > 0){
				SubmitStencil._mask--;
			}
			if (SubmitStencil._mask==0){
				submitStencil=laya.webgl.submit.SubmitStencil.create(3);
				context.addRenderObject(submitStencil);
				context._curSubmit=Submit.RENDERBASE;
			}
			else{
				submitStencil=laya.webgl.submit.SubmitStencil.create(7);
				context.addRenderObject(submitStencil);
				context._submits[context._submits._length++]=submit;
				submitStencil=laya.webgl.submit.SubmitStencil.create(8);
				context.addRenderObject(submitStencil);
			}
		}

		SubmitStencil.create=function(step){
			var o=SubmitStencil._cache._length?SubmitStencil._cache[--SubmitStencil._cache._length]:new SubmitStencil();
			o.step=step;
			if (step==5)
				++SubmitStencil._mask;
			o.level=SubmitStencil._mask;
			return o;
		}

		SubmitStencil._cache=(SubmitStencil._cache=[],SubmitStencil._cache._length=0,SubmitStencil._cache);
		SubmitStencil._mask=0;
		return SubmitStencil;
	})()


	//class laya.webgl.submit.SubmitTarget
	var SubmitTarget=(function(){
		function SubmitTarget(){
			this._renderType=0;
			this._vb=null;
			this._ib=null;
			this._startIdx=0;
			this._numEle=0;
			this.shaderValue=null;
			this.blendType=0;
			this.proName=null;
			this.scope=null;
		}

		__class(SubmitTarget,'laya.webgl.submit.SubmitTarget');
		var __proto=SubmitTarget.prototype;
		Laya.imps(__proto,{"laya.webgl.submit.ISubmit":true})
		__proto.renderSubmit=function(){
			this._vb.bind_upload(this._ib);
			var target=this.scope.getValue(this.proName);
			if (target){
				this.shaderValue.texture=target.source;
				if (this.shaderValue["strength"] && !this.shaderValue["blurInfo"]){
					this.shaderValue["blurInfo"]=[target.width,target.height];
				}
				this.shaderValue.upload();
				this.blend();
				Stat.drawCall++;
				Stat.trianglesFaces+=this._numEle/3;
				WebGL.mainContext.drawElements(0x0004,this._numEle,0x1403,this._startIdx);
			}
			return 1;
		}

		__proto.blend=function(){
			if (BlendMode.activeBlendFunction!==BlendMode.fns[this.blendType]){
				var gl=WebGL.mainContext;
				gl.enable(0x0BE2);
				BlendMode.fns[this.blendType](gl);
				BlendMode.activeBlendFunction=BlendMode.fns[this.blendType];
			}
		}

		__proto.getRenderType=function(){
			return 0;
		}

		__proto.releaseRender=function(){
			var cache=SubmitTarget._cache;
			cache[cache._length++]=this;
		}

		SubmitTarget.create=function(context,ib,vb,pos,sv,proName){
			var o=SubmitTarget._cache._length?SubmitTarget._cache[--SubmitTarget._cache._length]:new SubmitTarget();
			o._ib=ib;
			o._vb=vb;
			o.proName=proName;
			o._startIdx=pos *CONST3D2D.BYTES_PIDX;
			o._numEle=0;
			o.blendType=context._nBlendType;
			o.shaderValue=sv;
			o.shaderValue.setValue(context._shader2D);
			return o;
		}

		SubmitTarget._cache=(SubmitTarget._cache=[],SubmitTarget._cache._length=0,SubmitTarget._cache);
		return SubmitTarget;
	})()


	//class laya.webgl.text.CharSegment
	var CharSegment=(function(){
		function CharSegment(){
			this._sourceStr=null;
		}

		__class(CharSegment,'laya.webgl.text.CharSegment');
		var __proto=CharSegment.prototype;
		Laya.imps(__proto,{"laya.webgl.text.ICharSegment":true})
		__proto.textToSpit=function(str){
			this._sourceStr=str;
		}

		__proto.getChar=function(i){
			return this._sourceStr.charAt(i);
		}

		__proto.getCharCode=function(i){
			return this._sourceStr.charCodeAt(i);
		}

		__proto.length=function(){
			return this._sourceStr.length;
		}

		return CharSegment;
	})()


	//class laya.webgl.text.DrawText
	var DrawText=(function(){
		var CharValue;
		function DrawText(){};
		__class(DrawText,'laya.webgl.text.DrawText');
		DrawText.__init__=function(){
			DrawText._charsTemp=new Array;
			DrawText._drawValue=new CharValue();
			DrawText._charSeg=new CharSegment();
		}

		DrawText.customCharSeg=function(charseg){
			DrawText._charSeg=charseg;
		}

		DrawText.getChar=function(char,id,drawValue){
			var result=WebGLCharImage.createOneChar(char,drawValue);
			if(id!=-1)
				DrawText._charsCache[id]=result;
			return result;
		}

		DrawText._drawSlow=function(save,ctx,txt,words,curMat,font,textAlign,fillColor,borderColor,lineWidth,x,y,sx,sy,underLine){
			var drawValue=DrawText._drawValue.value(font,fillColor,borderColor,lineWidth,sx,sy,underLine);
			var i=0,n=0;
			var chars=DrawText._charsTemp;
			var width=0,oneChar,htmlWord,id=NaN;
			if (words){
				chars.length=words.length;
				for (i=0,n=words.length;i < n;i++){
					htmlWord=words[i];
					id=htmlWord.charNum+drawValue.txtID;
					chars[i]=oneChar=DrawText._charsCache[id] || DrawText.getChar(htmlWord.char,id,drawValue);
					oneChar.active();
				}
				}else {
				var text=((txt instanceof laya.utils.WordText ))? txt.toString():txt;
				if (Text.CharacterCache){
					DrawText._charSeg.textToSpit(text);
					var len=/*if err,please use iflash.method.xmlLength()*/DrawText._charSeg.length();
					chars.length=len;
					for (i=0,n=len;i < n;i++){
						id=DrawText._charSeg.getCharCode(i)+drawValue.txtID;
						chars[i]=oneChar=DrawText._charsCache[id] || DrawText.getChar(DrawText._charSeg.getChar(i),id,drawValue);
						oneChar.active();
						width+=oneChar.cw;
					}
				}
				else {
					chars.length=0;
					oneChar=DrawText.getChar(text,-1,drawValue);
					oneChar.active();
					width+=oneChar.cw;
					chars[0]=oneChar;
				}
			};
			var dx=0;
			if (textAlign!==null && textAlign!=="left")
				dx=-(textAlign=="center" ? (width / 2):width);
			var uv,bdSz=NaN,texture,value,saveLength=0;
			if (words){
				for (i=0,n=chars.length;i < n;i++){
					oneChar=chars[i];
					if (!oneChar.isSpace){
						htmlWord=words[i];
						bdSz=oneChar.borderSize;
						texture=oneChar.texture;
						ctx._drawText(texture,x+dx+htmlWord.x *sx-bdSz,y+htmlWord.y *sy-bdSz,texture.width,texture.height,curMat,0,0,0,0);
					}
				}
				}else {
				for (i=0,n=chars.length;i < n;i++){
					oneChar=chars[i];
					if (!oneChar.isSpace){
						bdSz=oneChar.borderSize;
						texture=oneChar.texture;
						ctx._drawText(texture,x+dx-bdSz,y-bdSz,texture.width,texture.height,curMat,0,0,0,0);
						save && (value=save[saveLength++],value || (value=save[saveLength-1]=[]),value[0]=texture,value[1]=dx-bdSz,value[2]=-bdSz);
					}
					dx+=oneChar.cw;
				}
				save && (save.length=saveLength);
			}
		}

		DrawText._drawFast=function(save,ctx,curMat,x,y){
			var texture,value;
			for (var i=0,n=save.length;i < n;i++){
				value=save[i];
				texture=value[0];
				texture.active();
				ctx._drawText(texture,x+value[1],y+value[2],texture.width,texture.height,curMat,0,0,0,0);
			}
		}

		DrawText.drawText=function(ctx,txt,words,curMat,font,textAlign,fillColor,borderColor,lineWidth,x,y,underLine){
			(underLine===void 0)&& (underLine=0);
			if ((txt && txt.length===0)|| (words && words.length===0))
				return;
			var sx=curMat.a,sy=curMat.d;
			(curMat.b!==0 || curMat.c!==0)&& (sx=sy=1);
			var scale=sx!==1 || sy!==1;
			if (scale && Laya.stage.transform){
				var t=Laya.stage.transform;
				scale=t.a===sx && t.d===sy;
			}else scale=false;
			if (scale){
				curMat=curMat.copyTo(WebGLContext2D._tmpMatrix);
				var tempTx=curMat.tx;
				var tempTy=curMat.ty;
				curMat.scale(1 / sx,1 / sy);
				curMat._checkTransform();
				x *=sx;
				y *=sy;
				x+=tempTx-curMat.tx;
				y+=tempTy-curMat.ty;
			}else sx=sy=1;
			if (words){
				DrawText._drawSlow(null,ctx,txt,words,curMat,font,textAlign,fillColor,borderColor,lineWidth,x,y,sx,sy,underLine);
				}else {
				if (txt.toUpperCase===null){
					var idNum=sx+sy *100000;
					var myCache=txt;
					if (!myCache.changed && myCache.id===idNum){
						DrawText._drawFast(myCache.save,ctx,curMat,x,y);
						}else {
						myCache.id=idNum;
						myCache.changed=false;
						DrawText._drawSlow(myCache.save,ctx,txt,words,curMat,font,textAlign,fillColor,borderColor,lineWidth,x,y,sx,sy,underLine);
					}
					return;
				};
				var id=txt+font.toString()+fillColor+borderColor+lineWidth+sx+sy+textAlign;
				var cache=DrawText._textsCache[id];
				if (Text.CharacterCache){
					if (cache){
						DrawText._drawFast(cache,ctx,curMat,x,y);
						}else {
						DrawText._textsCache.__length || (DrawText._textsCache.__length=0);
						if (DrawText._textsCache.__length > Config.WebGLTextCacheCount){
							DrawText._textsCache={};
							DrawText._textsCache.__length=0;
							DrawText._curPoolIndex=0;
						}
						DrawText._textCachesPool[DrawText._curPoolIndex] ? (cache=DrawText._textsCache[id]=DrawText._textCachesPool[DrawText._curPoolIndex],cache.length=0):(DrawText._textCachesPool[DrawText._curPoolIndex]=cache=DrawText._textsCache[id]=[]);
						DrawText._textsCache.__length++
						DrawText._curPoolIndex++;
						DrawText._drawSlow(cache,ctx,txt,words,curMat,font,textAlign,fillColor,borderColor,lineWidth,x,y,sx,sy,underLine);
					}
				}
				else{
					DrawText._drawSlow(cache,ctx,txt,words,curMat,font,textAlign,fillColor,borderColor,lineWidth,x,y,sx,sy,underLine);
				}
			}
		}

		DrawText._charsTemp=null
		DrawText._textCachesPool=[];
		DrawText._curPoolIndex=0;
		DrawText._charsCache={};
		DrawText._textsCache={};
		DrawText._drawValue=null
		DrawText.d=[];
		DrawText._charSeg=null;
		DrawText.__init$=function(){
			//class CharValue
			CharValue=(function(){
				function CharValue(){
					//this.txtID=NaN;
					//this.font=null;
					//this.fillColor=null;
					//this.borderColor=null;
					//this.lineWidth=0;
					//this.scaleX=NaN;
					//this.scaleY=NaN;
					//this.underLine=0;
				}
				__class(CharValue,'');
				var __proto=CharValue.prototype;
				__proto.value=function(font,fillColor,borderColor,lineWidth,scaleX,scaleY,underLine){
					this.font=font;
					this.fillColor=fillColor;
					this.borderColor=borderColor;
					this.lineWidth=lineWidth;
					this.scaleX=scaleX;
					this.scaleY=scaleY;
					this.underLine=underLine;
					var key=font.toString()+scaleX+scaleY+lineWidth+fillColor+borderColor+underLine;
					this.txtID=CharValue._keymap[key];
					if (!this.txtID){
						this.txtID=(++CharValue._keymapCount)*0.0000001;
						CharValue._keymap[key]=this.txtID;
					}
					return this;
				}
				CharValue.clear=function(){
					CharValue._keymap={};
					CharValue._keymapCount=1;
				}
				CharValue._keymap={};
				CharValue._keymapCount=1;
				return CharValue;
			})()
		}

		return DrawText;
	})()


	//class laya.webgl.text.FontInContext
	var FontInContext=(function(){
		function FontInContext(font){
			//this._text=null;
			//this._words=null;
			this._index=0;
			this._size=14;
			this._italic=-2;
			FontInContext._cache2=FontInContext._cache2|| [];
			this.setFont(font || "14px Arial");
		}

		__class(FontInContext,'laya.webgl.text.FontInContext');
		var __proto=FontInContext.prototype;
		__proto.setFont=function(value){
			var arr=FontInContext._cache2[value];
			if (!arr){
				this._words=value.split(' ');
				for (var i=0,n=this._words.length;i < n;i++){
					if (this._words[i].indexOf('px')> 0){
						this._index=i;
						break ;
					}
				}
				this._size=parseInt(this._words[this._index]);
				FontInContext._cache2[value]=[this._words,this._size];
				}else {
				this._words=arr[0];
				this._size=arr[1];
			}
			this._text=null;
			this._italic=-2;
		}

		__proto.getItalic=function(){
			this._italic===-2 && (this._italic=this.hasType("italic"));
			return this._italic;
		}

		__proto.hasType=function(name){
			for (var i=0,n=this._words.length;i < n;i++)
			if (this._words[i]===name)return i;
			return-1;
		}

		__proto.removeType=function(name){
			for (var i=0,n=this._words.length;i < n;i++)
			if (this._words[i]===name){
				this._words.splice(i,1);
				if (this._index > i)this._index--;
				break ;
			}
			this._text=null;
			this._italic=-2;
		}

		__proto.copyTo=function(dec){
			dec._text=this._text;
			dec._size=this._size;
			dec._index=this._index;
			dec._words=this._words.slice();
			dec._italic=-2;
			return dec;
		}

		__proto.toString=function(){
			return this._text ? this._text :(this._text=this._words.join(' '));
		}

		__getset(0,__proto,'size',function(){
			return this._size;
			},function(value){
			this._size=value;
			this._words[this._index]=value+"px";
			this._text=null;
		});

		FontInContext.create=function(font){
			var r=FontInContext._cache[font];
			if (r)return r;
			r=FontInContext._cache[font]=new FontInContext(font);
			return r;
		}

		FontInContext.EMPTY=new FontInContext();
		FontInContext._cache={};
		FontInContext._cache2=null
		return FontInContext;
	})()


	//class laya.webgl.utils.CONST3D2D
	var CONST3D2D=(function(){
		function CONST3D2D(){};
		__class(CONST3D2D,'laya.webgl.utils.CONST3D2D');
		CONST3D2D.defaultMatrix4=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
		CONST3D2D.defaultMinusYMatrix4=[1,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,1];
		CONST3D2D.uniformMatrix3=[1,0,0,0,0,1,0,0,0,0,1,0];
		CONST3D2D._TMPARRAY=[];
		CONST3D2D._OFFSETX=0;
		CONST3D2D._OFFSETY=0;
		__static(CONST3D2D,
		['BYTES_PE',function(){return this.BYTES_PE=Float32Array.BYTES_PER_ELEMENT;},'BYTES_PIDX',function(){return this.BYTES_PIDX=Uint16Array.BYTES_PER_ELEMENT;}
		]);
		return CONST3D2D;
	})()


	//class laya.webgl.utils.GlUtils
	var GlUtils=(function(){
		function GlUtils(){};
		__class(GlUtils,'laya.webgl.utils.GlUtils');
		GlUtils.make2DProjection=function(width,height,depth){
			return [2.0 / width,0,0,0,0,-2.0 / height,0,0,0,0,2.0 / depth,0,-1,1,0,1,];
		}

		GlUtils.fillIBQuadrangle=function(buffer,count){
			if (count > 65535 / 4){
				throw Error("IBQuadrangle count:"+count+" must<:"+Math.floor(65535 / 4));
				return false;
			}
			count=Math.floor(count);
			buffer._resizeBuffer((count+1)*6 *2,false);
			buffer.byteLength=buffer.bufferLength;
			var bufferData=buffer.getUint16Array();
			var idx=0;
			for (var i=0;i < count;i++){
				bufferData[idx++]=i *4;
				bufferData[idx++]=i *4+2;
				bufferData[idx++]=i *4+1;
				bufferData[idx++]=i *4;
				bufferData[idx++]=i *4+3;
				bufferData[idx++]=i *4+2;
			}
			buffer.setNeedUpload();
			return true;
		}

		GlUtils.expandIBQuadrangle=function(buffer,count){
			buffer.bufferLength >=(count *6 *2)|| GlUtils.fillIBQuadrangle(buffer,count);
		}

		GlUtils.mathCeilPowerOfTwo=function(value){
			value--;
			value |=value >> 1;
			value |=value >> 2;
			value |=value >> 4;
			value |=value >> 8;
			value |=value >> 16;
			value++;
			return value;
		}

		GlUtils.fillQuadrangleImgVb=function(vb,x,y,point4,uv,m,_x,_y){
			var vpos=(vb._byteLength >> 2)+16;
			vb.byteLength=(vpos << 2);
			var vbdata=vb.getFloat32Array();
			vpos-=16;
			vbdata[vpos+2]=uv[0];
			vbdata[vpos+3]=uv[1];
			vbdata[vpos+6]=uv[2];
			vbdata[vpos+7]=uv[3];
			vbdata[vpos+10]=uv[4];
			vbdata[vpos+11]=uv[5];
			vbdata[vpos+14]=uv[6];
			vbdata[vpos+15]=uv[7];
			var a=m.a,b=m.b,c=m.c,d=m.d;
			if (a!==1 || b!==0 || c!==0 || d!==1){
				m.bTransform=true;
				var tx=m.tx+_x,ty=m.ty+_y;
				vbdata[vpos]=(point4[0]+x)*a+(point4[1]+y)*c+tx;
				vbdata[vpos+1]=(point4[0]+x)*b+(point4[1]+y)*d+ty;
				vbdata[vpos+4]=(point4[2]+x)*a+(point4[3]+y)*c+tx;
				vbdata[vpos+5]=(point4[2]+x)*b+(point4[3]+y)*d+ty;
				vbdata[vpos+8]=(point4[4]+x)*a+(point4[5]+y)*c+tx;
				vbdata[vpos+9]=(point4[4]+x)*b+(point4[5]+y)*d+ty;
				vbdata[vpos+12]=(point4[6]+x)*a+(point4[7]+y)*c+tx;
				vbdata[vpos+13]=(point4[6]+x)*b+(point4[7]+y)*d+ty;
				}else {
				m.bTransform=false;
				x+=m.tx+_x;
				y+=m.ty+_y;
				vbdata[vpos]=x+point4[0];
				vbdata[vpos+1]=y+point4[1];
				vbdata[vpos+4]=x+point4[2];
				vbdata[vpos+5]=y+point4[3];
				vbdata[vpos+8]=x+point4[4];
				vbdata[vpos+9]=y+point4[5];
				vbdata[vpos+12]=x+point4[6];
				vbdata[vpos+13]=y+point4[7];
			}
			vb._upload=true;
			return true;
		}

		GlUtils.fillTranglesVB=function(vb,x,y,points,m,_x,_y){
			var vpos=(vb._byteLength >> 2)+points.length;
			vb.byteLength=(vpos << 2);
			var vbdata=vb.getFloat32Array();
			vpos-=points.length;
			var len=points.length;
			var a=m.a,b=m.b,c=m.c,d=m.d;
			for (var i=0;i < len;i+=4){
				vbdata[vpos+i+2]=points[i+2];
				vbdata[vpos+i+3]=points[i+3];
				if (a!==1 || b!==0 || c!==0 || d!==1){
					m.bTransform=true;
					var tx=m.tx+_x,ty=m.ty+_y;
					vbdata[vpos+i]=(points[i]+x)*a+(points[i+1]+y)*c+tx;
					vbdata[vpos+i+1]=(points[i]+x)*b+(points[i+1]+y)*d+ty;
					}else {
					m.bTransform=false;
					x+=m.tx+_x;
					y+=m.ty+_y;
					vbdata[vpos+i]=x+points[i];
					vbdata[vpos+i+1]=y+points[i+1];
				}
			}
			vb._upload=true;
			return true;
		}

		GlUtils.copyPreImgVb=function(vb,dx,dy){
			var vpos=(vb._byteLength >> 2);
			vb.byteLength=((vpos+16)<< 2);
			var vbdata=vb.getFloat32Array();
			for (var i=0,ci=vpos-16;i < 4;i++){
				vbdata[vpos]=vbdata[ci]+dx;
				++vpos;
				++ci;
				vbdata[vpos]=vbdata[ci]+dy;
				++vpos;
				++ci;
				vbdata[vpos]=vbdata[ci];
				++vpos;
				++ci;
				vbdata[vpos]=vbdata[ci];
				++vpos;
				++ci;
			}
			vb._upload=true;
		}

		GlUtils.fillRectImgVb=function(vb,clip,x,y,width,height,uv,m,_x,_y,dx,dy,round){
			(round===void 0)&& (round=false);
			var mType=1;
			var toBx,toBy,toEx,toEy;
			var cBx,cBy,cEx,cEy;
			var w0,h0,tx,ty;
			var finalX,finalY,offsetX,offsetY;
			var a=m.a,b=m.b,c=m.c,d=m.d;
			var useClip=clip && clip.width < 99999999;
			if (a!==1 || b!==0 || c!==0 || d!==1){
				m.bTransform=true;
				if (b===0 && c===0){
					mType=23;
					w0=width+x,h0=height+y;
					tx=m.tx+_x,ty=m.ty+_y;
					toBx=a *x+tx;
					toEx=a *w0+tx;
					toBy=d *y+ty;
					toEy=d *h0+ty;
				}
				}else {
				mType=23;
				m.bTransform=false;
				toBx=x+m.tx+_x;
				toEx=toBx+width;
				toBy=y+m.ty+_y;
				toEy=toBy+height;
			}
			if (useClip){
				cBx=clip.x,cBy=clip.y,cEx=clip.width+cBx,cEy=clip.height+cBy;
			}
			if (mType!==1){
				if (Math.min(toBx,toEx)>=cEx)return false;
				if (Math.min(toBy,toEy)>=cEy)return false;
				if (Math.max(toEx,toBx)<=cBx)return false;
				if (Math.max(toEy,toBy)<=cBy)return false;
			};
			var vpos=(vb._byteLength >> 2);
			vb.byteLength=((vpos+16)<< 2);
			var vbdata=vb.getFloat32Array();
			vbdata[vpos+2]=uv[0];
			vbdata[vpos+3]=uv[1];
			vbdata[vpos+6]=uv[2];
			vbdata[vpos+7]=uv[3];
			vbdata[vpos+10]=uv[4];
			vbdata[vpos+11]=uv[5];
			vbdata[vpos+14]=uv[6];
			vbdata[vpos+15]=uv[7];
			switch (mType){
				case 1:
					tx=m.tx+_x,ty=m.ty+_y;
					w0=width+x,h0=height+y;
					var w1=x,h1=y;
					var aw1=a *w1,ch1=c *h1,dh1=d *h1,bw1=b *w1;
					var aw0=a *w0,ch0=c *h0,dh0=d *h0,bw0=b *w0;
					if (round){
						finalX=aw1+ch1+tx;
						offsetX=Math.round(finalX)-finalX;
						finalY=dh1+bw1+ty;
						offsetY=Math.round(finalY)-finalY;
						vbdata[vpos]=finalX+offsetX;
						vbdata[vpos+1]=finalY+offsetY;
						vbdata[vpos+4]=aw0+ch1+tx+offsetX;
						vbdata[vpos+5]=dh1+bw0+ty+offsetY;
						vbdata[vpos+8]=aw0+ch0+tx+offsetX;
						vbdata[vpos+9]=dh0+bw0+ty+offsetY;
						vbdata[vpos+12]=aw1+ch0+tx+offsetX;
						vbdata[vpos+13]=dh0+bw1+ty+offsetY;
						}else {
						vbdata[vpos]=aw1+ch1+tx;
						vbdata[vpos+1]=dh1+bw1+ty;
						vbdata[vpos+4]=aw0+ch1+tx;
						vbdata[vpos+5]=dh1+bw0+ty;
						vbdata[vpos+8]=aw0+ch0+tx;
						vbdata[vpos+9]=dh0+bw0+ty;
						vbdata[vpos+12]=aw1+ch0+tx;
						vbdata[vpos+13]=dh0+bw1+ty;
					}
					break ;
				case 23:
					if (round){
						finalX=toBx+dx;
						offsetX=Math.round(finalX)-finalX;
						finalY=toBy;
						offsetY=Math.round(finalY)-finalY;
						vbdata[vpos]=finalX+offsetX;
						vbdata[vpos+1]=finalY+offsetY;
						vbdata[vpos+4]=toEx+dx+offsetX;
						vbdata[vpos+5]=toBy+offsetY;
						vbdata[vpos+8]=toEx+offsetX;
						vbdata[vpos+9]=toEy+offsetY;
						vbdata[vpos+12]=toBx+offsetX;
						vbdata[vpos+13]=toEy+offsetY;
						}else {
						vbdata[vpos]=toBx+dx;
						vbdata[vpos+1]=toBy;
						vbdata[vpos+4]=toEx+dx;
						vbdata[vpos+5]=toBy;
						vbdata[vpos+8]=toEx;
						vbdata[vpos+9]=toEy;
						vbdata[vpos+12]=toBx;
						vbdata[vpos+13]=toEy;
					}
					break ;
				}
			vb._upload=true;
			return true;
		}

		GlUtils.fillLineVb=function(vb,clip,fx,fy,tx,ty,width,mat){
			var linew=width *.5;
			var data=GlUtils._fillLineArray;
			var perpx=-(fy-ty),perpy=fx-tx;
			var dist=Math.sqrt(perpx *perpx+perpy *perpy);
			perpx /=dist,perpy /=dist,perpx *=linew,perpy *=linew;
			data[0]=fx-perpx,data[1]=fy-perpy,data[4]=fx+perpx,data[5]=fy+perpy,data[8]=tx+perpx,data[9]=ty+perpy,data[12]=tx-perpx,data[13]=ty-perpy;
			mat && mat.transformPointArray(data,data);
			var vpos=(vb._byteLength >> 2)+16;
			vb.byteLength=(vpos << 2);
			vb.insertData(data,vpos-16);
			return true;
		}

		GlUtils._fillLineArray=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		return GlUtils;
	})()


	//class laya.webgl.utils.MatirxArray
	var MatirxArray=(function(){
		function MatirxArray(){};
		__class(MatirxArray,'laya.webgl.utils.MatirxArray');
		MatirxArray.ArrayMul=function(a,b,o){
			if (!a){
				MatirxArray.copyArray(b,o);
				return;
			}
			if (!b){
				MatirxArray.copyArray(a,o);
				return;
			};
			var ai0=NaN,ai1=NaN,ai2=NaN,ai3=NaN;
			for (var i=0;i < 4;i++){
				ai0=a[i];
				ai1=a[i+4];
				ai2=a[i+8];
				ai3=a[i+12];
				o[i]=ai0 *b[0]+ai1 *b[1]+ai2 *b[2]+ai3 *b[3];
				o[i+4]=ai0 *b[4]+ai1 *b[5]+ai2 *b[6]+ai3 *b[7];
				o[i+8]=ai0 *b[8]+ai1 *b[9]+ai2 *b[10]+ai3 *b[11];
				o[i+12]=ai0 *b[12]+ai1 *b[13]+ai2 *b[14]+ai3 *b[15];
			}
		}

		MatirxArray.copyArray=function(f,t){
			if (!f)return;
			if (!t)return;
			for (var i=0;i < f.length;i++){
				t[i]=f[i];
			}
		}

		return MatirxArray;
	})()


	//class laya.webgl.utils.Mesh2D
	var Mesh2D=(function(){
		function Mesh2D(stride,vballoc,iballoc){
			this._stride=0;
			this.vertNum=0;
			this.indexNum=0;
			this._applied=false;
			this._vb=null;
			this._ib=null;
			this._vao=null;
			this._attribInfo=null;
			this._quadNum=0;
			this.canReuse=false;
			this._stride=stride;
			this._vb=new VertexBuffer2D(stride,0x88E8);
			if (vballoc){
				this._vb._resizeBuffer(vballoc,false);
			}else{}
			this._ib=new IndexBuffer2D();
			if (iballoc){
				this._ib._resizeBuffer(iballoc,false);
			}
		}

		__class(Mesh2D,'laya.webgl.utils.Mesh2D');
		var __proto=Mesh2D.prototype;
		/**
		*重新创建一个mesh。复用这个对象的vertex结构，ib对象和attribinfo对象
		*/
		__proto.cloneWithNewVB=function(){
			var mesh=new Mesh2D(this._stride,0,0);
			mesh._ib=this._ib;
			mesh._quadNum=this._quadNum;
			mesh._attribInfo=this._attribInfo;
			return mesh;
		}

		/**
		*创建一个mesh，使用当前对象的vertex结构。vb和ib自己提供。
		*@return
		*/
		__proto.cloneWithNewVBIB=function(){
			var mesh=new Mesh2D(this._stride,0,0);
			mesh._attribInfo=this._attribInfo;
			return mesh;
		}

		/**
		*获得一个可以写的vb对象
		*/
		__proto.getVBW=function(){
			this._vb.setNeedUpload();
			return this._vb;
		}

		/**
		*获得一个只读vb
		*/
		__proto.getVBR=function(){
			return this._vb;
		}

		__proto.getIBR=function(){
			return this._ib;
		}

		/**
		*获得一个可写的ib
		*/
		__proto.getIBW=function(){
			this._ib.setNeedUpload();
			return this._ib;
		}

		/**
		*直接创建一个固定的ib。按照固定四边形的索引。
		*@param var QuadNum
		*/
		__proto.createQuadIB=function(QuadNum){
			this._quadNum=QuadNum;
			this._ib._resizeBuffer(QuadNum *6 *2,false);
			this._ib.byteLength=this._ib.bufferLength;
			var bd=this._ib.getUint16Array();
			var idx=0;
			var curvert=0;
			for (var i=0;i < QuadNum;i++){
				bd[idx++]=curvert;
				bd[idx++]=curvert+2;
				bd[idx++]=curvert+1;
				bd[idx++]=curvert;
				bd[idx++]=curvert+3;
				bd[idx++]=curvert+2;
				curvert+=4;
			}
			this._ib.setNeedUpload();
		}

		/**
		*设置mesh的属性。每3个一组，对应的location分别是0,1,2...
		*含义是：type,size,offset
		*不允许多流。因此stride是固定的，offset只是在一个vertex之内。
		*@param attribs
		*/
		__proto.setAttributes=function(attribs){
			this._attribInfo=attribs;
			if (this._attribInfo.length % 3 !=0){
				throw 'Mesh2D setAttributes error!';
			}
		}

		__proto.getEleNum=function(){
			return this._ib.getBuffer().byteLength / 2;
		}

		/**
		*子类实现。用来把自己放到对应的回收池中，以便复用。
		*/
		__proto.releaseMesh=function(){}
		/**
		*释放资源。
		*/
		__proto.destroy=function(){}
		/**
		*清理vb数据
		*/
		__proto.clearVB=function(){
			this._vb.clear();
		}

		Mesh2D._gvaoid=0;
		return Mesh2D;
	})()


	//class laya.webgl.utils.RenderState2D
	var RenderState2D=(function(){
		function RenderState2D(){};
		__class(RenderState2D,'laya.webgl.utils.RenderState2D');
		RenderState2D.getMatrArray=function(){
			return [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
		}

		RenderState2D.mat2MatArray=function(mat,matArray){
			var m=mat;
			var m4=matArray;
			m4[0]=m.a;
			m4[1]=m.b;
			m4[2]=RenderState2D.EMPTYMAT4_ARRAY[2];
			m4[3]=RenderState2D.EMPTYMAT4_ARRAY[3];
			m4[4]=m.c;
			m4[5]=m.d;
			m4[6]=RenderState2D.EMPTYMAT4_ARRAY[6];
			m4[7]=RenderState2D.EMPTYMAT4_ARRAY[7];
			m4[8]=RenderState2D.EMPTYMAT4_ARRAY[8];
			m4[9]=RenderState2D.EMPTYMAT4_ARRAY[9];
			m4[10]=RenderState2D.EMPTYMAT4_ARRAY[10];
			m4[11]=RenderState2D.EMPTYMAT4_ARRAY[11];
			m4[12]=m.tx;
			m4[13]=m.ty;
			m4[14]=RenderState2D.EMPTYMAT4_ARRAY[14];
			m4[15]=RenderState2D.EMPTYMAT4_ARRAY[15];
			return matArray;
		}

		RenderState2D.restoreTempArray=function(){
			RenderState2D.TEMPMAT4_ARRAY[0]=1;
			RenderState2D.TEMPMAT4_ARRAY[1]=0;
			RenderState2D.TEMPMAT4_ARRAY[4]=0;
			RenderState2D.TEMPMAT4_ARRAY[5]=1;
			RenderState2D.TEMPMAT4_ARRAY[12]=0;
			RenderState2D.TEMPMAT4_ARRAY[13]=0;
		}

		RenderState2D.clear=function(){
			RenderState2D.worldScissorTest=false;
			RenderState2D.worldShaderDefines=null;
			RenderState2D.worldFilters=null;
			RenderState2D.worldAlpha=1;
			RenderState2D.worldClipRect.x=RenderState2D.worldClipRect.y=0;
			RenderState2D.worldClipRect.width=RenderState2D.width;
			RenderState2D.worldClipRect.height=RenderState2D.height;
			RenderState2D.curRenderTarget=null;
		}

		RenderState2D._MAXSIZE=99999999;
		RenderState2D.EMPTYMAT4_ARRAY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
		RenderState2D.TEMPMAT4_ARRAY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
		RenderState2D.worldMatrix4=RenderState2D.TEMPMAT4_ARRAY;
		RenderState2D.worldAlpha=1.0;
		RenderState2D.worldScissorTest=false;
		RenderState2D.worldFilters=null
		RenderState2D.worldShaderDefines=null
		RenderState2D.curRenderTarget=null
		RenderState2D.width=0;
		RenderState2D.height=0;
		__static(RenderState2D,
		['worldMatrix',function(){return this.worldMatrix=new Matrix();},'worldClipRect',function(){return this.worldClipRect=new Rectangle(0,0,99999999,99999999);}
		]);
		return RenderState2D;
	})()


	//class laya.webgl.WebGL
	var WebGL=(function(){
		function WebGL(){};
		__class(WebGL,'laya.webgl.WebGL');
		WebGL._uint8ArraySlice=function(){
			var _this=this;
			var sz=_this.length;
			var dec=new Uint8Array(_this.length);
			for (var i=0;i < sz;i++)dec[i]=_this[i];
			return dec;
		}

		WebGL._float32ArraySlice=function(){
			var _this=this;
			var sz=_this.length;
			var dec=new Float32Array(_this.length);
			for (var i=0;i < sz;i++)dec[i]=_this[i];
			return dec;
		}

		WebGL._uint16ArraySlice=function(__arg){
			var arg=arguments;
			var _this=this;
			var sz=0;
			var dec;
			var i=0;
			if (arg.length===0){
				sz=_this.length;
				dec=new Uint16Array(sz);
				for (i=0;i < sz;i++)
				dec[i]=_this[i];
				}else if (arg.length===2){
				var start=arg[0];
				var end=arg[1];
				if (end > start){
					sz=end-start;
					dec=new Uint16Array(sz);
					for (i=start;i < end;i++)
					dec[i-start]=_this[i];
					}else {
					dec=new Uint16Array(0);
				}
			}
			return dec;
		}

		WebGL.expandContext=function(){
			var from=Context.prototype;
			var to=CanvasRenderingContext2D.prototype;
			to.fillTrangles=from.fillTrangles;
			Buffer2D.__int__(null);
			to.setIBVB=function (x,y,ib,vb,numElement,mat,shader,shaderValues,startIndex,offset){
				(startIndex===void 0)&& (startIndex=0);
				(offset===void 0)&& (offset=0);
				if (ib===null){
					this._ib=this._ib || IndexBuffer2D.QuadrangleIB;
					ib=this._ib;
					GlUtils.expandIBQuadrangle(ib,(vb._byteLength / (4 *16)+8));
				}
				this._setIBVB(x,y,ib,vb,numElement,mat,shader,shaderValues,startIndex,offset);
			};
			to.fillTrangles=function (tex,x,y,points,m){
				this._curMat=this._curMat || Matrix.create();
				this._vb=this._vb || VertexBuffer2D.create();
				if (!this._ib){
					this._ib=IndexBuffer2D.create();
					GlUtils.fillIBQuadrangle(this._ib,length / 4);
				};
				var vb=this._vb;
				var length=points.length >> 4;
				GlUtils.fillTranglesVB(vb,x,y,points,m || this._curMat,0,0);
				GlUtils.expandIBQuadrangle(this._ib,(vb._byteLength / (4 *16)+8));
				var shaderValues=new Value2D(0x01,0);
				shaderValues.textureHost=tex;
				var sd=new Shader2X("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }","precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}");
				vb._vertType=3;
				this._setIBVB(x,y,this._ib,vb,length *6,m,sd,shaderValues,0,0);
			}
		}

		WebGL.enable=function(){
			Browser.__init__();
			if (Render.isConchApp){
				if (!Render.isConchWebGL){
					RunDriver.skinAniSprite=function (){
						var tSkinSprite=new SkinMesh()
						return tSkinSprite;
					}
					WebGL.expandContext();
					return false;
				}
			}
			RunDriver.getWebGLContext=function getWebGLContext (canvas){
				var gl;
				var names=["webgl","experimental-webgl","webkit-3d","moz-webgl"];
				for (var i=0;i < names.length;i++){
					try {
						gl=canvas.getContext(names[i],{stencil:Config.isStencil,alpha:Config.isAlpha,antialias:Config.isAntialias,premultipliedAlpha:Config.premultipliedAlpha,preserveDrawingBuffer:Config.preserveDrawingBuffer});
					}catch (e){}
					if (gl)
						return gl;
				}
				return null;
			}
			WebGL.mainContext=RunDriver.getWebGLContext(Render._mainCanvas);
			if (WebGL.mainContext==null)
				return false;
			if (Render.isWebGL)return true;
			HTMLImage.create=function (src,def){
				return new WebGLImage(src,def);
			}
			HTMLSubImage.create=function (canvas,offsetX,offsetY,width,height,atlasImage,src){
				return new WebGLSubImage(canvas,offsetX,offsetY,width,height,atlasImage,src);
			}
			Render.WebGL=WebGL;
			Render.isWebGL=true;
			DrawText.__init__();
			RunDriver.createRenderSprite=function (type,next){
				return new RenderSprite3D(type,next);
			}
			RunDriver.createWebGLContext2D=function (c){
				return new WebGLContext2D(c);
			}
			RunDriver.changeWebGLSize=function (width,height){
				laya.webgl.WebGL.onStageResize(width,height);
			}
			RunDriver.createGraphics=function (){
				return new GraphicsGL();
			};
			var action=RunDriver.createFilterAction;
			RunDriver.createFilterAction=action ? action :function (type){
				return new ColorFilterActionGL()
			}
			RunDriver.clear=function (color){
				RenderState2D.worldScissorTest && laya.webgl.WebGL.mainContext.disable(0x0C11);
				var ctx=Render.context.ctx;
				var c=(ctx._submits._length==0 || Config.preserveDrawingBuffer)? Color$1.create(color)._color :Stage._wgColor;
				if (c)ctx.clearBG(c[0],c[1],c[2],c[3]);
				RenderState2D.clear();
			}
			RunDriver.addToAtlas=function (texture,force){
				(force===void 0)&& (force=false);
				var bitmap=texture.bitmap;
				if (!Render.optimizeTextureMemory(texture.url,texture)){
					(bitmap).enableMerageInAtlas=false;
					return;
				}
				if ((Laya.__typeof(bitmap,'laya.webgl.resource.IMergeAtlasBitmap'))&& ((bitmap).allowMerageInAtlas)){
					bitmap.on("recovered",texture,texture.addTextureToAtlas);
				}
			}
			RunDriver.isAtlas=function (bitmap){
				return (bitmap instanceof laya.webgl.atlas.AtlasWebGLCanvas );
			}
			AtlasResourceManager._enable();
			RunDriver.beginFlush=function (){
				var atlasResourceManager=AtlasResourceManager.instance;
				var count=atlasResourceManager.getAtlaserCount();
				for (var i=0;i < count;i++){
					var atlerCanvas=atlasResourceManager.getAtlaserByIndex(i).texture;
					(atlerCanvas._flashCacheImageNeedFlush)&& (RunDriver.flashFlushImage(atlerCanvas));
				}
			}
			RunDriver.drawToCanvas=function (sprite,_renderType,canvasWidth,canvasHeight,offsetX,offsetY){
				if (canvasWidth <=0 || canvasHeight <=0){
					console.log("[error] canvasWidth and canvasHeight should greater than zero");
				}
				offsetX-=sprite.x;
				offsetY-=sprite.y;
				var renderTarget=RenderTarget2D.create(canvasWidth,canvasHeight,0x1908,0x1401,0,false);
				renderTarget.start();
				renderTarget.clear(0,0,0,0);
				Render.context.clear();
				RenderSprite.renders[_renderType]._fun(sprite,Render.context,offsetX,RenderState2D.height-canvasHeight+offsetY);
				Render.context.flush();
				renderTarget.end();
				var pixels=renderTarget.getData(0,0,renderTarget.width,renderTarget.height);
				renderTarget.recycle();
				var htmlCanvas=new WebGLCanvas();
				htmlCanvas._canvas=Browser.createElement("canvas");
				htmlCanvas.size(canvasWidth,canvasHeight);
				var context=htmlCanvas._canvas.getContext('2d');
				Browser.canvas.size(canvasWidth,canvasHeight);
				var tempContext=Browser.context;
				var imgData=tempContext.createImageData(canvasWidth,canvasHeight);
				imgData.data.set(new Uint8ClampedArray(pixels.buffer));
				htmlCanvas._imgData=imgData;
				tempContext.putImageData(imgData,0,0);
				context.save();
				context.translate(0,canvasHeight);
				context.scale(1,-1);
				context.drawImage(Browser.canvas.source,0,0);
				context.restore();
				return htmlCanvas;
			}
			RunDriver.createFilterAction=function (type){
				var action;
				switch (type){
					case 0x20:
						action=new ColorFilterActionGL();
						break ;
					}
				return action;
			}
			RunDriver.addTextureToAtlas=function (texture){
				texture._uvID++;
				AtlasResourceManager._atlasRestore++;
				((texture.bitmap).enableMerageInAtlas)&& (AtlasResourceManager.instance.addToAtlas(texture));
			}
			RunDriver.getTexturePixels=function (value,x,y,width,height){
				(Render.context.ctx).clear();
				var tSprite=new Sprite();
				tSprite.graphics.drawTexture(value,-x,-y);
				var tRenderTarget=RenderTarget2D.create(width,height);
				tRenderTarget.start();
				tRenderTarget.clear(0,0,0,0);
				tSprite.render(Render.context,0,0);
				(Render.context.ctx).flush();
				tRenderTarget.end();
				var tUint8Array=tRenderTarget.getData(0,0,width,height);
				var tArray=[];
				var tIndex=0;
				for (var i=height-1;i >=0;i--){
					for (var j=0;j < width;j++){
						tIndex=(i *width+j)*4;
						tArray.push(tUint8Array[tIndex]);
						tArray.push(tUint8Array[tIndex+1]);
						tArray.push(tUint8Array[tIndex+2]);
						tArray.push(tUint8Array[tIndex+3]);
					}
				}
				return tArray;
			}
			RunDriver.skinAniSprite=function (){
				var tSkinSprite=new SkinMesh()
				return tSkinSprite;
			}
			HTMLCanvas.create=function (type,canvas){
				var ret=new WebGLCanvas();
				ret._imgData=canvas;
				ret.flipY=false;
				return ret;
			}
			Filter._filterStart=function (scope,sprite,context,x,y){
				var b=scope.getValue("bounds");
				var source=RenderTarget2D.create(b.width,b.height);
				source.start();
				source.clear(0,0,0,0);
				scope.addValue("src",source);
				scope.addValue("ScissorTest",RenderState2D.worldScissorTest);
				if (RenderState2D.worldScissorTest){
					var tClilpRect=new Rectangle();
					tClilpRect.copyFrom((context.ctx)._clipRect)
					scope.addValue("clipRect",tClilpRect);
					RenderState2D.worldScissorTest=false;
					laya.webgl.WebGL.mainContext.disable(0x0C11);
				}
			}
			Filter._filterEnd=function (scope,sprite,context,x,y){
				var b=scope.getValue("bounds");
				var source=scope.getValue("src");
				source.end();
				var out=RenderTarget2D.create(b.width,b.height);
				out.start();
				out.clear(0,0,0,0);
				scope.addValue("out",out);
				sprite._set$P('_filterCache',out);
				sprite._set$P('_isHaveGlowFilter',scope.getValue("_isHaveGlowFilter"));
			}
			Filter._EndTarget=function (scope,context){
				var source=scope.getValue("src");
				source.recycle();
				var out=scope.getValue("out");
				out.end();
				var b=scope.getValue("ScissorTest");
				if (b){
					RenderState2D.worldScissorTest=true;
					laya.webgl.WebGL.mainContext.enable(0x0C11);
					context.ctx.save();
					var tClipRect=scope.getValue("clipRect");
					(context.ctx).clipRect(tClipRect.x,tClipRect.y,tClipRect.width,tClipRect.height);
				}
			}
			Filter._useSrc=function (scope){
				var source=scope.getValue("out");
				source.end();
				source=scope.getValue("src");
				source.start();
				source.clear(0,0,0,0);
			}
			Filter._endSrc=function (scope){
				var source=scope.getValue("src");
				source.end();
			}
			Filter._useOut=function (scope){
				var source=scope.getValue("src");
				source.end();
				source=scope.getValue("out");
				source.start();
				source.clear(0,0,0,0);
			}
			Filter._endOut=function (scope){
				var source=scope.getValue("out");
				source.end();
			}
			Filter._recycleScope=function (scope){
				scope.recycle();
			}
			Filter._filter=function (sprite,context,x,y){
				var next=this._next;
				if (next){
					var filters=sprite.filters,len=filters.length;
					if (len==1 && (filters[0].type==0x20)){
						context.ctx.save();
						context.ctx.setFilters([filters[0]]);
						next._fun.call(next,sprite,context,x,y);
						context.ctx.restore();
						return;
					};
					var shaderValue;
					var b;
					var scope=SubmitCMDScope.create();
					var p=Point.TEMP;
					var tMatrix=context.ctx._getTransformMatrix();
					var mat=Matrix.create();
					tMatrix.copyTo(mat);
					var tPadding=0;
					var tHalfPadding=0;
					var tIsHaveGlowFilter=false;
					var out=sprite._$P._filterCache ? sprite._$P._filterCache :null;
					if (!out || sprite._repaint){
						tIsHaveGlowFilter=sprite._isHaveGlowFilter();
						scope.addValue("_isHaveGlowFilter",tIsHaveGlowFilter);
						if (tIsHaveGlowFilter){
							tPadding=50;
							tHalfPadding=25;
						}
						b=new Rectangle();
						b.copyFrom((sprite).getSelfBounds());
						b.x+=(sprite).x;
						b.y+=(sprite).y;
						b.x-=(sprite).pivotX+4;
						b.y-=(sprite).pivotY+4;
						var tSX=b.x;
						var tSY=b.y;
						b.width+=(tPadding+8);
						b.height+=(tPadding+8);
						p.x=b.x *mat.a+b.y *mat.c;
						p.y=b.y *mat.d+b.x *mat.b;
						b.x=p.x;
						b.y=p.y;
						p.x=b.width *mat.a+b.height *mat.c;
						p.y=b.height *mat.d+b.width *mat.b;
						b.width=p.x;
						b.height=p.y;
						if (b.width <=0 || b.height <=0){
							return;
						}
						out && out.recycle();
						scope.addValue("bounds",b);
						var submit=SubmitCMD.create([scope,sprite,context,0,0],Filter._filterStart);
						context.addRenderObject(submit);
						(context.ctx)._renderKey=0;
						(context.ctx)._shader2D.glTexture=null;
						var tX=sprite.x-tSX+tHalfPadding;
						var tY=sprite.y-tSY+tHalfPadding;
						next._fun.call(next,sprite,context,tX,tY);
						submit=SubmitCMD.create([scope,sprite,context,0,0],Filter._filterEnd);
						context.addRenderObject(submit);
						for (var i=0;i < len;i++){
							if (i !=0){
								submit=SubmitCMD.create([scope],Filter._useSrc);
								context.addRenderObject(submit);
								shaderValue=Value2D.create(0x01,0);
								Matrix.TEMP.identity();
								context.ctx.drawTarget(scope,0,0,b.width,b.height,Matrix.TEMP,"out",shaderValue,null,BlendMode.TOINT.overlay);
								submit=SubmitCMD.create([scope],Filter._useOut);
								context.addRenderObject(submit);
							};
							var fil=filters[i];
							fil.action.apply3d(scope,sprite,context,0,0);
						}
						submit=SubmitCMD.create([scope,context],Filter._EndTarget);
						context.addRenderObject(submit);
						}else {
						tIsHaveGlowFilter=sprite._$P._isHaveGlowFilter ? sprite._$P._isHaveGlowFilter :false;
						if (tIsHaveGlowFilter){
							tPadding=50;
							tHalfPadding=25;
						}
						b=sprite.getBounds();
						if (b.width <=0 || b.height <=0){
							return;
						}
						b.width+=tPadding;
						b.height+=tPadding;
						p.x=b.x *mat.a+b.y *mat.c;
						p.y=b.y *mat.d+b.x *mat.b;
						b.x=p.x;
						b.y=p.y;
						p.x=b.width *mat.a+b.height *mat.c;
						p.y=b.height *mat.d+b.width *mat.b;
						b.width=p.x;
						b.height=p.y;
						scope.addValue("out",out);
					}
					x=x-tHalfPadding-sprite.x;
					y=y-tHalfPadding-sprite.y;
					p.setTo(x,y);
					mat.transformPoint(p);
					x=p.x+b.x;
					y=p.y+b.y;
					shaderValue=Value2D.create(0x01,0);
					Matrix.TEMP.identity();
					(context.ctx).drawTarget(scope,x,y,b.width,b.height,Matrix.TEMP,"out",shaderValue,null,BlendMode.TOINT.overlay);
					submit=SubmitCMD.create([scope],Filter._recycleScope);
					context.addRenderObject(submit);
					mat.destroy();
				}
			}
			Float32Array.prototype.slice || (Float32Array.prototype.slice=WebGL._float32ArraySlice);
			Uint16Array.prototype.slice || (Uint16Array.prototype.slice=WebGL._uint16ArraySlice);
			Uint8Array.prototype.slice || (Uint8Array.prototype.slice=WebGL._uint8ArraySlice);
			return true;
		}

		WebGL.onStageResize=function(width,height){
			if (WebGL.mainContext==null)return;
			WebGL.mainContext.viewport(0,0,width,height);
			RenderState2D.width=width;
			RenderState2D.height=height;
		}

		WebGL.onInvalidGLRes=function(){
			AtlasResourceManager.instance.freeAll();
			ResourceManager.releaseContentManagers(true);
			WebGL.doNodeRepaint(Laya.stage);
			WebGL.mainContext.viewport(0,0,RenderState2D.width,RenderState2D.height);
			Laya.stage.event("devicelost");
		}

		WebGL.doNodeRepaint=function(sprite){
			(sprite.numChildren==0)&& (sprite.repaint());
			for (var i=0;i < sprite.numChildren;i++)
			WebGL.doNodeRepaint(sprite.getChildAt(i));
		}

		WebGL.init=function(canvas,width,height){
			WebGL.mainCanvas=canvas;
			HTMLCanvas._createContext=function (canvas){
				return new WebGLContext2D(canvas);
			}
			WebGLCanvas._createContext=function (canvas){
				return new WebGLContext2D(canvas);
			};
			var gl=laya.webgl.WebGL.mainContext;
			if (gl.getShaderPrecisionFormat !=null){
				var vertexPrecisionFormat=gl.getShaderPrecisionFormat(0x8B31,0x8DF2);
				var framePrecisionFormat=gl.getShaderPrecisionFormat(0x8B30,0x8DF2);
				WebGL.shaderHighPrecision=(vertexPrecisionFormat.precision&&framePrecisionFormat.precision)? true :false;
				}else {
				WebGL.shaderHighPrecision=false;
			}
			WebGL.compressAstc=gl.getExtension("WEBGL_compressed_texture_astc");
			WebGL.compressAtc=gl.getExtension("WEBGL_compressed_texture_atc");
			WebGL.compressEtc=gl.getExtension("WEBGL_compressed_texture_etc");
			WebGL.compressEtc1=gl.getExtension("WEBGL_compressed_texture_etc1");
			WebGL.compressPvrtc=gl.getExtension("WEBGL_compressed_texture_pvrtc");
			WebGL.compressS3tc=gl.getExtension("WEBGL_compressed_texture_s3tc");
			WebGL.compressS3tc_srgb=gl.getExtension("WEBGL_compressed_texture_s3tc_srgb");
			gl.deleteTexture1=gl.deleteTexture;
			gl.deleteTexture=function (t){
				if (t==WebGLContext.curBindTexValue){
					WebGLContext.curBindTexValue=null;
				}
				gl.deleteTexture1(t);
			}
			WebGL.onStageResize(width,height);
			if (WebGL.mainContext==null)
				throw new Error("webGL getContext err!");
			System.__init__();
			AtlasResourceManager.__init__();
			ShaderDefines2D.__init__();
			Submit.__init__();
			WebGLContext2D.__init__();
			Value2D.__init__();
			Shader2D.__init__();
			Buffer2D.__int__(gl);
			BlendMode._init_(gl);
			if (Render.isConchApp){
				conch.setOnInvalidGLRes(WebGL.onInvalidGLRes);
			}
		}

		WebGL.compressAstc=null
		WebGL.compressAtc=null
		WebGL.compressEtc=null
		WebGL.compressEtc1=null
		WebGL.compressPvrtc=null
		WebGL.compressS3tc=null
		WebGL.compressS3tc_srgb=null
		WebGL.mainCanvas=null
		WebGL.mainContext=null
		WebGL.antialias=true;
		WebGL.shaderHighPrecision=false;
		WebGL._bg_null=[0,0,0,0];
		return WebGL;
	})()


	//class laya.webgl.WebGLContext
	var WebGLContext=(function(){
		function WebGLContext(){};
		__class(WebGLContext,'laya.webgl.WebGLContext');
		WebGLContext.UseProgram=function(program){
			if (WebGLContext._useProgram===program)return false;
			WebGL.mainContext.useProgram(program);
			WebGLContext._useProgram=program;
			return true;
		}

		WebGLContext.setDepthTest=function(gl,value){
			value!==WebGLContext._depthTest && (WebGLContext._depthTest=value,value?gl.enable(0x0B71):gl.disable(0x0B71));
		}

		WebGLContext.setDepthMask=function(gl,value){
			value!==WebGLContext._depthMask && (WebGLContext._depthMask=value,gl.depthMask(value));
		}

		WebGLContext.setDepthFunc=function(gl,value){
			value!==WebGLContext._depthFunc && (WebGLContext._depthFunc=value,gl.depthFunc(value));
		}

		WebGLContext.setBlend=function(gl,value){
			value!==WebGLContext._blend && (WebGLContext._blend=value,value?gl.enable(0x0BE2):gl.disable(0x0BE2));
		}

		WebGLContext.setBlendFunc=function(gl,sFactor,dFactor){
			(sFactor!==WebGLContext._sFactor||dFactor!==WebGLContext._dFactor)&& (WebGLContext._sFactor=sFactor,WebGLContext._dFactor=dFactor,gl.blendFunc(sFactor,dFactor));
		}

		WebGLContext.setCullFace=function(gl,value){
			value!==WebGLContext._cullFace && (WebGLContext._cullFace=value,value?gl.enable(0x0B44):gl.disable(0x0B44));
		}

		WebGLContext.setFrontFace=function(gl,value){
			value!==WebGLContext._frontFace && (WebGLContext._frontFace=value,gl.frontFace(value));
		}

		WebGLContext.bindTexture=function(gl,target,texture){
			gl.bindTexture(target,texture);
			WebGLContext.curBindTexTarget=target;
			WebGLContext.curBindTexValue=texture;
		}

		WebGLContext.DEPTH_BUFFER_BIT=0x00000100;
		WebGLContext.STENCIL_BUFFER_BIT=0x00000400;
		WebGLContext.COLOR_BUFFER_BIT=0x00004000;
		WebGLContext.POINTS=0x0000;
		WebGLContext.LINES=0x0001;
		WebGLContext.LINE_LOOP=0x0002;
		WebGLContext.LINE_STRIP=0x0003;
		WebGLContext.TRIANGLES=0x0004;
		WebGLContext.TRIANGLE_STRIP=0x0005;
		WebGLContext.TRIANGLE_FAN=0x0006;
		WebGLContext.ZERO=0;
		WebGLContext.ONE=1;
		WebGLContext.SRC_COLOR=0x0300;
		WebGLContext.ONE_MINUS_SRC_COLOR=0x0301;
		WebGLContext.SRC_ALPHA=0x0302;
		WebGLContext.ONE_MINUS_SRC_ALPHA=0x0303;
		WebGLContext.DST_ALPHA=0x0304;
		WebGLContext.ONE_MINUS_DST_ALPHA=0x0305;
		WebGLContext.DST_COLOR=0x0306;
		WebGLContext.ONE_MINUS_DST_COLOR=0x0307;
		WebGLContext.SRC_ALPHA_SATURATE=0x0308;
		WebGLContext.FUNC_ADD=0x8006;
		WebGLContext.BLEND_EQUATION=0x8009;
		WebGLContext.BLEND_EQUATION_RGB=0x8009;
		WebGLContext.BLEND_EQUATION_ALPHA=0x883D;
		WebGLContext.FUNC_SUBTRACT=0x800A;
		WebGLContext.FUNC_REVERSE_SUBTRACT=0x800B;
		WebGLContext.BLEND_DST_RGB=0x80C8;
		WebGLContext.BLEND_SRC_RGB=0x80C9;
		WebGLContext.BLEND_DST_ALPHA=0x80CA;
		WebGLContext.BLEND_SRC_ALPHA=0x80CB;
		WebGLContext.CONSTANT_COLOR=0x8001;
		WebGLContext.ONE_MINUS_CONSTANT_COLOR=0x8002;
		WebGLContext.CONSTANT_ALPHA=0x8003;
		WebGLContext.ONE_MINUS_CONSTANT_ALPHA=0x8004;
		WebGLContext.BLEND_COLOR=0x8005;
		WebGLContext.ARRAY_BUFFER=0x8892;
		WebGLContext.ELEMENT_ARRAY_BUFFER=0x8893;
		WebGLContext.ARRAY_BUFFER_BINDING=0x8894;
		WebGLContext.ELEMENT_ARRAY_BUFFER_BINDING=0x8895;
		WebGLContext.STREAM_DRAW=0x88E0;
		WebGLContext.STATIC_DRAW=0x88E4;
		WebGLContext.DYNAMIC_DRAW=0x88E8;
		WebGLContext.BUFFER_SIZE=0x8764;
		WebGLContext.BUFFER_USAGE=0x8765;
		WebGLContext.CURRENT_VERTEX_ATTRIB=0x8626;
		WebGLContext.FRONT=0x0404;
		WebGLContext.BACK=0x0405;
		WebGLContext.CULL_FACE=0x0B44;
		WebGLContext.FRONT_AND_BACK=0x0408;
		WebGLContext.BLEND=0x0BE2;
		WebGLContext.DITHER=0x0BD0;
		WebGLContext.STENCIL_TEST=0x0B90;
		WebGLContext.DEPTH_TEST=0x0B71;
		WebGLContext.SCISSOR_TEST=0x0C11;
		WebGLContext.POLYGON_OFFSET_FILL=0x8037;
		WebGLContext.SAMPLE_ALPHA_TO_COVERAGE=0x809E;
		WebGLContext.SAMPLE_COVERAGE=0x80A0;
		WebGLContext.NO_ERROR=0;
		WebGLContext.INVALID_ENUM=0x0500;
		WebGLContext.INVALID_VALUE=0x0501;
		WebGLContext.INVALID_OPERATION=0x0502;
		WebGLContext.OUT_OF_MEMORY=0x0505;
		WebGLContext.CW=0x0900;
		WebGLContext.CCW=0x0901;
		WebGLContext.LINE_WIDTH=0x0B21;
		WebGLContext.ALIASED_POINT_SIZE_RANGE=0x846D;
		WebGLContext.ALIASED_LINE_WIDTH_RANGE=0x846E;
		WebGLContext.CULL_FACE_MODE=0x0B45;
		WebGLContext.FRONT_FACE=0x0B46;
		WebGLContext.DEPTH_RANGE=0x0B70;
		WebGLContext.DEPTH_WRITEMASK=0x0B72;
		WebGLContext.DEPTH_CLEAR_VALUE=0x0B73;
		WebGLContext.DEPTH_FUNC=0x0B74;
		WebGLContext.STENCIL_CLEAR_VALUE=0x0B91;
		WebGLContext.STENCIL_FUNC=0x0B92;
		WebGLContext.STENCIL_FAIL=0x0B94;
		WebGLContext.STENCIL_PASS_DEPTH_FAIL=0x0B95;
		WebGLContext.STENCIL_PASS_DEPTH_PASS=0x0B96;
		WebGLContext.STENCIL_REF=0x0B97;
		WebGLContext.STENCIL_VALUE_MASK=0x0B93;
		WebGLContext.STENCIL_WRITEMASK=0x0B98;
		WebGLContext.STENCIL_BACK_FUNC=0x8800;
		WebGLContext.STENCIL_BACK_FAIL=0x8801;
		WebGLContext.STENCIL_BACK_PASS_DEPTH_FAIL=0x8802;
		WebGLContext.STENCIL_BACK_PASS_DEPTH_PASS=0x8803;
		WebGLContext.STENCIL_BACK_REF=0x8CA3;
		WebGLContext.STENCIL_BACK_VALUE_MASK=0x8CA4;
		WebGLContext.STENCIL_BACK_WRITEMASK=0x8CA5;
		WebGLContext.VIEWPORT=0x0BA2;
		WebGLContext.SCISSOR_BOX=0x0C10;
		WebGLContext.COLOR_CLEAR_VALUE=0x0C22;
		WebGLContext.COLOR_WRITEMASK=0x0C23;
		WebGLContext.UNPACK_ALIGNMENT=0x0CF5;
		WebGLContext.PACK_ALIGNMENT=0x0D05;
		WebGLContext.MAX_TEXTURE_SIZE=0x0D33;
		WebGLContext.MAX_VIEWPORT_DIMS=0x0D3A;
		WebGLContext.SUBPIXEL_BITS=0x0D50;
		WebGLContext.RED_BITS=0x0D52;
		WebGLContext.GREEN_BITS=0x0D53;
		WebGLContext.BLUE_BITS=0x0D54;
		WebGLContext.ALPHA_BITS=0x0D55;
		WebGLContext.DEPTH_BITS=0x0D56;
		WebGLContext.STENCIL_BITS=0x0D57;
		WebGLContext.POLYGON_OFFSET_UNITS=0x2A00;
		WebGLContext.POLYGON_OFFSET_FACTOR=0x8038;
		WebGLContext.TEXTURE_BINDING_2D=0x8069;
		WebGLContext.SAMPLE_BUFFERS=0x80A8;
		WebGLContext.SAMPLES=0x80A9;
		WebGLContext.SAMPLE_COVERAGE_VALUE=0x80AA;
		WebGLContext.SAMPLE_COVERAGE_INVERT=0x80AB;
		WebGLContext.NUM_COMPRESSED_TEXTURE_FORMATS=0x86A2;
		WebGLContext.COMPRESSED_TEXTURE_FORMATS=0x86A3;
		WebGLContext.DONT_CARE=0x1100;
		WebGLContext.FASTEST=0x1101;
		WebGLContext.NICEST=0x1102;
		WebGLContext.GENERATE_MIPMAP_HINT=0x8192;
		WebGLContext.BYTE=0x1400;
		WebGLContext.UNSIGNED_BYTE=0x1401;
		WebGLContext.SHORT=0x1402;
		WebGLContext.UNSIGNED_SHORT=0x1403;
		WebGLContext.INT=0x1404;
		WebGLContext.UNSIGNED_INT=0x1405;
		WebGLContext.FLOAT=0x1406;
		WebGLContext.DEPTH_COMPONENT=0x1902;
		WebGLContext.ALPHA=0x1906;
		WebGLContext.RGB=0x1907;
		WebGLContext.RGBA=0x1908;
		WebGLContext.LUMINANCE=0x1909;
		WebGLContext.LUMINANCE_ALPHA=0x190A;
		WebGLContext.UNSIGNED_SHORT_4_4_4_4=0x8033;
		WebGLContext.UNSIGNED_SHORT_5_5_5_1=0x8034;
		WebGLContext.UNSIGNED_SHORT_5_6_5=0x8363;
		WebGLContext.FRAGMENT_SHADER=0x8B30;
		WebGLContext.VERTEX_SHADER=0x8B31;
		WebGLContext.MAX_VERTEX_ATTRIBS=0x8869;
		WebGLContext.MAX_VERTEX_UNIFORM_VECTORS=0x8DFB;
		WebGLContext.MAX_VARYING_VECTORS=0x8DFC;
		WebGLContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS=0x8B4D;
		WebGLContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS=0x8B4C;
		WebGLContext.MAX_TEXTURE_IMAGE_UNITS=0x8872;
		WebGLContext.MAX_FRAGMENT_UNIFORM_VECTORS=0x8DFD;
		WebGLContext.SHADER_TYPE=0x8B4F;
		WebGLContext.DELETE_STATUS=0x8B80;
		WebGLContext.LINK_STATUS=0x8B82;
		WebGLContext.VALIDATE_STATUS=0x8B83;
		WebGLContext.ATTACHED_SHADERS=0x8B85;
		WebGLContext.ACTIVE_UNIFORMS=0x8B86;
		WebGLContext.ACTIVE_ATTRIBUTES=0x8B89;
		WebGLContext.SHADING_LANGUAGE_VERSION=0x8B8C;
		WebGLContext.CURRENT_PROGRAM=0x8B8D;
		WebGLContext.NEVER=0x0200;
		WebGLContext.LESS=0x0201;
		WebGLContext.EQUAL=0x0202;
		WebGLContext.LEQUAL=0x0203;
		WebGLContext.GREATER=0x0204;
		WebGLContext.NOTEQUAL=0x0205;
		WebGLContext.GEQUAL=0x0206;
		WebGLContext.ALWAYS=0x0207;
		WebGLContext.KEEP=0x1E00;
		WebGLContext.REPLACE=0x1E01;
		WebGLContext.INCR=0x1E02;
		WebGLContext.DECR=0x1E03;
		WebGLContext.INVERT=0x150A;
		WebGLContext.INCR_WRAP=0x8507;
		WebGLContext.DECR_WRAP=0x8508;
		WebGLContext.VENDOR=0x1F00;
		WebGLContext.RENDERER=0x1F01;
		WebGLContext.VERSION=0x1F02;
		WebGLContext.NEAREST=0x2600;
		WebGLContext.LINEAR=0x2601;
		WebGLContext.NEAREST_MIPMAP_NEAREST=0x2700;
		WebGLContext.LINEAR_MIPMAP_NEAREST=0x2701;
		WebGLContext.NEAREST_MIPMAP_LINEAR=0x2702;
		WebGLContext.LINEAR_MIPMAP_LINEAR=0x2703;
		WebGLContext.TEXTURE_MAG_FILTER=0x2800;
		WebGLContext.TEXTURE_MIN_FILTER=0x2801;
		WebGLContext.TEXTURE_WRAP_S=0x2802;
		WebGLContext.TEXTURE_WRAP_T=0x2803;
		WebGLContext.TEXTURE_2D=0x0DE1;
		WebGLContext.TEXTURE=0x1702;
		WebGLContext.TEXTURE_CUBE_MAP=0x8513;
		WebGLContext.TEXTURE_BINDING_CUBE_MAP=0x8514;
		WebGLContext.TEXTURE_CUBE_MAP_POSITIVE_X=0x8515;
		WebGLContext.TEXTURE_CUBE_MAP_NEGATIVE_X=0x8516;
		WebGLContext.TEXTURE_CUBE_MAP_POSITIVE_Y=0x8517;
		WebGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Y=0x8518;
		WebGLContext.TEXTURE_CUBE_MAP_POSITIVE_Z=0x8519;
		WebGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Z=0x851A;
		WebGLContext.MAX_CUBE_MAP_TEXTURE_SIZE=0x851C;
		WebGLContext.TEXTURE0=0x84C0;
		WebGLContext.TEXTURE1=0x84C1;
		WebGLContext.TEXTURE2=0x84C2;
		WebGLContext.TEXTURE3=0x84C3;
		WebGLContext.TEXTURE4=0x84C4;
		WebGLContext.TEXTURE5=0x84C5;
		WebGLContext.TEXTURE6=0x84C6;
		WebGLContext.TEXTURE7=0x84C7;
		WebGLContext.TEXTURE8=0x84C8;
		WebGLContext.TEXTURE9=0x84C9;
		WebGLContext.TEXTURE10=0x84CA;
		WebGLContext.TEXTURE11=0x84CB;
		WebGLContext.TEXTURE12=0x84CC;
		WebGLContext.TEXTURE13=0x84CD;
		WebGLContext.TEXTURE14=0x84CE;
		WebGLContext.TEXTURE15=0x84CF;
		WebGLContext.TEXTURE16=0x84D0;
		WebGLContext.TEXTURE17=0x84D1;
		WebGLContext.TEXTURE18=0x84D2;
		WebGLContext.TEXTURE19=0x84D3;
		WebGLContext.TEXTURE20=0x84D4;
		WebGLContext.TEXTURE21=0x84D5;
		WebGLContext.TEXTURE22=0x84D6;
		WebGLContext.TEXTURE23=0x84D7;
		WebGLContext.TEXTURE24=0x84D8;
		WebGLContext.TEXTURE25=0x84D9;
		WebGLContext.TEXTURE26=0x84DA;
		WebGLContext.TEXTURE27=0x84DB;
		WebGLContext.TEXTURE28=0x84DC;
		WebGLContext.TEXTURE29=0x84DD;
		WebGLContext.TEXTURE30=0x84DE;
		WebGLContext.TEXTURE31=0x84DF;
		WebGLContext.ACTIVE_TEXTURE=0x84E0;
		WebGLContext.REPEAT=0x2901;
		WebGLContext.CLAMP_TO_EDGE=0x812F;
		WebGLContext.MIRRORED_REPEAT=0x8370;
		WebGLContext.FLOAT_VEC2=0x8B50;
		WebGLContext.FLOAT_VEC3=0x8B51;
		WebGLContext.FLOAT_VEC4=0x8B52;
		WebGLContext.INT_VEC2=0x8B53;
		WebGLContext.INT_VEC3=0x8B54;
		WebGLContext.INT_VEC4=0x8B55;
		WebGLContext.BOOL=0x8B56;
		WebGLContext.BOOL_VEC2=0x8B57;
		WebGLContext.BOOL_VEC3=0x8B58;
		WebGLContext.BOOL_VEC4=0x8B59;
		WebGLContext.FLOAT_MAT2=0x8B5A;
		WebGLContext.FLOAT_MAT3=0x8B5B;
		WebGLContext.FLOAT_MAT4=0x8B5C;
		WebGLContext.SAMPLER_2D=0x8B5E;
		WebGLContext.SAMPLER_CUBE=0x8B60;
		WebGLContext.VERTEX_ATTRIB_ARRAY_ENABLED=0x8622;
		WebGLContext.VERTEX_ATTRIB_ARRAY_SIZE=0x8623;
		WebGLContext.VERTEX_ATTRIB_ARRAY_STRIDE=0x8624;
		WebGLContext.VERTEX_ATTRIB_ARRAY_TYPE=0x8625;
		WebGLContext.VERTEX_ATTRIB_ARRAY_NORMALIZED=0x886A;
		WebGLContext.VERTEX_ATTRIB_ARRAY_POINTER=0x8645;
		WebGLContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=0x889F;
		WebGLContext.COMPILE_STATUS=0x8B81;
		WebGLContext.LOW_FLOAT=0x8DF0;
		WebGLContext.MEDIUM_FLOAT=0x8DF1;
		WebGLContext.HIGH_FLOAT=0x8DF2;
		WebGLContext.LOW_INT=0x8DF3;
		WebGLContext.MEDIUM_INT=0x8DF4;
		WebGLContext.HIGH_INT=0x8DF5;
		WebGLContext.FRAMEBUFFER=0x8D40;
		WebGLContext.RENDERBUFFER=0x8D41;
		WebGLContext.RGBA4=0x8056;
		WebGLContext.RGB5_A1=0x8057;
		WebGLContext.RGB565=0x8D62;
		WebGLContext.DEPTH_COMPONENT16=0x81A5;
		WebGLContext.STENCIL_INDEX=0x1901;
		WebGLContext.STENCIL_INDEX8=0x8D48;
		WebGLContext.DEPTH_STENCIL=0x84F9;
		WebGLContext.RENDERBUFFER_WIDTH=0x8D42;
		WebGLContext.RENDERBUFFER_HEIGHT=0x8D43;
		WebGLContext.RENDERBUFFER_INTERNAL_FORMAT=0x8D44;
		WebGLContext.RENDERBUFFER_RED_SIZE=0x8D50;
		WebGLContext.RENDERBUFFER_GREEN_SIZE=0x8D51;
		WebGLContext.RENDERBUFFER_BLUE_SIZE=0x8D52;
		WebGLContext.RENDERBUFFER_ALPHA_SIZE=0x8D53;
		WebGLContext.RENDERBUFFER_DEPTH_SIZE=0x8D54;
		WebGLContext.RENDERBUFFER_STENCIL_SIZE=0x8D55;
		WebGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=0x8CD0;
		WebGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=0x8CD1;
		WebGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=0x8CD2;
		WebGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=0x8CD3;
		WebGLContext.COLOR_ATTACHMENT0=0x8CE0;
		WebGLContext.DEPTH_ATTACHMENT=0x8D00;
		WebGLContext.STENCIL_ATTACHMENT=0x8D20;
		WebGLContext.DEPTH_STENCIL_ATTACHMENT=0x821A;
		WebGLContext.NONE=0;
		WebGLContext.FRAMEBUFFER_COMPLETE=0x8CD5;
		WebGLContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=0x8CD6;
		WebGLContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=0x8CD7;
		WebGLContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=0x8CD9;
		WebGLContext.FRAMEBUFFER_UNSUPPORTED=0x8CDD;
		WebGLContext.FRAMEBUFFER_BINDING=0x8CA6;
		WebGLContext.RENDERBUFFER_BINDING=0x8CA7;
		WebGLContext.MAX_RENDERBUFFER_SIZE=0x84E8;
		WebGLContext.INVALID_FRAMEBUFFER_OPERATION=0x0506;
		WebGLContext.UNPACK_FLIP_Y_WEBGL=0x9240;
		WebGLContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL=0x9241;
		WebGLContext.CONTEXT_LOST_WEBGL=0x9242;
		WebGLContext.UNPACK_COLORSPACE_CONVERSION_WEBGL=0x9243;
		WebGLContext.BROWSER_DEFAULT_WEBGL=0x9244;
		WebGLContext._useProgram=null;
		WebGLContext._depthTest=true;
		WebGLContext._depthMask=true;
		WebGLContext._depthFunc=0x0201;
		WebGLContext._blend=false;
		WebGLContext._sFactor=1;
		WebGLContext._dFactor=0;
		WebGLContext._cullFace=false;
		WebGLContext._frontFace=0x0901;
		WebGLContext.curBindTexTarget=null
		WebGLContext.curBindTexValue=null
		return WebGLContext;
	})()


	//class fairygui.action.ControllerAction
	var ControllerAction=(function(){
		function ControllerAction(){
			this.fromPage=null;
			this.toPage=null;
		}

		__class(ControllerAction,'fairygui.action.ControllerAction');
		var __proto=ControllerAction.prototype;
		__proto.run=function(controller,prevPage,curPage){
			if((this.fromPage==null || this.fromPage.length==0 || this.fromPage.indexOf(prevPage)!=-1)
				&& (this.toPage==null || this.toPage.length==0 || this.toPage.indexOf(curPage)!=-1))
			this.enter(controller);
			else
			this.leave(controller);
		}

		__proto.enter=function(controller){}
		__proto.leave=function(controller){}
		__proto.setup=function(xml){
			var str;
			str=xml.getAttribute('fromPage');
			if(str)
				this.fromPage=str.split(",");
			str=xml.getAttribute('toPage');
			if(str)
				this.toPage=str.split(",");
		}

		ControllerAction.createAction=function(type){
			switch(type){
				case "play_transition":
					return new PlayTransitionAction();
				case "change_page":
					return new ChangePageAction();
				}
			return null;
		}

		return ControllerAction;
	})()


	//class fairygui.AssetProxy
	var AssetProxy=(function(){
		function AssetProxy(){
			this._asset=null;
			this._asset=Laya.loader;
		}

		__class(AssetProxy,'fairygui.AssetProxy');
		var __proto=AssetProxy.prototype;
		__proto.getRes=function(url){
			return this._asset.getRes(url);
		}

		__proto.load=function(url,complete,progress,type,priority,cache){
			(priority===void 0)&& (priority=1);
			(cache===void 0)&& (cache=true);
			this._asset.load(url,complete,progress,type,priority,cache);
		}

		__proto.setAsset=function(asset){
			this._asset=asset;
		}

		__getset(1,AssetProxy,'inst',function(){
			if(fairygui.AssetProxy._inst==null)
				AssetProxy._inst=new AssetProxy();
			return fairygui.AssetProxy._inst;
		});

		AssetProxy._inst=null
		return AssetProxy;
	})()


	//class fairygui.AutoSizeType
	var AutoSizeType=(function(){
		function AutoSizeType(){}
		__class(AutoSizeType,'fairygui.AutoSizeType');
		AutoSizeType.parse=function(value){
			switch (value){
				case "none":
					return 0;
				case "both":
					return 1;
				case "height":
					return 2;
				default :
					return 0;
				}
		}

		AutoSizeType.None=0;
		AutoSizeType.Both=1;
		AutoSizeType.Height=2;
		return AutoSizeType;
	})()


	//class fairygui.ButtonMode
	var ButtonMode=(function(){
		function ButtonMode(){}
		__class(ButtonMode,'fairygui.ButtonMode');
		ButtonMode.parse=function(value){
			switch (value){
				case "Common":
					return 0;
				case "Check":
					return 1;
				case "Radio":
					return 2;
				default :
					return 0;
				}
		}

		ButtonMode.Common=0;
		ButtonMode.Check=1;
		ButtonMode.Radio=2;
		return ButtonMode;
	})()


	//class fairygui.ChildrenRenderOrder
	var ChildrenRenderOrder=(function(){
		function ChildrenRenderOrder(){}
		__class(ChildrenRenderOrder,'fairygui.ChildrenRenderOrder');
		ChildrenRenderOrder.parse=function(value){
			switch (value){
				case "ascent":
					return 0;
				case "descent":
					return 1;
				case "arch":
					return 2;
				default :
					return 0;
				}
		}

		ChildrenRenderOrder.Ascent=0;
		ChildrenRenderOrder.Descent=1;
		ChildrenRenderOrder.Arch=2;
		return ChildrenRenderOrder;
	})()


	//class fairygui.display.BitmapFont
	var BitmapFont$1=(function(){
		function BitmapFont(){
			this.id=null;
			this.size=0;
			this.ttf=false;
			this.glyphs=null;
			this.resizable=false;
			this.glyphs={};
		}

		__class(BitmapFont,'fairygui.display.BitmapFont',null,'BitmapFont$1');
		return BitmapFont;
	})()


	//class fairygui.display.BMGlyph
	var BMGlyph=(function(){
		function BMGlyph(){
			this.x=0;
			this.y=0;
			this.offsetX=0;
			this.offsetY=0;
			this.width=0;
			this.height=0;
			this.advance=0;
			this.lineHeight=0;
			this.channel=0;
			this.texture=null;
		}

		__class(BMGlyph,'fairygui.display.BMGlyph');
		return BMGlyph;
	})()


	//class fairygui.display.Frame
	var Frame=(function(){
		function Frame(){
			this.rect=null;
			this.addDelay=0;
			this.texture=null;
			this.rect=new Rectangle();
		}

		__class(Frame,'fairygui.display.Frame');
		return Frame;
	})()


	//class fairygui.display.PlayState
	var PlayState=(function(){
		function PlayState(){
			this.reachEnding=false;
			this.reversed=false;
			this.repeatedCount=0;
			this._curFrame=0;
			this._curFrameDelay=0;
			this._lastUpdateSeq=0;
		}

		__class(PlayState,'fairygui.display.PlayState');
		var __proto=PlayState.prototype;
		__proto.update=function(mc){
			var elapsed=NaN;
			var frameId=Laya.timer.currFrame;
			if (frameId-this._lastUpdateSeq !=1)
				elapsed=0;
			else
			elapsed=Laya.timer.delta;
			this._lastUpdateSeq=frameId;
			this.reachEnding=false;
			this._curFrameDelay+=elapsed;
			var interval=mc.interval+mc.frames[this._curFrame].addDelay+((this._curFrame==0 && this.repeatedCount > 0)? mc.repeatDelay :0);
			if (this._curFrameDelay < interval)
				return;
			this._curFrameDelay-=interval;
			if(this._curFrameDelay>mc.interval)
				this._curFrameDelay=mc.interval;
			if (mc.swing){
				if(this.reversed){
					this._curFrame--;
					if(this._curFrame<=0){
						this._curFrame=0;
						this.repeatedCount++;
						this.reversed=!this.reversed;
					}
				}
				else{
					this._curFrame++;
					if (this._curFrame > mc.frameCount-1){
						this._curFrame=Math.max(0,mc.frameCount-2);
						this.repeatedCount++;
						this.reachEnding=true;
						this.reversed=!this.reversed;
					}
				}
			}
			else{
				this._curFrame++;
				if (this._curFrame > mc.frameCount-1){
					this._curFrame=0;
					this.repeatedCount++;
					this.reachEnding=true;
				}
			}
		}

		__proto.rewind=function(){
			this._curFrame=0;
			this._curFrameDelay=0;
			this.reversed=false;
			this.reachEnding=false;
		}

		__proto.reset=function(){
			this._curFrame=0;
			this._curFrameDelay=0;
			this.repeatedCount=0;
			this.reachEnding=false;
			this.reversed=false;
		}

		__proto.copy=function(src){
			this._curFrame=src._curFrame;
			this._curFrameDelay=src._curFrameDelay;
			this.repeatedCount=src.repeatedCount;
			this.reachEnding=src.reachEnding;
			this.reversed=src.reversed;
		}

		__getset(0,__proto,'currentFrame',function(){
			return this._curFrame;
			},function(value){
			this._curFrame=value;
			this._curFrameDelay=0;
		});

		return PlayState;
	})()


	//class fairygui.DisplayListItem
	var DisplayListItem=(function(){
		function DisplayListItem(packageItem,type){
			this.packageItem=null;
			this.type=null;
			this.desc=null;
			this.listItemCount=0;
			this.packageItem=packageItem;
			this.type=type;
		}

		__class(DisplayListItem,'fairygui.DisplayListItem');
		return DisplayListItem;
	})()


	//class fairygui.Events
	var Events=(function(){
		function Events(){};
		__class(Events,'fairygui.Events');
		Events.createEvent=function(type,target,source){
			fairygui.Events.$event.setTo(type,target,source?source.target:target);
			if(source){
				fairygui.Events.$event.touchId=source.touchId;
				fairygui.Events.$event.nativeEvent=source.nativeEvent;
			}
			else{
				fairygui.Events.$event.nativeEvent=null;
			}
			fairygui.Events.$event._stoped=false;
			return fairygui.Events.$event;
		}

		Events.dispatch=function(type,target,source){
			target.event(type,fairygui.Events.createEvent(type,target,source));
		}

		Events.STATE_CHANGED="fui_state_changed";
		Events.XY_CHANGED="fui_xy_changed";
		Events.SIZE_CHANGED="fui_size_changed";
		Events.SIZE_DELAY_CHANGE="fui_size_delay_change";
		Events.CLICK_ITEM="fui_click_item";
		Events.SCROLL="fui_scroll";
		Events.SCROLL_END="fui_scroll_end";
		Events.DROP="fui_drop";
		Events.FOCUS_CHANGED="fui_focus_changed";
		Events.DRAG_START="fui_drag_start";
		Events.DRAG_MOVE="fui_drag_move";
		Events.DRAG_END="fui_drag_end";
		Events.PULL_DOWN_RELEASE="fui_pull_down_release";
		Events.PULL_UP_RELEASE="fui_pull_up_release";
		Events.GEAR_STOP="fui_gear_stop";
		__static(Events,
		['$event',function(){return this.$event=new Event();}
		]);
		return Events;
	})()


	//class fairygui.FlipType
	var FlipType=(function(){
		function FlipType(){}
		__class(FlipType,'fairygui.FlipType');
		FlipType.parse=function(value){
			switch (value){
				case "hz":
					return 1;
				case "vt":
					return 2;
				case "both":
					return 3;
				default :
					return 0;
				}
		}

		FlipType.None=0;
		FlipType.Horizontal=1;
		FlipType.Vertical=2;
		FlipType.Both=3;
		return FlipType;
	})()


	//class fairygui.GearBase
	var GearBase=(function(){
		function GearBase(owner){
			this._tween=false;
			this._easeType=null;
			this._tweenTime=0.3;
			this._delay=0;
			this._displayLockToken=0;
			this._owner=null;
			this._controller=null;
			this._owner=owner;
			this._easeType=Ease.quadOut;
		}

		__class(GearBase,'fairygui.GearBase');
		var __proto=GearBase.prototype;
		__proto.setup=function(xml){
			this._controller=this._owner.parent.getController(xml.getAttribute("controller"));
			if(this._controller==null)
				return;
			this.init();
			var str;
			str=xml.getAttribute("tween");
			if (str)
				this._tween=true;
			str=xml.getAttribute("ease");
			if (str)
				this._easeType=ToolSet.parseEaseType(str);
			str=xml.getAttribute("duration");
			if (str)
				this._tweenTime=parseFloat(str);
			str=xml.getAttribute("delay");
			if (str)
				this._delay=parseFloat(str);
			if((this instanceof fairygui.GearDisplay )){
				str=xml.getAttribute("pages");
				if(str){
					var arr=str.split(",");
					(this).pages=arr;
				}
			}
			else{
				var pages;
				var values;
				str=xml.getAttribute("pages");
				if(str)
					pages=str.split(",");
				if(pages){
					str=xml.getAttribute("values");
					if(str!=null)
						values=str.split("|");
					else
					values=[];
					for(var i=0;i<pages.length;i++){
						str=values[i];
						if(str==null)
							str="";
						this.addStatus(pages[i],str);
					}
				}
				str=xml.getAttribute("default");
				if(str)
					this.addStatus(null,str);
			}
		}

		__proto.updateFromRelations=function(dx,dy){}
		__proto.addStatus=function(pageId,value){}
		__proto.init=function(){}
		__proto.apply=function(){}
		__proto.updateState=function(){}
		__getset(0,__proto,'controller',function(){
			return this._controller;
			},function(val){
			if (val !=this._controller){
				this._controller=val;
				if(this._controller)
					this.init();
			}
		});

		__getset(0,__proto,'tween',function(){
			return this._tween;
			},function(val){
			this._tween=val;
		});

		__getset(0,__proto,'delay',function(){
			return this._delay;
			},function(val){
			this._delay=val;
		});

		__getset(0,__proto,'tweenTime',function(){
			return this._tweenTime;
			},function(value){
			this._tweenTime=value;
		});

		__getset(0,__proto,'easeType',function(){
			return this._easeType;
			},function(value){
			this._easeType=value;
		});

		GearBase.disableAllTweenEffect=false;
		return GearBase;
	})()


	//class fairygui.GObjectPool
	var GObjectPool=(function(){
		function GObjectPool(){
			this._pool=null;
			this._count=0;
			this._pool={};
		}

		__class(GObjectPool,'fairygui.GObjectPool');
		var __proto=GObjectPool.prototype;
		__proto.clear=function(){
			var length1=this._pool.length;
			for (var i1=0;i1 < length1;i1++){
				var arr=this._pool[i1];
				var cnt=arr.length;
				for (var i=0;i < cnt;i++)
				arr[i].dispose();
			}
			this._pool={};
			this._count=0;
		}

		__proto.getObject=function(url){
			url=UIPackage.normalizeURL(url);
			if(url==null)
				return null;
			var arr=this._pool[url];
			if (arr !=null && arr.length>0){
				this._count--;
				return arr.shift();
			};
			var child=UIPackage.createObjectFromURL(url);
			return child;
		}

		__proto.returnObject=function(obj){
			var url=obj.resourceURL;
			if (!url)
				return;
			var arr=this._pool[url];
			if (arr==null){
				arr=[];
				this._pool[url]=arr;
			}
			this._count++;
			arr.push(obj);
		}

		__getset(0,__proto,'count',function(){
			return this._count;
		});

		return GObjectPool;
	})()


	//class fairygui.GroupLayoutType
	var GroupLayoutType=(function(){
		function GroupLayoutType(){}
		__class(GroupLayoutType,'fairygui.GroupLayoutType');
		GroupLayoutType.parse=function(value){
			switch (value){
				case "none":
					return 0;
				case "hz":
					return 1;
				case "vt":
					return 2;
				default :
					return 0;
				}
		}

		GroupLayoutType.None=0;
		GroupLayoutType.Horizontal=1;
		GroupLayoutType.Vertical=2;
		return GroupLayoutType;
	})()


	//class fairygui.ListLayoutType
	var ListLayoutType=(function(){
		function ListLayoutType(){}
		__class(ListLayoutType,'fairygui.ListLayoutType');
		ListLayoutType.parse=function(value){
			switch (value){
				case "column":
					return 0;
				case "row":
					return 1;
				case "flow_hz":
					return 2;
				case "flow_vt":
					return 3;
				case "pagination":
					return 4;
				default :
					return 0;
				}
		}

		ListLayoutType.SingleColumn=0;
		ListLayoutType.SingleRow=1;
		ListLayoutType.FlowHorizontal=2;
		ListLayoutType.FlowVertical=3;
		ListLayoutType.Pagination=4;
		return ListLayoutType;
	})()


	//class fairygui.ListSelectionMode
	var ListSelectionMode=(function(){
		function ListSelectionMode(){}
		__class(ListSelectionMode,'fairygui.ListSelectionMode');
		ListSelectionMode.parse=function(value){
			switch (value){
				case "single":
					return 0;
				case "multiple":
					return 1;
				case "multipleSingleClick":
					return 2;
				case "none":
					return 3;
				default :
					return 0;
				}
		}

		ListSelectionMode.Single=0;
		ListSelectionMode.Multiple=1;
		ListSelectionMode.Multiple_SingleClick=2;
		ListSelectionMode.None=3;
		return ListSelectionMode;
	})()


	//class fairygui.LoaderFillType
	var LoaderFillType=(function(){
		function LoaderFillType(){}
		__class(LoaderFillType,'fairygui.LoaderFillType');
		LoaderFillType.parse=function(value){
			switch (value){
				case "none":
					return 0;
				case "scale":
					return 1;
				case "scaleMatchHeight":
					return 2;
				case "scaleMatchWidth":
					return 3;
				case "scaleFree":
					return 4;
				default :
					return 0;
				}
		}

		LoaderFillType.None=0;
		LoaderFillType.Scale=1;
		LoaderFillType.ScaleMatchHeight=2;
		LoaderFillType.ScaleMatchWidth=3;
		LoaderFillType.ScaleFree=4;
		return LoaderFillType;
	})()


	//class fairygui.Margin
	var Margin=(function(){
		function Margin(){
			this.left=0;
			this.right=0;
			this.top=0;
			this.bottom=0;
		}

		__class(Margin,'fairygui.Margin');
		var __proto=Margin.prototype;
		__proto.parse=function(str){
			if (!str){
				this.left=0;
				this.right=0;
				this.top=0;
				this.bottom=0;
				return;
			};
			var arr=str.split(",");
			if (arr.length==1){
				var k=parseInt(arr[0]);
				this.top=k;
				this.bottom=k;
				this.left=k;
				this.right=k;
			}
			else {
				this.top=parseInt(arr[0]);
				this.bottom=parseInt(arr[1]);
				this.left=parseInt(arr[2]);
				this.right=parseInt(arr[3]);
			}
		}

		__proto.copy=function(source){
			this.top=source.top;
			this.bottom=source.bottom;
			this.left=source.left;
			this.right=source.right;
		}

		return Margin;
	})()


	//class fairygui.OverflowType
	var OverflowType=(function(){
		function OverflowType(){}
		__class(OverflowType,'fairygui.OverflowType');
		OverflowType.parse=function(value){
			switch (value){
				case "visible":
					return 0;
				case "hidden":
					return 1;
				case "scroll":
					return 2;
				case "scale":
					return 3;
				case "scaleFree":
					return 4;
				default :
					return 0;
				}
		}

		OverflowType.Visible=0;
		OverflowType.Hidden=1;
		OverflowType.Scroll=2;
		OverflowType.Scale=3;
		OverflowType.ScaleFree=4;
		return OverflowType;
	})()


	//class fairygui.PackageItem
	var PackageItem=(function(){
		function PackageItem(){
			this.owner=null;
			this.type=0;
			this.id=null;
			this.name=null;
			this.width=0;
			this.height=0;
			this.file=null;
			this.decoded=false;
			this.scale9Grid=null;
			this.scaleByTile=false;
			this.tileGridIndice=0;
			this.smoothing=false;
			this.texture=null;
			this.interval=0;
			this.repeatDelay=0;
			this.swing=false;
			this.frames=null;
			this.componentData=null;
			this.displayList=null;
			this.extensionType=null;
			this.sound=null;
			this.bitmapFont=null;
		}

		__class(PackageItem,'fairygui.PackageItem');
		var __proto=PackageItem.prototype;
		__proto.load=function(){
			return this.owner.getItemAsset(this);
		}

		__proto.toString=function(){
			return this.name;
		}

		return PackageItem;
	})()


	//class fairygui.PackageItemType
	var PackageItemType=(function(){
		function PackageItemType(){}
		__class(PackageItemType,'fairygui.PackageItemType');
		PackageItemType.parse=function(value){
			switch(value){
				case "image":
					return 0;
				case "movieclip":
					return 2;
				case "sound":
					return 3;
				case "component":
					return 4;
				case "swf":
					return 1;
				case "font":
					return 6;
				case "atlas":
					return 7;
				}
			return 0;
		}

		PackageItemType.Image=0;
		PackageItemType.Swf=1;
		PackageItemType.MovieClip=2;
		PackageItemType.Sound=3;
		PackageItemType.Component=4;
		PackageItemType.Misc=5;
		PackageItemType.Font=6;
		PackageItemType.Atlas=7;
		return PackageItemType;
	})()


	//class fairygui.PageOption
	var PageOption=(function(){
		function PageOption(){
			this._controller=null;
			this._id=null;
		}

		__class(PageOption,'fairygui.PageOption');
		var __proto=PageOption.prototype;
		__proto.clear=function(){
			this._id=null;
		}

		__getset(0,__proto,'controller',null,function(val){
			this._controller=val;
		});

		__getset(0,__proto,'index',function(){
			if (this._id)
				return this._controller.getPageIndexById(this._id);
			else
			return-1;
			},function(pageIndex){
			this._id=this._controller.getPageId(pageIndex);
		});

		__getset(0,__proto,'name',function(){
			if (this._id)
				return this._controller.getPageNameById(this._id);
			else
			return null;
			},function(pageName){
			this._id=this._controller.getPageIdByName(pageName);
		});

		__getset(0,__proto,'id',function(){
			return this._id;
			},function(id){
			this._id=id;
		});

		return PageOption;
	})()


	//class fairygui.ProgressTitleType
	var ProgressTitleType=(function(){
		function ProgressTitleType(){}
		__class(ProgressTitleType,'fairygui.ProgressTitleType');
		ProgressTitleType.parse=function(value){
			switch (value){
				case "percent":
					return 0;
				case "valueAndmax":
					return 1;
				case "value":
					return 2;
				case "max":
					return 3;
				default :
					return 0;
				}
		}

		ProgressTitleType.Percent=0;
		ProgressTitleType.ValueAndMax=1;
		ProgressTitleType.Value=2;
		ProgressTitleType.Max=3;
		return ProgressTitleType;
	})()


	//class fairygui.RelationItem
	var RelationItem=(function(){
		var RelationDef;
		function RelationItem(owner){
			this._owner=null;
			this._target=null;
			this._defs=null;
			this._targetX=NaN;
			this._targetY=NaN;
			this._targetWidth=NaN;
			this._targetHeight=NaN;
			this._owner=owner;
			this._defs=[];
		}

		__class(RelationItem,'fairygui.RelationItem');
		var __proto=RelationItem.prototype;
		__proto.add=function(relationType,usePercent){
			if (relationType==24){
				this.add(14,usePercent);
				this.add(15,usePercent);
				return;
			};
			var length=this._defs.length;
			for (var i=0;i < length;i++){
				var def=this._defs[i];
				if (def.type==relationType)
					return;
			}
			this.internalAdd(relationType,usePercent);
		}

		__proto.internalAdd=function(relationType,usePercent){
			if (relationType==24){
				this.internalAdd(14,usePercent);
				this.internalAdd(15,usePercent);
				return;
			};
			var info=new RelationDef();
			info.percent=usePercent;
			info.type=relationType;
			this._defs.push(info);
			if (usePercent || relationType==1 || relationType==3 || relationType==5
				|| relationType==8 || relationType==10 || relationType==12)
			this._owner.pixelSnapping=true;
		}

		__proto.remove=function(relationType){
			(relationType===void 0)&& (relationType=0);
			if (relationType==24){
				this.remove(14);
				this.remove(15);
				return;
			};
			var dc=this._defs.length;
			for (var k=0;k < dc;k++){
				if (this._defs[k].type==relationType){
					this._defs.splice(k,1);
					break ;
				}
			}
		}

		__proto.copyFrom=function(source){
			this.target=source.target;
			this._defs.length=0;
			var length=source._defs.length;
			for (var i=0;i < length;i++){
				var info=source._defs[i];
				var info2=new RelationDef();
				info2.copyFrom(info);
				this._defs.push(info2);
			}
		}

		__proto.dispose=function(){
			if (this._target !=null){
				this.releaseRefTarget(this._target);
				this._target=null;
			}
		}

		__proto.applyOnSelfResized=function(dWidth,dHeight){
			var ox=this._owner.x;
			var oy=this._owner.y;
			var length=this._defs.length;
			for (var i=0;i < length;i++){
				var info=this._defs[i];
				switch (info.type){
					case 3:
					case 5:
						this._owner.x-=dWidth / 2;
						break ;
					case 4:
					case 6:
						this._owner.x-=dWidth;
						break ;
					case 10:
					case 12:
						this._owner.y-=dHeight / 2;
						break ;
					case 11:
					case 13:
						this._owner.y-=dHeight;
						break ;
					}
			}
			if (ox !=this._owner.x || oy !=this._owner.y){
				ox=this._owner.x-ox;
				oy=this._owner.y-oy;
				this._owner.updateGearFromRelations(1,ox,oy);
				if(this._owner.parent !=null){
					var len=this._owner.parent._transitions.length;
					if(len > 0){
						for(i=0;i < len;++i){
							this._owner.parent._transitions[i].updateFromRelations(this._owner.id,ox,oy);
						}
					}
				}
			}
		}

		__proto.applyOnXYChanged=function(info,dx,dy){
			switch (info.type){
				case 0:
				case 1:
				case 2:
				case 3:
				case 4:
				case 5:
				case 6:
					this._owner.x+=dx;
					break ;
				case 7:
				case 8:
				case 9:
				case 10:
				case 11:
				case 12:
				case 13:
					this._owner.y+=dy;
					break ;
				case 14:
				case 15:
					break ;
				case 16:
				case 17:
					this._owner.x+=dx;
					this._owner.width=this._owner._rawWidth-dx;
					break ;
				case 18:
				case 19:
					this._owner.width=this._owner._rawWidth+dx;
					break ;
				case 20:
				case 21:
					this._owner.y+=dy;
					this._owner.height=this._owner._rawHeight-dy;
					break ;
				case 22:
				case 23:
					this._owner.height=this._owner._rawHeight+dy;
					break ;
				}
		}

		__proto.applyOnSizeChanged=function(info){
			var targetX=NaN,targetY=NaN;
			if (this._target !=this._owner.parent){
				targetX=this._target.x;
				targetY=this._target.y;
			}
			else {
				targetX=0;
				targetY=0;
			};
			var v=NaN,tmp=NaN;
			switch (info.type){
				case 0:
					if(info.percent && this._target==this._owner.parent){
						v=this._owner.x-targetX;
						if (info.percent)
							v=v / this._targetWidth *this._target._width;
						this._owner.x=targetX+v;
					}
					break ;
				case 1:
					v=this._owner.x-(targetX+this._targetWidth / 2);
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					this._owner.x=targetX+this._target._width / 2+v;
					break ;
				case 2:
					v=this._owner.x-(targetX+this._targetWidth);
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					this._owner.x=targetX+this._target._width+v;
					break ;
				case 3:
					v=this._owner.x+this._owner._rawWidth / 2-(targetX+this._targetWidth / 2);
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					this._owner.x=targetX+this._target._width / 2+v-this._owner._rawWidth / 2;
					break ;
				case 4:
					v=this._owner.x+this._owner._rawWidth-targetX;
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					this._owner.x=targetX+v-this._owner._rawWidth;
					break ;
				case 5:
					v=this._owner.x+this._owner._rawWidth-(targetX+this._targetWidth / 2);
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					this._owner.x=targetX+this._target._width / 2+v-this._owner._rawWidth;
					break ;
				case 6:
					v=this._owner.x+this._owner._rawWidth-(targetX+this._targetWidth);
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					this._owner.x=targetX+this._target._width+v-this._owner._rawWidth;
					break ;
				case 7:
					if(info.percent && this._target==this._owner.parent){
						v=this._owner.y-targetY;
						if (info.percent)
							v=v / this._targetHeight *this._target._height;
						this._owner.y=targetY+v;
					}
					break ;
				case 8:
					v=this._owner.y-(targetY+this._targetHeight / 2);
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					this._owner.y=targetY+this._target._height / 2+v;
					break ;
				case 9:
					v=this._owner.y-(targetY+this._targetHeight);
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					this._owner.y=targetY+this._target._height+v;
					break ;
				case 10:
					v=this._owner.y+this._owner._rawHeight / 2-(targetY+this._targetHeight / 2);
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					this._owner.y=targetY+this._target._height / 2+v-this._owner._rawHeight / 2;
					break ;
				case 11:
					v=this._owner.y+this._owner._rawHeight-targetY;
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					this._owner.y=targetY+v-this._owner._rawHeight;
					break ;
				case 12:
					v=this._owner.y+this._owner._rawHeight-(targetY+this._targetHeight / 2);
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					this._owner.y=targetY+this._target._height / 2+v-this._owner._rawHeight;
					break ;
				case 13:
					v=this._owner.y+this._owner._rawHeight-(targetY+this._targetHeight);
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					this._owner.y=targetY+this._target._height+v-this._owner._rawHeight;
					break ;
				case 14:
					if(this._owner._underConstruct && this._owner==this._target.parent)
						v=this._owner.sourceWidth-this._target.initWidth;
					else
					v=this._owner._rawWidth-this._targetWidth;
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					if(this._target==this._owner.parent)
						this._owner.setSize(this._target._width+v,this._owner._rawHeight,true);
					else
					this._owner.width=this._target._width+v;
					break ;
				case 15:
					if(this._owner._underConstruct && this._owner==this._target.parent)
						v=this._owner.sourceHeight-this._target.initHeight;
					else
					v=this._owner._rawHeight-this._targetHeight;
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					if(this._target==this._owner.parent)
						this._owner.setSize(this._owner._rawWidth,this._target._height+v,true);
					else
					this._owner.height=this._target._height+v;
					break ;
				case 16:
					break ;
				case 17:
					v=this._owner.x-(targetX+this._targetWidth);
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					tmp=this._owner.x;
					this._owner.x=targetX+this._target._width+v;
					this._owner.width=this._owner._rawWidth-(this._owner.x-tmp);
					break ;
				case 18:
					break ;
				case 19:
					if(this._owner._underConstruct && this._owner==this._target.parent)
						v=this._owner.sourceWidth-(targetX+this._target.initWidth);
					else
					v=this._owner.width-(targetX+this._targetWidth);
					if (this._owner !=this._target.parent)
						v+=this._owner.x;
					if (info.percent)
						v=v / this._targetWidth *this._target._width;
					if (this._owner !=this._target.parent)
						this._owner.width=targetX+this._target._width+v-this._owner.x;
					else
					this._owner.width=targetX+this._target._width+v;
					break ;
				case 20:
					break ;
				case 21:
					v=this._owner.y-(targetY+this._targetHeight);
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					tmp=this._owner.y;
					this._owner.y=targetY+this._target._height+v;
					this._owner.height=this._owner._rawHeight-(this._owner.y-tmp);
					break ;
				case 22:
					break ;
				case 23:
					if(this._owner._underConstruct && this._owner==this._target.parent)
						v=this._owner.sourceHeight-(targetY+this._target.initHeight);
					else
					v=this._owner._rawHeight-(targetY+this._targetHeight);
					if (this._owner !=this._target.parent)
						v+=this._owner.y;
					if (info.percent)
						v=v / this._targetHeight *this._target._height;
					if (this._owner !=this._target.parent)
						this._owner.height=targetY+this._target._height+v-this._owner.y;
					else
					this._owner.height=targetY+this._target._height+v;
					break ;
				}
		}

		__proto.addRefTarget=function(target){
			if (target !=this._owner.parent)
				target.on("fui_xy_changed",this,this.__targetXYChanged);
			target.on("fui_size_changed",this,this.__targetSizeChanged);
			target.on("fui_size_delay_change",this,this.__targetSizeWillChange);
			this._targetX=this._target.x;
			this._targetY=this._target.y;
			this._targetWidth=this._target._width;
			this._targetHeight=this._target._height;
		}

		__proto.releaseRefTarget=function(target){
			target.off("fui_xy_changed",this,this.__targetXYChanged);
			target.off("fui_size_changed",this,this.__targetSizeChanged);
			target.off("fui_size_delay_change",this,this.__targetSizeWillChange);
		}

		__proto.__targetXYChanged=function(){
			if (this._owner.relations.handling !=null || this._owner.group!=null && this._owner.group._updating){
				this._targetX=this._target.x;
				this._targetY=this._target.y;
				return;
			}
			this._owner.relations.handling=this._target;
			var ox=this._owner.x;
			var oy=this._owner.y;
			var dx=this._target.x-this._targetX;
			var dy=this._target.y-this._targetY;
			var length=this._defs.length;
			for (var i=0;i < length;i++){
				var info=this._defs[i];
				this.applyOnXYChanged(info,dx,dy);
			}
			this._targetX=this._target.x;
			this._targetY=this._target.y;
			if (ox !=this._owner.x || oy !=this._owner.y){
				ox=this._owner.x-ox;
				oy=this._owner.y-oy;
				this._owner.updateGearFromRelations(1,ox,oy);
				if(this._owner.parent !=null){
					var len=this._owner.parent._transitions.length;
					if(len > 0){
						for(i=0;i < len;++i){
							this._owner.parent._transitions[i].updateFromRelations(this._owner.id,ox,oy);
						}
					}
				}
			}
			this._owner.relations.handling=null;
		}

		__proto.__targetSizeChanged=function(){
			if (this._owner.relations.handling !=null)
				return;
			this._owner.relations.handling=this._target;
			var ox=this._owner.x;
			var oy=this._owner.y;
			var ow=this._owner._rawWidth;
			var oh=this._owner._rawHeight;
			var length=this._defs.length;
			for (var i=0;i < length;i++){
				var info=this._defs[i];
				this.applyOnSizeChanged(info);
			}
			this._targetWidth=this._target._width;
			this._targetHeight=this._target._height;
			if (ox !=this._owner.x || oy !=this._owner.y){
				ox=this._owner.x-ox;
				oy=this._owner.y-oy;
				this._owner.updateGearFromRelations(1,ox,oy);
				if(this._owner.parent !=null){
					var len=this._owner.parent._transitions.length;
					if(len > 0){
						for(i=0;i < len;++i){
							this._owner.parent._transitions[i].updateFromRelations(this._owner.id,ox,oy);
						}
					}
				}
			}
			if(ow !=this._owner._rawWidth || oh !=this._owner._rawHeight){
				ow=this._owner._rawWidth-ow;
				oh=this._owner._rawHeight-oh;
				this._owner.updateGearFromRelations(2,ow,oh);
			}
			this._owner.relations.handling=null;
		}

		__proto.__targetSizeWillChange=function(){
			this._owner.relations.sizeDirty=true;
		}

		__getset(0,__proto,'owner',function(){
			return this._owner;
		});

		__getset(0,__proto,'target',function(){
			return this._target;
			},function(value){
			if (this._target !=value){
				if (this._target)
					this.releaseRefTarget(this._target);
				this._target=value;
				if (this._target)
					this.addRefTarget(this._target);
			}
		});

		__getset(0,__proto,'isEmpty',function(){
			return this._defs.length==0;
		});

		RelationItem.__init$=function(){
			//class RelationDef
			RelationDef=(function(){
				function RelationDef(){
					this.percent=false;
					this.type=NaN;
				}
				__class(RelationDef,'');
				var __proto=RelationDef.prototype;
				__proto.copyFrom=function(source){
					this.percent=source.percent;
					this.type=source.type;
				}
				return RelationDef;
			})()
		}

		return RelationItem;
	})()


	//class fairygui.Relations
	var Relations=(function(){
		function Relations(owner){
			this._owner=null;
			this._items=null;
			this.handling=null;
			this.sizeDirty=false;
			this._owner=owner;
			this._items=[];
		}

		__class(Relations,'fairygui.Relations');
		var __proto=Relations.prototype;
		__proto.add=function(target,relationType,usePercent){
			(usePercent===void 0)&& (usePercent=false);
			var length=this._items.length;
			for (var i=0;i < length;i++){
				var item=this._items[i];
				if (item.target==target){
					item.add(relationType,usePercent);
					return;
				}
			};
			var newItem=new RelationItem(this._owner);
			newItem.target=target;
			newItem.add(relationType,usePercent);
			this._items.push(newItem);
		}

		__proto.addItems=function(target,sidePairs){
			var arr=sidePairs.split(",");
			var s;
			var usePercent=false;
			var i=NaN;
			var newItem=new RelationItem(this._owner);
			newItem.target=target;
			for (i=0;i < 2;i++){
				s=arr[i];
				if (!s)
					continue ;
				if (s.charAt(s.length-1)=="%"){
					s=s.substr(0,s.length-1);
					usePercent=true;
				}
				else
				usePercent=false;
				var j=s.indexOf("-");
				if (j==-1)
					s=s+"-"+s;
				var t=fairygui.Relations.RELATION_NAMES.indexOf(s);
				if (t==-1)
					throw "invalid relation type";
				newItem.internalAdd(t,usePercent);
			}
			this._items.push(newItem);
		}

		__proto.remove=function(target,relationType){
			(relationType===void 0)&& (relationType=0);
			var cnt=this._items.length;
			var i=0;
			while (i < cnt){
				var item=this._items[i];
				if (item.target==target){
					item.remove(relationType);
					if (item.isEmpty){
						item.dispose();
						this._items.splice(i,1);
						cnt--;
					}
					else
					i++;
				}
				else
				i++;
			}
		}

		__proto.contains=function(target){
			var length=this._items.length;
			for (var i=0;i < length;i++){
				var item=this._items[i];
				if (item.target==target)
					return true;
			}
			return false;
		}

		__proto.clearFor=function(target){
			var cnt=this._items.length;
			var i=0;
			while (i < cnt){
				var item=this._items[i];
				if (item.target==target){
					item.dispose();
					this._items.splice(i,1);
					cnt--;
				}
				else
				i++;
			}
		}

		__proto.clearAll=function(){
			var length=this._items.length;
			for (var i=0;i < length;i++){
				var item=this._items[i];
				item.dispose();
			}
			this._items.length=0;
		}

		__proto.copyFrom=function(source){
			this.clearAll();
			var arr=source._items;
			var length=arr.length;
			for (var i=0;i < length;i++){
				var ri=arr[i];
				var item=new RelationItem(this._owner);
				item.copyFrom(ri);
				this._items.push(item);
			}
		}

		__proto.dispose=function(){
			this.clearAll();
		}

		__proto.onOwnerSizeChanged=function(dWidth,dHeight){
			if (this._items.length==0)
				return;
			var length=this._items.length;
			for (var i=0;i < length;i++){
				var item=this._items[i];
				item.applyOnSelfResized(dWidth,dHeight);
			}
		}

		__proto.ensureRelationsSizeCorrect=function(){
			if (this._items.length==0)
				return;
			this.sizeDirty=false;
			var length=this._items.length;
			for (var i=0;i < length;i++){
				var item=this._items[i];
				item.target.ensureSizeCorrect();
			}
		}

		__proto.setup=function(xml){
			var col=xml.childNodes;
			var length=col.length;
			var targetId;
			var target;
			for (var i=0;i < length;i++){
				var cxml=col[i];
				if(cxml.nodeName!="relation")
					continue ;
				targetId=cxml.getAttribute("target");
				if (this._owner.parent){
					if (targetId)
						target=this._owner.parent.getChildById(targetId);
					else
					target=this._owner.parent;
				}
				else {
					target=(this._owner).getChildById(targetId);
				}
				if (target)
					this.addItems(target,cxml.getAttribute("sidePair"));
			}
		}

		__getset(0,__proto,'empty',function(){
			return this._items.length==0;
		});

		__static(Relations,
		['RELATION_NAMES',function(){return this.RELATION_NAMES=
			[
			"left-left",
			"left-center",
			"left-right",
			"center-center",
			"right-left",
			"right-center",
			"right-right",
			"top-top",
			"top-middle",
			"top-bottom",
			"middle-middle",
			"bottom-top",
			"bottom-middle",
			"bottom-bottom",
			"width-width",
			"height-height",
			"leftext-left",
			"leftext-right",
			"rightext-left",
			"rightext-right",
			"topext-top",
			"topext-bottom",
			"bottomext-top",
			"bottomext-bottom"];}
		]);
		return Relations;
	})()


	//class fairygui.RelationType
	var RelationType=(function(){
		function RelationType(){}
		__class(RelationType,'fairygui.RelationType');
		RelationType.Left_Left=0;
		RelationType.Left_Center=1;
		RelationType.Left_Right=2;
		RelationType.Center_Center=3;
		RelationType.Right_Left=4;
		RelationType.Right_Center=5;
		RelationType.Right_Right=6;
		RelationType.Top_Top=7;
		RelationType.Top_Middle=8;
		RelationType.Top_Bottom=9;
		RelationType.Middle_Middle=10;
		RelationType.Bottom_Top=11;
		RelationType.Bottom_Middle=12;
		RelationType.Bottom_Bottom=13;
		RelationType.Width=14;
		RelationType.Height=15;
		RelationType.LeftExt_Left=16;
		RelationType.LeftExt_Right=17;
		RelationType.RightExt_Left=18;
		RelationType.RightExt_Right=19;
		RelationType.TopExt_Top=20;
		RelationType.TopExt_Bottom=21;
		RelationType.BottomExt_Top=22;
		RelationType.BottomExt_Bottom=23;
		RelationType.Size=24;
		return RelationType;
	})()


	//class fairygui.ScrollBarDisplayType
	var ScrollBarDisplayType=(function(){
		function ScrollBarDisplayType(){}
		__class(ScrollBarDisplayType,'fairygui.ScrollBarDisplayType');
		ScrollBarDisplayType.parse=function(value){
			switch (value){
				case "default":
					return 0;
				case "visible":
					return 1;
				case "auto":
					return 2;
				case "hidden":
					return 3;
				default :
					return 0;
				}
		}

		ScrollBarDisplayType.Default=0;
		ScrollBarDisplayType.Visible=1;
		ScrollBarDisplayType.Auto=2;
		ScrollBarDisplayType.Hidden=3;
		return ScrollBarDisplayType;
	})()


	//class fairygui.ScrollPane
	var ScrollPane=(function(){
		var TweenHelper;
		function ScrollPane(owner,scrollType,scrollBarMargin,scrollBarDisplay,flags,vtScrollBarRes,hzScrollBarRes){
			this._owner=null;
			this._maskContainer=null;
			this._container=null;
			this._alignContainer=null;
			this._viewWidth=0;
			this._viewHeight=0;
			this._contentWidth=0;
			this._contentHeight=0;
			this._scrollType=0;
			this._scrollSpeed=0;
			this._mouseWheelSpeed=0;
			this._scrollBarMargin=null;
			this._bouncebackEffect=false;
			this._touchEffect=false;
			this._scrollBarDisplayAuto=false;
			this._vScrollNone=false;
			this._hScrollNone=false;
			this._displayOnLeft=false;
			this._snapToItem=false;
			this._displayInDemand=false;
			this._mouseWheelEnabled=false;
			this._pageMode=false;
			this._pageSizeH=NaN;
			this._pageSizeV=NaN;
			this._inertiaDisabled=false;
			this._yPerc=NaN;
			this._xPerc=NaN;
			this._xPos=NaN;
			this._yPos=NaN;
			this._xOverlap=NaN;
			this._yOverlap=NaN;
			this._tweening=NaN;
			this._tweenHelper=null;
			this._tweener=null;
			this._needRefresh=false;
			this._time1=NaN;
			this._time2=NaN;
			this._y1=NaN;
			this._y2=NaN;
			this._yOffset=NaN;
			this._x1=NaN;
			this._x2=NaN;
			this._xOffset=NaN;
			this._holdAreaPoint=null;
			this._isHoldAreaDone=false;
			this._aniFlag=0;
			this._scrollBarVisible=false;
			this._pageController=null;
			this._hzScrollBar=null;
			this._vtScrollBar=null;
			this.isDragged=false;
			;
			if(fairygui.ScrollPane._easeTypeFunc==null)
				fairygui.ScrollPane._easeTypeFunc=Ease.cubicOut;
			this._tweenHelper=new TweenHelper();
			this._owner=owner;
			this._maskContainer=new Sprite();
			this._owner.displayObject.addChild(this._maskContainer);
			this._container=this._owner._container;
			this._container.pos(0,0);
			this._maskContainer.addChild(this._container);
			this._scrollType=scrollType;
			this._scrollBarMargin=scrollBarMargin;
			this._bouncebackEffect=UIConfig$1.defaultScrollBounceEffect;
			this._touchEffect=UIConfig$1.defaultScrollTouchEffect;
			this._scrollSpeed=UIConfig$1.defaultScrollSpeed;
			this._mouseWheelSpeed=this._scrollSpeed *2;
			this._displayOnLeft=(flags & 1)!=0;
			this._snapToItem=(flags & 2)!=0;
			this._displayInDemand=(flags & 4)!=0;
			this._pageMode=(flags & 8)!=0;
			if(flags & 16)
				this._touchEffect=true;
			else if(flags & 32)
			this._touchEffect=false;
			else
			this._touchEffect=UIConfig$1.defaultScrollTouchEffect;
			if(flags & 64)
				this._bouncebackEffect=true;
			else if(flags & 128)
			this._bouncebackEffect=false;
			else
			this._bouncebackEffect=UIConfig$1.defaultScrollBounceEffect;
			this._inertiaDisabled=(flags & 256)!=0;
			if((flags & 512)==0)
				this._maskContainer.scrollRect=new Rectangle();
			this._xPerc=0;
			this._yPerc=0;
			this._xPos=0
			this._yPos=0;
			this._xOverlap=0;
			this._yOverlap=0;
			this._aniFlag=0;
			this._scrollBarVisible=true;
			this._mouseWheelEnabled=true;
			this._holdAreaPoint=new Point();
			if(scrollBarDisplay==0)
				scrollBarDisplay=UIConfig$1.defaultScrollBarDisplay;
			if(scrollBarDisplay !=3){
				if(this._scrollType==2 || this._scrollType==1){
					var res=vtScrollBarRes ? vtScrollBarRes :UIConfig$1.verticalScrollBar;
					if(res){
						this._vtScrollBar=(UIPackage.createObjectFromURL(res));
						if(!this._vtScrollBar)
							throw "cannot create scrollbar from "+res;
						this._vtScrollBar.setScrollPane(this,true);
						this._owner.displayObject.addChild(this._vtScrollBar.displayObject);
					}
				}
				if(this._scrollType==2 || this._scrollType==0){
					res=hzScrollBarRes ? hzScrollBarRes :UIConfig$1.horizontalScrollBar;
					if(res){
						this._hzScrollBar=(UIPackage.createObjectFromURL(res));
						if(!this._hzScrollBar)
							throw "cannot create scrollbar from "+res;
						this._hzScrollBar.setScrollPane(this,false);
						this._owner.displayObject.addChild(this._hzScrollBar.displayObject);
					}
				}
				this._scrollBarDisplayAuto=scrollBarDisplay==2;
				if(this._scrollBarDisplayAuto){
					this._scrollBarVisible=false;
					if(this._vtScrollBar)
						this._vtScrollBar.displayObject.visible=false;
					if(this._hzScrollBar)
						this._hzScrollBar.displayObject.visible=false;
				}
			}
			this._contentWidth=0;
			this._contentHeight=0;
			this.setSize(owner.width,owner.height);
			this._owner.on("mousedown",this,this.__mouseDown);
			this._owner.on("mousewheel",this,this.__mouseWheel);
		}

		__class(ScrollPane,'fairygui.ScrollPane');
		var __proto=ScrollPane.prototype;
		__proto.setPercX=function(value,ani){
			(ani===void 0)&& (ani=false);
			this._owner.ensureBoundsCorrect();
			value=ToolSet.clamp01(value);
			if(value !=this._xPerc){
				this._xPerc=value;
				this._xPos=this._xPerc*this._xOverlap;
				this.posChanged(ani);
			}
		}

		__proto.setPercY=function(value,ani){
			(ani===void 0)&& (ani=false);
			this._owner.ensureBoundsCorrect();
			value=ToolSet.clamp01(value);
			if(value !=this._yPerc){
				this._yPerc=value;
				this._yPos=this._yPerc*this._yOverlap;
				this.posChanged(ani);
			}
		}

		__proto.setPosX=function(value,ani){
			(ani===void 0)&& (ani=false);
			this._owner.ensureBoundsCorrect();
			value=ToolSet.clamp(value,0,this._xOverlap);
			if(value!=this._xPos){
				this._xPos=value;
				this._xPerc=this._xOverlap==0?0:this._xPos/this._xOverlap;
				this.posChanged(ani);
			}
		}

		__proto.setPosY=function(value,ani){
			(ani===void 0)&& (ani=false);
			this._owner.ensureBoundsCorrect();
			value=ToolSet.clamp(value,0,this._yOverlap);
			if(value!=this._yPos){
				this._yPos=value;
				this._yPerc=this._yOverlap==0?0:this._yPos/this._yOverlap;
				this.posChanged(ani);
			}
		}

		__proto.getDeltaX=function(move){
			return move / (this._contentWidth-this._viewWidth);
		}

		__proto.getDeltaY=function(move){
			return move / (this._contentHeight-this._viewHeight);
		}

		__proto.scrollTop=function(ani){
			(ani===void 0)&& (ani=false);
			this.setPercY(0,ani);
		}

		__proto.scrollBottom=function(ani){
			(ani===void 0)&& (ani=false);
			this.setPercY(1,ani);
		}

		__proto.scrollUp=function(speed,ani){
			(speed===void 0)&& (speed=1);
			(ani===void 0)&& (ani=false);
			this.setPercY(this._yPerc-this.getDeltaY(this._scrollSpeed *speed),ani);
		}

		__proto.scrollDown=function(speed,ani){
			(speed===void 0)&& (speed=1);
			(ani===void 0)&& (ani=false);
			this.setPercY(this._yPerc+this.getDeltaY(this._scrollSpeed *speed),ani);
		}

		__proto.scrollLeft=function(speed,ani){
			(speed===void 0)&& (speed=1);
			(ani===void 0)&& (ani=false);
			this.setPercX(this._xPerc-this.getDeltaX(this._scrollSpeed *speed),ani);
		}

		__proto.scrollRight=function(speed,ani){
			(speed===void 0)&& (speed=1);
			(ani===void 0)&& (ani=false);
			this.setPercX(this._xPerc+this.getDeltaX(this._scrollSpeed *speed),ani);
		}

		__proto.scrollToView=function(target,ani,setFirst){
			(ani===void 0)&& (ani=false);
			(setFirst===void 0)&& (setFirst=false);
			this._owner.ensureBoundsCorrect();
			if(this._needRefresh)
				this.refresh();
			var rect;
			if((target instanceof fairygui.GObject )){
				if(target.parent !=this._owner){
					target.parent.localToGlobalRect(target.x,target.y,
					target.width,target.height,fairygui.ScrollPane.sHelperRect);
					rect=this._owner.globalToLocalRect(fairygui.ScrollPane.sHelperRect.x,fairygui.ScrollPane.sHelperRect.y,
					fairygui.ScrollPane.sHelperRect.width,fairygui.ScrollPane.sHelperRect.height,fairygui.ScrollPane.sHelperRect);
				}
				else {
					rect=fairygui.ScrollPane.sHelperRect;
					rect.setTo(target.x,target.y,target.width,target.height);
				}
			}
			else
			rect=(target);
			if (this._yOverlap>0){
				var top=this.posY;
				var bottom=top+this._viewHeight;
				if(setFirst || rect.y < top || rect.height >=this._viewHeight){
					if(this._pageMode)
						this.setPosY(Math.floor(rect.y / this._pageSizeV)*this._pageSizeV,ani);
					else
					this.setPosY(rect.y,ani);
				}
				else if(rect.y+rect.height > bottom){
					if(this._pageMode)
						this.setPosY(Math.floor(rect.y / this._pageSizeV)*this._pageSizeV,ani);
					else if(rect.height <=this._viewHeight/2)
					this.setPosY(rect.y+rect.height *2-this._viewHeight,ani);
					else
					this.setPosY(rect.y+rect.height-this._viewHeight,ani);
				}
			}
			if (this._xOverlap>0){
				var left=this.posX;
				var right=left+this._viewWidth;
				if(setFirst || rect.x < left || rect.width >=this._viewWidth){
					if(this._pageMode)
						this.setPosX(Math.floor(rect.x / this._pageSizeH)*this._pageSizeH,ani);
					else
					this.setPosX(rect.x,ani);
				}
				else if(rect.x+rect.width > right){
					if(this._pageMode)
						this.setPosX(Math.floor(rect.x / this._pageSizeH)*this._pageSizeH,ani);
					else if(rect.width <=this._viewWidth/2)
					this.setPosX(rect.x+rect.width *2-this._viewWidth,ani);
					else
					this.setPosX(rect.x+rect.width-this._viewWidth,ani);
				}
			}
			if(!ani && this._needRefresh)
				this.refresh();
		}

		__proto.isChildInView=function(obj){
			var dist=NaN;
			if(this._yOverlap>0){
				dist=obj.y+this._container.y;
				if(dist <-obj.height-20 || dist > this._viewHeight+20)
					return false;
			}
			if(this._xOverlap>0){
				dist=obj.x+this._container.x;
				if(dist <-obj.width-20 || dist > this._viewWidth+20)
					return false;
			}
			return true;
		}

		__proto.cancelDragging=function(){
			this._owner.displayObject.stage.off("mousemove",this,this.__mouseMove);
			this._owner.displayObject.stage.off("mouseup",this,this.__mouseUp);
			this._owner.displayObject.stage.off("click",this,this.__click);
			if (ScrollPane.draggingPane==this)
				ScrollPane.draggingPane=null;
			ScrollPane._gestureFlag=0;
			this.isDragged=false;
			this._maskContainer.mouseEnabled=true;
		}

		__proto.onOwnerSizeChanged=function(){
			this.setSize(this._owner.width,this._owner.height);
			this.posChanged(false);
		}

		__proto.handleControllerChanged=function(c){
			if (this._pageController==c){
				if (this._scrollType==0)
					this.currentPageX=c.selectedIndex;
				else
				this.currentPageY=c.selectedIndex;
			}
		}

		__proto.updatePageController=function(){
			if (this._pageController !=null && !this._pageController.changing){
				var index=0;
				if (this._scrollType==0)
					index=this.currentPageX;
				else
				index=this.currentPageY;
				if (index < this._pageController.pageCount){
					var c=this._pageController;
					this._pageController=null;
					c.selectedIndex=index;
					this._pageController=c;
				}
			}
		}

		__proto.adjustMaskContainer=function(){
			var mx=NaN,my=NaN;
			if (this._displayOnLeft && this._vtScrollBar !=null)
				mx=Math.floor(this._owner.margin.left+this._vtScrollBar.width);
			else
			mx=Math.floor(this._owner.margin.left);
			my=Math.floor(this._owner.margin.top);
			this._maskContainer.pos(mx,my);
			if(this._owner._alignOffset.x!=0 || this._owner._alignOffset.y!=0){
				if(this._alignContainer==null){
					this._alignContainer=new Sprite();
					this._maskContainer.addChild(this._alignContainer);
					this._alignContainer.addChild(this._container);
				}
				this._alignContainer.pos(this._owner._alignOffset.x,this._owner._alignOffset.y);
			}
			else if(this._alignContainer){
				this._alignContainer.pos(0,0);
			}
		}

		__proto.setSize=function(aWidth,aHeight){
			this.adjustMaskContainer();
			if (this._hzScrollBar){
				this._hzScrollBar.y=aHeight-this._hzScrollBar.height;
				if(this._vtScrollBar && !this._vScrollNone){
					this._hzScrollBar.width=aWidth-this._vtScrollBar.width-this._scrollBarMargin.left-this._scrollBarMargin.right;
					if(this._displayOnLeft)
						this._hzScrollBar.x=this._scrollBarMargin.left+this._vtScrollBar.width;
					else
					this._hzScrollBar.x=this._scrollBarMargin.left;
				}
				else {
					this._hzScrollBar.width=aWidth-this._scrollBarMargin.left-this._scrollBarMargin.right;
					this._hzScrollBar.x=this._scrollBarMargin.left;
				}
			}
			if (this._vtScrollBar){
				if (!this._displayOnLeft)
					this._vtScrollBar.x=aWidth-this._vtScrollBar.width;
				if(this._hzScrollBar)
					this._vtScrollBar.height=aHeight-this._hzScrollBar.height-this._scrollBarMargin.top-this._scrollBarMargin.bottom;
				else
				this._vtScrollBar.height=aHeight-this._scrollBarMargin.top-this._scrollBarMargin.bottom;
				this._vtScrollBar.y=this._scrollBarMargin.top;
			}
			this._viewWidth=aWidth;
			this._viewHeight=aHeight;
			if(this._hzScrollBar && !this._hScrollNone)
				this._viewHeight-=this._hzScrollBar.height;
			if(this._vtScrollBar && !this._vScrollNone)
				this._viewWidth-=this._vtScrollBar.width;
			this._viewWidth-=(this._owner.margin.left+this._owner.margin.right);
			this._viewHeight-=(this._owner.margin.top+this._owner.margin.bottom);
			this._viewWidth=Math.max(1,this._viewWidth);
			this._viewHeight=Math.max(1,this._viewHeight);
			this._pageSizeH=this._viewWidth;
			this._pageSizeV=this._viewHeight;
			this.handleSizeChanged();
		}

		__proto.setContentSize=function(aWidth,aHeight){
			if (this._contentWidth==aWidth && this._contentHeight==aHeight)
				return;
			this._contentWidth=aWidth;
			this._contentHeight=aHeight;
			this.handleSizeChanged();
		}

		__proto.changeContentSizeOnScrolling=function(deltaWidth,deltaHeight,deltaPosX,deltaPosY){
			this._contentWidth+=deltaWidth;
			this._contentHeight+=deltaHeight;
			if (this.isDragged){
				if (deltaPosX !=0)
					this._container.x-=deltaPosX;
				if (deltaPosY !=0)
					this._container.y-=deltaPosY;
				this.validateHolderPos();
				this._xOffset+=deltaPosX;
				this._yOffset+=deltaPosY;
				var tmp=this._y2-this._y1;
				this._y1=this._container.y;
				this._y2=this._y1+tmp;
				tmp=this._x2-this._x1;
				this._x1=this._container.x;
				this._x2=this._x1+tmp;
				this._yPos=-this._container.y;
				this._xPos=-this._container.x;
			}
			else if (this._tweening==2){
				if (deltaPosX !=0){
					this._container.x-=deltaPosX;
					this._tweenHelper.start.x-=deltaPosX;
				}
				if (deltaPosY !=0){
					this._container.y-=deltaPosY;
					this._tweenHelper.start.y-=deltaPosY;
				}
			}
			this.handleSizeChanged(true);
		}

		__proto.handleSizeChanged=function(onScrolling){
			(onScrolling===void 0)&& (onScrolling=false);
			if(this._displayInDemand){
				if(this._vtScrollBar){
					if(this._contentHeight <=this._viewHeight){
						if(!this._vScrollNone){
							this._vScrollNone=true;
							this._viewWidth+=this._vtScrollBar.width;
						}
					}
					else {
						if(this._vScrollNone){
							this._vScrollNone=false;
							this._viewWidth-=this._vtScrollBar.width;
						}
					}
				}
				if(this._hzScrollBar){
					if(this._contentWidth <=this._viewWidth){
						if(!this._hScrollNone){
							this._hScrollNone=true;
							this._viewHeight+=this._hzScrollBar.height;
						}
					}
					else {
						if(this._hScrollNone){
							this._hScrollNone=false;
							this._viewHeight-=this._hzScrollBar.height;
						}
					}
				}
			}
			if(this._vtScrollBar){
				if(this._viewHeight < this._vtScrollBar.minSize)
					this._vtScrollBar.displayObject.visible=false;
				else {
					this._vtScrollBar.displayObject.visible=this._scrollBarVisible && !this._vScrollNone;
					if(this._contentHeight==0)
						this._vtScrollBar.displayPerc=0;
					else
					this._vtScrollBar.displayPerc=Math.min(1,this._viewHeight / this._contentHeight);
				}
			}
			if(this._hzScrollBar){
				if(this._viewWidth < this._hzScrollBar.minSize)
					this._hzScrollBar.displayObject.visible=false;
				else {
					this._hzScrollBar.displayObject.visible=this._scrollBarVisible && !this._hScrollNone;
					if(this._contentWidth==0)
						this._hzScrollBar.displayPerc=0;
					else
					this._hzScrollBar.displayPerc=Math.min(1,this._viewWidth / this._contentWidth);
				}
			};
			var rect=this._maskContainer.scrollRect;
			if(rect!=null){
				rect.width=this._viewWidth;
				rect.height=this._viewHeight;
				this._maskContainer.scrollRect=rect;
			}
			if (this._scrollType==0 || this._scrollType==2)
				this._xOverlap=Math.ceil(Math.max(0,this._contentWidth-this._viewWidth));
			else
			this._xOverlap=0;
			if (this._scrollType==1 || this._scrollType==2)
				this._yOverlap=Math.ceil(Math.max(0,this._contentHeight-this._viewHeight));
			else
			this._yOverlap=0;
			if(this._tweening==0 && onScrolling){
				if(this._xPerc==0 || this._xPerc==1){
					this._xPos=this._xPerc *this._xOverlap;
					this._container.x=-this._xPos;
				}
				if(this._yPerc==0 || this._yPerc==1){
					this._yPos=this._yPerc *this._yOverlap;
					this._container.y=-this._yPos;
				}
			}
			else{
				this._xPos=ToolSet.clamp(this._xPos,0,this._xOverlap);
				this._xPerc=this._xOverlap>0?this._xPos/this._xOverlap:0;
				this._yPos=ToolSet.clamp(this._yPos,0,this._yOverlap);
				this._yPerc=this._yOverlap>0?this._yPos/this._yOverlap:0;
			}
			this.validateHolderPos();
			if (this._vtScrollBar !=null)
				this._vtScrollBar.scrollPerc=this._yPerc;
			if (this._hzScrollBar !=null)
				this._hzScrollBar.scrollPerc=this._xPerc;
			if(this._pageMode)
				this.updatePageController();
		}

		__proto.validateHolderPos=function(){
			this._container.x=ToolSet.clamp(this._container.x,-this._xOverlap,0);
			this._container.y=ToolSet.clamp(this._container.y,-this._yOverlap,0);
		}

		__proto.posChanged=function(ani){
			if (this._aniFlag==0)
				this._aniFlag=ani ? 1 :-1;
			else if (this._aniFlag==1 && !ani)
			this._aniFlag=-1;
			this._needRefresh=true;
			Laya.timer.callLater(this,this.refresh);
			if(this._tweening==2){
				this.killTween();
			}
		}

		__proto.killTween=function(){
			if(this._tweening==1){
				this._tweener.clear();
				this._tweening=0;
				this._tweener=null;
				this.syncScrollBar(true);
			}
			else if(this._tweening==2){
				this._tweener.clear();
				this._tweener=null;
				this._tweening=0;
				this.validateHolderPos();
				this.syncScrollBar(true);
				Events.dispatch("fui_scroll_end",this._owner.displayObject);
			}
		}

		__proto.refresh=function(){
			this._needRefresh=false;
			Laya.timer.clear(this,this.refresh);
			if(this._pageMode){
				var page=0;
				var delta=NaN;
				if(this._yOverlap>0 && this._yPerc!=1 && this._yPerc!=0){
					page=Math.floor(this._yPos / this._pageSizeV);
					delta=this._yPos-page*this._pageSizeV;
					if(delta>this._pageSizeV/2)
						page++;
					this._yPos=page *this._pageSizeV;
					if(this._yPos>this._yOverlap){
						this._yPos=this._yOverlap;
						this._yPerc=1;
					}
					else
					this._yPerc=this._yPos / this._yOverlap;
				}
				if(this._xOverlap>0 && this._xPerc!=1 && this._xPerc!=0){
					page=Math.floor(this._xPos / this._pageSizeH);
					delta=this._xPos-page*this._pageSizeH;
					if(delta>this._pageSizeH/2)
						page++;
					this._xPos=page *this._pageSizeH;
					if(this._xPos>this._xOverlap){
						this._xPos=this._xOverlap;
						this._xPerc=1;
					}
					else
					this._xPerc=this._xPos / this._xOverlap;
				}
			}
			else if(this._snapToItem){
				var pt=this._owner.getSnappingPosition(this._xPerc==1?0:this._xPos,this._yPerc==1?0:this._yPos,ScrollPane.sHelperPoint);
				if (this._xPerc !=1 && pt.x!=this._xPos){
					this._xPos=pt.x;
					this._xPerc=this._xPos / this._xOverlap;
					if(this._xPerc>1){
						this._xPerc=1;
						this._xPos=this._xOverlap;
					}
				}
				if (this._yPerc !=1 && pt.y!=this._yPos){
					this._yPos=pt.y;
					this._yPerc=this._yPos / this._yOverlap;
					if(this._yPerc>1){
						this._yPerc=1;
						this._yPos=this._yOverlap;
					}
				}
			}
			this.refresh2();
			Events.dispatch("fui_scroll",this._owner.displayObject);
			if(this._needRefresh){
				this._needRefresh=false;
				Laya.timer.clear(this,this.refresh);
				this.refresh2();
			}
			this._aniFlag=0;
		}

		__proto.refresh2=function(){
			var contentXLoc=Math.floor(this._xPos);
			var contentYLoc=Math.floor(this._yPos);
			if(this._aniFlag==1 && !this.isDragged){
				var toX=this._container.x;
				var toY=this._container.y;
				if(this._yOverlap>0)
					toY=-contentYLoc;
				else {
					if(this._container.y !=0)
						this._container.y=0;
				}
				if(this._xOverlap>0)
					toX=-contentXLoc;
				else {
					if(this._container.x !=0)
						this._container.x=0;
				}
				if(toX !=this._container.x || toY !=this._container.y){
					this.killTween();
					this._maskContainer.mouseEnabled=false;
					this._tweening=1;
					this._tweener=Tween.to(this._container,
					{x:toX,y:toY },
					500,
					fairygui.ScrollPane._easeTypeFunc,
					Handler.create(this,this.__tweenComplete));
					this._tweener.update=Handler.create(this,this.__tweenUpdate,null,false);
				}
			}
			else {
				if(this._tweener!=null)
					this.killTween();
				if(this.isDragged){
					this._xOffset+=this._container.x-(-contentXLoc);
					this._yOffset+=this._container.y-(-contentYLoc);
				}
				this._container.pos(-contentXLoc,-contentYLoc);
				if(this.isDragged){
					this._y1=this._y2=this._container.y;
					this._x1=this._x2=this._container.x;
				}
				if(this._vtScrollBar)
					this._vtScrollBar.scrollPerc=this._yPerc;
				if(this._hzScrollBar)
					this._hzScrollBar.scrollPerc=this._xPerc;
			}
			if(this._pageMode)
				this.updatePageController();
		}

		__proto.syncPos=function(){
			if(this._xOverlap>0){
				this._xPos=ToolSet.clamp(-this._container.x,0,this._xOverlap);
				this._xPerc=this._xPos / this._xOverlap;
			}
			if(this._yOverlap>0){
				this._yPos=ToolSet.clamp(-this._container.y,0,this._yOverlap);
				this._yPerc=this._yPos / this._yOverlap;
			}
			if(this._pageMode)
				this.updatePageController();
		}

		__proto.syncScrollBar=function(end){
			(end===void 0)&& (end=false);
			if(end){
				if(this._vtScrollBar){
					if(this._scrollBarDisplayAuto)
						this.showScrollBar(false);
				}
				if(this._hzScrollBar){
					if(this._scrollBarDisplayAuto)
						this.showScrollBar(false);
				}
				this._maskContainer.mouseEnabled=true;
			}
			else{
				if(this._vtScrollBar){
					this._vtScrollBar.scrollPerc=this._yOverlap==0 ? 0 :ToolSet.clamp(-this._container.y,0,this._yOverlap)/ this._yOverlap;
					if(this._scrollBarDisplayAuto)
						this.showScrollBar(true);
				}
				if(this._hzScrollBar){
					this._hzScrollBar.scrollPerc=this._xOverlap==0 ? 0 :ToolSet.clamp(-this._container.x,0,this._xOverlap)/ this._xOverlap;
					if(this._scrollBarDisplayAuto)
						this.showScrollBar(true);
				}
			}
		}

		__proto.__mouseDown=function(){
			if (!this._touchEffect)
				return;
			if(this._tweener!=null){
				this.killTween();
				this.isDragged=true;
			}
			else
			this.isDragged=false;
			this._owner.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY,fairygui.ScrollPane.sHelperPoint);
			this._x1=this._x2=this._container.x;
			this._y1=this._y2=this._container.y;
			this._xOffset=fairygui.ScrollPane.sHelperPoint.x-this._container.x;
			this._yOffset=fairygui.ScrollPane.sHelperPoint.y-this._container.y;
			this._time1=this._time2=Laya.timer.currTimer;
			this._holdAreaPoint.x=fairygui.ScrollPane.sHelperPoint.x;
			this._holdAreaPoint.y=fairygui.ScrollPane.sHelperPoint.y;
			this._isHoldAreaDone=false;
			this._owner.displayObject.stage.on("mousemove",this,this.__mouseMove);
			this._owner.displayObject.stage.on("mouseup",this,this.__mouseUp);
			this._owner.displayObject.stage.on("click",this,this.__click);
		}

		__proto.__mouseMove=function(){
			if(!this._touchEffect)
				return;
			if (ScrollPane.draggingPane !=null && ScrollPane.draggingPane !=this || GObject.draggingObject !=null)
				return;
			var sensitivity=UIConfig$1.touchScrollSensitivity;
			var pt=this._owner.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY,fairygui.ScrollPane.sHelperPoint);
			var diff=NaN,diff2=NaN;
			var sv=false,sh=false,st=false;
			if (this._scrollType==1){
				if (!this._isHoldAreaDone){
					ScrollPane._gestureFlag |=1;
					diff=Math.abs(this._holdAreaPoint.y-this._maskContainer.mouseY);
					if (diff < sensitivity)
						return;
					if ((ScrollPane._gestureFlag & 2)!=0){
						diff2=Math.abs(this._holdAreaPoint.x-this._maskContainer.mouseX);
						if (diff < diff2)
							return;
					}
				}
				sv=true;
			}
			else if (this._scrollType==0){
				if (!this._isHoldAreaDone){
					ScrollPane._gestureFlag |=2;
					diff=Math.abs(this._holdAreaPoint.x-this._maskContainer.mouseX);
					if (diff < sensitivity)
						return;
					if ((ScrollPane._gestureFlag & 1)!=0){
						diff2=Math.abs(this._holdAreaPoint.y-this._maskContainer.mouseY);
						if (diff < diff2)
							return;
					}
				}
				sh=true;
			}
			else{
				ScrollPane._gestureFlag=3;
				if (!this._isHoldAreaDone){
					diff=Math.abs(this._holdAreaPoint.y-this._maskContainer.mouseY);
					if (diff < sensitivity){
						diff=Math.abs(this._holdAreaPoint.x-this._maskContainer.mouseX);
						if (diff < sensitivity)
							return;
					}
				}
				sv=sh=true;
			};
			var t=Laya.timer.currTimer;
			if (t-this._time2 > 50){
				this._time2=this._time1;
				this._time1=t;
				st=true;
			}
			if (sv){
				var y=Math.floor(pt.y-this._yOffset);
				if (y > 0){
					if (!this._bouncebackEffect || this._inertiaDisabled)
						this._container.y=0;
					else
					this._container.y=Math.floor(y *0.5);
				}
				else if (y <-this._yOverlap){
					if (!this._bouncebackEffect || this._inertiaDisabled)
						this._container.y=-Math.floor(this._yOverlap);
					else
					this._container.y=Math.floor((y-this._yOverlap)*0.5);
				}
				else {
					this._container.y=y;
				}
				if (st){
					this._y2=this._y1;
					this._y1=this._container.y;
				}
			}
			if (sh){
				var x=Math.floor(pt.x-this._xOffset);
				if (x > 0){
					if (!this._bouncebackEffect || this._inertiaDisabled)
						this._container.x=0;
					else
					this._container.x=Math.floor(x *0.5);
				}
				else if (x < 0-this._xOverlap || this._inertiaDisabled){
					if (!this._bouncebackEffect)
						this._container.x=-Math.floor(this._xOverlap);
					else
					this._container.x=Math.floor((x-this._xOverlap)*0.5);
				}
				else {
					this._container.x=x;
				}
				if (st){
					this._x2=this._x1;
					this._x1=this._container.x;
				}
			}
			ScrollPane.draggingPane=this;
			this._maskContainer.mouseEnabled=false;
			this._isHoldAreaDone=true;
			this.isDragged=true;
			this.syncPos();
			this.syncScrollBar();
			Events.dispatch("fui_scroll",this._owner.displayObject);
		}

		__proto.__mouseUp=function(){
			this._owner.displayObject.stage.off("mousemove",this,this.__mouseMove);
			this._owner.displayObject.stage.off("mouseup",this,this.__mouseUp);
			this._owner.displayObject.stage.off("click",this,this.__click);
			if (!this._touchEffect){
				this.isDragged=false;
				return;
			}
			if (ScrollPane.draggingPane==this)
				ScrollPane.draggingPane=null;
			ScrollPane._gestureFlag=0;
			if (!this.isDragged || !this._touchEffect || this._inertiaDisabled){
				this.isDragged=false;
				return;
			}
			this.isDragged=false;
			var time=(Laya.timer.currTimer-this._time2)/ 1000;
			if (time==0)
				time=0.001;
			var yVelocity=(this._container.y-this._y2)/ time *2 *UIConfig$1.defaultTouchScrollSpeedRatio;;
			var xVelocity=(this._container.x-this._x2)/ time *2 *UIConfig$1.defaultTouchScrollSpeedRatio;;
			var duration=0.3;
			this._tweenHelper.start.x=this._container.x;
			this._tweenHelper.start.y=this._container.y;
			var change1=this._tweenHelper.change1;
			var change2=this._tweenHelper.change2;
			var endX=0;
			var endY=0;
			var page=0;
			var delta=0;
			var fireRelease=0;
			var testPageSize=NaN;
			if(this._scrollType==2 || this._scrollType==0){
				if (this._container.x > UIConfig$1.touchDragSensitivity)
					fireRelease=1;
				else if (this._container.x <-this._xOverlap-UIConfig$1.touchDragSensitivity)
				fireRelease=2;
				change1.x=TweenHelper.calculateChange(xVelocity,duration);
				change2.x=0;
				endX=this._container.x+change1.x;
				if(this._pageMode && endX<0 && endX>-this._xOverlap){
					page=Math.floor(-endX / this._pageSizeH);
					testPageSize=Math.min(this._pageSizeH,this._contentWidth-(page+1)*this._pageSizeH);
					delta=-endX-page*this._pageSizeH;
					if (Math.abs(change1.x)> this._pageSizeH){
						if (delta > testPageSize *0.5)
							page++;
					}
					else{
						if (delta > testPageSize *(change1.x < 0 ? 0.3 :0.7))
							page++;
					}
					endX=-page *this._pageSizeH;
					if (endX <-this._xOverlap)
						endX=-this._xOverlap;
					change1.x=endX-this._container.x;
				}
			}
			else
			change1.x=change2.x=0;
			if(this._scrollType==2 || this._scrollType==1){
				if (this._container.y > UIConfig$1.touchDragSensitivity)
					fireRelease=1;
				else if (this._container.y <-this._yOverlap-UIConfig$1.touchDragSensitivity)
				fireRelease=2;
				change1.y=TweenHelper.calculateChange(yVelocity,duration);
				change2.y=0;
				endY=this._container.y+change1.y;
				if(this._pageMode && endY < 0 && endY >-this._yOverlap){
					page=Math.floor(-endY / this._pageSizeV);
					testPageSize=Math.min(this._pageSizeV,this._contentHeight-(page+1)*this._pageSizeV);
					delta=-endY-page *this._pageSizeV;
					if (Math.abs(change1.y)> this._pageSizeV){
						if (delta > testPageSize *0.5)
							page++;
					}
					else{
						if (delta > testPageSize *(change1.y < 0 ? 0.3 :0.7))
							page++;
					}
					endY=-page *this._pageSizeV;
					if (endY <-this._yOverlap)
						endY=-this._yOverlap;
					change1.y=endY-this._container.y;
				}
			}
			else
			change1.y=change2.y=0;
			if (this._snapToItem && !this._pageMode){
				endX=-endX;
				endY=-endY;
				var pt=this._owner.getSnappingPosition(endX,endY,fairygui.ScrollPane.sHelperPoint);
				endX=-pt.x;
				endY=-pt.y;
				change1.x=endX-this._container.x;
				change1.y=endY-this._container.y;
			}
			if(this._bouncebackEffect){
				if(endX > 0)
					change2.x=0-this._container.x-change1.x;
				else if(endX <-this._xOverlap)
				change2.x=-this._xOverlap-this._container.x-change1.x;
				if(endY > 0)
					change2.y=0-this._container.y-change1.y;
				else if(endY <-this._yOverlap)
				change2.y=-this._yOverlap-this._container.y-change1.y;
			}
			else {
				if(endX > 0)
					change1.x=0-this._container.x;
				else if(endX <-this._xOverlap)
				change1.x=-this._xOverlap-this._container.x;
				if(endY > 0)
					change1.y=0-this._container.y;
				else if(endY <-this._yOverlap)
				change1.y=-this._yOverlap-this._container.y;
			}
			this._tweenHelper.value=0;
			this._tweenHelper.change1=change1;
			this._tweenHelper.change2=change2;
			if(this._tweener!=null)
				this.killTween();
			this._tweening=2;
			this._tweener=Tween.to(this._tweenHelper,{value:1 },
			duration *1000,
			fairygui.ScrollPane._easeTypeFunc,
			Handler.create(this,this.__tweenComplete2));
			this._tweener.update=Handler.create(this,this.__tweenUpdate2,null,false);
			if (fireRelease==1)
				Events.dispatch("fui_pull_down_release",this._owner.displayObject);
			else if (fireRelease==2)
			Events.dispatch("fui_pull_up_release",this._owner.displayObject);
		}

		__proto.__click=function(){
			this.isDragged=false;
		}

		__proto.__mouseWheel=function(evt){
			if(!this._mouseWheelEnabled)
				return;
			var pt=this._owner.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY,fairygui.ScrollPane.sHelperPoint);
			var delta=evt["delta"];
			if (this._xOverlap > 0 && this._yOverlap==0){
				if(delta<0)
					this.setPercX(this._xPerc+this.getDeltaX(this._mouseWheelSpeed),false);
				else
				this.setPercX(this._xPerc-this.getDeltaX(this._mouseWheelSpeed),false);
			}
			else {
				if(delta<0)
					this.setPercY(this._yPerc+this.getDeltaY(this._mouseWheelSpeed),false);
				else
				this.setPercY(this._yPerc-this.getDeltaY(this._mouseWheelSpeed),false);
			}
		}

		__proto.__rollOver=function(){
			this.showScrollBar(true);
		}

		__proto.__rollOut=function(){
			this.showScrollBar(false);
		}

		__proto.showScrollBar=function(val){
			if (val){
				this.__showScrollBar(true);
				Laya.timer.clear(this,this.__showScrollBar);
			}
			else
			Laya.timer.once(500,this,this.__showScrollBar,[val]);
		}

		__proto.__showScrollBar=function(val){
			this._scrollBarVisible=val && this._viewWidth > 0 && this._viewHeight > 0;
			if (this._vtScrollBar)
				this._vtScrollBar.displayObject.visible=this._scrollBarVisible && !this._vScrollNone;
			if (this._hzScrollBar)
				this._hzScrollBar.displayObject.visible=this._scrollBarVisible && !this._hScrollNone;
		}

		__proto.__tweenUpdate=function(){
			this.syncScrollBar();
			Events.dispatch("fui_scroll",this._owner.displayObject);
		}

		__proto.__tweenComplete=function(){
			this._tweener=null;
			this._tweening=0;
			this.validateHolderPos();
			this.syncScrollBar(true);
			Events.dispatch("fui_scroll",this._owner.displayObject);
		}

		__proto.__tweenUpdate2=function(){
			this._container.pos(Math.floor(this._tweenHelper.start.x+this._tweenHelper.change1.x *this._tweenHelper.value
			+this._tweenHelper.change2.x *this._tweenHelper.value *this._tweenHelper.value),
			Math.floor(this._tweenHelper.start.y+this._tweenHelper.change1.y *this._tweenHelper.value
			+this._tweenHelper.change2.y *this._tweenHelper.value *this._tweenHelper.value));
			this.syncPos();
			this.syncScrollBar();
			Events.dispatch("fui_scroll",this._owner.displayObject);
		}

		__proto.__tweenComplete2=function(){
			this._tweener=null;
			this._tweening=0;
			this.validateHolderPos();
			this.syncPos();
			this.syncScrollBar(true);
			Events.dispatch("fui_scroll",this._owner.displayObject);
			Events.dispatch("fui_scroll_end",this._owner.displayObject);
		}

		__getset(0,__proto,'viewWidth',function(){
			return this._viewWidth;
			},function(value){
			value=value+this._owner.margin.left+this._owner.margin.right;
			if (this._vtScrollBar !=null)
				value+=this._vtScrollBar.width;
			this._owner.width=value;
		});

		__getset(0,__proto,'owner',function(){
			return this._owner;
		});

		__getset(0,__proto,'percY',function(){
			return this._yPerc;
			},function(value){
			this.setPercY(value,false);
		});

		__getset(0,__proto,'scrollSpeed',function(){
			return this._scrollSpeed;
			},function(val){
			this._scrollSpeed=this.scrollSpeed;
			if (this._scrollSpeed==0)
				this._scrollSpeed=UIConfig$1.defaultScrollSpeed;
			this._mouseWheelSpeed=this._scrollSpeed *2;
		});

		__getset(0,__proto,'percX',function(){
			return this._xPerc;
			},function(value){
			this.setPercX(value,false);
		});

		__getset(0,__proto,'bouncebackEffect',function(){
			return this._bouncebackEffect;
			},function(sc){
			this._bouncebackEffect=sc;
		});

		__getset(0,__proto,'isBottomMost',function(){
			return this._yPerc==1 || this._yOverlap==0;
		});

		__getset(0,__proto,'touchEffect',function(){
			return this._touchEffect;
			},function(sc){
			this._touchEffect=sc;
		});

		__getset(0,__proto,'mouseWheelEnabled',function(){
			return this._mouseWheelEnabled;
			},function(val){
			this._mouseWheelEnabled=val;
		});

		__getset(0,__proto,'viewHeight',function(){
			return this._viewHeight;
			},function(value){
			value=value+this._owner.margin.top+this._owner.margin.bottom;
			if (this._hzScrollBar !=null)
				value+=this._hzScrollBar.height;
			this._owner.height=value;
		});

		__getset(0,__proto,'snapToItem',function(){
			return this._snapToItem;
			},function(value){
			this._snapToItem=value;
		});

		__getset(0,__proto,'posX',function(){
			return this._xPos;
			},function(value){
			this.setPosX(value,false);
		});

		__getset(0,__proto,'posY',function(){
			return this._yPos;
			},function(value){
			this.setPosY(value,false);
		});

		__getset(0,__proto,'isRightMost',function(){
			return this._xPerc==1 || this._xOverlap==0;
		});

		__getset(0,__proto,'currentPageX',function(){
			if (!this._pageMode)
				return 0;
			var page=Math.floor(this._xPos / this._pageSizeH);
			if (this._xPos-page *this._pageSizeH > this._pageSizeH *0.5)
				page++;
			return page;
			},function(value){
			if(this._pageMode && this._xOverlap>0)
				this.setPosX(value *this._pageSizeH,false);
		});

		__getset(0,__proto,'currentPageY',function(){
			if (!this._pageMode)
				return 0;
			var page=Math.floor(this._yPos / this._pageSizeV);
			if (this._yPos-page *this._pageSizeV > this._pageSizeV *0.5)
				page++;
			return page;
			},function(value){
			if(this._pageMode && this._yOverlap>0)
				this.setPosY(value *this._pageSizeV,false);
		});

		__getset(0,__proto,'pageController',function(){
			return this._pageController;
			},function(value){
			this._pageController=value;
		});

		__getset(0,__proto,'scrollingPosX',function(){
			return ToolSet.clamp(-this._container.x,0,this._xOverlap);
		});

		__getset(0,__proto,'scrollingPosY',function(){
			return ToolSet.clamp(-this._container.y,0,this._yOverlap);
		});

		__getset(0,__proto,'contentWidth',function(){
			return this._contentWidth;
		});

		__getset(0,__proto,'contentHeight',function(){
			return this._contentHeight;
		});

		ScrollPane._easeTypeFunc=null
		ScrollPane.draggingPane=null
		ScrollPane._gestureFlag=0;
		__static(ScrollPane,
		['sHelperRect',function(){return this.sHelperRect=new Rectangle();},'sHelperPoint',function(){return this.sHelperPoint=new Point();}
		]);
		ScrollPane.__init$=function(){
			//class TweenHelper
			TweenHelper=(function(){
				function TweenHelper(){
					this.value=NaN;
					this.start=null;
					this.change1=null;
					this.change2=null;
					this.start=new Point();
					this.change1=new Point();
					this.change2=new Point();
				}
				__class(TweenHelper,'');
				TweenHelper.calculateChange=function(velocity,duration){
					return (duration *TweenHelper.checkpoint *velocity)/ TweenHelper.easeOutCubic(TweenHelper.checkpoint,0,1,1);
				}
				TweenHelper.easeOutCubic=function(t,b,c,d){
					return c *((t=t / d-1)*t *t+1)+b;
				}
				TweenHelper.checkpoint=0.05;
				return TweenHelper;
			})()
		}

		return ScrollPane;
	})()


	//class fairygui.ScrollType
	var ScrollType=(function(){
		function ScrollType(){}
		__class(ScrollType,'fairygui.ScrollType');
		ScrollType.parse=function(value){
			switch (value){
				case "horizontal":
					return 0;
				case "vertical":
					return 1;
				case "both":
					return 2;
				default :
					return 1;
				}
		}

		ScrollType.Horizontal=0;
		ScrollType.Vertical=1;
		ScrollType.Both=2;
		return ScrollType;
	})()


	//class fairygui.Transition
	var Transition=(function(){
		var TransitionActionType,TransitionItem,TransitionValue;
		function Transition(owner){
			this.name=null;
			this.autoPlayRepeat=1;
			this.autoPlayDelay=0;
			this._owner=null;
			this._ownerBaseX=0;
			this._ownerBaseY=0;
			this._items=null;
			this._totalTimes=0;
			this._totalTasks=0;
			this._playing=false;
			this._onComplete=null;
			this._options=0;
			this._reversed=false;
			this._maxTime=0;
			this._autoPlay=false;
			this.OPTION_IGNORE_DISPLAY_CONTROLLER=1;
			this.OPTION_AUTO_STOP_DISABLED=2;
			this.OPTION_AUTO_STOP_AT_END=4;
			this.FRAME_RATE=24;
			this._owner=owner;
			this._items=[];
		}

		__class(Transition,'fairygui.Transition');
		var __proto=Transition.prototype;
		__proto.play=function(onComplete,times,delay){
			(times===void 0)&& (times=1);
			(delay===void 0)&& (delay=0);
			this._play(onComplete,times,delay,false);
		}

		__proto.playReverse=function(onComplete,times,delay){
			(times===void 0)&& (times=1);
			(delay===void 0)&& (delay=0);
			this._play(onComplete,times,delay,true);
		}

		__proto.changeRepeat=function(value){
			this._totalTimes=value;
		}

		__proto._play=function(onComplete,times,delay,reversed){
			(times===void 0)&& (times=1);
			(delay===void 0)&& (delay=0);
			(reversed===void 0)&& (reversed=false);
			this.stop();
			this._totalTimes=times;
			this._reversed=reversed;
			this.internalPlay(delay);
			this._playing=this._totalTasks > 0;
			if(this._playing){
				this._onComplete=onComplete;
				if((this._options & this.OPTION_IGNORE_DISPLAY_CONTROLLER)!=0){
					var cnt=this._items.length;
					for(var i=0;i < cnt;i++){
						var item=this._items[i];
						if(item.target !=null && item.target !=this._owner)
							item.displayLockToken=item.target.addDisplayLock();
					}
				}
			}
			else if(onComplete !=null){
				onComplete.run();
			}
		}

		__proto.stop=function(setToComplete,processCallback){
			(setToComplete===void 0)&& (setToComplete=true);
			(processCallback===void 0)&& (processCallback=false);
			if(this._playing){
				this._playing=false;
				this._totalTasks=0;
				this._totalTimes=0;
				var handler=this._onComplete;
				this._onComplete=null;
				var cnt=this._items.length;
				var i=NaN;
				var item;
				if(this._reversed){
					for(i=cnt-1;i>=0;i--){
						item=this._items[i];
						if(item.target==null)
							continue ;
						this.stopItem(item,setToComplete);
					}
				}
				else {
					for(i=0;i < cnt;i++){
						item=this._items[i];
						if(item.target==null)
							continue ;
						this.stopItem(item,setToComplete);
					}
				}
				if(processCallback && handler !=null){
					handler.run();
				}
			}
		}

		__proto.stopItem=function(item,setToComplete){
			if (item.displayLockToken!=0){
				item.target.releaseDisplayLock(item.displayLockToken);
				item.displayLockToken=0;
			}
			if (item.type==12 && item.filterCreated)
				item.target.filters=null;
			if(item.completed)
				return;
			if(item.tweener !=null){
				item.tweener.clear();
				item.tweener=null;
			}
			if(item.type==10){
				var trans=(item.target).getTransition(item.value.s);
				if(trans !=null)
					trans.stop(setToComplete,false);
			}
			else if(item.type==11){
				Laya.timer.clear(item,item.__shake);
				item.target._gearLocked=true;
				item.target.setXY(item.target.x-item.startValue.f1,item.target.y-item.startValue.f2);
				item.target._gearLocked=false;
			}
			else {
				if(setToComplete){
					if(item.tween){
						if(!item.yoyo || item.repeat % 2==0)
							this.applyValue(item,this._reversed?item.startValue:item.endValue);
						else
						this.applyValue(item,this._reversed?item.endValue:item.startValue);
					}
					else if(item.type !=9)
					this.applyValue(item,item.value);
				}
			}
		}

		__proto.dispose=function(){
			if (!this._playing)
				return;
			this._playing=false;
			var cnt=this._items.length;
			for (var i=0;i < cnt;i++){
				var item=this._items[i];
				if (item.target==null || item.completed)
					continue ;
				if (item.tweener !=null){
					item.tweener.clear();
					item.tweener=null;
				}
				if (item.type==10){
					var trans=(item.target).getTransition(item.value.s);
					if (trans !=null)
						trans.dispose();
				}
				else if (item.type==11){
					Laya.timer.clear(item,item.__shake);
				}
			}
		}

		__proto.setValue=function(label,__args){
			var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
			var cnt=this._items.length;
			var value;
			for(var i=0;i < cnt;i++){
				var item=this._items[i];
				if(item.label==null && item.label2==null)
					continue ;
				if(item.label==label){
					if(item.tween)
						value=item.startValue;
					else
					value=item.value;
				}
				else if(item.label2==label){
					value=item.endValue;
				}
				else
				continue ;
				switch(item.type){
					case 0:
					case 1:
					case 3:
					case 2:
					case 13:
						value.b1=true;
						value.b2=true;
						value.f1=parseFloat(args[0]);
						value.f2=parseFloat(args[1]);
						break ;
					case 4:
						value.f1=parseFloat(args[0]);
						break ;
					case 5:
						value.i=parseInt(args[0]);
						break ;
					case 6:
						value.s=args[0];
						break ;
					case 7:
						value.i=parseInt(args[0]);
						if(args.length > 1)
							value.b=args[1];
						break ;
					case 8:
						value.b=args[0];
						break ;
					case 9:
						value.s=args[0];
						if(args.length > 1)
							value.f1=parseFloat(args[1]);
						break ;
					case 10:
						value.s=args[0];
						if(args.length > 1)
							value.i=parseInt(args[1]);
						break ;
					case 11:
						value.f1=parseFloat(args[0]);
						if(args.length > 1)
							value.f2=parseFloat(args[1]);
						break ;
					case 12:
						value.f1=parseFloat(args[0]);
						value.f2=parseFloat(args[1]);
						value.f3=parseFloat(args[2]);
						value.f4=parseFloat(args[3]);
						break ;
					}
			}
		}

		__proto.setHook=function(label,callback){
			var cnt=this._items.length;
			for(var i=0;i < cnt;i++){
				var item=this._items[i];
				if(item.label==label){
					item.hook=callback;
					break ;
				}
				else if(item.label2==label){
					item.hook2=callback;
					break ;
				}
			}
		}

		__proto.clearHooks=function(){
			var cnt=this._items.length;
			for(var i=0;i < cnt;i++){
				var item=this._items[i];
				item.hook=null;
				item.hook2=null;
			}
		}

		__proto.setTarget=function(label,newTarget){
			var cnt=this._items.length;
			for (var i=0;i < cnt;i++){
				var item=this._items[i];
				if (item.label==label)
					item.targetId=newTarget.id;
			}
		}

		__proto.setDuration=function(label,value){
			var cnt=this._items.length;
			for (var i=0;i < cnt;i++){
				var item=this._items[i];
				if (item.tween && item.label==label)
					item.duration=value;
			}
		}

		__proto.updateFromRelations=function(targetId,dx,dy){
			var cnt=this._items.length;
			if(cnt==0)
				return;
			for(var i=0;i < cnt;i++){
				var item=this._items[i];
				if(item.type==0 && item.targetId==targetId){
					if(item.tween){
						item.startValue.f1+=dx;
						item.startValue.f2+=dy;
						item.endValue.f1+=dx;
						item.endValue.f2+=dy;
					}
					else {
						item.value.f1+=dx;
						item.value.f2+=dy;
					}
				}
			}
		}

		__proto.OnOwnerRemovedFromStage=function(){
			if ((this._options & this.OPTION_AUTO_STOP_DISABLED)==0)
				this.stop((this._options & this.OPTION_AUTO_STOP_AT_END)!=0 ? true :false,false);
		}

		__proto.internalPlay=function(delay){
			(delay===void 0)&& (delay=0);
			this._ownerBaseX=this._owner.x;
			this._ownerBaseY=this._owner.y;
			this._totalTasks=0;
			var cnt=this._items.length;
			var startTime=NaN;
			var item;
			for(var i=0;i < cnt;i++){
				item=this._items[i];
				if(item.targetId)
					item.target=this._owner.getChildById(item.targetId);
				else
				item.target=this._owner;
				if(item.target==null)
					continue ;
				if(item.tween){
					if(this._reversed)
						startTime=delay+this._maxTime-item.time-item.duration;
					else
					startTime=delay+item.time;
					if(startTime>0){
						this._totalTasks++;
						item.completed=false;
						item.tweener=Tween.to(item.value,{},startTime*1000,null,Handler.create(this,this.__delayCall,[item]));
						item.tweener.update=null;
					}
					else
					this.startTween(item);
				}
				else {
					if(this._reversed)
						startTime=delay+this._maxTime-item.time;
					else
					startTime=delay+item.time;
					if(startTime==0)
						this.applyValue(item,item.value);
					else {
						item.completed=false;
						this._totalTasks++;
						item.tweener=Tween.to(item.value,{},startTime*1000,null,Handler.create(this,this.__delayCall2,[item]));
						item.tweener.update=null;
					}
				}
			}
		}

		__proto.prepareValue=function(item,toProps,reversed){
			(reversed===void 0)&& (reversed=false);
			var startValue;
			var endValue;
			if(reversed){
				startValue=item.endValue;
				endValue=item.startValue;
			}
			else{
				startValue=item.startValue;
				endValue=item.endValue;
			}
			switch(item.type){
				case 0:
				case 1:
					if(item.type==0){
						if (item.target==this._owner){
							if(!startValue.b1)
								startValue.f1=0;
							if(!startValue.b2)
								startValue.f2=0;
						}
						else{
							if(!startValue.b1)
								startValue.f1=item.target.x;
							if(!startValue.b2)
								startValue.f2=item.target.y;
						}
					}
					else{
						if(!startValue.b1)
							startValue.f1=item.target.width;
						if(!startValue.b2)
							startValue.f2=item.target.height;
					}
					item.value.f1=startValue.f1;
					item.value.f2=startValue.f2;
					if(!endValue.b1)
						endValue.f1=item.value.f1;
					if(!endValue.b2)
						endValue.f2=item.value.f2;
					item.value.b1=startValue.b1 || endValue.b1;
					item.value.b2=startValue.b2 || endValue.b2;
					toProps.f1=endValue.f1;
					toProps.f2=endValue.f2;
					break ;
				case 2:
				case 13:
					item.value.f1=startValue.f1;
					item.value.f2=startValue.f2;
					toProps.f1=endValue.f1;
					toProps.f2=endValue.f2;
					break ;
				case 4:
					item.value.f1=startValue.f1;
					toProps.f1=endValue.f1;
					break ;
				case 5:
					item.value.i=startValue.i;
					toProps.i=endValue.i;
					break ;
				case 12:
					item.value.f1=startValue.f1;
					item.value.f2=startValue.f2;
					item.value.f3=startValue.f3;
					item.value.f4=startValue.f4;
					toProps.f1=endValue.f1;
					toProps.f2=endValue.f2;
					toProps.f3=endValue.f3;
					toProps.f4=endValue.f4;
					break ;
				}
			toProps.dummy=0;
		}

		__proto.startTween=function(item){
			var toProps={};
			this.prepareValue(item,toProps,this._reversed);
			this.applyValue(item,item.value);
			var completeHandler;
			if(item.repeat!=0){
				item.tweenTimes=0;
				completeHandler=Handler.create(this,this.__tweenRepeatComplete,[item]);
			}
			else
			completeHandler=Handler.create(this,this.__tweenComplete,[item]);
			this._totalTasks++;
			item.completed=false;
			item.tweener=Tween.to(item.value,
			toProps,
			item.duration*1000,
			item.easeType,
			completeHandler);
			item.tweener.update=Handler.create(this,this.__tweenUpdate,[item],false);
			if(item.hook !=null)
				item.hook.run();
		}

		__proto.__delayCall=function(item){
			item.tweener=null;
			this._totalTasks--;
			this.startTween(item);
		}

		__proto.__delayCall2=function(item){
			item.tweener=null;
			this._totalTasks--;
			item.completed=true;
			this.applyValue(item,item.value);
			if(item.hook !=null)
				item.hook.run();
			this.checkAllComplete();
		}

		__proto.__tweenUpdate=function(item){
			this.applyValue(item,item.value);
		}

		__proto.__tweenComplete=function(item){
			item.tweener=null;
			this._totalTasks--;
			item.completed=true;
			if(item.hook2 !=null)
				item.hook2.run();
			this.checkAllComplete();
		}

		__proto.__tweenRepeatComplete=function(item){
			item.tweenTimes++;
			if(item.repeat==-1 || item.tweenTimes < item.repeat+1){
				var toProps={};
				var reversed=false;
				if(item.yoyo){
					if(this._reversed)
						reversed=item.tweenTimes % 2==0;
					else
					reversed=item.tweenTimes % 2==1;
				}
				else
				reversed=this._reversed;
				this.prepareValue(item,toProps,reversed);
				item.tweener=Tween.to(item.value,
				toProps,
				item.duration *1000,
				item.easeType,
				Handler.create(this,this.__tweenRepeatComplete,[item]));
				item.tweener.update=Handler.create(this,this.__tweenUpdate,[item],false);
			}
			else
			this.__tweenComplete(item);
		}

		__proto.__playTransComplete=function(item){
			this._totalTasks--;
			item.completed=true;
			this.checkAllComplete();
		}

		__proto.checkAllComplete=function(){
			if(this._playing && this._totalTasks==0){
				if(this._totalTimes < 0){
					Laya.timer.callLater(this,this.internalPlay);
				}
				else {
					this._totalTimes--;
					if(this._totalTimes > 0)
						Laya.timer.callLater(this,this.internalPlay);
					else {
						this._playing=false;
						var cnt=this._items.length;
						for (var i=0;i < cnt;i++){
							var item=this._items[i];
							if (item.target !=null){
								if (item.displayLockToken!=0){
									item.target.releaseDisplayLock(item.displayLockToken);
									item.displayLockToken=0;
								}
								if (item.filterCreated){
									item.filterCreated=false;
									item.target.filters=null;
								}
							}
						}
						if(this._onComplete !=null){
							var handler=this._onComplete;
							this._onComplete=null;
							handler.run();
						}
					}
				}
			}
		}

		__proto.applyValue=function(item,value){
			item.target._gearLocked=true;
			switch(item.type){
				case 0:
					if(item.target==this._owner){
						var f1=0,f2=0;
						if(!value.b1)
							f1=item.target.x;
						else
						f1=value.f1+this._ownerBaseX;
						if(!value.b2)
							f2=item.target.y;
						else
						f2=value.f2+this._ownerBaseY;
						item.target.setXY(f1,f2);
					}
					else {
						if(!value.b1)
							value.f1=item.target.x;
						if(!value.b2)
							value.f2=item.target.y;
						item.target.setXY(value.f1,value.f2);
					}
					break ;
				case 1:
					if(!value.b1)
						value.f1=item.target.width;
					if(!value.b2)
						value.f2=item.target.height;
					item.target.setSize(value.f1,value.f2);
					break ;
				case 3:
					item.target.setPivot(value.f1,value.f2);
					break ;
				case 4:
					item.target.alpha=value.f1;
					break ;
				case 5:
					item.target.rotation=value.i;
					break ;
				case 2:
					item.target.setScale(value.f1,value.f2);
					break ;
				case 13:
					item.target.setSkew(value.f1,value.f2);
					break ;
				case 6:
					(item.target).color=value.s;
					break ;
				case 7:
					if(!value.b1)
						value.i=(item.target).frame;
					(item.target).frame=value.i;
					(item.target).playing=value.b;
					break ;
				case 8:
					item.target.visible=value.b;
					break ;
				case 10:;
					var trans=(item.target).getTransition(value.s);
					if(trans !=null){
						if(value.i==0)
							trans.stop(false,true);
						else if(trans.playing)
						trans._totalTimes=value.i;
						else {
							item.completed=false;
							this._totalTasks++;
							if(this._reversed)
								trans.playReverse(Handler.create(this,this.__playTransComplete,[item]),item.value.i);
							else
							trans.play(Handler.create(this,this.__playTransComplete,[item]),item.value.i);
						}
					}
					break ;
				case 9:;
					var pi=UIPackage.getItemByURL(value.s);
					if(pi)
						GRoot.inst.playOneShotSound(pi.owner.getItemAssetURL(pi));
					else
					GRoot.inst.playOneShotSound(value.s);
					break ;
				case 11:
					item.startValue.f1=0;
					item.startValue.f2=0;
					item.startValue.f3=item.value.f2;
					item.startValue.i=Laya.timer.currTimer;
					Laya.timer.frameLoop(1,item,item.__shake,[this]);
					this._totalTasks++;
					item.completed=false;
					break ;
				case 12:;
					var arr=item.target.filters;
					if(!arr || !(((arr[0])instanceof laya.filters.ColorFilter )))
						item.filterCreated=true;
					var cm=new ColorMatrix();
					cm.adjustBrightness(value.f1);
					cm.adjustContrast(value.f2);
					cm.adjustSaturation(value.f3);
					cm.adjustHue(value.f4);
					arr=[new ColorFilter(cm)];
					item.target.filters=arr;
					break ;
				}
			item.target._gearLocked=false;
		}

		__proto.__shakeItem=function(item){
			var r=Math.ceil(item.value.f1 *item.startValue.f3 / item.value.f2);
			var rx=(Math.random()*2-1)*r;
			var ry=(Math.random()*2-1)*r;
			rx=rx > 0 ? Math.ceil(rx):Math.floor(rx);
			ry=ry > 0 ? Math.ceil(ry):Math.floor(ry);
			item.target._gearLocked=true;
			item.target.setXY(item.target.x-item.startValue.f1+rx,item.target.y-item.startValue.f2+ry);
			item.target._gearLocked=false;
			item.startValue.f1=rx;
			item.startValue.f2=ry;
			var t=Laya.timer.currTimer;
			item.startValue.f3-=(t-item.startValue.i)/ 1000;
			item.startValue.i=t;
			if(item.startValue.f3 <=0){
				item.target._gearLocked=true;
				item.target.setXY(item.target.x-item.startValue.f1,item.target.y-item.startValue.f2);
				item.target._gearLocked=false;
				item.completed=true;
				this._totalTasks--;
				Laya.timer.clear(item,item.__shake);
				this.checkAllComplete();
			}
		}

		__proto.setup=function(xml){
			this.name=xml.getAttribute("name");
			var str=xml.getAttribute("options");
			if(str)
				this._options=parseInt(str);
			str=xml.getAttribute("autoPlay");
			if(str)
				this._autoPlay=str=="true";
			if(this._autoPlay){
				str=xml.getAttribute("autoPlayRepeat");
				if(str)
					this.autoPlayRepeat=parseInt(str);
				str=xml.getAttribute("autoPlayDelay");
				if(str)
					this.autoPlayDelay=parseFloat(str);
			};
			var col=xml.childNodes;
			var length1=col.length;
			for(var i1=0;i1 < length1;i1++){
				var cxml=col[i1];
				if(cxml.nodeName!="item")
					continue ;
				var item=new TransitionItem();
				this._items.push(item);
				item.time=parseInt(cxml.getAttribute("time"))/ this.FRAME_RATE;
				item.targetId=cxml.getAttribute("target");
				str=cxml.getAttribute("type");
				switch(str){
					case "XY":
						item.type=0;
						break ;
					case "Size":
						item.type=1;
						break ;
					case "Scale":
						item.type=2;
						break ;
					case "Pivot":
						item.type=3;
						break ;
					case "Alpha":
						item.type=4;
						break ;
					case "Rotation":
						item.type=5;
						break ;
					case "Color":
						item.type=6;
						break ;
					case "Animation":
						item.type=7;
						break ;
					case "Visible":
						item.type=8;
						break ;
					case "Sound":
						item.type=9;
						break ;
					case "Transition":
						item.type=10;
						break ;
					case "Shake":
						item.type=11;
						break ;
					case "ColorFilter":
						item.type=12;
						break ;
					case "Skew":
						item.type=13;
						break ;
					default :
						item.type=14;
						break ;
					}
				item.tween=cxml.getAttribute("tween")=="true";
				item.label=cxml.getAttribute("label");
				if(item.tween){
					item.duration=parseInt(cxml.getAttribute("duration"))/ this.FRAME_RATE;
					if(item.time+item.duration > this._maxTime)
						this._maxTime=item.time+item.duration;
					str=cxml.getAttribute("ease");
					if(str)
						item.easeType=ToolSet.parseEaseType(str);
					str=cxml.getAttribute("repeat");
					if(str)
						item.repeat=parseInt(str);
					item.yoyo=cxml.getAttribute("yoyo")=="true";
					item.label2=cxml.getAttribute("label2");
					var v=cxml.getAttribute("endValue");
					if(v){
						this.decodeValue(item.type,cxml.getAttribute("startValue"),item.startValue);
						this.decodeValue(item.type,v,item.endValue);
					}
					else {
						item.tween=false;
						this.decodeValue(item.type,cxml.getAttribute("startValue"),item.value);
					}
				}
				else {
					if(item.time > this._maxTime)
						this._maxTime=item.time;
					this.decodeValue(item.type,cxml.getAttribute("value"),item.value);
				}
			}
		}

		__proto.decodeValue=function(type,str,value){
			var arr;
			switch(type){
				case 0:
				case 1:
				case 3:
				case 13:
					arr=str.split(",");
					if(arr[0]=="-"){
						value.b1=false;
					}
					else {
						value.f1=parseFloat(arr[0]);
						value.b1=true;
					}
					if(arr[1]=="-"){
						value.b2=false;
					}
					else {
						value.f2=parseFloat(arr[1]);
						value.b2=true;
					}
					break ;
				case 4:
					value.f1=parseFloat(str);
					break ;
				case 5:
					value.i=parseInt(str);
					break ;
				case 2:
					arr=str.split(",");
					value.f1=parseFloat(arr[0]);
					value.f2=parseFloat(arr[1]);
					break ;
				case 6:
					value.s=str;
					break ;
				case 7:
					arr=str.split(",");
					if(arr[0]=="-"){
						value.b1=false;
					}
					else {
						value.i=parseInt(arr[0]);
						value.b1=true;
					}
					value.b=arr[1]=="p";
					break ;
				case 8:
					value.b=str=="true";
					break ;
				case 9:
					arr=str.split(",");
					value.s=arr[0];
					if(arr.length > 1){
						var intv=parseInt(arr[1]);
						if(intv==0 || intv==100)
							value.f1=1;
						else
						value.f1=intv / 100;
					}
					else
					value.f1=1;
					break ;
				case 10:
					arr=str.split(",");
					value.s=arr[0];
					if(arr.length > 1)
						value.i=parseInt(arr[1]);
					else
					value.i=1;
					break ;
				case 11:
					arr=str.split(",");
					value.f1=parseFloat(arr[0]);
					value.f2=parseFloat(arr[1]);
					break ;
				case 12:
					arr=str.split(",");
					value.f1=parseFloat(arr[0]);
					value.f2=parseFloat(arr[1]);
					value.f3=parseFloat(arr[2]);
					value.f4=parseFloat(arr[3]);
					break ;
				}
		}

		__getset(0,__proto,'autoPlay',function(){
			return this._autoPlay;
			},function(value){
			if (this._autoPlay !=value){
				this._autoPlay=value;
				if (this._autoPlay){
					if (this._owner.onStage)
						this.play(null,this.autoPlayRepeat,this.autoPlayDelay);
				}
				else{
					if (!this._owner.onStage)
						this.stop(false,true);
				}
			}
		});

		__getset(0,__proto,'playing',function(){
			return this._playing;
		});

		Transition.__init$=function(){
			//class TransitionActionType
			TransitionActionType=(function(){
				function TransitionActionType(){};
				__class(TransitionActionType,'');
				TransitionActionType.XY=0;
				TransitionActionType.Size=1;
				TransitionActionType.Scale=2;
				TransitionActionType.Pivot=3;
				TransitionActionType.Alpha=4;
				TransitionActionType.Rotation=5;
				TransitionActionType.Color=6;
				TransitionActionType.Animation=7;
				TransitionActionType.Visible=8;
				TransitionActionType.Sound=9;
				TransitionActionType.Transition=10;
				TransitionActionType.Shake=11;
				TransitionActionType.ColorFilter=12;
				TransitionActionType.Skew=13;
				TransitionActionType.Unknown=14;
				return TransitionActionType;
			})()
			//class TransitionItem
			TransitionItem=(function(){
				function TransitionItem(){
					this.time=0;
					this.targetId=null;
					this.type=0;
					this.duration=0;
					this.value=null;
					this.startValue=null;
					this.endValue=null;
					this.easeType=null;
					this.repeat=0;
					this.yoyo=false;
					this.tween=false;
					this.label=null;
					this.label2=null;
					this.hook=null;
					this.hook2=null;
					this.tweenTimes=0;
					this.tweener=null;
					this.completed=false;
					this.target=null;
					this.filterCreated=false;
					this.displayLockToken=0;
					this.easeType=Ease.quadOut;
					this.value=new TransitionValue();
					this.startValue=new TransitionValue();
					this.endValue=new TransitionValue();
				}
				__class(TransitionItem,'');
				var __proto=TransitionItem.prototype;
				__proto.__shake=function(trans){
					trans.__shakeItem(this);
				}
				return TransitionItem;
			})()
			//class TransitionValue
			TransitionValue=(function(){
				function TransitionValue(){
					this.f1=0;
					this.f2=0;
					this.f3=0;
					this.f4=NaN;
					this.i=0;
					this.b=false;
					this.s=null;
					this.b1=true;
					this.b2=true;
				}
				__class(TransitionValue,'');
				return TransitionValue;
			})()
		}

		return Transition;
	})()


	//class fairygui.UIConfig
	var UIConfig$1=(function(){
		function UIConfig(){}
		__class(UIConfig,'fairygui.UIConfig',null,'UIConfig$1');
		UIConfig.defaultFont="宋体";
		UIConfig.windowModalWaiting=null
		UIConfig.globalModalWaiting=null
		UIConfig.modalLayerColor="rgba(33,33,33,0.2)";
		UIConfig.buttonSound=null
		UIConfig.buttonSoundVolumeScale=1;
		UIConfig.horizontalScrollBar=null
		UIConfig.verticalScrollBar=null
		UIConfig.defaultScrollSpeed=25;
		UIConfig.defaultTouchScrollSpeedRatio=1;
		UIConfig.defaultScrollBarDisplay=1;
		UIConfig.defaultScrollTouchEffect=true;
		UIConfig.defaultScrollBounceEffect=true;
		UIConfig.popupMenu=null
		UIConfig.popupMenu_seperator=null
		UIConfig.loaderErrorSign=null
		UIConfig.tooltipsWin=null
		UIConfig.defaultComboBoxVisibleItemCount=10;
		UIConfig.touchScrollSensitivity=20;
		UIConfig.touchDragSensitivity=10;
		UIConfig.clickDragSensitivity=2;
		UIConfig.bringWindowToFrontOnClick=true;
		UIConfig.frameTimeForAsyncUIConstruction=2;
		return UIConfig;
	})()


	//class fairygui.UIObjectFactory
	var UIObjectFactory=(function(){
		function UIObjectFactory(){}
		__class(UIObjectFactory,'fairygui.UIObjectFactory');
		UIObjectFactory.setPackageItemExtension=function(url,type){
			if (url==null)
				throw new Error("Invaild url: "+url);
			var pi=UIPackage.getItemByURL(url);
			if (pi !=null)
				pi.extensionType=type;
			UIObjectFactory.packageItemExtensions[url]=type;
		}

		UIObjectFactory.setLoaderExtension=function(type){
			fairygui.UIObjectFactory.loaderType=type;
		}

		UIObjectFactory.resolvePackageItemExtension=function(pi){
			pi.extensionType=UIObjectFactory.packageItemExtensions["ui://"+pi.owner.id+pi.id];
			if(!pi.extensionType)
				pi.extensionType=UIObjectFactory.packageItemExtensions["ui://"+pi.owner.name+"/"+pi.name];
		}

		UIObjectFactory.newObject=function(pi){
			switch (pi.type){
				case 0:
					return new GImage();
				case 2:
					return new GMovieClip();
				case 4:{
						var cls=pi.extensionType;
						if (cls)
							return new cls();
						var xml=pi.owner.getItemAsset(pi);
						var extention=xml.getAttribute("extention");
						if(extention !=null){
						switch(extention){
							case "Button":
								return new GButton();
							case "Label":
								return new GLabel();
							case "ProgressBar":
								return new GProgressBar();
							case "Slider":
								return new GSlider();
							case "ScrollBar":
								return new GScrollBar();
							case "ComboBox":
								return new GComboBox();
							default :
								return new GComponent();
							}
					}
					else
					return new GComponent();
				}
			}
			return null;
		}

		UIObjectFactory.newObject2=function(type){
			switch (type){
				case "image":
					return new GImage();
				case "movieclip":
					return new GMovieClip();
				case "component":
					return new GComponent();
				case "text":
					return new GBasicTextField();
				case "richtext":
					return new GRichTextField();
				case "inputtext":
					return new GTextInput();
				case "group":
					return new GGroup();
				case "list":
					return new GList();
				case "graph":
					return new GGraph();
				case "loader":
					if (fairygui.UIObjectFactory.loaderType !=null)
						return new fairygui.UIObjectFactory.loaderType();
					else
					return new GLoader();
				}
			return null;
		}

		UIObjectFactory.packageItemExtensions={};
		UIObjectFactory.loaderType=null
		return UIObjectFactory;
	})()


	//class fairygui.UIPackage
	var UIPackage=(function(){
		var AtlasSprite;
		function UIPackage(){
			this._id=null;
			this._name=null;
			this._basePath=null;
			this._items=null;
			this._itemsById=null;
			this._itemsByName=null;
			this._resKey=null;
			this._resData=null;
			this._customId=null;
			this._sprites=null;
			this._hitTestDatas=null;
			this._items=[];
			this._sprites={};
			this._hitTestDatas={};
		}

		__class(UIPackage,'fairygui.UIPackage');
		var __proto=UIPackage.prototype;
		__proto.create=function(resKey){
			this._resKey=resKey;
			this.loadPackage();
		}

		__proto.loadPackage=function(){
			var str;
			var arr;
			this.decompressPackage(AssetProxy.inst.getRes(this._resKey+".fui"));
			str=this.getDesc("sprites.bytes");
			arr=str.split("\n");
			var cnt=arr.length;
			for(var i=1;i < cnt;i++){
				str=arr[i];
				if(!str)
					continue ;
				var arr2=str.split(" ");
				var sprite=new AtlasSprite();
				var itemId=arr2[0];
				var binIndex=parseInt(arr2[1]);
				if(binIndex >=0)
					sprite.atlas="atlas"+binIndex;
				else {
					var pos=itemId.indexOf("_");
					if(pos==-1)
						sprite.atlas="atlas_"+itemId;
					else
					sprite.atlas="atlas_"+itemId.substr(0,pos);
				}
				sprite.rect.x=parseInt(arr2[2]);
				sprite.rect.y=parseInt(arr2[3]);
				sprite.rect.width=parseInt(arr2[4]);
				sprite.rect.height=parseInt(arr2[5]);
				sprite.rotated=arr2[6]=="1";
				this._sprites[itemId]=sprite;
			}
			str=this.getDesc("hittest.bytes");
			if(str!=null){
				var ba=ToolSet.base64Decode(str);
				ba.endian="bigEndian";
				while(ba.bytesAvailable){
					var hitTestData=new PixelHitTestData();
					this._hitTestDatas[ba.readUTFString()]=hitTestData;
					hitTestData.load(ba);
				}
			}
			str=this.getDesc("package.xml");
			var xml=Utils.parseXMLFromString(str);
			var rootNode=xml.firstChild;
			this._id=rootNode.getAttribute("id");
			this._name=rootNode.getAttribute("name");
			var resources=ToolSet.findChildNode(rootNode,"resources").childNodes;
			this._itemsById={};
			this._itemsByName={};
			var pi;
			var cxml;
			var length1=resources.length;
			for(var i1=0;i1 < length1;i1++){
				cxml=resources[i1];
				if(cxml.nodeType!=1)
					continue ;
				pi=new PackageItem();
				pi.owner=this;
				pi.type=PackageItemType.parse(cxml.nodeName);
				pi.id=cxml.getAttribute("id");
				pi.name=cxml.getAttribute("name");
				pi.file=cxml.getAttribute("file");
				str=cxml.getAttribute("size");
				if(str){
					arr=str.split(",");
					pi.width=parseInt(arr[0]);
					pi.height=parseInt(arr[1]);
				}
				switch(pi.type){
					case 0:{
							str=cxml.getAttribute("scale");
							if(str=="9grid"){
								pi.scale9Grid=new laya.maths.Rectangle();
								str=cxml.getAttribute("scale9grid");
								if(str){
									arr=str.split(",");
									pi.scale9Grid.x=parseInt(arr[0]);
									pi.scale9Grid.y=parseInt(arr[1]);
									pi.scale9Grid.width=parseInt(arr[2]);
									pi.scale9Grid.height=parseInt(arr[3]);
									str=cxml.getAttribute("gridTile");
									if(str)
										pi.tileGridIndice=parseInt(str);
								}
							}
							else if(str=="tile"){
								pi.scaleByTile=true;
							}
							str=cxml.getAttribute("smoothing");
							pi.smoothing=str !="false";
							break ;
						}
					case 4:
						UIObjectFactory.resolvePackageItemExtension(pi);
						break ;
					}
				this._items.push(pi);
				this._itemsById[pi.id]=pi;
				if(pi.name !=null)
					this._itemsByName[pi.name]=pi;
			}
			cnt=this._items.length;
			for(i=0;i < cnt;i++){
				pi=this._items[i];
				if(pi.type==6){
					this.loadFont(pi);
					fairygui.UIPackage._bitmapFonts[pi.bitmapFont.id]=pi.bitmapFont;
				}
			}
		}

		__proto.decompressPackage=function(buf){
			this._resData={};
			var data;
			var inflater=new Zlib.RawInflate(buf);data=inflater.decompress();;
			var source=new Byte(data).readUTFBytes();
			var curr=0;
			var fn;
			var size=NaN;
			while(true){
				var pos=source.indexOf("|",curr);
				if(pos==-1)
					break ;
				fn=source.substring(curr,pos);
				curr=pos+1;
				pos=source.indexOf("|",curr);
				size=parseInt(source.substring(curr,pos));
				curr=pos+1;
				this._resData[fn]=source.substr(curr,size);
				curr+=size;
			}
		}

		__proto.dispose=function(){
			var cnt=this._items.length;
			for(var i=0;i < cnt;i++){
				var pi=this._items[i];
				if(pi.type==7){
					var texture=pi.texture;
					if(texture !=null)
						texture.destroy(true);
				}
				if(pi.bitmapFont !=null){
					delete fairygui.UIPackage._bitmapFonts[pi.bitmapFont.id];
				}
			}
		}

		__proto.createObject=function(resName,userClass){
			var pi=this._itemsByName[resName];
			if (pi)
				return this.internalCreateObject(pi,userClass);
			else
			return null;
		}

		__proto.internalCreateObject=function(item,userClass){
			var g;
			if (item.type==4){
				if (userClass !=null)
					g=new userClass();
				else
				g=UIObjectFactory.newObject(item);
			}
			else
			g=UIObjectFactory.newObject(item);
			if (g==null)
				return null;
			fairygui.UIPackage._constructing++;
			g.packageItem=item;
			g.constructFromResource();
			fairygui.UIPackage._constructing--;
			return g;
		}

		__proto.getItemById=function(itemId){
			return this._itemsById[itemId];
		}

		__proto.getItemByName=function(resName){
			return this._itemsByName[resName];
		}

		__proto.getItemAssetByName=function(resName){
			var pi=this._itemsByName[resName];
			if (pi==null){
				throw "Resource not found -"+resName;
			}
			return this.getItemAsset(pi);
		}

		__proto.getItemAssetURL=function(item){
			return this._resKey+"@"+item.file;;
		}

		__proto.getItemAsset=function(item){
			switch (item.type){
				case 0:
					if (!item.decoded){
						item.decoded=true;
						var sprite=this._sprites[item.id];
						if (sprite !=null)
							item.texture=this.createSpriteTexture(sprite);
					}
					return item.texture;
				case 7:
					if (!item.decoded){
						item.decoded=true;
						var fileName=(item.file !=null && item.file.length > 0)? item.file :(item.id+".png");
						item.texture=AssetProxy.inst.getRes(this._resKey+"@"+fileName);
					}
					return item.texture;
				case 3:
					if (!item.decoded){
						item.decoded=true;
						item.sound=AssetProxy.inst.getRes(this._resKey+"@"+item.file);
					}
					return item.sound;
				case 6:
					if (!item.decoded){
						item.decoded=true;
						this.loadFont(item);
					}
					return item.bitmapFont;
				case 2:
					if (!item.decoded){
						item.decoded=true;
						this.loadMovieClip(item);
					}
					return item.frames;
				case 4:
					if (!item.decoded){
						item.decoded=true;
						var str=this.getDesc(item.id+".xml");
						var xml=Utils.parseXMLFromString(str);
						item.componentData=xml.firstChild;
						this.loadComponentChildren(item);
						this.translateComponent(item);
					}
					return item.componentData;
				default :
					return AssetProxy.inst.getRes(this._resKey+"@"+item.id);
				}
		}

		__proto.getDesc=function(fn){
			return this._resData[fn];
		}

		__proto.getPixelHitTestData=function(itemId){
			return this._hitTestDatas[itemId];
		}

		__proto.loadComponentChildren=function(item){
			var listNode=ToolSet.findChildNode(item.componentData,"displayList");
			if (listNode !=null){
				var col=listNode.childNodes;
				var dcnt=col.length;
				item.displayList=__newvec(dcnt);
				var di;
				for (var i=0;i < dcnt;i++){
					var cxml=col[i];
					var tagName=cxml.nodeName;
					var src=cxml.getAttribute("src");
					if (src){
						var pkgId=cxml.getAttribute("pkg");
						var pkg;
						if (pkgId && pkgId !=item.owner.id)
							pkg=fairygui.UIPackage.getById(pkgId);
						else
						pkg=item.owner;
						var pi=pkg !=null ? pkg.getItemById(src):null;
						if (pi !=null)
							di=new DisplayListItem(pi,null);
						else
						di=new DisplayListItem(null,tagName);
					}
					else{
						if (tagName=="text" && cxml.getAttribute("input")=="true")
							di=new DisplayListItem(null,"inputtext");
						else
						di=new DisplayListItem(null,tagName);
					}
					di.desc=cxml;
					item.displayList[i]=di;
				}
			}
			else
			item.displayList=__newvec(0,null);
		}

		__proto.translateComponent=function(item){
			if(fairygui.UIPackage._stringsSource==null)
				return;
			var strings=fairygui.UIPackage._stringsSource[this.id+item.id];
			if(strings==null)
				return;
			var length1=item.displayList.length;
			var length2=NaN;
			var value;
			var cxml,dxml,exml;
			var ename;
			var elementId;
			var items;
			var i1=NaN,i2=NaN,j=NaN;
			var str;
			for (i1=0;i1 < length1;i1++){
				cxml=item.displayList[i1].desc;
				ename=cxml.nodeName;
				elementId=cxml.getAttribute("id");
				str=cxml.getAttribute("tooltips");
				if(str){
					value=strings[elementId+"-tips"];
					if(value!=undefined)
						cxml.setAttribute("tooltips",value);
				}
				dxml=ToolSet.findChildNode(cxml,"gearText");
				if(dxml){
					value=strings[elementId+"-texts"];
					if(value!=undefined)
						dxml.setAttribute("values",value);
					value=strings[elementId+"-texts_def"];
					if(value!=undefined)
						dxml.setAttribute("default",value);
				}
				if(ename=="text" || ename=="richtext"){
					value=strings[elementId];
					if(value!=undefined)
						cxml.setAttribute("text",value);
					value=strings[elementId+"-prompt"];
					if(value!=undefined)
						cxml.setAttribute("prompt",value);
				}
				else if(ename=="list"){
					items=cxml.childNodes;
					length2=items.length;
					j=0;
					for (i2=0;i2 < length2;i2++){
						exml=items[i2];
						if(exml.nodeName!="item")
							continue ;
						value=strings[elementId+"-"+j];
						if(value!=undefined)
							exml.setAttribute("title",value);
						j++;
					}
				}
				else if(ename=="component"){
					dxml=ToolSet.findChildNode(cxml,"Button");
					if(dxml){
						value=strings[elementId];
						if(value!=undefined)
							dxml.setAttribute("title",value);
						value=strings[elementId+"-0"];
						if(value!=undefined)
							dxml.setAttribute("selectedTitle",value);
						continue ;
					}
					dxml=ToolSet.findChildNode(cxml,"Label");
					if(dxml){
						value=strings[elementId];
						if(value!=undefined)
							dxml.setAttribute("title",value);
						value=strings[elementId+"-prompt"];
						if(value!=undefined)
							dxml.setAttribute("prompt",value);
						continue ;
					}
					dxml=ToolSet.findChildNode(cxml,"ComboBox");
					if(dxml){
						value=strings[elementId];
						if(value!=undefined)
							dxml.setAttribute("title",value);
						items=dxml.childNodes;
						length2=items.length;
						j=0;
						for (i2=0;i2 < length2;i2++){
							exml=items[i2];
							if(exml.nodeName!="item")
								continue ;
							value=strings[elementId+"-"+j];
							if(value!=undefined)
								exml.setAttribute("title",value);
							j++;
						}
						continue ;
					}
				}
			}
		}

		__proto.createSpriteTexture=function(sprite){
			var atlasItem=this._itemsById[sprite.atlas];
			if (atlasItem !=null){
				var atlasTexture=(this.getItemAsset(atlasItem));
				if(atlasTexture==null)
					return null;
				else
				return this.createSubTexture(atlasTexture,sprite.rect);
			}
			else
			return null;
		}

		__proto.createSubTexture=function(atlasTexture,clipRect){
			var texture=Texture.createFromTexture(atlasTexture,
			clipRect.x,clipRect.y,clipRect.width,clipRect.height);
			return texture;
		}

		__proto.loadMovieClip=function(item){
			var xml=Utils.parseXMLFromString(this.getDesc(item.id+".xml")).firstChild;
			var str;
			var arr;
			str=xml.getAttribute("interval");
			if (str)
				item.interval=parseInt(str);
			str=xml.getAttribute("swing");
			if (str)
				item.swing=str=="true";
			str=xml.getAttribute("repeatDelay");
			if (str)
				item.repeatDelay=parseInt(str);
			var frameCount=parseInt(xml.getAttribute("frameCount"));
			item.frames=[];
			var frameNodes=ToolSet.findChildNode(xml,"frames").childNodes;
			var i=0;
			var len=frameNodes.length;
			for(var k=0;k < len;k++){
				var frameNode=frameNodes[k];
				if(frameNode.nodeName!="frame")
					continue ;
				var frame=new Frame();
				str=frameNode.getAttribute("rect");
				arr=str.split(",");
				frame.rect=new Rectangle(parseInt(arr[0]),parseInt(arr[1]),parseInt(arr[2]),parseInt(arr[3]));
				str=frameNode.getAttribute("addDelay");
				if(str)
					frame.addDelay=parseInt(str);
				item.frames[i]=frame;
				if (frame.rect.width==0)
					continue ;
				str=frameNode.getAttribute("sprite");
				if (str)
					str=item.id+"_"+str;
				else
				str=item.id+"_"+i;
				var sprite=this._sprites[str];
				if(sprite !=null)
					frame.texture=this.createSpriteTexture(sprite);
				i++;
			}
		}

		__proto.loadFont=function(item){
			var font=new BitmapFont$1();
			font.id="ui://"+this.id+item.id;
			var str=this.getDesc(item.id+".fnt");
			var lines=str.split("\n");
			var lineCount=lines.length;
			var i=0;
			var kv={};
			var ttf=false;
			var size=0;
			var xadvance=0;
			var resizable=false;
			var atlasOffsetX=0,atlasOffsetY=0;
			var charImg;
			var mainTexture;
			var lineHeight=0;
			for (i=0;i < lineCount;i++){
				str=lines[i];
				if (str.length==0)
					continue ;
				str=ToolSet.trim(str);
				var arr=str.split(" ");
				for (var j=1;j < arr.length;j++){
					var arr2=arr[j].split("=");
					kv[arr2[0]]=arr2[1];
				}
				str=arr[0];
				if (str=="char"){
					var bg=new BMGlyph();
					bg.x=isNaN(kv.x)? 0 :parseInt(kv.x);
					bg.y=isNaN(kv.y)? 0 :parseInt(kv.y);
					bg.offsetX=isNaN(kv.xoffset)? 0 :parseInt(kv.xoffset);
					bg.offsetY=isNaN(kv.yoffset)? 0 :parseInt(kv.yoffset);
					bg.width=isNaN(kv.width)? 0 :parseInt(kv.width);
					bg.height=isNaN(kv.height)? 0 :parseInt(kv.height);
					bg.advance=isNaN(kv.xadvance)? 0 :parseInt(kv.xadvance);
					if (kv.chnl !=undefined){
						bg.channel=parseInt(kv.chnl);
						if (bg.channel==15)
							bg.channel=4;
						else if (bg.channel==1)
						bg.channel=3;
						else if (bg.channel==2)
						bg.channel=2;
						else
						bg.channel=1;
					}
					if (!ttf){
						if (kv.img){
							charImg=this._itemsById[kv.img];
							if (charImg !=null){
								charImg.load();
								bg.width=charImg.width;
								bg.height=charImg.height;
								bg.texture=charImg.texture;
							}
						}
					}
					else if (mainTexture !=null){
						bg.texture=this.createSubTexture(mainTexture,new Rectangle(bg.x+atlasOffsetX,bg.y+atlasOffsetY,bg.width,bg.height));
					}
					if (ttf)
						bg.lineHeight=lineHeight;
					else {
						if(bg.advance==0){
							if(xadvance==0)
								bg.advance=bg.offsetX+bg.width;
							else
							bg.advance=xadvance;
						}
						bg.lineHeight=bg.offsetY < 0 ? bg.height :(bg.offsetY+bg.height);
						if(size>0 && bg.lineHeight<size)
							bg.lineHeight=size;
					}
					font.glyphs[String.fromCharCode(kv.id)]=bg;
				}
				else if (str=="info"){
					ttf=kv.face !=null;
					if(!isNaN(kv.size))
						size=parseInt(kv.size);
					resizable=kv.resizable=="true";
					if (ttf){
						var sprite=this._sprites[item.id];
						if (sprite !=null){
							atlasOffsetX=sprite.rect.x;
							atlasOffsetY=sprite.rect.y;
							var atlasItem=this._itemsById[sprite.atlas];
							if(atlasItem !=null)
								mainTexture=(this.getItemAsset(atlasItem));
						}
					}
				}
				else if (str=="common"){
					if(!isNaN(kv.lineHeight))
						lineHeight=parseInt(kv.lineHeight);
					if(size==0)
						size=lineHeight;
					else if(lineHeight==0)
					lineHeight=size;
					if(!isNaN(kv.xadvance))
						xadvance=parseInt(kv.xadvance);
				}
			}
			if (size==0 && bg)
				size=bg.height;
			font.ttf=ttf;
			font.size=size;
			font.resizable=resizable;
			item.bitmapFont=font;
		}

		__getset(0,__proto,'id',function(){
			return this._id;
		});

		__getset(0,__proto,'name',function(){
			return this._name;
		});

		__getset(0,__proto,'customId',function(){
			return this._customId;
			},function(value){
			if (this._customId !=null)
				delete fairygui.UIPackage._packageInstById[this._customId];
			this._customId=value;
			if (this._customId !=null)
				fairygui.UIPackage._packageInstById[this._customId]=this;
		});

		UIPackage.getById=function(id){
			return fairygui.UIPackage._packageInstById[id];
		}

		UIPackage.getByName=function(name){
			return fairygui.UIPackage._packageInstByName[name];
		}

		UIPackage.addPackage=function(resKey){
			var pkg=new UIPackage();
			pkg.create(resKey);
			fairygui.UIPackage._packageInstById[pkg.id]=pkg;
			fairygui.UIPackage._packageInstByName[pkg.name]=pkg;
			pkg.customId=resKey;
			return pkg;
		}

		UIPackage.removePackage=function(packageIdOrName){
			var pkg=fairygui.UIPackage._packageInstById[packageIdOrName];
			if(!pkg)
				pkg=fairygui.UIPackage._packageInstByName[packageIdOrName];
			if(!pkg)
				throw new Error("unknown package: "+packageIdOrName);
			pkg.dispose();
			delete fairygui.UIPackage._packageInstById[pkg.id];
			if(pkg._customId !=null)
				delete fairygui.UIPackage._packageInstById[pkg._customId];
			delete fairygui.UIPackage._packageInstByName[pkg.name];
		}

		UIPackage.createObject=function(pkgName,resName,userClass){
			var pkg=fairygui.UIPackage.getByName(pkgName);
			if(pkg)
				return pkg.createObject(resName,userClass);
			else
			return null;
		}

		UIPackage.createObjectFromURL=function(url,userClass){
			var pi=fairygui.UIPackage.getItemByURL(url);
			if(pi)
				return pi.owner.internalCreateObject(pi,userClass);
			else
			return null;
		}

		UIPackage.getItemURL=function(pkgName,resName){
			var pkg=fairygui.UIPackage.getByName(pkgName);
			if(!pkg)
				return null;
			var pi=pkg._itemsByName[resName];
			if(!pi)
				return null;
			return "ui://"+pkg.id+pi.id;
		}

		UIPackage.getItemByURL=function(url){
			var pos1=url.indexOf("//");
			if (pos1==-1)
				return null;
			var pos2=url.indexOf("/",pos1+2);
			if (pos2==-1){
				if (url.length > 13){
					var pkgId=url.substr(5,8);
					var pkg=UIPackage.getById(pkgId);
					if (pkg !=null){
						var srcId=url.substr(13);
						return pkg.getItemById(srcId);
					}
				}
			}
			else{
				var pkgName=url.substr(pos1+2,pos2-pos1-2);
				pkg=UIPackage.getByName(pkgName);
				if (pkg !=null){
					var srcName=url.substr(pos2+1);
					return pkg.getItemByName(srcName);
				}
			}
			return null;
		}

		UIPackage.normalizeURL=function(url){
			if(url==null)
				return null;
			var pos1=url.indexOf("//");
			if (pos1==-1)
				return null;
			var pos2=url.indexOf("/",pos1+2);
			if (pos2==-1)
				return url;
			var pkgName=url.substr(pos1+2,pos2-pos1-2);
			var srcName=url.substr(pos2+1);
			return UIPackage.getItemURL(pkgName,srcName);
		}

		UIPackage.getBitmapFontByURL=function(url){
			return fairygui.UIPackage._bitmapFonts[url];
		}

		UIPackage.setStringsSource=function(source){
			fairygui.UIPackage._stringsSource={};
			var xml=Utils.parseXMLFromString(source);
			var resNode=ToolSet.findChildNode(xml,"resources");
			var nodes=resNode.childNodes;
			var length1=nodes.length;
			for (var i1=0;i1 < length1;i1++){
				var cxml=nodes[i1];
				if (cxml.nodeName=="string"){
					var key=cxml.getAttribute("name");
					var text=cxml.textContent;
					var i=key.indexOf("-");
					if(i==-1)
						continue ;
					var key2=key.substr(0,i);
					var key3=key.substr(i+1);
					var col=fairygui.UIPackage._stringsSource[key2];
					if(!col){
						col={};
						fairygui.UIPackage._stringsSource[key2]=col;
					}
					col[key3]=text;
				}
			}
		}

		UIPackage._constructing=0;
		UIPackage._packageInstById={};
		UIPackage._packageInstByName={};
		UIPackage._bitmapFonts={};
		UIPackage._stringsSource=null;
		UIPackage.sep0=",";
		UIPackage.sep1="\n";
		UIPackage.sep2=" ";
		UIPackage.sep3="=";
		UIPackage.__init$=function(){
			//class AtlasSprite
			AtlasSprite=(function(){
				function AtlasSprite(){
					this.atlas=null;
					this.rect=null;
					this.rotated=false;
					this.rect=new Rectangle();
				}
				__class(AtlasSprite,'');
				return AtlasSprite;
			})()
		}

		return UIPackage;
	})()


	//class fairygui.utils.PixelHitTestData
	var PixelHitTestData=(function(){
		function PixelHitTestData(){
			this.pixelWidth=0;
			this.scale=NaN;
			this.pixels=null;
		}

		__class(PixelHitTestData,'fairygui.utils.PixelHitTestData');
		var __proto=PixelHitTestData.prototype;
		__proto.load=function(ba){
			ba.getInt32();
			this.pixelWidth=ba.getInt32();
			this.scale=1/ba.readByte();
			var len=ba.getInt32();
			this.pixels=__newvec(len);
			for(var i=0;i<len;i++){
				var j=ba.readByte();
				if(j<0)
					j+=256;
				this.pixels[i]=j;
			}
		}

		return PixelHitTestData;
	})()


	//class fairygui.utils.ToolSet
	var ToolSet=(function(){
		function ToolSet(){}
		__class(ToolSet,'fairygui.utils.ToolSet');
		ToolSet.getFileName=function(source){
			var i=source.lastIndexOf("/");
			if (i !=-1)
				source=source.substr(i+1);
			i=source.lastIndexOf("\\");
			if (i !=-1)
				source=source.substr(i+1);
			i=source.lastIndexOf(".");
			if (i !=-1)
				return source.substring(0,i);
			else
			return source;
		}

		ToolSet.startsWith=function(source,str,ignoreCase){
			(ignoreCase===void 0)&& (ignoreCase=false);
			if (!source)
				return false;
			else if (source.length < str.length)
			return false;
			else {
				source=source.substring(0,str.length);
				if (!ignoreCase)
					return source==str;
				else
				return source.toLowerCase()==str.toLowerCase();
			}
		}

		ToolSet.endsWith=function(source,str,ignoreCase){
			(ignoreCase===void 0)&& (ignoreCase=false);
			if (!source)
				return false;
			else if (source.length < str.length)
			return false;
			else {
				source=source.substring(source.length-str.length);
				if (!ignoreCase)
					return source==str;
				else
				return source.toLowerCase()==str.toLowerCase();
			}
		}

		ToolSet.trim=function(targetString){
			return fairygui.utils.ToolSet.trimLeft(fairygui.utils.ToolSet.trimRight(targetString));
		}

		ToolSet.trimLeft=function(targetString){
			var tempChar="";
			for (var i=0;i < targetString.length;i++){
				tempChar=targetString.charAt(i);
				if (tempChar !=" " && tempChar !="\n" && tempChar !="\r"){
					break ;
				}
			}
			return targetString.substr(i);
		}

		ToolSet.trimRight=function(targetString){
			var tempChar="";
			for (var i=targetString.length-1;i >=0;i--){
				tempChar=targetString.charAt(i);
				if (tempChar !=" " && tempChar !="\n" && tempChar !="\r"){
					break ;
				}
			}
			return targetString.substring(0,i+1);
		}

		ToolSet.convertToHtmlColor=function(argb,hasAlpha){
			(hasAlpha===void 0)&& (hasAlpha=false);
			var alpha;
			if (hasAlpha)
				alpha=(argb >> 24 & 0xFF).toString(16);
			else
			alpha="";
			var red=(argb >> 16 & 0xFF).toString(16);
			var green=(argb >> 8 & 0xFF).toString(16);
			var blue=(argb & 0xFF).toString(16);
			if (alpha.length==1)
				alpha="0"+alpha;
			if (red.length==1)
				red="0"+red;
			if (green.length==1)
				green="0"+green;
			if (blue.length==1)
				blue="0"+blue;
			return "#"+alpha+red+green+blue;
		}

		ToolSet.convertFromHtmlColor=function(str,hasAlpha){
			(hasAlpha===void 0)&& (hasAlpha=false);
			if (str.length < 1)
				return 0;
			if (str.charAt(0)=="#")
				str=str.substr(1);
			if (str.length==8)
				return (parseInt(str.substr(0,2),16)<< 24)+parseInt(str.substr(2),16);
			else if (hasAlpha)
			return 0xFF000000+parseInt(str,16);
			else
			return parseInt(str,16);
		}

		ToolSet.displayObjectToGObject=function(obj){
			while (obj !=null && !((obj instanceof laya.display.Stage ))){
				if (obj["$owner"])
					return obj["$owner"];
				obj=obj.parent;
			}
			return null;
		}

		ToolSet.findChildNode=function(xml,name){
			var col=xml.childNodes;
			var length1=col.length;
			if (length1>0){
				for (var i1=0;i1 < length1;i1++){
					var cxml=col[i1];
					if (cxml.nodeName==name){
						return cxml;
					}
				}
			}
			return null;
		}

		ToolSet.encodeHTML=function(str){
			if (!str)
				return "";
			else
			return str.replace("&","&amp;").replace("<","&lt;").replace(">","&gt;").replace("'","&apos;");
		}

		ToolSet.parseUBB=function(text){
			return fairygui.utils.ToolSet.defaultUBBParser.parse(text);
		}

		ToolSet.removeUBB=function(text){
			return fairygui.utils.ToolSet.defaultUBBParser.parse(text,true);
		}

		ToolSet.parseEaseType=function(value){
			var ret=ToolSet.EaseMap[value];
			if (!ret)
				ret=Ease.quartOut;
			return ret;
		}

		ToolSet.clamp=function(value,min,max){
			if(value<min)
				value=min;
			else if(value>max)
			value=max;
			return value;
		}

		ToolSet.clamp01=function(value){
			if(value>1)
				value=1;
			else if(value<0)
			value=0;
			return value;
		}

		ToolSet.base64Decode=function(bstr){
			var ba=new Byte();
			var code=0;
			var len=bstr.length;
			for (var i=0;i < len;i+=4){
				code=(ToolSet.BASE64_CHARS.indexOf(bstr.charAt(i))& 0x3F)<< 18;
				code+=(ToolSet.BASE64_CHARS.indexOf(bstr.charAt(i+1))& 0x3F)<< 12;
				code+=(ToolSet.BASE64_CHARS.indexOf(bstr.charAt(i+2))& 0x3F)<< 6;
				code+=(ToolSet.BASE64_CHARS.indexOf(bstr.charAt(i+3))& 0x3F);
				ba.writeByte((code >> 16)& 0xFF);
				ba.writeByte((code >> 8)& 0xFF);
				ba.writeByte(code & 0xFF);
			}
			if(len>0 && bstr.charAt(len-1)=="=")
				ba.length-=1;
			if(len>1 && bstr.charAt(len-2)=="=")
				ba.length-=1;
			ba.pos=0;
			return ba;
		}

		ToolSet.BASE64_CHARS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
		__static(ToolSet,
		['defaultUBBParser',function(){return this.defaultUBBParser=new UBBParser();},'EaseMap',function(){return this.EaseMap={
				"Linear":Ease.linearNone,
				"Elastic.In":Ease.elasticIn,
				"Elastic.Out":Ease.elasticOut,
				"Elastic.InOut":Ease.elasticInOut,
				"Quad.In":Ease.quadIn,
				"Quad.Out":Ease.quadOut,
				"Quad.InOut":Ease.quadInOut,
				"Cube.In":Ease.cubicIn,
				"Cube.Out":Ease.cubicOut,
				"Cube.InOut":Ease.cubicInOut,
				"Quart.In":Ease.quartIn,
				"Quart.Out":Ease.quartOut,
				"Quart.InOut":Ease.quartInOut,
				"Quint.In":Ease.quintIn,
				"Quint.Out":Ease.quintOut,
				"Quint.InOut":Ease.quintInOut,
				"Sine.In":Ease.sineIn,
				"Sine.Out":Ease.sineOut,
				"Sine.InOut":Ease.sineInOut,
				"Bounce.In":Ease.bounceIn,
				"Bounce.Out":Ease.bounceOut,
				"Bounce.InOut":Ease.bounceInOut,
				"Circ.In":Ease.circIn,
				"Circ.Out":Ease.circOut,
				"Circ.InOut":Ease.circInOut,
				"Expo.In":Ease.quartIn,
				"Expo.Out":Ease.quartOut,
				"Expo.InOut":Ease.quartInOut,
				"Back.In":Ease.backIn,
				"Back.Out":Ease.backOut,
				"Back.InOut":Ease.backInOut
		};}

		]);
		return ToolSet;
	})()


	//class fairygui.utils.UBBParser
	var UBBParser=(function(){
		function UBBParser(){
			this._text=null;
			this._readPos=0;
			this._handlers=null;
			this.smallFontSize=12;
			this.normalFontSize=14;
			this.largeFontSize=16;
			this.defaultImgWidth=0;
			this.defaultImgHeight=0;
			this._handlers={};
			this._handlers["url"]=this.onTag_URL;
			this._handlers["img"]=this.onTag_IMG;
			this._handlers["b"]=this.onTag_Simple;
			this._handlers["i"]=this.onTag_Simple;
			this._handlers["u"]=this.onTag_Simple;
			this._handlers["sup"]=this.onTag_Simple;
			this._handlers["sub"]=this.onTag_Simple;
			this._handlers["color"]=this.onTag_COLOR;
			this._handlers["font"]=this.onTag_FONT;
			this._handlers["size"]=this.onTag_SIZE;
		}

		__class(UBBParser,'fairygui.utils.UBBParser');
		var __proto=UBBParser.prototype;
		__proto.onTag_URL=function(tagName,end,attr){
			if (!end){
				if (attr !=null)
					return "<a href=\""+attr+"\" target=\"_blank\">";
				else {
					var href=this.getTagText();
					return "<a href=\""+href+"\" target=\"_blank\">";
				}
			}
			else
			return "</a>";
		}

		__proto.onTag_IMG=function(tagName,end,attr){
			if (!end){
				var src=this.getTagText(true);
				if (!src)
					return null;
				if (this.defaultImgWidth)
					return "<img src=\""+src+"\" width=\""+this.defaultImgWidth+"\" height=\""+this.defaultImgHeight+"\"/>";
				else
				return "<img src=\""+src+"\"/>";
			}
			else
			return null;
		}

		__proto.onTag_Simple=function(tagName,end,attr){
			return end ? ("</"+tagName+">"):("<"+tagName+">");
		}

		__proto.onTag_COLOR=function(tagName,end,attr){
			if (!end)
				return "<font color=\""+attr+"\">";
			else
			return "</font>";
		}

		__proto.onTag_FONT=function(tagName,end,attr){
			if (!end)
				return "<font face=\""+attr+"\">";
			else
			return "</font>";
		}

		__proto.onTag_SIZE=function(tagName,end,attr){
			if (!end){
				if (attr=="normal")
					attr=""+this.normalFontSize;
				else if (attr=="small")
				attr=""+this.smallFontSize;
				else if (attr=="large")
				attr=""+this.largeFontSize;
				else if (attr.length && attr.charAt(0)=="+")
				attr=""+(this.smallFontSize+parseInt(attr.substr(1)));
				else if (attr.length && attr.charAt(0)=="-")
				attr=""+(this.smallFontSize-parseInt(attr.substr(1)));
				return "<font size=\""+attr+"\">";
			}
			else
			return "</font>";
		}

		__proto.getTagText=function(remove){
			(remove===void 0)&& (remove=false);
			var pos=this._text.indexOf("[",this._readPos);
			if (pos==-1)
				return null;
			var ret=this._text.substring(this._readPos,pos);
			if (remove)
				this._readPos=pos;
			return ret;
		}

		__proto.parse=function(text,remove){
			(remove===void 0)&& (remove=false);
			this._text=text;
			var pos1=0,pos2=NaN,pos3=0;
			var end=false;
			var tag,attr;
			var repl;
			var func;
			while ((pos2=this._text.indexOf("[",pos1))!=-1){
				pos1=pos2;
				pos2=this._text.indexOf("]",pos1);
				if (pos2==-1)
					break ;
				end=this._text.charAt(pos1+1)=='/';
				tag=this._text.substring(end ? pos1+2 :pos1+1,pos2);
				pos2++;
				this._readPos=pos2;
				attr=null;
				repl=null;
				pos3=tag.indexOf("=");
				if (pos3 !=-1){
					attr=tag.substring(pos3+1);
					tag=tag.substring(0,pos3);
				}
				tag=tag.toLowerCase();
				func=this._handlers[tag];
				if (func !=null){
					if(!remove){
						repl=func.call(this,tag,end,attr);
						if (repl==null)
							repl="";
					}
					else
					repl="";
				}
				else {
					pos1=pos2;
					continue ;
				}
				this._text=this._text.substring(0,pos1)+repl+this._text.substring(this._readPos);
			}
			return this._text;
		}

		__static(UBBParser,
		['inst',function(){return this.inst=new UBBParser();}
		]);
		return UBBParser;
	})()


	//class robotLegs.ani.configs.UITypeConfig
	var UITypeConfig=(function(){
		function UITypeConfig(){}
		__class(UITypeConfig,'robotLegs.ani.configs.UITypeConfig');
		UITypeConfig.UI_TYPE="";
		UITypeConfig.WEB_VIEW_BOL=false;
		return UITypeConfig;
	})()


	//class robotLegs.command.PublicCmd
	var PublicCmd=(function(){
		function PublicCmd(){};
		__class(PublicCmd,'robotLegs.command.PublicCmd');
		PublicCmd.SHOW_ALERT_CMD="Show_Alert_Cmd";
		PublicCmd.CLOSE_ALERT_CMD="Close_Alert_Cmd";
		PublicCmd.SHOW_TIPS_CMD="Show_Tips_Cmd";
		PublicCmd.CLOSE_TIPS_CMD="Close_Tips_Cmd";
		PublicCmd.LOAD_MUSIC_COMPLETE_CMD="Load_Music_Complete_Cmd";
		return PublicCmd;
	})()


	//class robotLegs.commandMapManager.CommandMap
	var CommandMap=(function(){
		function CommandMap(){
			this.__cmdObj=new Object();
			this.__commondObj=new Object();
			this.delayCommandObj=new Object();
			if(CommandMap.__instance){
				throw Error("CommandMap是单例，不能New多次");
			}
		}

		__class(CommandMap,'robotLegs.commandMapManager.CommandMap');
		var __proto=CommandMap.prototype;
		/**
		*把这个类所有的消息都注册了
		*@param _commandClass
		*
		*/
		__proto.mapAll=function(_commandClass){
			for(var cmd in _commandClass){
				if(cmd.indexOf("_CMD")>-1){
					this.map(_commandClass[cmd],_commandClass);
				}
			}
		}

		/**
		*注入Commond
		*@param _modelClass
		*
		*/
		__proto.map=function(_cmd,_commondClass){
			var className=_commondClass.__className;
			if(!this.__cmdObj[className]){
				this.__cmdObj[className]=[];
			}
			if(this.__cmdObj[className].indexOf(_cmd)==-1){
				this.__cmdObj[className].push(_cmd);
				this.__commondObj[_cmd]=_commondClass;
			}
			else{
				throw Error("相同消息被注册2次，请检查是否重复注册或者2个相同的消息名:"+_cmd);
			}
		}

		/**
		*移除一个类的所有Command
		*@param _commondType
		*
		*/
		__proto.offAll=function(_commondClass){
			var className=_commondClass.__className;
			var cmdArr=this.__cmdObj[className];
			if(!cmdArr)
				return;
			while(cmdArr.length > 0){
				delete this.__commondObj[cmdArr[0]];
				cmdArr.shift();
			}
			delete this.__cmdObj[className];
		}

		/**
		*移除一个类的一个command
		*
		*/
		__proto.off=function(_cmd){
			for(var i in this.__cmdObj){
				var cmdArr=this.__cmdObj[i];
				for(var ii=0;ii < cmdArr.length;ii++){
					if(cmdArr[ii]==_cmd){
						cmdArr.splice(ii,1);
						break ;
					}
				}
			}
			delete this.__commondObj[_cmd];
		}

		/**
		*发消息,触发执行Command对象(和萝卜腿不同，发消息只能触发Command， 想要通知View层，只能通过Vo对象的status状态触发)
		*@param _event
		*
		*/
		__proto.sendNotification=function(_notificationVo){
			if(!this.__commondObj[_notificationVo.cmd]){
				console.log("没有注入消息，请检查->",_notificationVo.cmd);
				return;
			};
			var command=new this.__commondObj[_notificationVo.cmd]();
			if(_notificationVo.data && _notificationVo.data["loadTypeBol"]){
				command.startLoad(_notificationVo);
			}
			else{
				if(UITypeConfig.WEB_VIEW_BOL){
					try{
						command.execute(_notificationVo);
					}
					catch(e){
					}
				}
				else{
					command.execute(_notificationVo);
				}
			}
			command.clearMemory();
		}

		__getset(0,__proto,'commondObj',function(){
			return this.__commondObj;
		});

		CommandMap.getInstance=function(){
			if(!CommandMap.__instance){
				CommandMap.__instance=new CommandMap();
			}
			return CommandMap.__instance;
		}

		CommandMap.__instance=null
		return CommandMap;
	})()


	//class robotLegs.ContextMain
	var ContextMain=(function(){
		function ContextMain(){
			this.__pluginObj=new Object();
		}

		__class(ContextMain,'robotLegs.ContextMain');
		var __proto=ContextMain.prototype;
		/**
		*初始化Plugin
		*@param _pluginClass
		*@return
		*
		*/
		__proto.configure=function(_pluginClass){
			var plugin=new _pluginClass();
			plugin.configure();
			this.__pluginObj[_pluginClass.__className]=plugin;
			return plugin;
		}

		/**
		*关闭Plugin
		*
		*/
		__proto.close=function(_pluginClass){
			var plugin=this.__pluginObj[_pluginClass.__className];
			plugin.close();
			delete this.__pluginObj[_pluginClass.__className];
		}

		return ContextMain;
	})()


	//class robotLegs.events.PropertyChangeEvent
	var PropertyChangeEvent=(function(){
		function PropertyChangeEvent(){
			this.property=null;
			this.data=null;
		}

		__class(PropertyChangeEvent,'robotLegs.events.PropertyChangeEvent');
		PropertyChangeEvent.PROPERTY_CHANGE="Property_Change";
		return PropertyChangeEvent;
	})()


	//class robotLegs.injectorManager.Injector
	var Injector=(function(){
		function Injector(){
			this.__singletonObj=new Object();
		}

		__class(Injector,'robotLegs.injectorManager.Injector');
		var __proto=Injector.prototype;
		/**
		*根据类名获取到单例
		*@param _singletonClass
		*@return
		*
		*/
		__proto.getSingleton=function(_singletonClass){
			var singletonClassName=_singletonClass.name.charAt(0).toLocaleLowerCase()+_singletonClass.name.substr(1,_singletonClass.name.length-1);
			if(!this.__singletonObj[singletonClassName]){
				throw Error(BaseStaticFuncs.format("单例{0}未初始化",singletonClassName));
				return;
			}
			return this.__singletonObj[singletonClassName];
		}

		/**
		*注册单例
		*@param _modelClass
		*
		*/
		__proto.map=function(_singletonClass){
			var singletonClassName=_singletonClass.name.charAt(0).toLocaleLowerCase()+_singletonClass.name.substr(1,_singletonClass.name.length-1);
			if(this.__singletonObj[singletonClassName]){
				throw Error(BaseStaticFuncs.format("此单例已经存在，请检查是否有重复类名的单例，或是第二次启动没有清除过内存->{0}",singletonClassName));
				return;
			}
			this.__singletonObj[singletonClassName]=new _singletonClass();
		}

		/**
		*移除单例
		*
		*/
		__proto.off=function(_singletonClass){
			var singletonClassName=_singletonClass.name.charAt(0).toLocaleLowerCase()+_singletonClass.name.substr(1,_singletonClass.name.length-1);
			delete this.__singletonObj[singletonClassName];
		}

		__getset(0,__proto,'singletonObj',function(){
			return this.__singletonObj;
		});

		Injector.getInstance=function(){
			if(!Injector.__instance){
				Injector.__instance=new Injector();
			}
			return Injector.__instance;
		}

		Injector.__instance=null
		return Injector;
	})()


	//class robotLegs.model.AnimationModel
	var AnimationModel=(function(){
		function AnimationModel(){
			this.animationVoArrIndex=-1;
			this.nextAnimationIndexAdd=1;
			this.status=0;
			this.areaVoObj=new Object();
			this.animationVoArr=[];
		}

		__class(AnimationModel,'robotLegs.model.AnimationModel');
		return AnimationModel;
	})()


	//class robotLegs.model.BaseSessionModel
	var BaseSessionModel=(function(){
		function BaseSessionModel(){
			this.__sessionObj=null;
			this.__sesionKey=null;
			this.haveNotSessionBol=false;
			this.__sessionObj=LocalStorage.getJSON(this.__sesionKey);
			if(!this.__sessionObj){
				this.haveNotSessionBol=true;
				this.__sessionObj=new Object();
			}
		}

		__class(BaseSessionModel,'robotLegs.model.BaseSessionModel');
		var __proto=BaseSessionModel.prototype;
		/**
		*存取值
		*@param _valueKey
		*@param _value
		*
		*/
		__proto.saveValue=function(_valueKey,_value){
			this.__sessionObj[_valueKey]=_value;
			LocalStorage.setJSON(this.__sesionKey,this.__sessionObj);
		}

		/**
		*获取数值
		*@return
		*
		*/
		__proto.getValue=function(_valueKey){
			return this.__sessionObj[_valueKey];
		}

		return BaseSessionModel;
	})()


	//class robotLegs.viewClassMapManager.ViewClassMap
	var ViewClassMap=(function(){
		function ViewClassMap(){
			this.__viewClassObj=new Object();
		}

		__class(ViewClassMap,'robotLegs.viewClassMapManager.ViewClassMap');
		var __proto=ViewClassMap.prototype;
		/**
		*获取显示对象的类名
		*@param _className
		*
		*/
		__proto.getViewClass=function(_viewClassName){
			_viewClassName=_viewClassName.charAt(0).toLocaleUpperCase()+_viewClassName.substr(1,_viewClassName.length-1);
			if(!this.__viewClassObj[_viewClassName])
				return null;
			return this.__viewClassObj[_viewClassName][0];
		}

		/**
		*获取显示对象的Vo
		*@param _viewClassName
		*@return
		*
		*/
		__proto.getViewVo=function(_viewClassName){
			if(!this.__viewClassObj[_viewClassName]){
				throw Error("未注入此显示对象的类, 必须在打开界面前使用viewClassMap的map方法"+_viewClassName);
			}
			return this.__viewClassObj[_viewClassName][1];
		}

		/**
		*注入viewClass类和Vo类
		*@param _viewClass
		*@param _uiVo
		*
		*/
		__proto.map=function(_viewClass,_uiVo){
			this.__viewClassObj[_viewClass.name]=[_viewClass,_uiVo];
		}

		/**
		*删除class
		*@param _viewClass
		*
		*/
		__proto.off=function(_viewClass){
			delete this.__viewClassObj[_viewClass.name];
		}

		ViewClassMap.getInstance=function(){
			if(!ViewClassMap.__instance){
				ViewClassMap.__instance=new ViewClassMap();
			}
			return ViewClassMap.__instance;
		}

		ViewClassMap.__instance=null
		return ViewClassMap;
	})()


	//class robotLegs.vo.AnimationVo
	var AnimationVo=(function(){
		function AnimationVo(_areaVoIndex,_status,_data,_delayTime,_soundBol,_cmdBol){
			this.areaVoIndex=null;
			this.status=null;
			this.data=null;
			this.soundBol=false;
			this.cmdBol=false;
			this.delyTime=0;
			(_areaVoIndex===void 0)&& (_areaVoIndex="");
			(_status===void 0)&& (_status="");
			(_delayTime===void 0)&& (_delayTime=0);
			(_soundBol===void 0)&& (_soundBol=false);
			(_cmdBol===void 0)&& (_cmdBol=false);
			this.areaVoIndex=_areaVoIndex;
			this.status=_status;
			this.data=_data;
			this.delyTime=_delayTime;
			this.soundBol=_soundBol;
			this.cmdBol=_cmdBol;
		}

		__class(AnimationVo,'robotLegs.vo.AnimationVo');
		return AnimationVo;
	})()


	//class robotLegs.vo.HttpRequestVo
	var HttpRequestVo=(function(){
		function HttpRequestVo(){
			this.method="get";
			this.url=null;
			this.responseType="json";
			this.headers=null;
			this.completeBackCmd="";
			this.progressBackCmd="";
			this.errorBackCmd="";
			this.postData=new Object();
		}

		__class(HttpRequestVo,'robotLegs.vo.HttpRequestVo');
		return HttpRequestVo;
	})()


	//class robotLegs.vo.LoadCommandVo
	var LoadCommandVo=(function(){
		function LoadCommandVo(_command){
			this.textTemple=null;
			this.mainUrl=null;
			this.loadTypeBol=true;
			this.cache=true;
			this.deleteAfterOverFileBol=false;
			this.enemyFileBol=false;
			this.bgFileBol=false;
			this.unlimitedFileBol=false;
			this.__commandClassName=null;
			this.loadingType="Loading_Page_Type";
			this.fileArr=[];
			if(_command){
				var className;
				className=_command.constructor.name;
				this.__commandClassName=className;
			}
		}

		__class(LoadCommandVo,'robotLegs.vo.LoadCommandVo');
		var __proto=LoadCommandVo.prototype;
		__proto.initFile=function(){
			if(!this.__commandClassName)
				return;
			if(!LoadCommandVo.resUrlObj[this.__commandClassName]){
				LoadCommandVo.resUrlObj[this.__commandClassName]=[];
			}
			BaseStaticFuncs.setFileVersion(this.fileArr);
			var i=0;
			for(i=0;i < this.fileArr.length;i++){
				LoadCommandVo.resUrlObj[this.__commandClassName].push(this.fileArr[i].url);
			}
		}

		LoadCommandVo.NONE_TYPE="None_Type";
		LoadCommandVo.TEXT_TYPE="Text_Type";
		LoadCommandVo.TIP_TYPE="Tip_Type";
		LoadCommandVo.LOADING_PAGE_TYPE="Loading_Page_Type";
		__static(LoadCommandVo,
		['resUrlObj',function(){return this.resUrlObj=new Object();}
		]);
		return LoadCommandVo;
	})()


	//class robotLegs.vo.NotificationVo
	var NotificationVo=(function(){
		function NotificationVo(){
			this.cmd="";
			this.data=null;
		}

		__class(NotificationVo,'robotLegs.vo.NotificationVo');
		return NotificationVo;
	})()


	//class staticFunc.BaseStaticFunc
	var BaseStaticFunc=(function(){
		function BaseStaticFunc(){}
		__class(BaseStaticFunc,'staticFunc.BaseStaticFunc');
		BaseStaticFunc.format=function(_str,__arr){
			var arr=[];for(var i=1,sz=arguments.length;i<sz;i++)arr.push(arguments[i]);
			for(var i=0;i < arr.length;i++){
				_str=_str.replace("{"+i.toString()+"}",arr[i]);
			}
			return _str;
		}

		BaseStaticFunc.changeTime=function(_second){
			_second=Math.floor(_second);
			var time="";
			var days=Math.floor(_second / (3600 *24));
			_second-=3600 *24 *days;
			var hour=Math.floor(_second / 3600);
			_second-=hour *3600;
			var minutes=Math.floor(_second / 60);
			_second-=minutes *60;
			time+=BaseStaticFunc.format("{0}天{1}小时{2}分{3}秒",days,hour,minutes,_second);
			return time;
		}

		BaseStaticFunc.getRandomLocationByRect=function(_rect){
			var randomLocation=new Point();
			randomLocation.x=_rect.x+Math.round(Math.random()*_rect.width);
			randomLocation.y=_rect.y+Math.round(Math.random()*_rect.height);
			return randomLocation;
		}

		return BaseStaticFunc;
	})()


	//class staticFunc.BaseStaticFuncs
	var BaseStaticFuncs=(function(){
		function BaseStaticFuncs(){}
		__class(BaseStaticFuncs,'staticFunc.BaseStaticFuncs');
		BaseStaticFuncs.makeSkinUrl=function(_skin,_totalFrame){
			var skinUrlArr=[];
			var i=0;
			var aniIndex;
			for(i=1;i <=_totalFrame;i++){
				aniIndex=i < 10?("0"+i):(i+"");
				skinUrlArr.push(staticFunc.BaseStaticFuncs.format("{0}00{1}.png",_skin,aniIndex));
			}
			return skinUrlArr;
		}

		BaseStaticFuncs.format=function(_str,__res){
			var res=[];for(var i=1,sz=arguments.length;i<sz;i++)res.push(arguments[i]);
			if(!_str)
				return "";
			var str=_str;
			for(var i=0;i < res.length;i++){
				str=str.replace("{"+i.toString()+"}",res[i]);
			}
			return str;
		}

		BaseStaticFuncs.mathRangeRandom=function(_minValue,_maxValue){
			var value=Number(_minValue)+(Number(_maxValue)-(_minValue))*Math.random();
			return Math.floor(value);
		}

		BaseStaticFuncs.mathRandom=function(_count){
			return Math.floor(Math.random()*_count);
		}

		BaseStaticFuncs.getCurrentTime=function(){
			return new Date().getTime();
		}

		BaseStaticFuncs.setResVersion=function(_fileArr){
			for(var i=0;i < _fileArr.length;i++){
				if((_fileArr[i]["url"].indexOf("sk/enemy")>-1
					|| _fileArr[i]["url"].indexOf("sk/myPlane")>-1
				|| _fileArr[i]["url"].indexOf("sk/pet")>-1
				|| _fileArr[i]["url"].indexOf("sk/bombEffects")>-1)&& _fileArr[i]["url"].indexOf("png")>-1)
				continue ;
				if(_fileArr[i]["url"].indexOf("png")>-1)
					continue ;
				if(_fileArr[i]["url"].indexOf("fui")>-1)
					continue ;
				if(_fileArr[i]["url"].indexOf("?v=")>-1)
					continue ;
				_fileArr[i]["url"]+="?v=1";
			}
		}

		BaseStaticFuncs.setFileVersion=function(_fileArr){
			for(var i=0;i < _fileArr.length;i++){
				if(_fileArr[i]["url"].indexOf("?v=")>-1)
					continue ;
				var currentVersion=1;
				URL.version[_fileArr[i]["url"]]=currentVersion;
				_fileArr[i]["url"]=staticFunc.BaseStaticFuncs.format("{0}?v={1}",_fileArr[i]["url"],currentVersion);
			}
		}

		BaseStaticFuncs.getLoaderRes=function(_url){
			_url=staticFunc.BaseStaticFuncs.format("{0}?v={1}",_url,1);
			return Laya.loader.getRes(_url);
		}

		BaseStaticFuncs.mathTime=function(_time){
			if(_time < 0)
				_time=0;
			var time;
			_time=Math.floor(_time / 1000);
			var minute=Math.floor(_time / 60);
			var secound=Number(_time-minute *60).toString();
			secound=secound.length==1 ? "0"+secound :secound;
			time=staticFunc.BaseStaticFuncs.format("{0}:{1}",minute,secound);
			return time;
		}

		BaseStaticFuncs.mathDate=function(_dateStr){
			if(!_dateStr || _dateStr.length==0 || _dateStr=="0")
				return 0;
			var dateArr=_dateStr.split(" ");
			var dayArr=dateArr[0].split("-");
			var timeArr=dateArr[1].split(":");
			var dateTime=new Date();
			dateTime.setFullYear(dayArr[0]);
			dateTime.setMonth(Number(dayArr[1])-1);
			dateTime.setDate(dayArr[2]);
			dateTime.setHours(Number(timeArr[0]));
			dateTime.setMinutes(Number(timeArr[1]));
			dateTime.setSeconds(Number(timeArr[2]));
			return dateTime.getTime();
		}

		BaseStaticFuncs.changeTime=function(_second){
			_second=Math.floor(_second);
			var time="";
			var days=Math.floor(_second / (3600 *24));
			_second-=3600 *24 *days;
			var hour=Math.floor(_second / 3600);
			_second-=hour *3600;
			var minutes=Math.floor(_second / 60);
			_second-=minutes *60;
			time+=BaseStaticFuncs.format("{0}天{1}小时{2}分{3}秒",days,hour,minutes,_second);
			return time;
		}

		BaseStaticFuncs.changeTime2=function(_second){
			_second=Math.floor(_second);
			var time="";
			var days=Math.floor(_second / (3600 *24));
			_second-=3600 *24 *days;
			var hour=Math.floor(_second / 3600);
			_second-=hour *3600;
			var minutes=Math.floor(_second / 60);
			_second-=minutes *60;
			var hourStr=hour < 10 ? "0"+String(hour):String(hour);
			var minutesStr=minutes < 10 ? "0"+String(minutes):String(minutes);
			var secondStr=_second < 10 ? "0"+String(_second):String(_second);
			time+=BaseStaticFuncs.format("{0}:{1}:{2}",hourStr,minutesStr,secondStr);
			return time;
		}

		BaseStaticFuncs.warn=function(___arr){
			var _arr=arguments;
			var arr=_arr;
			if(!staticFunc.BaseStaticFuncs.traceBol){
				return;
			};
			var traceStr="";
			for(var i=0;i < arr.length;i++){
				if(i==0){
					traceStr+="console.warn('"+arr[i];
				}
				else{
					traceStr+="', '"+arr[i];
				}
				if(i==arr.length-1){
					traceStr+="')";
				}
			}
			console.log(traceStr);
		}

		BaseStaticFuncs.traceBol=true;
		return BaseStaticFuncs;
	})()


	//class fairygui.utils.ColorMatrix extends Array
	var ColorMatrix=(function(_super){
		// initialization:
		function ColorMatrix(){
			ColorMatrix.__super.call(this);
			this.reset();
		}

		__class(ColorMatrix,'fairygui.utils.ColorMatrix',Array);
		var __proto=ColorMatrix.prototype;
		// public methods:
		__proto.reset=function(){
			for (var i=0;i<ColorMatrix.LENGTH;i++){
				this[i]=ColorMatrix.IDENTITY_MATRIX[i];
			}
		}

		__proto.invert=function(){
			this.multiplyMatrix([-1,0,0,0,255,
			0,-1,0,0,255,
			0,0,-1,0,255,
			0,0,0,1,0]);
		}

		__proto.adjustColor=function(p_brightness,p_contrast,p_saturation,p_hue){
			this.adjustHue(p_hue);
			this.adjustContrast(p_contrast);
			this.adjustBrightness(p_brightness);
			this.adjustSaturation(p_saturation);
		}

		__proto.adjustBrightness=function(p_val){
			p_val=this.cleanValue(p_val,1)*255;
			this.multiplyMatrix([
			1,0,0,0,p_val,
			0,1,0,0,p_val,
			0,0,1,0,p_val,
			0,0,0,1,0]);
		}

		__proto.adjustContrast=function(p_val){
			p_val=this.cleanValue(p_val,1);
			var s=p_val+1;
			var o=128 *(1-s);
			this.multiplyMatrix([
			s,0,0,0,o,
			0,s,0,0,o,
			0,0,s,0,o,
			0,0,0,1,0]);
		}

		__proto.adjustSaturation=function(p_val){
			p_val=this.cleanValue(p_val,1);
			p_val+=1;
			var invSat=1-p_val;
			var invLumR=invSat *0.299;
			var invLumG=invSat *0.587;
			var invLumB=invSat *0.114;
			this.multiplyMatrix([
			(invLumR+p_val),invLumG,invLumB,0,0,
			invLumR,(invLumG+p_val),invLumB,0,0,
			invLumR,invLumG,(invLumB+p_val),0,0,
			0,0,0,1,0]);
		}

		__proto.adjustHue=function(p_val){
			p_val=this.cleanValue(p_val,1);
			p_val *=Math.PI;
			var cos=Math.cos(p_val);
			var sin=Math.sin(p_val);
			this.multiplyMatrix([
			((0.299+(cos *(1-0.299)))+(sin *-(0.299))),((0.587+(cos *-(0.587)))+(sin *-(0.587))),((0.114+(cos *-(0.114)))+(sin *(1-0.114))),0,0,
			((0.299+(cos *-(0.299)))+(sin *0.143)),((0.587+(cos *(1-0.587)))+(sin *0.14)),((0.114+(cos *-(0.114)))+(sin *-0.283)),0,0,
			((0.299+(cos *-(0.299)))+(sin *-((1-0.299)))),((0.587+(cos *-(0.587)))+(sin *0.587)),((0.114+(cos *(1-0.114)))+(sin *0.114)),0,0,
			0,0,0,1,0]);
		}

		__proto.concat=function(p_matrix){
			if (p_matrix.length !=ColorMatrix.LENGTH){return;}
				this.multiplyMatrix(p_matrix);
		}

		__proto.clone=function(){
			var result=new ColorMatrix();
			result.copyMatrix(this);
			return result;
		}

		__proto.copyMatrix=function(p_matrix){
			var l=ColorMatrix.LENGTH;
			for (var i=0;i<l;i++){
				this[i]=p_matrix[i];
			}
		}

		__proto.multiplyMatrix=function(p_matrix){
			var col=[];
			var i=0;
			for (var y=0;y<4;++y){
				for (var x=0;x<5;++x){
					col[i+x]=p_matrix[i] *this[x]+
					p_matrix[i+1] *this[x+5]+
					p_matrix[i+2] *this[x+10]+
					p_matrix[i+3] *this[x+15]+
					(x==4 ? p_matrix[i+4] :0);
				}
				i+=5;
			}
			this.copyMatrix(col);
		}

		__proto.cleanValue=function(p_val,p_limit){
			return Math.min(p_limit,Math.max(-p_limit,p_val));
		}

		ColorMatrix.create=function(p_brightness,p_contrast,p_saturation,p_hue){
			var ret=new ColorMatrix();
			ret.adjustColor(p_brightness,p_contrast,p_saturation,p_hue);
			return ret;
		}

		ColorMatrix.LUMA_R=0.299;
		ColorMatrix.LUMA_G=0.587;
		ColorMatrix.LUMA_B=0.114;
		__static(ColorMatrix,
		['IDENTITY_MATRIX',function(){return this.IDENTITY_MATRIX=[
			1,0,0,0,0,
			0,1,0,0,0,
			0,0,1,0,0,
			0,0,0,1,0];},'LENGTH',function(){return this.LENGTH=ColorMatrix.IDENTITY_MATRIX.length;}
		]);
		return ColorMatrix;
	})(Array)


	//class fairygui.GComponent extends fairygui.GObject
	var GComponent=(function(_super){
		function GComponent(){
			this._sortingChildCount=0;
			this._opaque=false;
			this._applyingController=null;
			this._margin=null;
			this._trackBounds=false;
			this._boundsChanged=false;
			this._childrenRenderOrder=0;
			this._apexIndex=0;
			this._buildingDisplayList=false;
			this._children=null;
			this._controllers=null;
			this._transitions=null;
			this._container=null;
			this._scrollPane=null;
			this._alignOffset=null;
			GComponent.__super.call(this);
			this._children=[];
			this._controllers=[];
			this._transitions=[];
			this._margin=new Margin();
			this._alignOffset=new Point();
		}

		__class(GComponent,'fairygui.GComponent',_super);
		var __proto=GComponent.prototype;
		__proto.createDisplayObject=function(){
			_super.prototype.createDisplayObject.call(this);
			this._displayObject.mouseEnabled=true;
			this._displayObject.mouseThrough=true;
			this._container=this._displayObject;
		}

		__proto.dispose=function(){
			var i=0;
			var transCnt=this._transitions.length;
			for (i=0;i < transCnt;++i){
				var trans=this._transitions[i];
				trans.dispose();
			};
			var numChildren=this._children.length;
			for(i=numChildren-1;i >=0;--i){
				var obj=this._children[i];
				obj.parent=null;
				obj.dispose();
			}
			this._boundsChanged=false;
			_super.prototype.dispose.call(this);
		}

		__proto.addChild=function(child){
			this.addChildAt(child,this._children.length);
			return child;
		}

		__proto.addChildAt=function(child,index){
			(index===void 0)&& (index=0);
			if(!child)
				throw "child is null";
			var numChildren=this._children.length;
			if(index >=0 && index <=numChildren){
				if(child.parent==this){
					this.setChildIndex(child,index);
				}
				else {
					child.removeFromParent();
					child.parent=this;
					var cnt=this._children.length;
					if(child.sortingOrder !=0){
						this._sortingChildCount++;
						index=this.getInsertPosForSortingChild(child);
					}
					else if(this._sortingChildCount > 0){
						if(index > (cnt-this._sortingChildCount))
							index=cnt-this._sortingChildCount;
					}
					if(index==cnt)
						this._children.push(child);
					else
					this._children.splice(index,0,child);
					this.childStateChanged(child);
					this.setBoundsChangedFlag();
				}
				return child;
			}
			else {
				throw "Invalid child index";
			}
		}

		__proto.getInsertPosForSortingChild=function(target){
			var cnt=this._children.length;
			var i=0;
			for(i=0;i < cnt;i++){
				var child=this._children[i];
				if(child==target)
					continue ;
				if(target.sortingOrder < child.sortingOrder)
					break ;
			}
			return i;
		}

		__proto.removeChild=function(child,dispose){
			(dispose===void 0)&& (dispose=false);
			var childIndex=this._children.indexOf(child);
			if(childIndex !=-1){
				this.removeChildAt(childIndex,dispose);
			}
			return child;
		}

		__proto.removeChildAt=function(index,dispose){
			(dispose===void 0)&& (dispose=false);
			if(index >=0 && index < this.numChildren){
				var child=this._children[index];
				child.parent=null;
				if(child.sortingOrder !=0)
					this._sortingChildCount--;
				this._children.splice(index,1);
				child.group=null;
				if(child.inContainer){
					this._container.removeChild(child.displayObject);
					if (this._childrenRenderOrder==2)
						Laya.timer.callLater(this,this.buildNativeDisplayList);
				}
				if(dispose)
					child.dispose();
				this.setBoundsChangedFlag();
				return child;
			}
			else {
				throw "Invalid child index";
			}
		}

		__proto.removeChildren=function(beginIndex,endIndex,dispose){
			(beginIndex===void 0)&& (beginIndex=0);
			(endIndex===void 0)&& (endIndex=-1);
			(dispose===void 0)&& (dispose=false);
			if(endIndex < 0 || endIndex >=this.numChildren)
				endIndex=this.numChildren-1;
			for(var i=beginIndex;i <=endIndex;++i)
			this.removeChildAt(beginIndex,dispose);
		}

		__proto.getChildAt=function(index){
			(index===void 0)&& (index=0);
			if(index >=0 && index < this.numChildren)
				return this._children[index];
			else
			throw "Invalid child index";
		}

		__proto.getChild=function(name){
			var cnt=this._children.length;
			for(var i=0;i < cnt;++i){
				if(this._children[i].name==name)
					return this._children[i];
			}
			return null;
		}

		__proto.getVisibleChild=function(name){
			var cnt=this._children.length;
			for(var i=0;i < cnt;++i){
				var child=this._children[i];
				if(child.internalVisible && child.internalVisible2 && child.name==name)
					return child;
			}
			return null;
		}

		__proto.getChildInGroup=function(name,group){
			var cnt=this._children.length;
			for(var i=0;i < cnt;++i){
				var child=this._children[i];
				if(child.group==group && child.name==name)
					return child;
			}
			return null;
		}

		__proto.getChildById=function(id){
			var cnt=this._children.length;
			for(var i=0;i < cnt;++i){
				if(this._children[i]._id==id)
					return this._children[i];
			}
			return null;
		}

		__proto.getChildIndex=function(child){
			return this._children.indexOf(child);
		}

		__proto.setChildIndex=function(child,index){
			(index===void 0)&& (index=0);
			var oldIndex=this._children.indexOf(child);
			if(oldIndex==-1)
				throw "Not a child of this container";
			if(child.sortingOrder !=0)
				return;
			var cnt=this._children.length;
			if(this._sortingChildCount > 0){
				if(index > (cnt-this._sortingChildCount-1))
					index=cnt-this._sortingChildCount-1;
			}
			this._setChildIndex(child,oldIndex,index);
		}

		__proto.setChildIndexBefore=function(child,index){
			var oldIndex=this._children.indexOf(child);
			if (oldIndex==-1)
				throw "Not a child of this container";
			if(child.sortingOrder!=0)
				return oldIndex;
			var cnt=this._children.length;
			if(this._sortingChildCount>0){
				if (index > (cnt-this._sortingChildCount-1))
					index=cnt-this._sortingChildCount-1;
			}
			if (oldIndex < index)
				return this._setChildIndex(child,oldIndex,index-1);
			else
			return this._setChildIndex(child,oldIndex,index);
		}

		__proto._setChildIndex=function(child,oldIndex,index){
			var cnt=this._children.length;
			if(index > cnt)
				index=cnt;
			if(oldIndex==index)
				return oldIndex;
			this._children.splice(oldIndex,1);
			this._children.splice(index,0,child);
			if(child.inContainer){
				var displayIndex=0;
				var g;
				var i=0;
				if (this._childrenRenderOrder==0){
					for(i=0;i<index;i++){
						g=this._children[i];
						if(g.inContainer)
							displayIndex++;
					}
					if(displayIndex==this._container.numChildren)
						displayIndex--;
					this._container.setChildIndex(child.displayObject,displayIndex);
				}
				else if (this._childrenRenderOrder==1){
					for (i=cnt-1;i > index;i--){
						g=this._children[i];
						if (g.inContainer)
							displayIndex++;
					}
					if(displayIndex==this._container.numChildren)
						displayIndex--;
					this._container.setChildIndex(child.displayObject,displayIndex);
				}
				else{
					Laya.timer.callLater(this,this.buildNativeDisplayList);
				}
				this.setBoundsChangedFlag();
			}
			return index;
		}

		__proto.swapChildren=function(child1,child2){
			var index1=this._children.indexOf(child1);
			var index2=this._children.indexOf(child2);
			if(index1==-1 || index2==-1)
				throw "Not a child of this container";
			this.swapChildrenAt(index1,index2);
		}

		__proto.swapChildrenAt=function(index1,index2){
			(index2===void 0)&& (index2=0);
			var child1=this._children[index1];
			var child2=this._children[index2];
			this.setChildIndex(child1,index2);
			this.setChildIndex(child2,index1);
		}

		__proto.isAncestorOf=function(child){
			if (child==null)
				return false;
			var p=child.parent;
			while(p){
				if(p==this)
					return true;
				p=p.parent;
			}
			return false;
		}

		__proto.addController=function(controller){
			this._controllers.push(controller);
			controller._parent=this;
			this.applyController(controller);
		}

		__proto.getControllerAt=function(index){
			return this._controllers[index];
		}

		__proto.getController=function(name){
			var cnt=this._controllers.length;
			for(var i=0;i < cnt;++i){
				var c=this._controllers[i];
				if(c.name==name)
					return c;
			}
			return null;
		}

		__proto.removeController=function(c){
			var index=this._controllers.indexOf(c);
			if(index==-1)
				throw new Error("controller not exists");
			c._parent=null;
			this._controllers.splice(index,1);
			var length=this._children.length;
			for(var i=0;i < length;i++){
				var child=this._children[i];
				child.handleControllerChanged(c);
			}
		}

		__proto.childStateChanged=function(child){
			if(this._buildingDisplayList)
				return;
			var cnt=this._children.length;
			if((child instanceof fairygui.GGroup )){
				for(var i=0;i < cnt;i++){
					var g=this._children[i];
					if(g.group==child)
						this.childStateChanged(g);
				}
				return;
			}
			if(!child.displayObject)
				return;
			if(child.internalVisible && child.displayObject!=this._displayObject.mask){
				if(!child.displayObject.parent){
					var index=0
					if (this._childrenRenderOrder==0){
						for (i=0;i < cnt;i++){
							g=this._children[i];
							if (g==child)
								break ;
							if (g.displayObject !=null && g.displayObject.parent !=null)
								index++;
						}
						this._container.addChildAt(child.displayObject,index);
					}
					else if (this._childrenRenderOrder==1){
						for (i=cnt-1;i >=0;i--){
							g=this._children[i];
							if (g==child)
								break ;
							if (g.displayObject !=null && g.displayObject.parent !=null)
								index++;
						}
						this._container.addChildAt(child.displayObject,index);
					}
					else{
						this._container.addChild(child.displayObject);
						Laya.timer.callLater(this,this.buildNativeDisplayList);
					}
				}
			}
			else {
				if(child.displayObject.parent){
					this._container.removeChild(child.displayObject);
					if (this._childrenRenderOrder==2)
						Laya.timer.callLater(this,this.buildNativeDisplayList);
				}
			}
		}

		__proto.buildNativeDisplayList=function(){
			var cnt=this._children.length;
			if (cnt==0)
				return;
			var i=0;
			var child;
			switch (this._childrenRenderOrder){
				case 0:{
						for (i=0;i < cnt;i++){
							child=this._children[i];
							if (child.displayObject !=null && child.internalVisible)
								this._container.addChild(child.displayObject);
						}
					}
					break ;
				case 1:{
						for (i=cnt-1;i >=0;i--){
							child=this._children[i];
							if (child.displayObject !=null && child.internalVisible)
								this._container.addChild(child.displayObject);
						}
					}
					break ;
				case 2:{
						for (i=0;i < this._apexIndex;i++){
							child=this._children[i];
							if (child.displayObject !=null && child.internalVisible)
								this._container.addChild(child.displayObject);
						}
						for (i=cnt-1;i >=this._apexIndex;i--){
							child=this._children[i];
							if (child.displayObject !=null && child.internalVisible)
								this._container.addChild(child.displayObject);
						}
					}
					break ;
				}
		}

		__proto.applyController=function(c){
			this._applyingController=c;
			var child;
			var length=this._children.length;
			for(var i=0;i < length;i++){
				child=this._children[i];
				child.handleControllerChanged(c);
			}
			this._applyingController=null;
			c.runActions();
		}

		__proto.applyAllControllers=function(){
			var cnt=this._controllers.length;
			for(var i=0;i < cnt;++i){
				this.applyController(this._controllers[i]);
			}
		}

		__proto.adjustRadioGroupDepth=function(obj,c){
			var cnt=this._children.length;
			var i=NaN;
			var child;
			var myIndex=-1,maxIndex=-1;
			for(i=0;i < cnt;i++){
				child=this._children[i];
				if(child==obj){
					myIndex=i;
				}
				else if(((child instanceof fairygui.GButton ))
				&& (child).relatedController==c){
					if(i > maxIndex)
						maxIndex=i;
				}
			}
			if(myIndex < maxIndex){
				if(this._applyingController!=null)
					this._children[maxIndex].handleControllerChanged(this._applyingController);
				this.swapChildrenAt(myIndex,maxIndex);
			}
		}

		__proto.getTransitionAt=function(index){
			return this._transitions[index];
		}

		__proto.getTransition=function(transName){
			var cnt=this._transitions.length;
			for(var i=0;i < cnt;++i){
				var trans=this._transitions[i];
				if(trans.name==transName)
					return trans;
			}
			return null;
		}

		__proto.isChildInView=function(child){
			if(this._displayObject.scrollRect !=null){
				return child.x+child.width >=0 && child.x <=this.width
				&& child.y+child.height >=0 && child.y <=this.height;
			}
			else if(this._scrollPane !=null){
				return this._scrollPane.isChildInView(child);
			}
			else
			return true;
		}

		__proto.getFirstChildInView=function(){
			var cnt=this._children.length;
			for(var i=0;i < cnt;++i){
				var child=this._children[i];
				if(this.isChildInView(child))
					return i;
			}
			return-1;
		}

		__proto.updateHitArea=function(){
			if((this._displayObject.hitArea instanceof fairygui.utils.PixelHitTest )){
				var hitTest=(this._displayObject.hitArea);
				if(this.sourceWidth!=0)
					hitTest.scaleX=this.width/this.sourceWidth;
				if(this.sourceHeight!=0)
					hitTest.scaleY=this.height/this.sourceHeight;
			}
			else{
				if(this._displayObject.hitArea==null)
					this._displayObject.hitArea=new Rectangle();
				this._displayObject.hitArea.setTo(0,0,this.width,this.height);
			}
		}

		__proto.updateMask=function(){
			var rect=this._displayObject.scrollRect;
			if(rect==null)
				rect=new Rectangle();
			rect.x=this._margin.left;
			rect.y=this._margin.top;
			rect.width=this.width-this._margin.right;
			rect.height=this.height-this._margin.bottom;
			this._displayObject.scrollRect=rect;
		}

		__proto.setupScroll=function(scrollBarMargin,scroll,scrollBarDisplay,flags,vtScrollBarRes,hzScrollBarRes){
			if (this._displayObject==this._container){
				this._container=new Sprite();
				this._displayObject.addChild(this._container);
			}
			this._scrollPane=new ScrollPane(this,scroll,scrollBarMargin,scrollBarDisplay,flags,vtScrollBarRes,hzScrollBarRes);
		}

		__proto.setupOverflow=function(overflow){
			if(overflow==1){
				if (this._displayObject==this._container){
					this._container=new Sprite();
					this._displayObject.addChild(this._container);
				}
				this.updateMask();
				this._container.pos(this._margin.left,this._margin.top);
			}
			else if(this._margin.left !=0 || this._margin.top !=0){
				if (this._displayObject==this._container){
					this._container=new Sprite();
					this._displayObject.addChild(this._container);
				}
				this._container.pos(this._margin.left,this._margin.top);
			}
		}

		__proto.handleSizeChanged=function(){
			_super.prototype.handleSizeChanged.call(this);
			if(this._scrollPane)
				this._scrollPane.onOwnerSizeChanged();
			else if(this._displayObject.scrollRect !=null)
			this.updateMask();
			if(this._displayObject.hitArea!=null)
				this.updateHitArea();
		}

		__proto.handleGrayedChanged=function(){
			var c=this.getController("grayed");
			if(c !=null){
				c.selectedIndex=this.grayed ? 1 :0;
				return;
			};
			var v=this.grayed;
			var cnt=this._children.length;
			for(var i=0;i < cnt;++i){
				this._children[i].grayed=v;
			}
		}

		__proto.handleControllerChanged=function(c){
			_super.prototype.handleControllerChanged.call(this,c);
			if (this._scrollPane !=null)
				this._scrollPane.handleControllerChanged(c);
		}

		__proto.setBoundsChangedFlag=function(){
			if (!this._scrollPane && !this._trackBounds)
				return;
			if (!this._boundsChanged){
				this._boundsChanged=true;
				Laya.timer.callLater(this,this.__render);
			}
		}

		__proto.__render=function(){
			if (this._boundsChanged){
				var i1=0;
				var len=this._children.length;
				var child
				for(i1=0;i1 < len;i1++){
					child=this._children[i1];
					child.ensureSizeCorrect();
				}
				this.updateBounds();
			}
		}

		__proto.ensureBoundsCorrect=function(){
			var i1=0;
			var len=this._children.length;
			var child
			for(i1=0;i1 < len;i1++){
				child=this._children[i1];
				child.ensureSizeCorrect();
			}
			if (this._boundsChanged)
				this.updateBounds();
		}

		__proto.updateBounds=function(){
			var ax=0,ay=0,aw=0,ah=0;
			var len=this._children.length;
			if(len > 0){
				ax=Number.POSITIVE_INFINITY,ay=Number.POSITIVE_INFINITY;
				var ar=Number.NEGATIVE_INFINITY,ab=Number.NEGATIVE_INFINITY;
				var tmp=0;
				var i1=0;
				for(i1=0;i1 < len;i1++){
					var child=this._children[i1];
					tmp=child.x;
					if(tmp < ax)
						ax=tmp;
					tmp=child.y;
					if(tmp < ay)
						ay=tmp;
					tmp=child.x+child.actualWidth;
					if(tmp > ar)
						ar=tmp;
					tmp=child.y+child.actualHeight;
					if(tmp > ab)
						ab=tmp;
				}
				aw=ar-ax;
				ah=ab-ay;
			}
			this.setBounds(ax,ay,aw,ah);
		}

		__proto.setBounds=function(ax,ay,aw,ah){
			this._boundsChanged=false;
			if (this._scrollPane)
				this._scrollPane.setContentSize(Math.round(ax+aw),Math.round(ay+ah));
		}

		__proto.getSnappingPosition=function(xValue,yValue,resultPoint){
			if(!resultPoint)
				resultPoint=new Point();
			var cnt=this._children.length;
			if(cnt==0){
				resultPoint.x=0;
				resultPoint.y=0;
				return resultPoint;
			}
			this.ensureBoundsCorrect();
			var obj=null;
			var prev=null;
			var i=0;
			if(yValue !=0){
				for(;i < cnt;i++){
					obj=this._children[i];
					if(yValue < obj.y){
						if(i==0){
							yValue=0;
							break ;
						}
						else {
							prev=this._children[i-1];
							if(yValue < prev.y+prev.actualHeight / 2)
								yValue=prev.y;
							else
							yValue=obj.y;
							break ;
						}
					}
				}
				if(i==cnt)
					yValue=obj.y;
			}
			if(xValue !=0){
				if(i > 0)
					i--;
				for(;i < cnt;i++){
					obj=this._children[i];
					if(xValue < obj.x){
						if(i==0){
							xValue=0;
							break ;
						}
						else {
							prev=this._children[i-1];
							if(xValue < prev.x+prev.actualWidth / 2)
								xValue=prev.x;
							else
							xValue=obj.x;
							break ;
						}
					}
				}
				if(i==cnt)
					xValue=obj.x;
			}
			resultPoint.x=xValue;
			resultPoint.y=yValue;
			return resultPoint;
		}

		__proto.childSortingOrderChanged=function(child,oldValue,newValue){
			(newValue===void 0)&& (newValue=0);
			if (newValue==0){
				this._sortingChildCount--;
				this.setChildIndex(child,this._children.length);
			}
			else {
				if (oldValue==0)
					this._sortingChildCount++;
				var oldIndex=this._children.indexOf(child);
				var index=this.getInsertPosForSortingChild(child);
				if (oldIndex < index)
					this._setChildIndex(child,oldIndex,index-1);
				else
				this._setChildIndex(child,oldIndex,index);
			}
		}

		__proto.constructFromResource=function(){
			this.constructFromResource2(null,0);
		}

		__proto.constructFromResource2=function(objectPool,poolIndex){
			var xml=this.packageItem.owner.getItemAsset(this.packageItem);
			this._underConstruct=true;
			var str;
			var arr;
			str=xml.getAttribute("size");
			arr=str.split(",");
			this.sourceWidth=parseInt(arr[0]);
			this.sourceHeight=parseInt(arr[1]);
			this.initWidth=this.sourceWidth;
			this.initHeight=this.sourceHeight;
			this.setSize(this.sourceWidth,this.sourceHeight);
			str=xml.getAttribute("restrictSize");
			if(str){
				arr=str.split(",");
				this.minWidth=parseInt(arr[0]);
				this.maxWidth=parseInt(arr[1]);
				this.minHeight=parseInt(arr[2]);
				this.maxHeight=parseInt(arr[3]);
			}
			str=xml.getAttribute("pivot");
			if(str){
				arr=str.split(",");
				str=xml.getAttribute("anchor");
				this.internalSetPivot(parseFloat(arr[0]),parseFloat(arr[1]),str=="true");
			}
			str=xml.getAttribute("opaque");
			this.opaque=str !="false";
			str=xml.getAttribute("hitTest");
			if(str){
				arr=str.split(",");
				var hitTestData=this.packageItem.owner.getPixelHitTestData(arr[0]);
				if (hitTestData !=null){
					this._displayObject.hitArea=new PixelHitTest(hitTestData,parseInt(arr[1]),parseInt(arr[2]));
					this._displayObject.mouseThrough=false;
					this._displayObject.hitTestPrior=true;
				}
			};
			var overflow=0;
			str=xml.getAttribute("overflow");
			if (str)
				overflow=OverflowType.parse(str);
			else
			overflow=0;
			str=xml.getAttribute("margin");
			if(str)
				this._margin.parse(str);
			if(overflow==2){
				var scroll=0;
				str=xml.getAttribute("scroll");
				if (str)
					scroll=ScrollType.parse(str);
				else
				scroll=1;
				var scrollBarDisplay=0;
				str=xml.getAttribute("scrollBar");
				if (str)
					scrollBarDisplay=ScrollBarDisplayType.parse(str);
				else
				scrollBarDisplay=0;
				var scrollBarFlags=NaN;
				str=xml.getAttribute("scrollBarFlags");
				if(str)
					scrollBarFlags=parseInt(str);
				else
				scrollBarFlags=0;
				var scrollBarMargin=new Margin();
				str=xml.getAttribute("scrollBarMargin");
				if(str)
					scrollBarMargin.parse(str);
				var vtScrollBarRes;
				var hzScrollBarRes;
				str=xml.getAttribute("scrollBarRes");
				if(str){
					arr=str.split(",");
					vtScrollBarRes=arr[0];
					hzScrollBarRes=arr[1];
				}
				this.setupScroll(scrollBarMargin,scroll,scrollBarDisplay,scrollBarFlags,vtScrollBarRes,hzScrollBarRes);
			}
			else
			this.setupOverflow(overflow);
			this._buildingDisplayList=true;
			var col=xml.childNodes;
			var length1=0;
			if(col)
				length1=col.length;
			var i=0;
			var controller;
			for(i=0;i < length1;i++){
				var cxml=col[i];
				if(cxml.nodeName=="controller"){
					controller=new Controller();
					this._controllers.push(controller);
					controller._parent=this;
					controller.setup(cxml);
				}
			};
			var child;
			var displayList=this.packageItem.displayList;
			var childCount=displayList.length;
			for (i=0;i < childCount;i++){
				var di=displayList[i];
				if (objectPool !=null){
					child=objectPool[poolIndex+i];
				}
				else if (di.packageItem){
					child=UIObjectFactory.newObject(di.packageItem);
					child.packageItem=di.packageItem;
					child.constructFromResource();
				}
				else
				child=UIObjectFactory.newObject2(di.type);
				child._underConstruct=true;
				child.setup_beforeAdd(di.desc);
				child.parent=this;
				this._children.push(child);
			}
			this.relations.setup(xml);
			for (i=0;i < childCount;i++)
			this._children[i].relations.setup(displayList[i].desc);
			for (i=0;i < childCount;i++){
				child=this._children[i];
				child.setup_afterAdd(displayList[i].desc);
				child._underConstruct=false;
			}
			str=xml.getAttribute("mask");
			if(str)
				this.mask=this.getChildById(str).displayObject;
			var trans;
			for(i=0;i < length1;i++){
				cxml=col[i];
				if(cxml.nodeName=="transition"){
					trans=new Transition(this);
					this._transitions.push(trans);
					trans.setup(cxml);
				}
			}
			if(this._transitions.length>0){
				this.displayObject.on("display",this,this.___added);
				this.displayObject.on("undisplay",this,this.___removed);
			}
			this.applyAllControllers();
			this._buildingDisplayList=false;
			this._underConstruct=false;
			this.buildNativeDisplayList();
			this.setBoundsChangedFlag();
			this.constructFromXML(xml);
		}

		__proto.constructFromXML=function(xml){}
		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			var str;
			if(this.scrollPane){
				str=xml.getAttribute("pageController");
				if(str)
					this.scrollPane.pageController=this.parent.getController(str);
			}
			str=xml.getAttribute("controller");
			if(str){
				var arr=str.split(",");
				for(var i=0;i<arr.length;i+=2){
					var cc=this.getController(arr[i]);
					if(cc)
						cc.selectedPageId=arr[i+1];
				}
			}
		}

		__proto.___added=function(){
			var cnt=this._transitions.length;
			for(var i=0;i < cnt;++i){
				var trans=this._transitions[i];
				if(trans.autoPlay)
					trans.play(null,trans.autoPlayRepeat,trans.autoPlayDelay);
			}
		}

		__proto.___removed=function(){
			var cnt=this._transitions.length;
			for(var i=0;i < cnt;++i){
				this._transitions[i].OnOwnerRemovedFromStage();
			}
		}

		__getset(0,__proto,'numChildren',function(){
			return this._children.length;
		});

		__getset(0,__proto,'displayListContainer',function(){
			return this._container;
		});

		__getset(0,__proto,'childrenRenderOrder',function(){
			return this._childrenRenderOrder;
			},function(value){
			if (this._childrenRenderOrder !=value){
				this._childrenRenderOrder=value;
				this.buildNativeDisplayList();
			}
		});

		__getset(0,__proto,'opaque',function(){
			return this._displayObject.hitArea!=null;
			},function(value){
			if (value){
				this.updateHitArea();
				this._displayObject.mouseThrough=false;
			}
			else{
				this._displayObject.hitArea=null;
				this._displayObject.mouseThrough=true;
			}
		});

		__getset(0,__proto,'controllers',function(){
			return this._controllers;
		});

		__getset(0,__proto,'scrollPane',function(){
			return this._scrollPane;
		});

		__getset(0,__proto,'margin',function(){
			return this._margin;
			},function(value){
			this._margin.copy(value);
			if(this._displayObject.scrollRect!=null){
				this._container.pos(this._margin.left+this._alignOffset.x,this._margin.top+this._alignOffset.y);
			}
			this.handleSizeChanged();
		});

		__getset(0,__proto,'apexIndex',function(){
			return this._apexIndex;
			},function(value){
			if (this._apexIndex !=value){
				this._apexIndex=value;
				if (this._childrenRenderOrder==2)
					this.buildNativeDisplayList();
			}
		});

		__getset(0,__proto,'mask',function(){
			return this._displayObject.mask;
			},function(value){
			this._displayObject.mask=value;
		});

		__getset(0,__proto,'viewWidth',function(){
			if (this._scrollPane !=null)
				return this._scrollPane.viewWidth;
			else
			return this.width-this._margin.left-this._margin.right;
			},function(value){
			if (this._scrollPane !=null)
				this._scrollPane.viewWidth=value;
			else
			this.width=value+this._margin.left+this._margin.right;
		});

		__getset(0,__proto,'viewHeight',function(){
			if (this._scrollPane !=null)
				return this._scrollPane.viewHeight;
			else
			return this.height-this._margin.top-this._margin.bottom;
			},function(value){
			if (this._scrollPane !=null)
				this._scrollPane.viewHeight=value;
			else
			this.height=value+this._margin.top+this._margin.bottom;
		});

		return GComponent;
	})(GObject)


	//class robotLegs.RLObj extends laya.events.EventDispatcher
	var RLObj=(function(_super){
		function RLObj(){
			this.commandMap=null;
			this.viewClassMap=null;
			this.injector=null;
			RLObj.__super.call(this);
		}

		__class(RLObj,'robotLegs.RLObj',_super);
		var __proto=RLObj.prototype;
		/**
		*初始化单例
		*
		*/
		__proto.init=function(){
			this.commandMap=CommandMap.getInstance();
			this.viewClassMap=ViewClassMap.getInstance();
			this.injector=Injector.getInstance();
		}

		/**
		*彈窗提示
		*@param _title
		*@param _content
		*
		*/
		__proto.showAlert=function(_txt,_cmd,_btnCount,_data){
			(_cmd===void 0)&& (_cmd="");
			(_btnCount===void 0)&& (_btnCount=1);
			this.sendNotification("Show_Alert_Cmd",[_txt,_cmd,_btnCount,_data]);
		}

		__proto.showTip=function(_text,_cmd,_type){
			(_cmd===void 0)&& (_cmd="");
			(_type===void 0)&& (_type=1);
			this.sendNotification("Show_Tips_Cmd",[_text,_type,_cmd]);
		}

		__proto.stopTip=function(){
			this.sendNotification("Close_Tips_Cmd");
		}

		/**
		*显示loading
		*
		*/
		__proto.showLoading=function(){
			this.sendNotification("SHOW_Cmd");
		}

		/**
		*隐藏loading
		*
		*/
		__proto.hideLoading=function(){
			this.sendNotification("HIDE_Cmd");
		}

		/**
		*播放音乐
		*@param _music
		*
		*/
		__proto.playMusic=function(_music){
			this.sendNotification("Play_Music_Cmd",_music);
		}

		/**
		*停止音乐
		*
		*/
		__proto.stopMusic=function(){
			this.sendNotification("Stop_Play_Music_Cmd");
		}

		/**
		*播放声音
		*@param _sound
		*
		*/
		__proto.playSound=function(_sound){
			this.sendNotification("PlaySound_Cmd",_sound);
		}

		/**
		*发送消息
		*@param _notificationVo
		*
		*/
		__proto.sendNotification=function(_cmd,_data){
			var notificationVo=new NotificationVo();
			notificationVo.cmd=_cmd;
			notificationVo.data=_data;
			this.commandMap.sendNotification(notificationVo);
		}

		return RLObj;
	})(EventDispatcher)


	//class robotLegs.events.PropertyChangeEventDispatcher extends laya.events.EventDispatcher
	var PropertyChangeEventDispatcher=(function(_super){
		function PropertyChangeEventDispatcher(){
			PropertyChangeEventDispatcher.__super.call(this);
		}

		__class(PropertyChangeEventDispatcher,'robotLegs.events.PropertyChangeEventDispatcher',_super);
		var __proto=PropertyChangeEventDispatcher.prototype;
		__proto.event=function(type,data){
			var propertyChangeEvent=new PropertyChangeEvent();
			propertyChangeEvent.property=type;
			propertyChangeEvent.data=data;
			return _super.prototype.event.call(this,"Property_Change",propertyChangeEvent);
		}

		return PropertyChangeEventDispatcher;
	})(EventDispatcher)


	//class game.numberGame.NumberGamesPlugin extends robotLegs.Plugin
	var NumberGamesPlugin=(function(_super){
		function NumberGamesPlugin(){
			this.resManager=null;
			NumberGamesPlugin.__super.call(this);
		}

		__class(NumberGamesPlugin,'game.numberGame.NumberGamesPlugin',_super);
		var __proto=NumberGamesPlugin.prototype;
		/**
		*初始化配置
		*
		*/
		__proto.configure=function(){
			this.injector.map(NumberGamesUIModel);
			if(!this.injector.singletonObj["numberGamesConfigModel"])
				this.injector.map(NumberGamesConfigModel);
			this.injector.map(NumberGamesPlayerModel);
			this.commandMap.mapAll(NumberGamesInitCommand);
			this.commandMap.mapAll(NumberGamesBuilderCommand);
		}

		/**
		*启动
		*
		*/
		__proto.start=function(){
			var loadCommandVo=new LoadCommandVo();
			loadCommandVo.loadingType="Loading_Page_Type";
			loadCommandVo.textTemple="Loading...({0}%)";
			loadCommandVo.fileArr=[
			{url:"res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Lottery@atlas0.png",type:"image" },
			{url:"res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Lottery.fui",type:"arraybuffer" },
			{url:"res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Lottery@smij7h.mp3",type:"sound" },
			{url:"res/json/numberGamesInfo/NumberGamesInfo.json",type:"json"}];
			this.sendNotification("Load_Number_Games_File_Complete_Cmd",loadCommandVo);
		}

		/**
		*关闭
		*
		*/
		__proto.close=function(){
			this.sendNotification("Close_Number_Games_Cmd");
			this.injector.off(NumberGamesUIModel);
			this.injector.off(NumberGamesPlayerModel);
			this.commandMap.offAll(NumberGamesInitCommand);
			this.commandMap.offAll(NumberGamesBuilderCommand);
			Laya.loader.clearRes("res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Lottery@atlas0.png");
			Laya.loader.clearRes("res/fairyGUI/"+UITypeConfig.UI_TYPE+"/Lottery.fui");
			Laya.loader.clearRes("res/json/numberGamesInfo/NumberGamesInfo.json");
		}

		return NumberGamesPlugin;
	})(Plugin)


	//class GameStartPlugin extends robotLegs.Plugin
	var GameStartPlugin=(function(_super){
		function GameStartPlugin(){
			GameStartPlugin.__super.call(this);
		}

		__class(GameStartPlugin,'GameStartPlugin',_super);
		var __proto=GameStartPlugin.prototype;
		/**
		*初始化（单例，command）
		*
		*/
		__proto.configure=function(){
			_super.prototype.configure.call(this);
			this.injector.map(PublicModel);
			this.injector.map(StageUIModel);
			this.injector.map(GameUIBuilderBridge);
			this.injector.map(ResManager);
			this.injector.map(PlayerInfoModel);
			var publicModel=this.injector.getSingleton(PublicModel);
			this.viewClassMap.map(AlertWindow);
			this.viewClassMap.map(Alert);
			this.viewClassMap.map(VoiceWindow,publicModel.voiceWindowVo);
			this.viewClassMap.map(Voice,publicModel.voiceWindowVo.voiceVo);
			this.commandMap.mapAll(LoadingCommand);
			this.commandMap.mapAll(DataLoadingCommand);
			this.commandMap.mapAll(ServerHttpRequestCommand);
			this.commandMap.mapAll(OpenAndColseGameCommand);
			this.commandMap.mapAll(IframeCommand);
			this.commandMap.map("Show_Alert_Cmd",AlertCommand);
			this.commandMap.map("Close_Alert_Cmd",AlertCommand);
			this.commandMap.map("Show_Tips_Cmd",AlertCommand);
			this.commandMap.mapAll(VoiceCommand);
		}

		/**
		*开始（加载Loading资源）
		*
		*/
		__proto.start=function(){
			this.sendNotification("Start_Cmd");
		}

		/**
		*关闭游戏开始的Plugin
		*
		*/
		__proto.close=function(){}
		return GameStartPlugin;
	})(Plugin)


	//class modules.hall.HallPlugin extends robotLegs.Plugin
	var HallPlugin=(function(_super){
		function HallPlugin(){
			HallPlugin.__super.call(this);
		}

		__class(HallPlugin,'modules.hall.HallPlugin',_super);
		var __proto=HallPlugin.prototype;
		/**
		*初始化配置
		*
		*/
		__proto.configure=function(){
			this.injector.map(HallUIModel);
			this.commandMap.mapAll(HallCommand);
			this.commandMap.mapAll(ChatCommand);
			this.commandMap.mapAll(RegisteredCommand);
			this.commandMap.mapAll(EventsCommand);
			this.sendNotification("Init_Register_Cmd");
		}

		/**
		*启动
		*
		*/
		__proto.start=function(){
			var loadCommandVo=new LoadCommandVo();
			loadCommandVo.loadingType="Loading_Page_Type";
			loadCommandVo.textTemple="Loading...({0}%)";
			loadCommandVo.fileArr=[
			{url:GameUtil.Res_Hall_Atlas,type:"image" },
			{url:GameUtil.Res_Hall_Atlas_1,type:"image" },
			{url:GameUtil.Res_Hall_Data,type:"arraybuffer" },
			{url:GameUtil.RES_REGIESTER_ATLAS,type:"image" },
			{url:GameUtil.RES_REGIESTER_DATA,type:"arraybuffer" },
			{url:GameUtil.RES_NEW_PLAYER_EVENTS_ATLAS,type:"image" },
			{url:GameUtil.RES_NEW_PLAYER_EVENTS_DATA,type:"arraybuffer" },
			{url:GameUtil.RES_DAILY_EVENTS_ATLAS,type:"image" },
			{url:GameUtil.RES_DAILY_EVENTS_DATA,type:"arraybuffer" },
			{url:GameUtil.RES_HALL_EVENTS_ATLAS,type:"image" },
			{url:GameUtil.RES_HALL_EVENTS_DATA,type:"arraybuffer" }];
			var configFileData=DataMgr.get().configFileData;
			for (var i=0;i < configFileData.items.length;i++){
				console.log("加载配置 url:",GameUtil.getServerConfigUrl(configFileData.items[i].url));
				loadCommandVo.fileArr.push({url:GameUtil.getServerConfigUrl(configFileData.items[i].url),type:configFileData.items[i].type});
			}
			this.sendNotification("LOAD_HALL_COMPLETE_Cmd",loadCommandVo);
			if(UITypeConfig.WEB_VIEW_BOL){
				if(Browser.onIOS){
					try{
						window.webkit.messageHandlers.displayLoading.postMessage('');;
					}
					catch(e){
					}
				}
				else{
					try{
						window.location='http://displayLoading';
					}
					catch(e){
					}
				}
			}
		}

		/**
		*关闭
		*
		*/
		__proto.close=function(){
			this.sendNotification("CLOSE_HALL_Cmd");
			this.injector.off(HallUIModel);
			this.commandMap.offAll(HallCommand);
			this.commandMap.offAll(ChatCommand);
			Laya.loader.clearRes(GameUtil.Res_Hall_Atlas);
			Laya.loader.clearRes(GameUtil.Res_Hall_Data);
		}

		return HallPlugin;
	})(Plugin)


	//class modules.login.LoginPlugin extends robotLegs.Plugin
	var LoginPlugin=(function(_super){
		function LoginPlugin(){
			LoginPlugin.__super.call(this);
		}

		__class(LoginPlugin,'modules.login.LoginPlugin',_super);
		var __proto=LoginPlugin.prototype;
		/**
		*初始化配置
		*/
		__proto.configure=function(){
			this.injector.map(LoginUIModel);
			this.commandMap.mapAll(LoginCommand);
		}

		/**
		*启动
		*/
		__proto.start=function(){
			console.log("LoginPlugin start");
			var loadCommandVo=new LoadCommandVo();
			loadCommandVo.loadingType="Loading_Page_Type";
			loadCommandVo.textTemple="Loading...({0}%)";
			loadCommandVo.fileArr=[
			{url:GameUtil.Res_Login_Atlas,type:"image" },
			{url:GameUtil.Res_Login_Data,type:"arraybuffer" }];
			this.sendNotification("LOAD_LOGIN_COMPLETE_Cmd",loadCommandVo);
		}

		/**
		*关闭
		*/
		__proto.close=function(){
			this.sendNotification("Close_Login_Cmd");
			this.injector.off(LoginUIModel);
			this.commandMap.offAll(LoginCommand);
			Laya.loader.clearRes(GameUtil.Res_Login_Atlas);
			Laya.loader.clearRes(GameUtil.Res_Login_Data);
		}

		return LoginPlugin;
	})(Plugin)


	//class laya.resource.Resource extends laya.events.EventDispatcher
	var Resource=(function(_super){
		function Resource(){
			//this.__loaded=false;
			//this._id=0;
			//this._memorySize=0;
			//this._released=false;
			//this._destroyed=false;
			//this._referenceCount=0;
			//this._group=null;
			//this._url=null;
			//this._resourceManager=null;
			//this._lastUseFrameCount=0;
			//this.lock=false;
			//this.name=null;
			Resource.__super.call(this);
			this._$1__id=++Resource._uniqueIDCounter;
			this.__loaded=true;
			this._destroyed=false;
			this._referenceCount=0;
			Resource._idResourcesMap[this.id]=this;
			this._released=true;
			this.lock=false;
			this._memorySize=0;
			this._lastUseFrameCount=-1;
			(ResourceManager.currentResourceManager)&& (ResourceManager.currentResourceManager.addResource(this));
		}

		__class(Resource,'laya.resource.Resource',_super);
		var __proto=Resource.prototype;
		Laya.imps(__proto,{"laya.resource.ICreateResource":true,"laya.resource.IDispose":true})
		/**
		*@private
		*/
		__proto._setUrl=function(url){
			if (this._url!==url){
				var resList;
				if (this._url){
					resList=Resource._urlResourcesMap[this._url];
					resList.splice(resList.indexOf(this),1);
					(resList.length===0)&& (delete Resource._urlResourcesMap[this._url]);
				}
				if (url){
					resList=Resource._urlResourcesMap[url];
					(resList)|| (Resource._urlResourcesMap[url]=resList=[]);
					resList.push(this);
				}
				this._url=url;
			}
		}

		/**
		*@private
		*/
		__proto._getGroup=function(){
			return this._group;
		}

		/**
		*@private
		*/
		__proto._setGroup=function(value){
			if (this._group!==value){
				var groupList;
				if (this._group){
					groupList=Resource._groupResourcesMap[this._group];
					groupList.splice(groupList.indexOf(this),1);
					(groupList.length===0)&& (delete Resource._groupResourcesMap[this._group]);
				}
				if (value){
					groupList=Resource._groupResourcesMap[value];
					(groupList)|| (Resource._groupResourcesMap[value]=groupList=[]);
					groupList.push(this);
				}
				this._group=value;
			}
		}

		/**
		*@private
		*/
		__proto._addReference=function(){
			this._referenceCount++;
		}

		/**
		*@private
		*/
		__proto._removeReference=function(){
			this._referenceCount--;
		}

		/**
		*@private
		*/
		__proto._clearReference=function(){
			this._referenceCount=0;
		}

		/**
		*@private
		*/
		__proto._endLoaded=function(){
			this.__loaded=true;
			this.event("loaded",this);
		}

		/**
		*@private
		*/
		__proto.recreateResource=function(){
			this.completeCreate();
		}

		/**
		*@private
		*/
		__proto.disposeResource=function(){}
		/**
		*激活资源，使用资源前应先调用此函数激活。
		*@param force 是否强制创建。
		*/
		__proto.activeResource=function(force){
			(force===void 0)&& (force=false);
			this._lastUseFrameCount=Stat.loopCount;
			if (!this._destroyed && this.__loaded && (this._released || force))
				this.recreateResource();
		}

		/**
		*释放资源。
		*@param force 是否强制释放。
		*@return 是否成功释放。
		*/
		__proto.releaseResource=function(force){
			(force===void 0)&& (force=false);
			if (!force && this.lock)
				return false;
			if (!this._released || force){
				this.disposeResource();
				this._released=true;
				this._lastUseFrameCount=-1;
				this.event("released",this);
				return true;
				}else {
				return false;
			}
		}

		/**
		*@private
		*/
		__proto.onAsynLoaded=function(url,data,params){
			throw new Error("Resource: must override this function!");
		}

		/**
		*<p>彻底处理资源，处理后不能恢复。</p>
		*<p><b>注意：</b>会强制解锁清理。</p>
		*/
		__proto.destroy=function(){
			if (this._destroyed)
				return;
			if (this._resourceManager!==null)
				this._resourceManager.removeResource(this);
			this._destroyed=true;
			this.lock=false;
			this.releaseResource();
			delete Resource._idResourcesMap[this.id];
			var resList;
			if (this._url){
				resList=Resource._urlResourcesMap[this._url];
				if (resList){
					resList.splice(resList.indexOf(this),1);
					(resList.length===0)&& (delete Resource._urlResourcesMap[this.url]);
				}
				Loader.clearRes(this._url);
				(this.__loaded)||(RunDriver.cancelLoadByUrl(this._url));
			}
			if (this._group){
				resList=Resource._groupResourcesMap[this._group];
				resList.splice(resList.indexOf(this),1);
				(resList.length===0)&& (delete Resource._groupResourcesMap[this.url]);
			}
		}

		/**完成资源激活。*/
		__proto.completeCreate=function(){
			this._released=false;
			this.event("recovered",this);
		}

		/**
		*@private
		*/
		__proto.dispose=function(){
			this.destroy();
		}

		/**
		*@private
		*/
		/**
		*占用内存尺寸。
		*/
		__getset(0,__proto,'memorySize',function(){
			return this._memorySize;
			},function(value){
			var offsetValue=value-this._memorySize;
			this._memorySize=value;
			this.resourceManager && this.resourceManager.addSize(offsetValue);
		});

		/**
		*@private
		*/
		__getset(0,__proto,'_loaded',null,function(value){
			this.__loaded=value;
		});

		/**
		*获取是否已加载完成。
		*/
		__getset(0,__proto,'loaded',function(){
			return this.__loaded;
		});

		/**
		*获取唯一标识ID,通常用于识别。
		*/
		__getset(0,__proto,'id',function(){
			return this._$1__id;
		});

		/**
		*是否已处理。
		*/
		__getset(0,__proto,'destroyed',function(){
			return this._destroyed;
		});

		/**
		*设置资源组名。
		*/
		/**
		*获取资源组名。
		*/
		__getset(0,__proto,'group',function(){
			return this._getGroup();
			},function(value){
			this._setGroup(value);
		});

		/**
		*资源管理员。
		*/
		__getset(0,__proto,'resourceManager',function(){
			return this._resourceManager;
		});

		/**
		*获取资源的URL地址。
		*@return URL地址。
		*/
		__getset(0,__proto,'url',function(){
			return this._url;
		});

		/**
		*是否已释放。
		*/
		__getset(0,__proto,'released',function(){
			return this._released;
		});

		/**
		*获取资源的引用计数。
		*/
		__getset(0,__proto,'referenceCount',function(){
			return this._referenceCount;
		});

		Resource.getResourceByID=function(id){
			return Resource._idResourcesMap[id];
		}

		Resource.getResourceByURL=function(url,index){
			(index===void 0)&& (index=0);
			return Resource._urlResourcesMap[url][index];
		}

		Resource.getResourceCountByURL=function(url){
			return Resource._urlResourcesMap[url].length;
		}

		Resource.destroyUnusedResources=function(group){
			var res;
			if (group){
				var resouList=Resource._groupResourcesMap[group];
				if (resouList){
					var tempResouList=resouList.slice();
					for (var i=0,n=tempResouList.length;i < n;i++){
						res=tempResouList[i];
						if (!res.lock && res._referenceCount===0)
							res.destroy();
					}
				}
				}else {
				for (var k in Resource._idResourcesMap){
					res=Resource._idResourcesMap[k];
					if (!res.lock && res._referenceCount===0)
						res.destroy();
				}
			}
		}

		Resource._uniqueIDCounter=0;
		Resource._idResourcesMap={};
		Resource._urlResourcesMap={};
		Resource._groupResourcesMap={};
		return Resource;
	})(EventDispatcher)


	//class laya.display.Node extends laya.events.EventDispatcher
	var Node=(function(_super){
		function Node(){
			this._bits=0;
			this._displayedInStage=false;
			this._parent=null;
			this.conchModel=null;
			this.name="";
			this._destroyed=false;
			Node.__super.call(this);
			this._childs=Node.ARRAY_EMPTY;
			this._$P=Node.PROP_EMPTY;
			this.timer=Laya.scaleTimer;
			this.conchModel=Render.isConchNode ? this.createConchModel():null;
		}

		__class(Node,'laya.display.Node',_super);
		var __proto=Node.prototype;
		/**@private */
		__proto._setBit=function(type,value){
			if (type==0x1){
				var preValue=this._getBit(type);
				if (preValue !=value){
					this._updateDisplayedInstage();
				}
			}
			if (value){
				this._bits |=type;
				}else {
				this._bits &=~type;
			}
		}

		/**@private */
		__proto._getBit=function(type){
			return (this._bits & type)!=0;
		}

		/**@private */
		__proto._setUpNoticeChain=function(){
			if (this._getBit(0x1)){
				this._setUpNoticeType(0x1);
			}
		}

		/**@private */
		__proto._setUpNoticeType=function(type){
			var ele=this;
			ele._setBit(type,true);
			ele=ele.parent;
			while (ele){
				if (ele._getBit(type))return;
				ele._setBit(type,true);
				ele=ele.parent;
			}
		}

		/**
		*<p>增加事件侦听器，以使侦听器能够接收事件通知。</p>
		*<p>如果侦听鼠标事件，则会自动设置自己和父亲节点的属性 mouseEnabled 的值为 true(如果父节点mouseEnabled=false，则停止设置父节点mouseEnabled属性)。</p>
		*@param type 事件的类型。
		*@param caller 事件侦听函数的执行域。
		*@param listener 事件侦听函数。
		*@param args （可选）事件侦听函数的回调参数。
		*@return 此 EventDispatcher 对象。
		*/
		__proto.on=function(type,caller,listener,args){
			if (type==="display" || type==="undisplay"){
				if (!this._getBit(0x1)){
					this._setUpNoticeType(0x1);
				}
			}
			return this._createListener(type,caller,listener,args,false);
		}

		/**
		*<p>增加事件侦听器，以使侦听器能够接收事件通知，此侦听事件响应一次后则自动移除侦听。</p>
		*<p>如果侦听鼠标事件，则会自动设置自己和父亲节点的属性 mouseEnabled 的值为 true(如果父节点mouseEnabled=false，则停止设置父节点mouseEnabled属性)。</p>
		*@param type 事件的类型。
		*@param caller 事件侦听函数的执行域。
		*@param listener 事件侦听函数。
		*@param args （可选）事件侦听函数的回调参数。
		*@return 此 EventDispatcher 对象。
		*/
		__proto.once=function(type,caller,listener,args){
			if (type==="display" || type==="undisplay"){
				if (!this._getBit(0x1)){
					this._setUpNoticeType(0x1);
				}
			}
			return this._createListener(type,caller,listener,args,true);
		}

		/**@private */
		__proto.createConchModel=function(){
			return null;
		}

		/**
		*<p>销毁此对象。destroy对象默认会把自己从父节点移除，并且清理自身引用关系，等待js自动垃圾回收机制回收。destroy后不能再使用。</p>
		*<p>destroy时会移除自身的事情监听，自身的timer监听，移除子对象及从父节点移除自己。</p>
		*@param destroyChild （可选）是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。
		*/
		__proto.destroy=function(destroyChild){
			(destroyChild===void 0)&& (destroyChild=true);
			this._destroyed=true;
			this._parent && this._parent.removeChild(this);
			if (this._childs){
				if (destroyChild)this.destroyChildren();
				else this.removeChildren();
			}
			this._childs=null;
			this._$P=null;
			this.offAll();
			this.timer.clearAll(this);
		}

		/**
		*销毁所有子对象，不销毁自己本身。
		*/
		__proto.destroyChildren=function(){
			if (this._childs){
				for (var i=this._childs.length-1;i >-1;i--){
					this._childs[i].destroy(true);
				}
			}
		}

		/**
		*添加子节点。
		*@param node 节点对象
		*@return 返回添加的节点
		*/
		__proto.addChild=function(node){
			if (!node || this.destroyed || node===this)return node;
			if ((node).zOrder)this._set$P("hasZorder",true);
			if (node._parent===this){
				var index=this.getChildIndex(node);
				if (index!==this._childs.length-1){
					this._childs.splice(index,1);
					this._childs.push(node);
					if (this.conchModel){
						this.conchModel.removeChild(node.conchModel);
						this.conchModel.addChildAt(node.conchModel,this._childs.length-1);
					}
					this._childChanged();
				}
				}else {
				node.parent && node.parent.removeChild(node);
				this._childs===Node.ARRAY_EMPTY && (this._childs=[]);
				this._childs.push(node);
				this.conchModel && this.conchModel.addChildAt(node.conchModel,this._childs.length-1);
				node.parent=this;
				this._childChanged();
			}
			return node;
		}

		/**
		*批量增加子节点
		*@param ...args 无数子节点。
		*/
		__proto.addChildren=function(__args){
			var args=arguments;
			var i=0,n=args.length;
			while (i < n){
				this.addChild(args[i++]);
			}
		}

		/**
		*添加子节点到指定的索引位置。
		*@param node 节点对象。
		*@param index 索引位置。
		*@return 返回添加的节点。
		*/
		__proto.addChildAt=function(node,index){
			if (!node || this.destroyed || node===this)return node;
			if ((node).zOrder)this._set$P("hasZorder",true);
			if (index >=0 && index <=this._childs.length){
				if (node._parent===this){
					var oldIndex=this.getChildIndex(node);
					this._childs.splice(oldIndex,1);
					this._childs.splice(index,0,node);
					if (this.conchModel){
						this.conchModel.removeChild(node.conchModel);
						this.conchModel.addChildAt(node.conchModel,index);
					}
					this._childChanged();
					}else {
					node.parent && node.parent.removeChild(node);
					this._childs===Node.ARRAY_EMPTY && (this._childs=[]);
					this._childs.splice(index,0,node);
					this.conchModel && this.conchModel.addChildAt(node.conchModel,index);
					node.parent=this;
				}
				return node;
				}else {
				throw new Error("appendChildAt:The index is out of bounds");
			}
		}

		/**
		*根据子节点对象，获取子节点的索引位置。
		*@param node 子节点。
		*@return 子节点所在的索引位置。
		*/
		__proto.getChildIndex=function(node){
			return this._childs.indexOf(node);
		}

		/**
		*根据子节点的名字，获取子节点对象。
		*@param name 子节点的名字。
		*@return 节点对象。
		*/
		__proto.getChildByName=function(name){
			var nodes=this._childs;
			if (nodes){
				for (var i=0,n=nodes.length;i < n;i++){
					var node=nodes[i];
					if (node.name===name)return node;
				}
			}
			return null;
		}

		/**@private */
		__proto._get$P=function(key){
			return this._$P[key];
		}

		/**@private */
		__proto._set$P=function(key,value){
			if (!this.destroyed){
				this._$P===Node.PROP_EMPTY && (this._$P={});
				this._$P[key]=value;
			}
			return value;
		}

		/**
		*根据子节点的索引位置，获取子节点对象。
		*@param index 索引位置
		*@return 子节点
		*/
		__proto.getChildAt=function(index){
			return this._childs[index];
		}

		/**
		*设置子节点的索引位置。
		*@param node 子节点。
		*@param index 新的索引。
		*@return 返回子节点本身。
		*/
		__proto.setChildIndex=function(node,index){
			var childs=this._childs;
			if (index < 0 || index >=childs.length){
				throw new Error("setChildIndex:The index is out of bounds.");
			};
			var oldIndex=this.getChildIndex(node);
			if (oldIndex < 0)throw new Error("setChildIndex:node is must child of this object.");
			childs.splice(oldIndex,1);
			childs.splice(index,0,node);
			if (this.conchModel){
				this.conchModel.removeChild(node.conchModel);
				this.conchModel.addChildAt(node.conchModel,index);
			}
			this._childChanged();
			return node;
		}

		/**
		*@private
		*子节点发生改变。
		*@param child 子节点。
		*/
		__proto._childChanged=function(child){}
		/**
		*删除子节点。
		*@param node 子节点
		*@return 被删除的节点
		*/
		__proto.removeChild=function(node){
			if (!this._childs)return node;
			var index=this._childs.indexOf(node);
			return this.removeChildAt(index);
		}

		/**
		*从父容器删除自己，如已经被删除不会抛出异常。
		*@return 当前节点（ Node ）对象。
		*/
		__proto.removeSelf=function(){
			this._parent && this._parent.removeChild(this);
			return this;
		}

		/**
		*根据子节点名字删除对应的子节点对象，如果找不到不会抛出异常。
		*@param name 对象名字。
		*@return 查找到的节点（ Node ）对象。
		*/
		__proto.removeChildByName=function(name){
			var node=this.getChildByName(name);
			node && this.removeChild(node);
			return node;
		}

		/**
		*根据子节点索引位置，删除对应的子节点对象。
		*@param index 节点索引位置。
		*@return 被删除的节点。
		*/
		__proto.removeChildAt=function(index){
			var node=this.getChildAt(index);
			if (node){
				this._childs.splice(index,1);
				this.conchModel && this.conchModel.removeChild(node.conchModel);
				node.parent=null;
			}
			return node;
		}

		/**
		*删除指定索引区间的所有子对象。
		*@param beginIndex 开始索引。
		*@param endIndex 结束索引。
		*@return 当前节点对象。
		*/
		__proto.removeChildren=function(beginIndex,endIndex){
			(beginIndex===void 0)&& (beginIndex=0);
			(endIndex===void 0)&& (endIndex=0x7fffffff);
			if (this._childs && this._childs.length > 0){
				var childs=this._childs;
				if (beginIndex===0 && endIndex >=n){
					var arr=childs;
					this._childs=Node.ARRAY_EMPTY;
					}else {
					arr=childs.splice(beginIndex,endIndex-beginIndex);
				}
				for (var i=0,n=arr.length;i < n;i++){
					arr[i].parent=null;
					this.conchModel && this.conchModel.removeChild(arr[i].conchModel);
				}
			}
			return this;
		}

		/**
		*替换子节点。
		*@internal 将传入的新节点对象替换到已有子节点索引位置处。
		*@param newNode 新节点。
		*@param oldNode 老节点。
		*@return 返回新节点。
		*/
		__proto.replaceChild=function(newNode,oldNode){
			var index=this._childs.indexOf(oldNode);
			if (index >-1){
				this._childs.splice(index,1,newNode);
				if (this.conchModel){
					this.conchModel.removeChild(oldNode.conchModel);
					this.conchModel.addChildAt(newNode.conchModel,index);
				}
				oldNode.parent=null;
				newNode.parent=this;
				return newNode;
			}
			return null;
		}

		/**@private */
		__proto._updateDisplayedInstage=function(){
			var ele;
			ele=this;
			var stage=Laya.stage;
			this._displayedInStage=false;
			while (ele){
				if (ele._getBit(0x1)){
					this._displayedInStage=ele._displayedInStage;
					break ;
				}
				if (ele==stage || ele._displayedInStage){
					this._displayedInStage=true;
					break ;
				}
				ele=ele.parent;
			}
		}

		/**@private */
		__proto._setDisplay=function(value){
			if (this._displayedInStage!==value){
				this._displayedInStage=value;
				if (value)this.event("display");
				else this.event("undisplay");
			}
		}

		/**
		*@private
		*设置指定节点对象是否可见(是否在渲染列表中)。
		*@param node 节点。
		*@param display 是否可见。
		*/
		__proto._displayChild=function(node,display){
			var childs=node._childs;
			if (childs){
				for (var i=0,n=childs.length;i < n;i++){
					var child=childs[i];
					if (!child._getBit(0x1))continue ;
					if (child._childs.length > 0){
						this._displayChild(child,display);
						}else {
						child._setDisplay(display);
					}
				}
			}
			node._setDisplay(display);
		}

		/**
		*当前容器是否包含指定的 <code>Node</code> 节点对象 。
		*@param node 指定的 <code>Node</code> 节点对象 。
		*@return 一个布尔值表示是否包含指定的 <code>Node</code> 节点对象 。
		*/
		__proto.contains=function(node){
			if (node===this)return true;
			while (node){
				if (node.parent===this)return true;
				node=node.parent;
			}
			return false;
		}

		/**
		*定时重复执行某函数。功能同Laya.timer.timerLoop()。
		*@param delay 间隔时间(单位毫秒)。
		*@param caller 执行域(this)。
		*@param method 结束时的回调方法。
		*@param args （可选）回调参数。
		*@param coverBefore （可选）是否覆盖之前的延迟执行，默认为true。
		*@param jumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次
		*/
		__proto.timerLoop=function(delay,caller,method,args,coverBefore,jumpFrame){
			(coverBefore===void 0)&& (coverBefore=true);
			(jumpFrame===void 0)&& (jumpFrame=false);
			this.timer.loop(delay,caller,method,args,coverBefore,jumpFrame);
		}

		/**
		*定时执行某函数一次。功能同Laya.timer.timerOnce()。
		*@param delay 延迟时间(单位毫秒)。
		*@param caller 执行域(this)。
		*@param method 结束时的回调方法。
		*@param args （可选）回调参数。
		*@param coverBefore （可选）是否覆盖之前的延迟执行，默认为true。
		*/
		__proto.timerOnce=function(delay,caller,method,args,coverBefore){
			(coverBefore===void 0)&& (coverBefore=true);
			this.timer._create(false,false,delay,caller,method,args,coverBefore);
		}

		/**
		*定时重复执行某函数(基于帧率)。功能同Laya.timer.frameLoop()。
		*@param delay 间隔几帧(单位为帧)。
		*@param caller 执行域(this)。
		*@param method 结束时的回调方法。
		*@param args （可选）回调参数。
		*@param coverBefore （可选）是否覆盖之前的延迟执行，默认为true。
		*/
		__proto.frameLoop=function(delay,caller,method,args,coverBefore){
			(coverBefore===void 0)&& (coverBefore=true);
			this.timer._create(true,true,delay,caller,method,args,coverBefore);
		}

		/**
		*定时执行一次某函数(基于帧率)。功能同Laya.timer.frameOnce()。
		*@param delay 延迟几帧(单位为帧)。
		*@param caller 执行域(this)
		*@param method 结束时的回调方法
		*@param args （可选）回调参数
		*@param coverBefore （可选）是否覆盖之前的延迟执行，默认为true
		*/
		__proto.frameOnce=function(delay,caller,method,args,coverBefore){
			(coverBefore===void 0)&& (coverBefore=true);
			this.timer._create(true,false,delay,caller,method,args,coverBefore);
		}

		/**
		*清理定时器。功能同Laya.timer.clearTimer()。
		*@param caller 执行域(this)。
		*@param method 结束时的回调方法。
		*/
		__proto.clearTimer=function(caller,method){
			this.timer.clear(caller,method);
		}

		/**
		*子对象数量。
		*/
		__getset(0,__proto,'numChildren',function(){
			return this._childs.length;
		});

		/**
		*[只读]是否已经销毁。对象销毁后不能再使用。
		*@return
		*/
		__getset(0,__proto,'destroyed',function(){
			return this._destroyed;
		});

		/**父节点。*/
		__getset(0,__proto,'parent',function(){
			return this._parent;
			},function(value){
			if (this._parent!==value){
				if (value){
					this._parent=value;
					this.event("added");
					if (this._getBit(0x1)){
						this._setUpNoticeChain();
						value.displayedInStage && this._displayChild(this,true);
					}
					value._childChanged(this);
					}else {
					this.event("removed");
					this._parent._childChanged();
					if (this._getBit(0x1))this._displayChild(this,false);
					this._parent=value;
				}
			}
		});

		/**表示是否在显示列表中显示。*/
		__getset(0,__proto,'displayedInStage',function(){
			if (this._getBit(0x1))return this._displayedInStage;
			this._setUpNoticeType(0x1);
			return this._displayedInStage;
		});

		Node.ARRAY_EMPTY=[];
		Node.PROP_EMPTY={};
		Node.NOTICE_DISPLAY=0x1;
		Node.MOUSEENABLE=0x2;
		return Node;
	})(EventDispatcher)


	//class laya.net.LoaderManager extends laya.events.EventDispatcher
	var LoaderManager=(function(_super){
		var ResInfo;
		function LoaderManager(){
			this.retryNum=1;
			this.retryDelay=0;
			this.maxLoader=5;
			this._loaders=[];
			this._loaderCount=0;
			this._resInfos=[];
			this._infoPool=[];
			this._maxPriority=5;
			this._failRes={};
			LoaderManager.__super.call(this);
			for (var i=0;i < this._maxPriority;i++)this._resInfos[i]=[];
		}

		__class(LoaderManager,'laya.net.LoaderManager',_super);
		var __proto=LoaderManager.prototype;
		/**
		*<p>根据clas类型创建一个未初始化资源的对象，随后进行异步加载，资源加载完成后，初始化对象的资源，并通过此对象派发 Event.LOADED 事件，事件回调参数值为此对象本身。套嵌资源的子资源会保留资源路径"?"后的部分。</p>
		*<p>如果url为数组，返回true；否则返回指定的资源类对象，可以通过侦听此对象的 Event.LOADED 事件来判断资源是否已经加载完毕。</p>
		*<p><b>注意：</b>cache参数只能对文件后缀为atlas的资源进行缓存控制，其他资源会忽略缓存，强制重新加载。</p>
		*@param url 资源地址或者数组。如果url和clas同时指定了资源类型，优先使用url指定的资源类型。参数形如：[{url:xx,clas:xx,priority:xx,params:xx},{url:xx,clas:xx,priority:xx,params:xx}]。
		*@param complete 加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，指定了一组要加载的资源，如果全部加载成功，则回调参数值为true，否则为false。
		*@param progress 资源加载进度回调，回调参数值为当前资源加载的进度信息(0-1)。
		*@param clas 资源类名。如果url和clas同时指定了资源类型，优先使用url指定的资源类型。参数形如：Texture。
		*@param params 资源构造参数。
		*@param priority (default=1)加载的优先级，优先级高的优先加载。有0-4共5个优先级，0最高，4最低。
		*@param cache 是否缓存加载的资源。
		*@return 如果url为数组，返回true；否则返回指定的资源类对象。
		*/
		__proto.create=function(url,complete,progress,clas,params,priority,cache,group){
			(priority===void 0)&& (priority=1);
			(cache===void 0)&& (cache=true);
			if ((url instanceof Array)){
				var items=url;
				var itemCount=items.length;
				var loadedCount=0;
				if (progress){
					var progress2=Handler.create(progress.caller,progress.method,progress.args,false);
				}
				for (var i=0;i < itemCount;i++){
					var item=items[i];
					if ((typeof item=='string'))
						item=items[i]={url:item};
					item.progress=0;
				}
				for (i=0;i < itemCount;i++){
					item=items[i];
					var progressHandler=progress ? Handler.create(null,onProgress,[item],false):null;
					var completeHandler=(progress || complete)? Handler.create(null,onComplete,[item]):null;
					this._create(item.url,completeHandler,progressHandler,item.clas || clas,item.params || params,item.priority || priority,cache,item.group || group);
				}
				function onComplete (item,content){
					loadedCount++;
					item.progress=1;
					if (loadedCount===itemCount && complete){
						complete.run();
					}
				}
				function onProgress (item,value){
					item.progress=value;
					var num=0;
					for (var j=0;j < itemCount;j++){
						var item1=items[j];
						num+=item1.progress;
					};
					var v=num / itemCount;
					progress2.runWith(v);
				}
				return true;
			}else return this._create(url,complete,progress,clas,params,priority,cache,group);
		}

		__proto._create=function(url,complete,progress,clas,params,priority,cache,group){
			(priority===void 0)&& (priority=1);
			(cache===void 0)&& (cache=true);
			var formarUrl=URL.formatURL(url);
			var item=this.getRes(formarUrl);
			if (!item){
				var extension=Utils.getFileExtension(url);
				var creatItem=LoaderManager.createMap[extension];
				if (!creatItem)
					throw new Error("LoaderManager:unknown file("+url+") extension with: "+extension+".");
				if (!clas)clas=creatItem[0];
				var type=creatItem[1];
				if (extension=="atlas"){
					this.load(url,complete,progress,type,priority,cache);
					}else {
					if (clas===Texture)type="htmlimage";
					item=clas ? new clas():null;
					if (item.hasOwnProperty("_loaded"))
						item._loaded=false;
					item._setUrl(url);
					(group)&& (item._setGroup(group));
					this._createLoad(item,url,Handler.create(null,onLoaded),progress,type,priority,false,group,true);
					function onLoaded (data){
						(item && !item.destroyed && data)&& (item.onAsynLoaded.call(item,url,data,params));
						if (complete)complete.run();
						Laya.loader.event(url);
					}
					(cache)&& (this.cacheRes(formarUrl,item));
				}
				}else {
				if (!item.hasOwnProperty("loaded")|| item.loaded){
					progress && progress.runWith(1);
					complete && complete.run();
					}else if (complete){
					Laya.loader._createListener(url,complete.caller,complete.method,complete.args,true,false);
				}
			}
			return item;
		}

		/**
		*<p>加载资源。资源加载错误时，本对象会派发 Event.ERROR 事件，事件回调参数值为加载出错的资源地址。</p>
		*<p>因为返回值为 LoaderManager 对象本身，所以可以使用如下语法：Laya.loader.load(...).load(...);</p>
		*@param url 要加载的单个资源地址或资源信息数组。比如：简单数组：["a.png","b.png"]；复杂数组[{url:"a.png",type:Loader.IMAGE,size:100,priority:1},{url:"b.json",type:Loader.JSON,size:50,priority:1}]。
		*@param complete 加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，指定了一组要加载的资源，如果全部加载成功，则回调参数值为true，否则为false。
		*@param progress 加载进度回调。回调参数值为当前资源的加载进度信息(0-1)。
		*@param type 资源类型。比如：Loader.IMAGE。
		*@param priority (default=1)加载的优先级，优先级高的优先加载。有0-4共5个优先级，0最高，4最低。
		*@param cache 是否缓存加载结果。
		*@param group 分组，方便对资源进行管理。
		*@param ignoreCache 是否忽略缓存，强制重新加载。
		*@return 此 LoaderManager 对象本身。
		*/
		__proto.load=function(url,complete,progress,type,priority,cache,group,ignoreCache){
			var _$this=this;
			(priority===void 0)&& (priority=1);
			(cache===void 0)&& (cache=true);
			(ignoreCache===void 0)&& (ignoreCache=false);
			if ((url instanceof Array))return this._loadAssets(url,complete,progress,type,priority,cache,group);
			var content=Loader.getRes(url);
			if (content !=null){
				Laya.timer.frameOnce(1,null,function(){
					progress && progress.runWith(1);
					complete && complete.runWith(content);
					_$this._loaderCount || _$this.event("complete");
				});
				}else {
				var info=LoaderManager._resMap[url];
				if (!info){
					info=this._infoPool.length ? this._infoPool.pop():new ResInfo();
					info.url=url;
					info.type=type;
					info.cache=cache;
					info.group=group;
					info.ignoreCache=ignoreCache;
					complete && info.on("complete",complete.caller,complete.method,complete.args);
					progress && info.on("progress",progress.caller,progress.method,progress.args);
					LoaderManager._resMap[url]=info;
					priority=priority < this._maxPriority ? priority :this._maxPriority-1;
					this._resInfos[priority].push(info);
					this._next();
					}else {
					complete && info._createListener("complete",complete.caller,complete.method,complete.args,false,false);
					progress && info._createListener("progress",progress.caller,progress.method,progress.args,false,false);
				}
			}
			return this;
		}

		/**
		*@private
		*/
		__proto._createLoad=function(item,url,complete,progress,type,priority,cache,group,ignoreCache){
			var _$this=this;
			(priority===void 0)&& (priority=1);
			(cache===void 0)&& (cache=true);
			(ignoreCache===void 0)&& (ignoreCache=false);
			if ((url instanceof Array))return this._loadAssets(url,complete,progress,type,priority,cache,group);
			var content=Loader.getRes(url);
			if (content !=null){
				Laya.timer.frameOnce(1,null,function(){
					progress && progress.runWith(1);
					complete && complete.runWith(content);
					_$this._loaderCount || _$this.event("complete");
				});
				}else {
				var info=LoaderManager._resMap[url];
				if (!info){
					info=this._infoPool.length ? this._infoPool.pop():new ResInfo();
					info.url=url;
					info.clas=item;
					info.type=type;
					info.cache=cache;
					info.group=group;
					info.ignoreCache=ignoreCache;
					complete && info.on("complete",complete.caller,complete.method,complete.args);
					progress && info.on("progress",progress.caller,progress.method,progress.args);
					LoaderManager._resMap[url]=info;
					priority=priority < this._maxPriority ? priority :this._maxPriority-1;
					this._resInfos[priority].push(info);
					this._next();
					}else {
					complete && info._createListener("complete",complete.caller,complete.method,complete.args,false,false);
					progress && info._createListener("progress",progress.caller,progress.method,progress.args,false,false);
				}
			}
			return this;
		}

		__proto._next=function(){
			if (this._loaderCount >=this.maxLoader)return;
			for (var i=0;i < this._maxPriority;i++){
				var infos=this._resInfos[i];
				while (infos.length > 0){
					var info=infos.shift();
					if (info)return this._doLoad(info);
				}
			}
			this._loaderCount || this.event("complete");
		}

		__proto._doLoad=function(resInfo){
			this._loaderCount++;
			var loader=this._loaders.length ? this._loaders.pop():new Loader();
			loader.on("complete",null,onLoaded);
			loader.on("progress",null,function(num){
				resInfo.event("progress",num);
			});
			loader.on("error",null,function(msg){
				onLoaded(null);
			});
			var _this=this;
			function onLoaded (data){
				loader.offAll();
				loader._data=null;
				loader._customParse=false;
				_this._loaders.push(loader);
				_this._endLoad(resInfo,(data instanceof Array)? [data] :data);
				_this._loaderCount--;
				_this._next();
			}
			loader._class=resInfo.clas;
			loader.load(resInfo.url,resInfo.type,resInfo.cache,resInfo.group,resInfo.ignoreCache);
		}

		__proto._endLoad=function(resInfo,content){
			var url=resInfo.url;
			if (content==null){
				var errorCount=this._failRes[url] || 0;
				if (errorCount < this.retryNum){
					console.warn("[warn]Retry to load:",url);
					this._failRes[url]=errorCount+1;
					Laya.timer.once(this.retryDelay,this,this._addReTry,[resInfo],false);
					return;
					}else {
					console.warn("[error]Failed to load:",url);
					this.event("error",url);
				}
			}
			if (this._failRes[url])this._failRes[url]=0;
			delete LoaderManager._resMap[url];
			resInfo.event("complete",content);
			resInfo.offAll();
			this._infoPool.push(resInfo);
		}

		__proto._addReTry=function(resInfo){
			this._resInfos[this._maxPriority-1].push(resInfo);
			this._next();
		}

		/**
		*清理指定资源地址缓存。
		*@param url 资源地址。
		*@param forceDispose 是否强制销毁，有些资源是采用引用计数方式销毁，如果forceDispose=true，则忽略引用计数，直接销毁，比如Texture，默认为false
		*/
		__proto.clearRes=function(url,forceDispose){
			(forceDispose===void 0)&& (forceDispose=false);
			Loader.clearRes(url,forceDispose);
		}

		/**
		*获取指定资源地址的资源。
		*@param url 资源地址。
		*@return 返回资源。
		*/
		__proto.getRes=function(url){
			return Loader.getRes(url);
		}

		/**
		*缓存资源。
		*@param url 资源地址。
		*@param data 要缓存的内容。
		*/
		__proto.cacheRes=function(url,data){
			Loader.cacheRes(url,data);
		}

		/**
		*销毁Texture使用的图片资源，保留texture壳，如果下次渲染的时候，发现texture使用的图片资源不存在，则会自动恢复
		*相比clearRes，clearTextureRes只是清理texture里面使用的图片资源，并不销毁texture，再次使用到的时候会自动恢复图片资源
		*而clearRes会彻底销毁texture，导致不能再使用；clearTextureRes能确保立即销毁图片资源，并且不用担心销毁错误，clearRes则采用引用计数方式销毁
		*【注意】如果图片本身在自动合集里面（默认图片小于512*512），内存是不能被销毁的，此图片被大图合集管理器管理
		*@param url 图集地址或者texture地址，比如 Loader.clearTextureRes("res/atlas/comp.atlas");Loader.clearTextureRes("hall/bg.jpg");
		*/
		__proto.clearTextureRes=function(url){
			Loader.clearTextureRes(url);
		}

		/**
		*设置资源分组。
		*@param url 资源地址。
		*@param group 分组名
		*/
		__proto.setGroup=function(url,group){
			Loader.setGroup(url,group);
		}

		/**
		*根据分组清理资源。
		*@param group 分组名
		*/
		__proto.clearResByGroup=function(group){
			Loader.clearResByGroup(group);
		}

		/**清理当前未完成的加载，所有未加载的内容全部停止加载。*/
		__proto.clearUnLoaded=function(){
			for (var i=0;i < this._maxPriority;i++){
				var infos=this._resInfos[i];
				for (var j=infos.length-1;j >-1;j--){
					var info=infos[j];
					if (info){
						info.offAll();
						this._infoPool.push(info);
					}
				}
				infos.length=0;
			}
			this._loaderCount=0;
			LoaderManager._resMap={};
		}

		/**
		*根据地址集合清理掉未加载的内容
		*@param urls 资源地址集合
		*/
		__proto.cancelLoadByUrls=function(urls){
			if (!urls)return;
			for (var i=0,n=urls.length;i < n;i++){
				this.cancelLoadByUrl(urls[i]);
			}
		}

		/**
		*根据地址清理掉未加载的内容
		*@param url 资源地址
		*/
		__proto.cancelLoadByUrl=function(url){
			for (var i=0;i < this._maxPriority;i++){
				var infos=this._resInfos[i];
				for (var j=infos.length-1;j >-1;j--){
					var info=infos[j];
					if (info && info.url===url){
						infos[j]=null;
						info.offAll();
						this._infoPool.push(info);
					}
				}
			}
			if (LoaderManager._resMap[url])delete LoaderManager._resMap[url];
		}

		/**
		*@private
		*加载数组里面的资源。
		*@param arr 简单：["a.png","b.png"]，复杂[{url:"a.png",type:Loader.IMAGE,size:100,priority:1},{url:"b.json",type:Loader.JSON,size:50,priority:1}]*/
		__proto._loadAssets=function(arr,complete,progress,type,priority,cache,group){
			(priority===void 0)&& (priority=1);
			(cache===void 0)&& (cache=true);
			var itemCount=arr.length;
			var loadedCount=0;
			var totalSize=0;
			var items=[];
			var success=true;
			for (var i=0;i < itemCount;i++){
				var item=arr[i];
				if ((typeof item=='string'))item={url:item,type:type,size:1,priority:priority};
				if (!item.size)item.size=1;
				item.progress=0;
				totalSize+=item.size;
				items.push(item);
				var progressHandler=progress ? Handler.create(null,loadProgress,[item],false):null;
				var completeHandler=(complete || progress)? Handler.create(null,loadComplete,[item]):null;
				this.load(item.url,completeHandler,progressHandler,item.type,item.priority || 1,cache,item.group || group);
			}
			function loadComplete (item,content){
				loadedCount++;
				item.progress=1;
				if (!content)success=false;
				if (loadedCount===itemCount && complete){
					complete.runWith(success);
				}
			}
			function loadProgress (item,value){
				if (progress !=null){
					item.progress=value;
					var num=0;
					for (var j=0;j < items.length;j++){
						var item1=items[j];
						num+=item1.size *item1.progress;
					};
					var v=num / totalSize;
					progress.runWith(v);
				}
			}
			return this;
		}

		LoaderManager.cacheRes=function(url,data){
			Loader.cacheRes(url,data);
		}

		LoaderManager._resMap={};
		__static(LoaderManager,
		['createMap',function(){return this.createMap={atlas:[null,"atlas"]};}
		]);
		LoaderManager.__init$=function(){
			//class ResInfo extends laya.events.EventDispatcher
			ResInfo=(function(_super){
				function ResInfo(){
					this.url=null;
					this.type=null;
					this.cache=false;
					this.group=null;
					this.ignoreCache=false;
					this.clas=null;
					ResInfo.__super.call(this);
				}
				__class(ResInfo,'',_super);
				return ResInfo;
			})(EventDispatcher)
		}

		return LoaderManager;
	})(EventDispatcher)


	//class laya.media.h5audio.AudioSound extends laya.events.EventDispatcher
	var AudioSound=(function(_super){
		function AudioSound(){
			this.url=null;
			this.audio=null;
			this.loaded=false;
			AudioSound.__super.call(this);
		}

		__class(AudioSound,'laya.media.h5audio.AudioSound',_super);
		var __proto=AudioSound.prototype;
		/**
		*释放声音
		*
		*/
		__proto.dispose=function(){
			var ad=AudioSound._audioCache[this.url];
			if (ad){
				ad.src="";
				delete AudioSound._audioCache[this.url];
			}
		}

		/**
		*加载声音
		*@param url
		*
		*/
		__proto.load=function(url){
			url=URL.formatURL(url);
			this.url=url;
			var ad;
			if (url==SoundManager._tMusic){
				AudioSound._initMusicAudio();
				ad=AudioSound._musicAudio;
				if (ad.src !=url){
					AudioSound._audioCache[ad.src]=null;
					ad=null;
				}
				}else{
				ad=AudioSound._audioCache[url];
			}
			if (ad && ad.readyState >=2){
				this.event("complete");
				return;
			}
			if (!ad){
				if (url==SoundManager._tMusic){
					AudioSound._initMusicAudio();
					ad=AudioSound._musicAudio;
					}else{
					ad=Browser.createElement("audio");
				}
				AudioSound._audioCache[url]=ad;
				ad.src=url;
			}
			ad.addEventListener("canplaythrough",onLoaded);
			ad.addEventListener("error",onErr);
			var me=this;
			function onLoaded (){
				offs();
				me.loaded=true;
				me.event("complete");
			}
			function onErr (){
				ad.load=null;
				offs();
				me.event("error");
			}
			function offs (){
				ad.removeEventListener("canplaythrough",onLoaded);
				ad.removeEventListener("error",onErr);
			}
			this.audio=ad;
			if (ad.load){
				ad.load();
				}else {
				onErr();
			}
		}

		/**
		*播放声音
		*@param startTime 起始时间
		*@param loops 循环次数
		*@return
		*
		*/
		__proto.play=function(startTime,loops){
			(startTime===void 0)&& (startTime=0);
			(loops===void 0)&& (loops=0);
			if (!this.url)return null;
			var ad;
			if (this.url==SoundManager._tMusic){
				ad=AudioSound._musicAudio;
				}else{
				ad=AudioSound._audioCache[this.url];
			}
			if (!ad)return null;
			var tAd;
			tAd=Pool.getItem("audio:"+this.url);
			if (Render.isConchApp){
				if (!tAd){
					tAd=Browser.createElement("audio");
					tAd.src=this.url;
				}
			}
			else {
				if (this.url==SoundManager._tMusic){
					AudioSound._initMusicAudio();
					tAd=AudioSound._musicAudio;
					tAd.src=this.url;
					}else{
					tAd=tAd ? tAd :ad.cloneNode(true);
				}
			};
			var channel=new AudioSoundChannel(tAd);
			channel.url=this.url;
			channel.loops=loops;
			channel.startTime=startTime;
			channel.play();
			SoundManager.addChannel(channel);
			return channel;
		}

		/**
		*获取总时间。
		*/
		__getset(0,__proto,'duration',function(){
			var ad;
			ad=AudioSound._audioCache[this.url];
			if (!ad)
				return 0;
			return ad.duration;
		});

		AudioSound._initMusicAudio=function(){
			if (AudioSound._musicAudio)return;
			if (!AudioSound._musicAudio)AudioSound._musicAudio=Browser.createElement("audio");
			if (!Render.isConchApp){
				Browser.document.addEventListener("mousedown",AudioSound._makeMusicOK);
			}
		}

		AudioSound._makeMusicOK=function(){
			Browser.document.removeEventListener("mousedown",AudioSound._makeMusicOK);
			if (!AudioSound._musicAudio.src){
				AudioSound._musicAudio.src="";
				AudioSound._musicAudio.load();
				}else{
				AudioSound._musicAudio.play();
			}
		}

		AudioSound._audioCache={};
		AudioSound._musicAudio=null
		return AudioSound;
	})(EventDispatcher)


	//class laya.media.SoundChannel extends laya.events.EventDispatcher
	var SoundChannel=(function(_super){
		function SoundChannel(){
			this.url=null;
			this.loops=0;
			this.startTime=NaN;
			this.isStopped=false;
			this.completeHandler=null;
			SoundChannel.__super.call(this);
		}

		__class(SoundChannel,'laya.media.SoundChannel',_super);
		var __proto=SoundChannel.prototype;
		/**
		*播放。
		*/
		__proto.play=function(){}
		/**
		*停止。
		*/
		__proto.stop=function(){}
		/**
		*暂停。
		*/
		__proto.pause=function(){}
		/**
		*继续播放。
		*/
		__proto.resume=function(){}
		/**
		*private
		*/
		__proto.__runComplete=function(handler){
			if (handler){
				handler.run();
			}
		}

		/**
		*音量范围从 0（静音）至 1（最大音量）。
		*/
		__getset(0,__proto,'volume',function(){
			return 1;
			},function(v){
		});

		/**
		*获取当前播放时间。
		*/
		__getset(0,__proto,'position',function(){
			return 0;
		});

		/**
		*获取总时间。
		*/
		__getset(0,__proto,'duration',function(){
			return 0;
		});

		return SoundChannel;
	})(EventDispatcher)


	//class laya.media.Sound extends laya.events.EventDispatcher
	var Sound=(function(_super){
		function Sound(){Sound.__super.call(this);;
		};

		__class(Sound,'laya.media.Sound',_super);
		var __proto=Sound.prototype;
		/**
		*加载声音。
		*@param url 地址。
		*
		*/
		__proto.load=function(url){}
		/**
		*播放声音。
		*@param startTime 开始时间,单位秒
		*@param loops 循环次数,0表示一直循环
		*@return 声道 SoundChannel 对象。
		*
		*/
		__proto.play=function(startTime,loops){
			(startTime===void 0)&& (startTime=0);
			(loops===void 0)&& (loops=0);
			return null;
		}

		/**
		*释放声音资源。
		*
		*/
		__proto.dispose=function(){}
		/**
		*获取总时间。
		*/
		__getset(0,__proto,'duration',function(){
			return 0;
		});

		return Sound;
	})(EventDispatcher)


	//class laya.media.webaudio.WebAudioSound extends laya.events.EventDispatcher
	var WebAudioSound=(function(_super){
		function WebAudioSound(){
			this.url=null;
			this.loaded=false;
			this.data=null;
			this.audioBuffer=null;
			this.__toPlays=null;
			this._disposed=false;
			WebAudioSound.__super.call(this);
		}

		__class(WebAudioSound,'laya.media.webaudio.WebAudioSound',_super);
		var __proto=WebAudioSound.prototype;
		/**
		*加载声音
		*@param url
		*
		*/
		__proto.load=function(url){
			var me=this;
			url=URL.formatURL(url);
			this.url=url;
			this.audioBuffer=WebAudioSound._dataCache[url];
			if (this.audioBuffer){
				this._loaded(this.audioBuffer);
				return;
			}
			WebAudioSound.e.on("loaded:"+url,this,this._loaded);
			WebAudioSound.e.on("err:"+url,this,this._err);
			if (WebAudioSound.__loadingSound[url]){
				return;
			}
			WebAudioSound.__loadingSound[url]=true;
			var request=new Browser.window.XMLHttpRequest();
			request.open("GET",url,true);
			request.responseType="arraybuffer";
			request.onload=function (){
				if (me._disposed){
					me._removeLoadEvents();
					return;
				}
				me.data=request.response;
				WebAudioSound.buffs.push({"buffer":me.data,"url":me.url});
				WebAudioSound.decode();
			};
			request.onerror=function (e){
				me._err();
			}
			request.send();
		}

		__proto._err=function(){
			this._removeLoadEvents();
			WebAudioSound.__loadingSound[this.url]=false;
			this.event("error");
		}

		__proto._loaded=function(audioBuffer){
			this._removeLoadEvents();
			if (this._disposed){
				return;
			}
			this.audioBuffer=audioBuffer;
			WebAudioSound._dataCache[this.url]=this.audioBuffer;
			this.loaded=true;
			this.event("complete");
		}

		__proto._removeLoadEvents=function(){
			WebAudioSound.e.off("loaded:"+this.url,this,this._loaded);
			WebAudioSound.e.off("err:"+this.url,this,this._err);
		}

		__proto.__playAfterLoaded=function(){
			if (!this.__toPlays)return;
			var i=0,len=0;
			var toPlays;
			toPlays=this.__toPlays;
			len=toPlays.length;
			var tParams;
			for (i=0;i < len;i++){
				tParams=toPlays[i];
				if (tParams[2] && !(tParams [2]).isStopped){
					this.play(tParams[0],tParams[1],tParams[2]);
				}
			}
			this.__toPlays.length=0;
		}

		/**
		*播放声音
		*@param startTime 起始时间
		*@param loops 循环次数
		*@return
		*
		*/
		__proto.play=function(startTime,loops,channel){
			(startTime===void 0)&& (startTime=0);
			(loops===void 0)&& (loops=0);
			channel=channel ? channel :new WebAudioSoundChannel();
			if (!this.audioBuffer){
				if (this.url){
					if (!this.__toPlays)this.__toPlays=[];
					this.__toPlays.push([startTime,loops,channel]);
					this.once("complete",this,this.__playAfterLoaded);
					this.load(this.url);
				}
			}
			channel.url=this.url;
			channel.loops=loops;
			channel["audioBuffer"]=this.audioBuffer;
			channel.startTime=startTime;
			channel.play();
			SoundManager.addChannel(channel);
			return channel;
		}

		__proto.dispose=function(){
			this._disposed=true;
			delete WebAudioSound._dataCache[this.url];
			delete WebAudioSound.__loadingSound[this.url];
			this.audioBuffer=null;
			this.data=null;
			this.__toPlays=[];
		}

		__getset(0,__proto,'duration',function(){
			if (this.audioBuffer){
				return this.audioBuffer.duration;
			}
			return 0;
		});

		WebAudioSound.decode=function(){
			if (WebAudioSound.buffs.length <=0 || WebAudioSound.isDecoding){
				return;
			}
			WebAudioSound.isDecoding=true;
			WebAudioSound.tInfo=WebAudioSound.buffs.shift();
			WebAudioSound.ctx.decodeAudioData(WebAudioSound.tInfo["buffer"],WebAudioSound._done,WebAudioSound._fail);
		}

		WebAudioSound._done=function(audioBuffer){
			WebAudioSound.e.event("loaded:"+WebAudioSound.tInfo.url,audioBuffer);
			WebAudioSound.isDecoding=false;
			WebAudioSound.decode();
		}

		WebAudioSound._fail=function(){
			WebAudioSound.e.event("err:"+WebAudioSound.tInfo.url,null);
			WebAudioSound.isDecoding=false;
			WebAudioSound.decode();
		}

		WebAudioSound._playEmptySound=function(){
			if (WebAudioSound.ctx==null){
				return;
			};
			var source=WebAudioSound.ctx.createBufferSource();
			source.buffer=WebAudioSound._miniBuffer;
			source.connect(WebAudioSound.ctx.destination);
			source.start(0,0,0);
		}

		WebAudioSound._unlock=function(){
			if (WebAudioSound._unlocked){
				return;
			}
			WebAudioSound._playEmptySound();
			if (WebAudioSound.ctx.state=="running"){
				Browser.document.removeEventListener("mousedown",WebAudioSound._unlock,true);
				Browser.document.removeEventListener("touchend",WebAudioSound._unlock,true);
				WebAudioSound._unlocked=true;
			}
		}

		WebAudioSound.initWebAudio=function(){
			if (WebAudioSound.ctx.state !="running"){
				WebAudioSound._unlock();
				Browser.document.addEventListener("mousedown",WebAudioSound._unlock,true);
				Browser.document.addEventListener("touchend",WebAudioSound._unlock,true);
			}
		}

		WebAudioSound._dataCache={};
		WebAudioSound.buffs=[];
		WebAudioSound.isDecoding=false;
		WebAudioSound._unlocked=false;
		WebAudioSound.tInfo=null
		WebAudioSound.__loadingSound={};
		__static(WebAudioSound,
		['window',function(){return this.window=Browser.window;},'webAudioEnabled',function(){return this.webAudioEnabled=WebAudioSound.window["AudioContext"] || WebAudioSound.window["webkitAudioContext"] || WebAudioSound.window["mozAudioContext"];},'ctx',function(){return this.ctx=WebAudioSound.webAudioEnabled ? new (WebAudioSound.window["AudioContext"] || WebAudioSound.window["webkitAudioContext"] || WebAudioSound.window["mozAudioContext"])():undefined;},'_miniBuffer',function(){return this._miniBuffer=WebAudioSound.ctx.createBuffer(1,1,22050);},'e',function(){return this.e=new EventDispatcher();}
		]);
		return WebAudioSound;
	})(EventDispatcher)


	//class laya.net.HttpRequest extends laya.events.EventDispatcher
	var HttpRequest=(function(_super){
		function HttpRequest(){
			this._responseType=null;
			this._data=null;
			HttpRequest.__super.call(this);
			this._http=new Browser.window.XMLHttpRequest();
		}

		__class(HttpRequest,'laya.net.HttpRequest',_super);
		var __proto=HttpRequest.prototype;
		/**
		*发送 HTTP 请求。
		*@param url 请求的地址。大多数浏览器实施了一个同源安全策略，并且要求这个 URL 与包含脚本的文本具有相同的主机名和端口。
		*@param data (default=null)发送的数据。
		*@param method (default="get")用于请求的 HTTP 方法。值包括 "get"、"post"、"head"。
		*@param responseType (default="text")Web 服务器的响应类型，可设置为 "text"、"json"、"xml"、"arraybuffer"。
		*@param headers (default=null)HTTP 请求的头部信息。参数形如key-value数组：key是头部的名称，不应该包括空白、冒号或换行；value是头部的值，不应该包括换行。比如["Content-Type","application/json"]。
		*/
		__proto.send=function(url,data,method,responseType,headers){
			(method===void 0)&& (method="get");
			(responseType===void 0)&& (responseType="text");
			this._responseType=responseType;
			this._data=null;
			var _this=this;
			var http=this._http;
			http.open(method,url,true);
			if (headers){
				for (var i=0;i < headers.length;i++){
					http.setRequestHeader(headers[i++],headers[i]);
				}
				}else if (!Render.isConchApp){
				if (!data || (typeof data=='string'))http.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
				else http.setRequestHeader("Content-Type","application/json");
			}
			http.responseType=responseType!=="arraybuffer" ? "text" :"arraybuffer";
			http.onerror=function (e){
				_this._onError(e);
			}
			http.onabort=function (e){
				_this._onAbort(e);
			}
			http.onprogress=function (e){
				_this._onProgress(e);
			}
			http.onload=function (e){
				_this._onLoad(e);
			}
			http.send(data);
		}

		/**
		*@private
		*请求进度的侦听处理函数。
		*@param e 事件对象。
		*/
		__proto._onProgress=function(e){
			if (e && e.lengthComputable)this.event("progress",e.loaded / e.total);
		}

		/**
		*@private
		*请求中断的侦听处理函数。
		*@param e 事件对象。
		*/
		__proto._onAbort=function(e){
			this.error("Request was aborted by user");
		}

		/**
		*@private
		*请求出错侦的听处理函数。
		*@param e 事件对象。
		*/
		__proto._onError=function(e){
			this.error("Request failed Status:"+this._http.status+" text:"+this._http.statusText);
		}

		/**
		*@private
		*请求消息返回的侦听处理函数。
		*@param e 事件对象。
		*/
		__proto._onLoad=function(e){
			var http=this._http;
			var status=http.status!==undefined ? http.status :200;
			if (status===200 || status===204 || status===0){
				this.complete();
				}else {
				this.error("["+http.status+"]"+http.statusText+":"+http.responseURL);
			}
		}

		/**
		*@private
		*请求错误的处理函数。
		*@param message 错误信息。
		*/
		__proto.error=function(message){
			this.clear();
			this.event("error",message);
		}

		/**
		*@private
		*请求成功完成的处理函数。
		*/
		__proto.complete=function(){
			this.clear();
			var flag=true;
			try {
				if (this._responseType==="json"){
					this._data=JSON.parse(this._http.responseText);
					}else if (this._responseType==="xml"){
					this._data=Utils.parseXMLFromString(this._http.responseText);
					}else {
					this._data=this._http.response || this._http.responseText;
				}
				}catch (e){
				flag=false;
				this.error(e.message);
			}
			flag && this.event("complete",(this._data instanceof Array)? [this._data] :this._data);
		}

		/**
		*@private
		*清除当前请求。
		*/
		__proto.clear=function(){
			var http=this._http;
			http.onerror=http.onabort=http.onprogress=http.onload=null;
		}

		/**请求的地址。*/
		__getset(0,__proto,'url',function(){
			return this._http.responseURL;
		});

		/**
		*本对象所封装的原生 XMLHttpRequest 引用。
		*/
		__getset(0,__proto,'http',function(){
			return this._http;
		});

		/**返回的数据。*/
		__getset(0,__proto,'data',function(){
			return this._data;
		});

		return HttpRequest;
	})(EventDispatcher)


	//class laya.net.Loader extends laya.events.EventDispatcher
	var Loader=(function(_super){
		function Loader(){
			this._data=null;
			this._class=null;
			this._url=null;
			this._type=null;
			this._cache=false;
			this._http=null;
			this._customParse=false;
			Loader.__super.call(this);
		}

		__class(Loader,'laya.net.Loader',_super);
		var __proto=Loader.prototype;
		/**
		*加载资源。加载错误会派发 Event.ERROR 事件，参数为错误信息。
		*@param url 资源地址。
		*@param type (default=null)资源类型。可选值为：Loader.TEXT、Loader.JSON、Loader.XML、Loader.BUFFER、Loader.IMAGE、Loader.SOUND、Loader.ATLAS、Loader.FONT。如果为null，则根据文件后缀分析类型。
		*@param cache (default=true)是否缓存数据。
		*@param group (default=null)分组名称。
		*@param ignoreCache (default=false)是否忽略缓存，强制重新加载。
		*/
		__proto.load=function(url,type,cache,group,ignoreCache){
			(cache===void 0)&& (cache=true);
			(ignoreCache===void 0)&& (ignoreCache=false);
			this._url=url;
			if (url.indexOf("data:image")===0)this._type=type="image";
			else {
				this._type=type || (type=this.getTypeFromUrl(url));
				url=URL.formatURL(url);
			}
			this._cache=cache;
			this._data=null;
			if (!ignoreCache && Loader.loadedMap[url]){
				this._data=Loader.loadedMap[url];
				this.event("progress",1);
				this.event("complete",this._data);
				return;
			}
			if (group)Loader.setGroup(url,group);
			if (Loader.parserMap[type] !=null){
				this._customParse=true;
				if (((Loader.parserMap[type])instanceof laya.utils.Handler ))Loader.parserMap[type].runWith(this);
				else Loader.parserMap[type].call(null,this);
				return;
			}
			if (type==="image" || type==="htmlimage" || type==="nativeimage")return this._loadImage(url);
			if (type==="sound")return this._loadSound(url);
			if (type==="ttf")return this._loadTTF(url);
			var contentType;
			switch (type){
				case "atlas":
					contentType="json";
					break ;
				case "font":
					contentType="xml";
					break ;
				case "pkm":
					contentType="arraybuffer";
					break
				default :
					contentType=type;
				}
			if (Loader.preLoadedMap[url]){
				this.onLoaded(Loader.preLoadedMap[url]);
				}else{
				if (!this._http){
					this._http=new HttpRequest();
					this._http.on("progress",this,this.onProgress);
					this._http.on("error",this,this.onError);
					this._http.on("complete",this,this.onLoaded);
				}
				this._http.send(url,null,"get",contentType);
			}
		}

		/**
		*获取指定资源地址的数据类型。
		*@param url 资源地址。
		*@return 数据类型。
		*/
		__proto.getTypeFromUrl=function(url){
			var type=Utils.getFileExtension(url);
			if (type)return Loader.typeMap[type];
			console.warn("Not recognize the resources suffix",url);
			return "text";
		}

		/**
		*@private
		*加载TTF资源。
		*@param url 资源地址。
		*/
		__proto._loadTTF=function(url){
			url=URL.formatURL(url);
			var ttfLoader=new TTFLoader();
			ttfLoader.complete=Handler.create(this,this.onLoaded);
			ttfLoader.load(url);
		}

		/**
		*@private
		*加载图片资源。
		*@param url 资源地址。
		*/
		__proto._loadImage=function(url){
			url=URL.formatURL(url);
			var _this=this;
			var image;
			function clear (){
				image.onload=null;
				image.onerror=null;
				delete Loader.imgCache[url]
			};
			var onload=function (){
				clear();
				_this.onLoaded(image);
			};
			var onerror=function (){
				clear();
				_this.event("error","Load image failed");
			}
			if (this._type==="nativeimage"){
				image=new Browser.window.Image();
				image.crossOrigin="";
				image.onload=onload;
				image.onerror=onerror;
				image.src=url;
				Loader.imgCache[url]=image;
				}else {
				new HTMLImage.create(url,{onload:onload,onerror:onerror,onCreate:function (img){
						image=img;
						Loader.imgCache[url]=img;
				}});
			}
		}

		/**
		*@private
		*加载声音资源。
		*@param url 资源地址。
		*/
		__proto._loadSound=function(url){
			var sound=(new SoundManager._soundClass());
			var _this=this;
			sound.on("complete",this,soundOnload);
			sound.on("error",this,soundOnErr);
			sound.load(url);
			function soundOnload (){
				clear();
				_this.onLoaded(sound);
			}
			function soundOnErr (){
				clear();
				sound.dispose();
				_this.event("error","Load sound failed");
			}
			function clear (){
				sound.offAll();
			}
		}

		/**@private */
		__proto.onProgress=function(value){
			if (this._type==="atlas")this.event("progress",value *0.3);
			else this.event("progress",value);
		}

		/**@private */
		__proto.onError=function(message){
			this.event("error",message);
		}

		/**
		*资源加载完成的处理函数。
		*@param data 数据。
		*/
		__proto.onLoaded=function(data){
			var type=this._type;
			if (type==="image"){
				var tex=new Texture(data);
				tex.url=this._url;
				this.complete(tex);
				}else if (type==="sound" || type==="htmlimage" || type==="nativeimage"){
				this.complete(data);
				}else if (type==="atlas"){
				if (!data.src && !data._setContext){
					if (!this._data){
						this._data=data;
						if (data.meta && data.meta.image){
							var toloadPics=data.meta.image.split(",");
							var split=this._url.indexOf("/")>=0 ? "/" :"\\";
							var idx=this._url.lastIndexOf(split);
							var folderPath=idx >=0 ? this._url.substr(0,idx+1):"";
							for (var i=0,len=toloadPics.length;i < len;i++){
								toloadPics[i]=folderPath+toloadPics[i];
							}
							}else {
							toloadPics=[this._url.replace(".json",".png")];
						}
						toloadPics.reverse();
						data.toLoads=toloadPics;
						data.pics=[];
					}
					this.event("progress",0.3+1 / toloadPics.length *0.6);
					return this._loadImage(toloadPics.pop());
					}else {
					this._data.pics.push(data);
					if (this._data.toLoads.length > 0){
						this.event("progress",0.3+1 / this._data.toLoads.length *0.6);
						return this._loadImage(this._data.toLoads.pop());
					};
					var frames=this._data.frames;
					var cleanUrl=this._url.split("?")[0];
					var directory=(this._data.meta && this._data.meta.prefix)? this._data.meta.prefix :cleanUrl.substring(0,cleanUrl.lastIndexOf("."))+"/";
					var pics=this._data.pics;
					var atlasURL=URL.formatURL(this._url);
					var map=Loader.atlasMap[atlasURL] || (Loader.atlasMap[atlasURL]=[]);
					map.dir=directory;
					var scaleRate=1;
					if (this._data.meta && this._data.meta.scale && this._data.meta.scale !=1){
						scaleRate=parseFloat(this._data.meta.scale);
						for (var name in frames){
							var obj=frames[name];
							var tPic=pics[obj.frame.idx ? obj.frame.idx :0];
							var url=URL.formatURL(directory+name);
							tPic.scaleRate=scaleRate;
							Loader.cacheRes(url,Texture.create(tPic,obj.frame.x,obj.frame.y,obj.frame.w,obj.frame.h,obj.spriteSourceSize.x,obj.spriteSourceSize.y,obj.sourceSize.w,obj.sourceSize.h));
							Loader.loadedMap[url].url=url;
							map.push(url);
						}
						}else{
						for (name in frames){
							obj=frames[name];
							tPic=pics[obj.frame.idx ? obj.frame.idx :0];
							url=URL.formatURL(directory+name);
							Loader.cacheRes(url,Texture.create(tPic,obj.frame.x,obj.frame.y,obj.frame.w,obj.frame.h,obj.spriteSourceSize.x,obj.spriteSourceSize.y,obj.sourceSize.w,obj.sourceSize.h));
							Loader.loadedMap[url].url=url;
							map.push(url);
						}
					}
					delete this._data.pics;
					this.complete(this._data);
				}
				}else if (type=="font"){
				if (!data.src){
					this._data=data;
					this.event("progress",0.5);
					return this._loadImage(this._url.replace(".fnt",".png"));
					}else {
					var bFont=new BitmapFont();
					bFont.parseFont(this._data,data);
					var tArr=this._url.split(".fnt")[0].split("/");
					var fontName=tArr[tArr.length-1];
					Text.registerBitmapFont(fontName,bFont);
					this._data=bFont;
					this.complete(this._data);
				}
				}else if (type=="pkm"){
				var image=HTMLImage.create(data,this._url);
				var tex1=new Texture(image);
				tex1.url=this._url;
				this.complete(tex1);
				}else {
				this.complete(data);
			}
		}

		/**
		*加载完成。
		*@param data 加载的数据。
		*/
		__proto.complete=function(data){
			this._data=data;
			if (this._customParse){
				this.event("loaded",(data instanceof Array)? [data] :data);
				}else {
				Loader._loaders.push(this);
				if (!Loader._isWorking)Loader.checkNext();
			}
		}

		/**
		*结束加载，处理是否缓存及派发完成事件 <code>Event.COMPLETE</code> 。
		*@param content 加载后的数据
		*/
		__proto.endLoad=function(content){
			content && (this._data=content);
			if (this._cache)Loader.cacheRes(this._url,this._data);
			this.event("progress",1);
			this.event("complete",(this.data instanceof Array)? [this.data] :this.data);
		}

		/**加载地址。*/
		__getset(0,__proto,'url',function(){
			return this._url;
		});

		/**返回的数据。*/
		__getset(0,__proto,'data',function(){
			return this._data;
		});

		/**是否缓存。*/
		__getset(0,__proto,'cache',function(){
			return this._cache;
		});

		/**加载类型。*/
		__getset(0,__proto,'type',function(){
			return this._type;
		});

		Loader.checkNext=function(){
			Loader._isWorking=true;
			var startTimer=Browser.now();
			var thisTimer=startTimer;
			while (Loader._startIndex < Loader._loaders.length){
				thisTimer=Browser.now();
				Loader._loaders[Loader._startIndex].endLoad();
				Loader._startIndex++;
				if (Browser.now()-startTimer > Loader.maxTimeOut){
					console.warn("loader callback cost a long time:"+(Browser.now()-startTimer)+" url="+Loader._loaders[Loader._startIndex-1].url);
					Laya.timer.frameOnce(1,null,Loader.checkNext);
					return;
				}
			}
			Loader._loaders.length=0;
			Loader._startIndex=0;
			Loader._isWorking=false;
		}

		Loader.clearRes=function(url,forceDispose){
			(forceDispose===void 0)&& (forceDispose=false);
			url=URL.formatURL(url);
			var arr=Loader.getAtlas(url);
			if (arr){
				for (var i=0,n=arr.length;i < n;i++){
					var resUrl=arr[i];
					var tex=Loader.getRes(resUrl);
					delete Loader.loadedMap[resUrl];
					if (tex)tex.destroy(forceDispose);
				}
				arr.length=0;
				delete Loader.atlasMap[url];
				delete Loader.loadedMap[url];
				}else {
				var res=Loader.loadedMap[url];
				if (res){
					delete Loader.loadedMap[url];
					if ((res instanceof laya.resource.Texture )&& res.bitmap)(res).destroy(forceDispose);
				}
			}
		}

		Loader.clearTextureRes=function(url){
			url=URL.formatURL(url);
			var arr=laya.net.Loader.getAtlas(url);
			var res=(arr && arr.length>0)? laya.net.Loader.getRes(arr[0]):laya.net.Loader.getRes(url);
			if (res && res.bitmap){
				if (Render.isConchApp){
					if (res.bitmap.source.releaseTexture){
						res.bitmap.source.releaseTexture();
					}
					}else if (res.bitmap._atlaser==null){
					res.bitmap.releaseResource(true);
				}
			}
		}

		Loader.getRes=function(url){
			return Loader.loadedMap[URL.formatURL(url)];
		}

		Loader.getAtlas=function(url){
			return Loader.atlasMap[URL.formatURL(url)];
		}

		Loader.cacheRes=function(url,data){
			url=URL.formatURL(url);
			if (Loader.loadedMap[url] !=null){
				console.warn("Resources already exist,is repeated loading:",url);
				}else {
				Loader.loadedMap[url]=data;
			}
		}

		Loader.setGroup=function(url,group){
			if (!Loader.groupMap[group])Loader.groupMap[group]=[];
			Loader.groupMap[group].push(url);
		}

		Loader.clearResByGroup=function(group){
			if (!Loader.groupMap[group])return;
			var arr=Loader.groupMap[group],i=0,len=arr.length;
			for (i=0;i < len;i++){
				Loader.clearRes(arr[i]);
			}
			arr.length=0;
		}

		Loader.TEXT="text";
		Loader.JSON="json";
		Loader.XML="xml";
		Loader.BUFFER="arraybuffer";
		Loader.IMAGE="image";
		Loader.SOUND="sound";
		Loader.ATLAS="atlas";
		Loader.FONT="font";
		Loader.TTF="ttf";
		Loader.PKM="pkm";
		Loader.typeMap={"png":"image","jpg":"image","jpeg":"image","txt":"text","json":"json","xml":"xml","als":"atlas","atlas":"atlas","mp3":"sound","ogg":"sound","wav":"sound","part":"json","fnt":"font","pkm":"pkm","ttf":"ttf"};
		Loader.parserMap={};
		Loader.groupMap={};
		Loader.maxTimeOut=100;
		Loader.loadedMap={};
		Loader.preLoadedMap={};
		Loader.atlasMap={};
		Loader._loaders=[];
		Loader._isWorking=false;
		Loader._startIndex=0;
		Loader.imgCache={};
		return Loader;
	})(EventDispatcher)


	//class laya.resource.Texture extends laya.events.EventDispatcher
	var Texture=(function(_super){
		function Texture(bitmap,uv){
			//this.bitmap=null;
			//this.uv=null;
			this.offsetX=0;
			this.offsetY=0;
			this.sourceWidth=0;
			this.sourceHeight=0;
			//this._loaded=false;
			this._w=0;
			this._h=0;
			//this.$_GID=NaN;
			//this.url=null;
			this._uvID=0;
			this._atlasID=-1;
			this.scaleRate=1;
			Texture.__super.call(this);
			if (bitmap){
				bitmap._addReference();
			}
			this.setTo(bitmap,uv);
		}

		__class(Texture,'laya.resource.Texture',_super);
		var __proto=Texture.prototype;
		/**
		*@private
		*/
		__proto._setUrl=function(url){
			this.url=url;
		}

		/**
		*设置此对象的位图资源、UV数据信息。
		*@param bitmap 位图资源
		*@param uv UV数据信息
		*/
		__proto.setTo=function(bitmap,uv){
			if (bitmap instanceof window.HTMLElement){
				var canvas=HTMLCanvas.create("2D",bitmap);
				this.bitmap=canvas;
				}else{
				this.bitmap=bitmap;
			}
			this.uv=uv || Texture.DEF_UV;
			if (bitmap){
				this._w=bitmap.width;
				this._h=bitmap.height;
				this.sourceWidth=this.sourceWidth || this._w;
				this.sourceHeight=this.sourceHeight || this._h
				this._loaded=this._w > 0;
				var _this=this;
				if (this._loaded){
					RunDriver.addToAtlas && RunDriver.addToAtlas(_this);
					}else {
					var bm=bitmap;
					if ((bm instanceof laya.resource.HTMLImage )&& bm.image)
						bm.image.addEventListener('load',function(e){
						RunDriver.addToAtlas && RunDriver.addToAtlas(_this);
					},false);
				}
			}
		}

		/**@private 激活资源。*/
		__proto.active=function(){
			if (this.bitmap)this.bitmap.activeResource();
		}

		/**
		*销毁纹理（分直接销毁，跟计数销毁两种）。
		*@param forceDispose (default=false)true为强制销毁主纹理，false是通过计数销毁纹理。
		*/
		__proto.destroy=function(forceDispose){
			(forceDispose===void 0)&& (forceDispose=false);
			if (this.bitmap && (this.bitmap).referenceCount > 0){
				var temp=this.bitmap;
				if (forceDispose){
					if (Render.isConchApp && temp.source && temp.source.conchDestroy){
						this.bitmap.source.conchDestroy();
					}
					this.bitmap=null;
					temp.dispose();
					(temp)._clearReference();
					}else {
					(temp)._removeReference();
					if ((temp).referenceCount==0){
						if (Render.isConchApp && temp.source && temp.source.conchDestroy){
							this.bitmap.source.conchDestroy();
						}
						this.bitmap=null;
						temp.dispose();
					}
				}
				if (this.url && this===Laya.loader.getRes(this.url))Laya.loader.clearRes(this.url,forceDispose);
				this._loaded=false;
			}
		}

		/**
		*加载指定地址的图片。
		*@param url 图片地址。
		*/
		__proto.load=function(url){
			var _$this=this;
			this._loaded=false;
			url=URL.customFormat(url);
			var fileBitmap=(this.bitmap || (this.bitmap=HTMLImage.create(url)));
			if (fileBitmap)fileBitmap._addReference();
			var _this=this;
			fileBitmap.onload=function (){
				fileBitmap.onload=null;
				_this._loaded=true;
				_$this.sourceWidth=_$this._w=fileBitmap.width;
				_$this.sourceHeight=_$this._h=fileBitmap.height;
				_this.event("loaded",this);
				(RunDriver.addToAtlas)&& (RunDriver.addToAtlas(_this));
			};
		}

		/**@private */
		__proto.addTextureToAtlas=function(e){
			RunDriver.addTextureToAtlas(this);
		}

		/**
		*获取Texture上的某个区域的像素点
		*@param x
		*@param y
		*@param width
		*@param height
		*@return 返回像素点集合
		*/
		__proto.getPixels=function(x,y,width,height){
			if (Render.isConchApp){
				var temp=this.bitmap;
				if (temp.source && temp.source.getImageData){
					var arraybuffer=temp.source.getImageData(x,y,width,height);
					var tUint8Array=new Uint8Array(arraybuffer);
					return Array.from(tUint8Array);
				}
				return null;
				}else if (Render.isWebGL){
				return RunDriver.getTexturePixels(this,x,y,width,height);
				}else {
				Browser.canvas.size(width,height);
				Browser.canvas.clear();
				Browser.context.drawTexture(this,-x,-y,this.width,this.height,0,0);
				var info=Browser.context.getImageData(0,0,width,height);
			}
			return info.data;
		}

		/**@private */
		__proto.onAsynLoaded=function(url,bitmap){
			if (bitmap)bitmap._addReference();
			this.setTo(bitmap,this.uv);
		}

		/**激活并获取资源。*/
		__getset(0,__proto,'source',function(){
			if (!this.bitmap)return null;
			this.bitmap.activeResource();
			return this.bitmap.source;
		});

		/**
		*表示是否加载成功，只能表示初次载入成功（通常包含下载和载入）,并不能完全表示资源是否可立即使用（资源管理机制释放影响等）。
		*/
		__getset(0,__proto,'loaded',function(){
			return this._loaded;
		});

		/**
		*表示资源是否已释放。
		*/
		__getset(0,__proto,'released',function(){
			if (!this.bitmap)return true;
			return this.bitmap.released;
		});

		/**实际宽度。*/
		__getset(0,__proto,'width',function(){
			if (this._w)return this._w;
			return (this.uv && this.uv!==Texture.DEF_UV)? (this.uv[2]-this.uv[0])*this.bitmap.width :this.bitmap.width;
			},function(value){
			this._w=value;
			this.sourceWidth || (this.sourceWidth=value);
		});

		/**
		*通过外部设置是否启用纹理平铺(后面要改成在着色器里计算)
		*/
		/**
		*获取当前纹理是否启用了纹理平铺
		*/
		__getset(0,__proto,'repeat',function(){
			if (Render.isWebGL && this.bitmap){
				return this.bitmap.repeat;
			}
			return true;
			},function(value){
			if (value){
				if (Render.isWebGL && this.bitmap){
					this.bitmap.repeat=value;
					if (value){
						this.bitmap.enableMerageInAtlas=false;
					}
				}
			}
		});

		/**实际高度。*/
		__getset(0,__proto,'height',function(){
			if (this._h)return this._h;
			return (this.uv && this.uv!==Texture.DEF_UV)? (this.uv[5]-this.uv[1])*this.bitmap.height :this.bitmap.height;
			},function(value){
			this._h=value;
			this.sourceHeight || (this.sourceHeight=value);
		});

		/**
		*设置线性采样的状态（目前只能第一次绘制前设置false生效,来关闭线性采样）。
		*/
		/**
		*获取当前纹理是否启用了线性采样。
		*/
		__getset(0,__proto,'isLinearSampling',function(){
			return Render.isWebGL ? (this.bitmap.minFifter !=0x2600):true;
			},function(value){
			if (!value && Render.isWebGL){
				if (!value && (this.bitmap.minFifter==-1)&& (this.bitmap.magFifter==-1)){
					this.bitmap.minFifter=0x2600;
					this.bitmap.magFifter=0x2600;
					this.bitmap.enableMerageInAtlas=false;
				}
			}
		});

		Texture.moveUV=function(offsetX,offsetY,uv){
			for (var i=0;i < 8;i+=2){
				uv[i]+=offsetX;
				uv[i+1]+=offsetY;
			}
			return uv;
		}

		Texture.create=function(source,x,y,width,height,offsetX,offsetY,sourceWidth,sourceHeight){
			(offsetX===void 0)&& (offsetX=0);
			(offsetY===void 0)&& (offsetY=0);
			(sourceWidth===void 0)&& (sourceWidth=0);
			(sourceHeight===void 0)&& (sourceHeight=0);
			var btex=(source instanceof laya.resource.Texture );
			var uv=btex ? source.uv :Texture.DEF_UV;
			var bitmap=btex ? source.bitmap :source;
			var bIsAtlas=RunDriver.isAtlas(bitmap);
			if (bIsAtlas){
				var atlaser=bitmap._atlaser;
				var nAtlasID=(source)._atlasID;
				if (nAtlasID==-1){
					throw new Error("create texture error");
				}
				bitmap=atlaser._inAtlasTextureBitmapValue[nAtlasID];
				uv=atlaser._inAtlasTextureOriUVValue[nAtlasID];
			};
			var tex=new Texture(bitmap,null);
			if (bitmap.width && (x+width)> bitmap.width)width=bitmap.width-x;
			if (bitmap.height && (y+height)> bitmap.height)height=bitmap.height-y;
			tex.width=width;
			tex.height=height;
			tex.offsetX=offsetX;
			tex.offsetY=offsetY;
			tex.sourceWidth=sourceWidth || width;
			tex.sourceHeight=sourceHeight || height;
			var dwidth=1 / bitmap.width;
			var dheight=1 / bitmap.height;
			x *=dwidth;
			y *=dheight;
			width *=dwidth;
			height *=dheight;
			var u1=tex.uv[0],v1=tex.uv[1],u2=tex.uv[4],v2=tex.uv[5];
			var inAltasUVWidth=(u2-u1),inAltasUVHeight=(v2-v1);
			var oriUV=Texture.moveUV(uv[0],uv[1],[x,y,x+width,y,x+width,y+height,x,y+height]);
			tex.uv=[u1+oriUV[0] *inAltasUVWidth,v1+oriUV[1] *inAltasUVHeight,u2-(1-oriUV[2])*inAltasUVWidth,v1+oriUV[3] *inAltasUVHeight,u2-(1-oriUV[4])*inAltasUVWidth,v2-(1-oriUV[5])*inAltasUVHeight,u1+oriUV[6] *inAltasUVWidth,v2-(1-oriUV[7])*inAltasUVHeight];
			if (bIsAtlas){
				tex.addTextureToAtlas();
			};
			var bitmapScale=bitmap.scaleRate;
			if (bitmapScale && bitmapScale !=1){
				tex.sourceWidth /=bitmapScale;
				tex.sourceHeight /=bitmapScale;
				tex.width /=bitmapScale;
				tex.height /=bitmapScale;
				tex.scaleRate=bitmapScale;
				tex.offsetX /=bitmapScale;
				tex.offsetY /=bitmapScale;
				}else{
				tex.scaleRate=1;
			}
			return tex;
		}

		Texture.createFromTexture=function(texture,x,y,width,height){
			var texScaleRate=texture.scaleRate;
			if (texScaleRate !=1){
				x *=texScaleRate;
				y *=texScaleRate;
				width *=texScaleRate;
				height *=texScaleRate;
			};
			var rect=Rectangle.TEMP.setTo(x-texture.offsetX,y-texture.offsetY,width,height);
			var result=rect.intersection(Texture._rect1.setTo(0,0,texture.width,texture.height),Texture._rect2);
			if (result)
				var tex=Texture.create(texture,result.x,result.y,result.width,result.height,result.x-rect.x,result.y-rect.y,width,height);
			else return null;
			tex.bitmap._removeReference();
			return tex;
		}

		Texture.DEF_UV=[0,0,1.0,0,1.0,1.0,0,1.0];
		Texture.INV_UV=[0,1,1.0,1,1.0,0.0,0,0.0];
		Texture._rect1=new Rectangle();
		Texture._rect2=new Rectangle();
		return Texture;
	})(EventDispatcher)


	//class fairygui.Controller extends laya.events.EventDispatcher
	var Controller=(function(_super){
		function Controller(){
			this._name=null;
			this._selectedIndex=0;
			this._previousIndex=0;
			this._pageIds=null;
			this._pageNames=null;
			this._actions=null;
			this._parent=null;
			this._autoRadioGroupDepth=false;
			this.changing=false;
			Controller.__super.call(this);
			this._pageIds=[];
			this._pageNames=[];
			this._selectedIndex=-1;
			this._previousIndex=-1;
		}

		__class(Controller,'fairygui.Controller',_super);
		var __proto=Controller.prototype;
		//功能和设置selectedIndex一样，但不会触发事件
		__proto.setSelectedIndex=function(value){
			(value===void 0)&& (value=0);
			if (this._selectedIndex !=value){
				if(value > this._pageIds.length-1)
					throw "index out of bounds: "+value;
				this.changing=true;
				this._previousIndex=this._selectedIndex;
				this._selectedIndex=value;
				this._parent.applyController(this);
				this.changing=false;
			}
		}

		//功能和设置selectedPage一样，但不会触发事件
		__proto.setSelectedPage=function(value){
			var i=this._pageNames.indexOf(value);
			if (i==-1)
				i=0;
			this.setSelectedIndex(i);
		}

		__proto.getPageName=function(index){
			(index===void 0)&& (index=0);
			return this._pageNames[index];
		}

		__proto.addPage=function(name){
			(name===void 0)&& (name="");
			this.addPageAt(name,this._pageIds.length);
		}

		__proto.addPageAt=function(name,index){
			(index===void 0)&& (index=0);
			var nid=""+(fairygui.Controller._nextPageId++);
			if (index==this._pageIds.length){
				this._pageIds.push(nid);
				this._pageNames.push(name);
			}
			else {
				this._pageIds.splice(index,0,nid);
				this._pageNames.splice(index,0,name);
			}
		}

		__proto.removePage=function(name){
			var i=this._pageNames.indexOf(name);
			if (i !=-1){
				this._pageIds.splice(i,1);
				this._pageNames.splice(i,1);
				if (this._selectedIndex >=this._pageIds.length)
					this.selectedIndex=this._selectedIndex-1;
				else
				this._parent.applyController(this);
			}
		}

		__proto.removePageAt=function(index){
			(index===void 0)&& (index=0);
			this._pageIds.splice(index,1);
			this._pageNames.splice(index,1);
			if (this._selectedIndex >=this._pageIds.length)
				this.selectedIndex=this._selectedIndex-1;
			else
			this._parent.applyController(this);
		}

		__proto.clearPages=function(){
			this._pageIds.length=0;
			this._pageNames.length=0;
			if (this._selectedIndex !=-1)
				this.selectedIndex=-1;
			else
			this._parent.applyController(this);
		}

		__proto.hasPage=function(aName){
			return this._pageNames.indexOf(aName)!=-1;
		}

		__proto.getPageIndexById=function(aId){
			return this._pageIds.indexOf(aId);
		}

		__proto.getPageIdByName=function(aName){
			var i=this._pageNames.indexOf(aName);
			if(i !=-1)
				return this._pageIds[i];
			else
			return null;
		}

		__proto.getPageNameById=function(aId){
			var i=this._pageIds.indexOf(aId);
			if(i !=-1)
				return this._pageNames[i];
			else
			return null;
		}

		__proto.getPageId=function(index){
			(index===void 0)&& (index=0);
			return this._pageIds[index];
		}

		__proto.runActions=function(){
			if(this._actions){
				var cnt=this._actions.length;
				for(var i=0;i<cnt;i++){
					this._actions[i].run(this,this.previousPageId,this.selectedPageId);
				}
			}
		}

		__proto.setup=function(xml){
			this._name=xml.getAttribute("name");
			this._autoRadioGroupDepth=xml.getAttribute("autoRadioGroupDepth")=="true";
			var i=0;
			var k=0;
			var str=xml.getAttribute("pages");
			if (str){
				var arr=str.split(",");
				var cnt=arr.length;
				for (i=0;i < cnt;i+=2){
					this._pageIds.push(arr[i]);
					this._pageNames.push(arr[i+1]);
				}
			};
			var col=xml.childNodes;
			var length1=col.length;
			if(length1>0){
				if(!this._actions)
					this._actions=[];
				for(var i1=0;i1 < length1;i1++){
					var cxml=col[i1];
					var action=ControllerAction.createAction(cxml.getAttribute('type'));
					action.setup(cxml);
					this._actions.push(action);
				}
			}
			str=xml.getAttribute("transitions");
			if(str){
				if(!this._actions)
					this._actions=[];
				arr=str.split(",");
				cnt=arr.length;
				var ii=0;
				for(i=0;i < cnt;i++){
					str=arr[i];
					if(!str)
						continue ;
					var taction=new PlayTransitionAction();
					k=str.indexOf("=");
					taction.transitionName=str.substr(k+1);
					str=str.substring(0,k);
					k=str.indexOf("-");
					ii=parseInt(str.substring(k+1));
					if(ii<this._pageIds.length)
						taction.toPage=[this._pageIds[ii]];
					str=str.substring(0,k);
					if(str !="*"){
						ii=parseInt(str);
						if(ii<this._pageIds.length)
							taction.fromPage=[this._pageIds[ii]];
					}
					taction.stopOnExit=true;
					this._actions.push(taction);
				}
			}
			if (this._parent && this._pageIds.length > 0)
				this._selectedIndex=0;
			else
			this._selectedIndex=-1;
		}

		__getset(0,__proto,'oppositePageId',null,function(val){
			var i=this._pageIds.indexOf(val);
			if(i > 0)
				this.selectedIndex=0;
			else if(this._pageIds.length > 1)
			this.selectedIndex=1;
		});

		__getset(0,__proto,'name',function(){
			return this._name;
			},function(value){
			this._name=value;
		});

		__getset(0,__proto,'pageCount',function(){
			return this._pageIds.length;
		});

		__getset(0,__proto,'parent',function(){
			return this._parent;
		});

		__getset(0,__proto,'selectedIndex',function(){
			return this._selectedIndex;
			},function(value){
			if(this._selectedIndex !=value){
				if(value > this._pageIds.length-1)
					throw "index out of bounds: "+value;
				this.changing=true;
				this._previousIndex=this._selectedIndex;
				this._selectedIndex=value;
				this._parent.applyController(this);
				this.event("fui_state_changed");
				this.changing=false;
			}
		});

		__getset(0,__proto,'selectedPage',function(){
			if (this._selectedIndex==-1)
				return null;
			else
			return this._pageNames[this._selectedIndex];
			},function(val){
			var i=this._pageNames.indexOf(val);
			if (i==-1)
				i=0;
			this.selectedIndex=i;
		});

		__getset(0,__proto,'previsousIndex',function(){
			return this._previousIndex;
		});

		__getset(0,__proto,'previousPage',function(){
			if (this._previousIndex==-1)
				return null;
			else
			return this._pageNames[this._previousIndex];
		});

		__getset(0,__proto,'selectedPageId',function(){
			if (this._selectedIndex==-1)
				return null;
			else
			return this._pageIds[this._selectedIndex];
			},function(val){
			var i=this._pageIds.indexOf(val);
			this.selectedIndex=i;
		});

		__getset(0,__proto,'previousPageId',function(){
			if(this._previousIndex==-1)
				return null;
			else
			return this._pageIds[this._previousIndex];
		});

		Controller._nextPageId=0;
		return Controller;
	})(EventDispatcher)


	//class fairygui.GTextField extends fairygui.GObject
	var GTextField=(function(_super){
		function GTextField(){
			this._gearColor=null;
			GTextField.__super.call(this);
			this._gearColor=new GearColor(this);
		}

		__class(GTextField,'fairygui.GTextField',_super);
		var __proto=GTextField.prototype;
		Laya.imps(__proto,{"fairygui.IColorGear":true})
		__proto.handleControllerChanged=function(c){
			_super.prototype.handleControllerChanged.call(this,c);
			if(this._gearColor.controller==c)
				this._gearColor.apply();
		}

		__proto.setup_beforeAdd=function(xml){
			_super.prototype.setup_beforeAdd.call(this,xml);
			var str;
			str=xml.getAttribute("font");
			if (str)
				this.font=str;
			str=xml.getAttribute("fontSize");
			if (str)
				this.fontSize=parseInt(str);
			str=xml.getAttribute("color");
			if (str)
				this.color=str;
			str=xml.getAttribute("align");
			if (str)
				this.align=str;
			str=xml.getAttribute("vAlign");
			if (str)
				this.valign=str;
			str=xml.getAttribute("leading");
			if (str)
				this.leading=parseInt(str);
			else
			this.leading=3;
			str=xml.getAttribute("letterSpacing");
			if (str)
				this.letterSpacing=parseInt(str);
			this.ubbEnabled=xml.getAttribute("ubb")=="true";
			this.italic=xml.getAttribute("italic")=="true";
			this.bold=xml.getAttribute("bold")=="true";
			this.underline=xml.getAttribute("underline")=="true";
			this.singleLine=xml.getAttribute("singleLine")=="true";
			str=xml.getAttribute("strokeColor");
			if (str){
				this.strokeColor=str;
				str=xml.getAttribute("strokeSize");
				if(str)
					this.stroke=parseInt(str)+1;
				else
				this.stroke=2;
			}
		}

		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			var str=xml.getAttribute("text");
			if(str !=null && str.length > 0)
				this.text=str;
		}

		__getset(0,__proto,'color',function(){
			return null;
			},function(value){
		});

		__getset(0,__proto,'font',function(){
			return null;
			},function(value){
		});

		__getset(0,__proto,'leading',function(){
			return 0;
			},function(value){
		});

		__getset(0,__proto,'fontSize',function(){
			return 0;
			},function(value){
		});

		__getset(0,__proto,'bold',function(){
			return false;
			},function(value){
		});

		__getset(0,__proto,'letterSpacing',function(){
			return 0;
			},function(value){
		});

		__getset(0,__proto,'align',function(){
			return null;
			},function(value){
		});

		__getset(0,__proto,'valign',function(){
			return null;
			},function(value){
		});

		__getset(0,__proto,'italic',function(){
			return false;
			},function(value){
		});

		__getset(0,__proto,'underline',function(){
			return false;
			},function(value){
		});

		__getset(0,__proto,'singleLine',function(){
			return false;
			},function(value){
		});

		__getset(0,__proto,'stroke',function(){
			return 0;
			},function(value){
		});

		__getset(0,__proto,'strokeColor',function(){
			return null;
			},function(value){
		});

		__getset(0,__proto,'ubbEnabled',function(){
			return false;
			},function(value){
		});

		__getset(0,__proto,'textWidth',function(){
			return 0;
		});

		__getset(0,__proto,'gearColor',function(){
			return this._gearColor;
		});

		return GTextField;
	})(GObject)


	//class fairygui.GGraph extends fairygui.GObject
	var GGraph=(function(_super){
		function GGraph(){
			this._type=NaN;
			this._lineSize=NaN;
			this._lineColor=null;
			this._fillColor=null;
			GGraph.__super.call(this);
			this._type=0;
			this._lineSize=1;
			this._lineColor="#000000"
			this._fillColor="#FFFFFF";
		}

		__class(GGraph,'fairygui.GGraph',_super);
		var __proto=GGraph.prototype;
		Laya.imps(__proto,{"fairygui.IColorGear":true})
		__proto.drawRect=function(lineSize,lineColor,fillColor){
			this._type=1;
			this._lineSize=lineSize;
			this._lineColor=lineColor;
			this._fillColor=fillColor;
			this.drawCommon();
		}

		__proto.drawEllipse=function(lineSize,lineColor,fillColor){
			this._type=2;
			this._lineSize=lineSize;
			this._lineColor=lineColor;
			this._fillColor=fillColor;
			this.drawCommon();
		}

		__proto.drawCommon=function(){
			this._displayObject.mouseEnabled=this.touchable;
			var gr=this._displayObject.graphics;
			gr.clear();
			var w=this.width;
			var h=this.height;
			if(w==0 || h==0)
				return;
			var fillColor=this._fillColor;
			var lineColor=this._lineColor;
			if(Render.isWebGL && ToolSet.startsWith(fillColor,"rgba")){
				var arr=fillColor.substring(5,fillColor.lastIndexOf(")")).split(",");
				var a=parseFloat(arr[3]);
				if(a==0)
					fillColor=null;
				else {
					fillColor=Utils.toHexColor((parseInt(arr[0])<<16)+(parseInt(arr[1])<<8)+parseInt(arr[2]));
					this.alpha=a;
				}
			}
			if (this._type==1)
				gr.drawRect(0,0,w,h,fillColor,this._lineSize>0?lineColor:null,this._lineSize);
			else
			gr.drawCircle(w/2,h/2,w/2,fillColor,this._lineSize>0?lineColor:null,this._lineSize);
			this._displayObject.repaint();
		}

		__proto.replaceMe=function(target){
			if (!this._parent)
				throw "parent not set";
			target.name=this.name;
			target.alpha=this.alpha;
			target.rotation=this.rotation;
			target.visible=this.visible;
			target.touchable=this.touchable;
			target.grayed=this.grayed;
			target.setXY(this.x,this.y);
			target.setSize(this.width,this.height);
			var index=this._parent.getChildIndex(this);
			this._parent.addChildAt(target,index);
			target.relations.copyFrom(this.relations);
			this._parent.removeChild(this,true);
		}

		__proto.addBeforeMe=function(target){
			if (this._parent==null)
				throw "parent not set";
			var index=this._parent.getChildIndex(this);
			this._parent.addChildAt(target,index);
		}

		__proto.addAfterMe=function(target){
			if (this._parent==null)
				throw "parent not set";
			var index=this._parent.getChildIndex(this);
			index++;
			this._parent.addChildAt(target,index);
		}

		__proto.setNativeObject=function(obj){
			this._type=0;
			this._displayObject.mouseEnabled=this.touchable;
			this._displayObject.graphics.clear();
			this._displayObject.addChild(obj);
		}

		__proto.createDisplayObject=function(){
			_super.prototype.createDisplayObject.call(this);
			this._displayObject.mouseEnabled=false;
		}

		__proto.handleSizeChanged=function(){
			_super.prototype.handleSizeChanged.call(this);
			if(this._type !=0)
				this.drawCommon();
		}

		__proto.setup_beforeAdd=function(xml){
			_super.prototype.setup_beforeAdd.call(this,xml);
			var type=xml.getAttribute("type");
			if (type && type!="empty"){
				var str;
				str=xml.getAttribute("lineSize");
				if (str)
					this._lineSize=parseInt(str);
				str=xml.getAttribute("lineColor");
				if (str){
					var c=ToolSet.convertFromHtmlColor(str,true);
					var a=((c >> 24)& 0xFF)/ 0xFF;
					if(a!=1)
						this._lineColor="rgba("+((c>>16)& 0xFF)+","+((c>>8)& 0xFF)+","+(c & 0xFF)+","+a+")";
					else
					this._lineColor=Utils.toHexColor(c & 0xFFFFFF);
				}
				str=xml.getAttribute("fillColor");
				if (str){
					c=ToolSet.convertFromHtmlColor(str,true);
					a=((c >> 24)& 0xFF)/ 0xFF;
					if(a!=1)
						this._fillColor="rgba("+((c>>16)& 0xFF)+","+((c>>8)& 0xFF)+","+(c & 0xFF)+","+a+")";
					else
					this._fillColor=Utils.toHexColor(c & 0xFFFFFF);
				}
				if (type=="rect")
					this._type=1;
				else
				this._type=2;
				this.drawCommon();
			}
		}

		__getset(0,__proto,'color',function(){
			return this._fillColor;
			},function(value){
			this._fillColor=value;
			if(this._type!=0)
				this.drawCommon();
		});

		return GGraph;
	})(GObject)


	//class fairygui.GGroup extends fairygui.GObject
	var GGroup=(function(_super){
		function GGroup(){
			this._layout=0;
			this._lineGap=0;
			this._columnGap=0;
			this._percentReady=false;
			this._boundsChanged=false;
			this._updating=0;
			GGroup.__super.call(this);
		}

		__class(GGroup,'fairygui.GGroup',_super);
		var __proto=GGroup.prototype;
		__proto.setBoundsChangedFlag=function(childSizeChanged){
			(childSizeChanged===void 0)&& (childSizeChanged=false);
			if (this._updating==0 && this.parent !=null){
				if (childSizeChanged)
					this._percentReady=false;
				if(!this._boundsChanged){
					this._boundsChanged=true;
					if(this._layout!=0)
						Laya.timer.callLater(this,this.ensureBoundsCorrect);
				}
			}
		}

		__proto.ensureBoundsCorrect=function(){
			if (this._boundsChanged)
				this.updateBounds();
		}

		__proto.updateBounds=function(){
			Laya.timer.clear(this,this.ensureBoundsCorrect);
			this._boundsChanged=false;
			if (this.parent==null)
				return;
			this.handleLayout();
			var cnt=this._parent.numChildren;
			var i=0;
			var child;
			var ax=Number.MAX_VALUE,ay=Number.MAX_VALUE;
			var ar=Number.MIN_VALUE,ab=Number.MIN_VALUE;
			var tmp=0;
			var empty=true;
			for(i=0;i<cnt;i++){
				child=this._parent.getChildAt(i);
				if(child.group==this){
					tmp=child.x;
					if(tmp<ax)
						ax=tmp;
					tmp=child.y;
					if(tmp<ay)
						ay=tmp;
					tmp=child.x+child.width;
					if(tmp>ar)
						ar=tmp;
					tmp=child.y+child.height;
					if(tmp>ab)
						ab=tmp;
					empty=false;
				}
			}
			if (!empty){
				this._updating=1;
				this.setXY(ax,ay);
				this._updating=2;
				this.setSize(ar-ax,ab-ay);
			}
			else{
				this._updating=2;
				this.setSize(0,0);
			}
			this._updating=0;
		}

		__proto.handleLayout=function(){
			this._updating |=1;
			var child;
			var i=0;
			var cnt=0;
			if (this._layout==1){
				var curX=NaN;
				cnt=this.parent.numChildren;
				for (i=0;i < cnt;i++){
					child=this.parent.getChildAt(i);
					if (child.group !=this)
						continue ;
					if (isNaN(curX))
						curX=Math.floor(child.x);
					else
					child.x=curX;
					if (child.width !=0)
						curX+=Math.floor(child.width+this._columnGap);
				}
				if (!this._percentReady)
					this.updatePercent();
			}
			else if (this._layout==2){
				var curY=NaN;
				cnt=this.parent.numChildren;
				for (i=0;i < cnt;i++){
					child=this.parent.getChildAt(i);
					if (child.group !=this)
						continue ;
					if (isNaN(curY))
						curY=Math.floor(child.y);
					else
					child.y=curY;
					if (child.height !=0)
						curY+=Math.floor(child.height+this._lineGap);
				}
				if (!this._percentReady)
					this.updatePercent();
			}
			this._updating &=2;
		}

		__proto.updatePercent=function(){
			this._percentReady=true;
			var cnt=this.parent.numChildren;
			var i=0;
			var child;
			var size=0;
			if (this._layout==1){
				for (i=0;i < cnt;i++){
					child=this.parent.getChildAt(i);
					if (child.group !=this)
						continue ;
					size+=child.width;
				}
				for (i=0;i < cnt;i++){
					child=this.parent.getChildAt(i);
					if (child.group !=this)
						continue ;
					if (size > 0)
						child._sizePercentInGroup=child.width / size;
					else
					child._sizePercentInGroup=0;
				}
			}
			else{
				for (i=0;i < cnt;i++){
					child=this.parent.getChildAt(i);
					if (child.group !=this)
						continue ;
					size+=child.height;
				}
				for (i=0;i < cnt;i++){
					child=this.parent.getChildAt(i);
					if (child.group !=this)
						continue ;
					if (size > 0)
						child._sizePercentInGroup=child.height / size;
					else
					child._sizePercentInGroup=0;
				}
			}
		}

		__proto.moveChildren=function(dx,dy){
			if ((this._updating & 1)!=0 || this.parent==null)
				return;
			this._updating |=1;
			var cnt=this.parent.numChildren;
			var i=0;
			var child;
			for (i=0;i < cnt;i++){
				child=this.parent.getChildAt(i);
				if (child.group==this){
					child.setXY(child.x+dx,child.y+dy);
				}
			}
			this._updating &=2;
		}

		__proto.resizeChildren=function(dw,dh){
			if (this._layout==0 || (this._updating & 2)!=0 || this.parent==null)
				return;
			this._updating |=2;
			if (!this._percentReady)
				this.updatePercent();
			var cnt=this.parent.numChildren;
			var i=0;
			var j=0;
			var child;
			var last=-1;
			var numChildren=0;
			var lineSize=0;
			var remainSize=0;
			var found=false;
			for (i=0;i < cnt;i++){
				child=this.parent.getChildAt(i);
				if (child.group !=this)
					continue ;
				last=i;
				numChildren++;
			}
			if (this._layout==1){
				remainSize=lineSize=this.width-(numChildren-1)*this._columnGap;
				var curX=NaN;
				var nw=NaN;
				for (i=0;i < cnt;i++){
					child=this.parent.getChildAt(i);
					if (child.group !=this)
						continue ;
					if (isNaN(curX))
						curX=Math.floor(child.x);
					else
					child.x=curX;
					if (last==i)
						nw=remainSize;
					else
					nw=Math.round(child._sizePercentInGroup *lineSize);
					child.setSize(nw,child._rawHeight+dh,true);
					remainSize-=child.width;
					if (last==i){
						if (remainSize >=1){
							for (j=0;j <=i;j++){
								child=this.parent.getChildAt(j);
								if (child.group !=this)
									continue ;
								if (!found){
									nw=child.width+remainSize;
									if ((child.maxWidth==0 || nw < child.maxWidth)
										&& (child.minWidth==0 || nw > child.minWidth)){
										child.setSize(nw,child.height,true);
										found=true;
									}
								}
								else
								child.x+=remainSize;
							}
						}
					}
					else
					curX+=(child.width+this._columnGap);
				}
			}
			else if (this._layout==2){
				remainSize=lineSize=this.height-(numChildren-1)*this._lineGap;
				var curY=NaN;
				var nh=NaN;
				for (i=0;i < cnt;i++){
					child=this.parent.getChildAt(i);
					if (child.group !=this)
						continue ;
					if (isNaN(curY))
						curY=Math.floor(child.y);
					else
					child.y=curY;
					if (last==i)
						nh=remainSize;
					else
					nh=Math.round(child._sizePercentInGroup *lineSize);
					child.setSize(child._rawWidth+dw,nh,true);
					remainSize-=child.height;
					if (last==i){
						if (remainSize >=1){
							for (j=0;j <=i;j++){
								child=this.parent.getChildAt(j);
								if (child.group !=this)
									continue ;
								if (!found){
									nh=child.height+remainSize;
									if ((child.maxHeight==0 || nh < child.maxHeight)
										&& (child.minHeight==0 || nh > child.minHeight)){
										child.setSize(child.width,nh,true);
										found=true;
									}
								}
								else
								child.y+=remainSize;
							}
						}
					}
					else
					curY+=(child.height+this._lineGap);
				}
			}
			this._updating &=1;
		}

		__proto.handleAlphaChanged=function(){
			if(this._underConstruct)
				return;
			var cnt=this._parent.numChildren;
			for(var i=0;i<cnt;i++){
				var child=this._parent.getChildAt(i);
				if(child.group==this)
					child.alpha=this.alpha;
			}
		}

		__proto.handleVisibleChanged=function(){
			if(!this._parent)
				return;
			var cnt=this._parent.numChildren;
			for(var i=0;i<cnt;i++){
				var child=this._parent.getChildAt(i);
				if(child.group==this)
					child.handleVisibleChanged();
			}
		}

		__proto.setup_beforeAdd=function(xml){
			_super.prototype.setup_beforeAdd.call(this,xml);
			var str;
			str=xml.getAttribute("layout");
			if (str !=null){
				this._layout=GroupLayoutType.parse(str);
				str=xml.getAttribute("lineGap");
				if(str)
					this._lineGap=parseInt(str);
				str=xml.getAttribute("colGap");
				if(str)
					this._columnGap=parseInt(str);
			}
		}

		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			if(!this.visible)
				this.handleVisibleChanged();
		}

		__getset(0,__proto,'layout',function(){
			return this._layout;
			},function(value){
			if(this._layout !=value){
				this._layout=value;
				this.setBoundsChangedFlag(true);
			}
		});

		__getset(0,__proto,'columnGap',function(){
			return this._columnGap;
			},function(value){
			if(this._columnGap !=value){
				this._columnGap=value;
				this.setBoundsChangedFlag();
			}
		});

		__getset(0,__proto,'lineGap',function(){
			return this._lineGap;
			},function(value){
			if(this._lineGap !=value){
				this._lineGap=value;
				this.setBoundsChangedFlag();
			}
		});

		return GGroup;
	})(GObject)


	//class fairygui.GImage extends fairygui.GObject
	var GImage=(function(_super){
		function GImage(){
			this.image=null;
			this._color=null;
			this._flip=0;
			GImage.__super.call(this);
			this._color="#FFFFFF";
		}

		__class(GImage,'fairygui.GImage',_super);
		var __proto=GImage.prototype;
		Laya.imps(__proto,{"fairygui.IColorGear":true})
		__proto.applyColor=function(){}
		__proto.createDisplayObject=function(){
			this._displayObject=this.image=new Image$1();
			this.image.mouseEnabled=false;
			this._displayObject["$owner"]=this;
		}

		__proto.constructFromResource=function(){
			this.packageItem.load();
			this.sourceWidth=this.packageItem.width;
			this.sourceHeight=this.packageItem.height;
			this.initWidth=this.sourceWidth;
			this.initHeight=this.sourceHeight;
			this.image.scale9Grid=this.packageItem.scale9Grid;
			this.image.scaleByTile=this.packageItem.scaleByTile;
			this.image.tileGridIndice=this.packageItem.tileGridIndice;
			this.image.tex=this.packageItem.texture;
			this.setSize(this.sourceWidth,this.sourceHeight);
		}

		__proto.handleXYChanged=function(){
			_super.prototype.handleXYChanged.call(this);
			if(this._flip !=0){
				if(this.scaleX==-1)
					this.image.x+=this.width;
				if(this.scaleY==-1)
					this.image.y+=this.height;
			}
		}

		__proto.handleSizeChanged=function(){
			if(this.image.tex!=null){
				this.image.scaleTexture(this.width/this.sourceWidth,this.height/this.sourceHeight);
			}
		}

		__proto.setup_beforeAdd=function(xml){
			_super.prototype.setup_beforeAdd.call(this,xml);
			var str;
			str=xml.getAttribute("color");
			if(str)
				this.color=str;
			str=xml.getAttribute("flip");
			if(str)
				this.flip=FlipType.parse(str);
		}

		__getset(0,__proto,'color',function(){
			return this._color;
			},function(value){
			if(this._color !=value){
				this._color=value;
				this.updateGear(4);
				this.applyColor();
			}
		});

		//not supported yet
		__getset(0,__proto,'flip',function(){
			return this._flip;
			},function(value){
			if(this._flip!=value){
				this._flip=value;
				var sx=1,sy=1;
				if(this._flip==1 || this._flip==3)
					sx=-1;
				if(this._flip==2 || this._flip==3)
					sy=-1;
				this.setScale(sx,sy);
				this.handleXYChanged();
			}
		});

		return GImage;
	})(GObject)


	//class fairygui.GLoader extends fairygui.GObject
	var GLoader=(function(_super){
		function GLoader(){
			this._url=null;
			this._align=null;
			this._valign=null;
			this._autoSize=false;
			this._fill=0;
			this._showErrorSign=false;
			this._playing=false;
			this._frame=0;
			this._color=null;
			this._contentItem=null;
			this._contentSourceWidth=0;
			this._contentSourceHeight=0;
			this._contentWidth=0;
			this._contentHeight=0;
			this._content=null;
			this._errorSign=null;
			this._updatingLayout=false;
			GLoader.__super.call(this);
			this._playing=true;
			this._url="";
			this._fill=0;
			this._align="left";
			this._valign="top";
			this._showErrorSign=true;
			this._color="#FFFFFF";
		}

		__class(GLoader,'fairygui.GLoader',_super);
		var __proto=GLoader.prototype;
		Laya.imps(__proto,{"fairygui.IAnimationGear":true,"fairygui.IColorGear":true})
		__proto.createDisplayObject=function(){
			_super.prototype.createDisplayObject.call(this);
			this._displayObject.mouseEnabled=true;
		}

		__proto.dispose=function(){
			if(this._contentItem==null && ((this._content instanceof fairygui.display.Image ))){
				var texture=(this._content).tex;
				if(texture !=null)
					this.freeExternal(texture);
			}
			_super.prototype.dispose.call(this);
		}

		__proto.applyColor=function(){}
		__proto.loadContent=function(){
			this.clearContent();
			if (!this._url)
				return;
			if(ToolSet.startsWith(this._url,"ui://"))
				this.loadFromPackage(this._url);
			else
			this.loadExternal();
		}

		__proto.loadFromPackage=function(itemURL){
			this._contentItem=UIPackage.getItemByURL(itemURL);
			if(this._contentItem !=null){
				this._contentItem.load();
				if(this._autoSize)
					this.setSize(this._contentItem.width,this._contentItem.height);
				if(this._contentItem.type==0){
					if(this._contentItem.texture==null){
						this.setErrorState();
					}
					else {
						if(!((this._content instanceof fairygui.display.Image ))){
							this._content=new Image$1();
							this._displayObject.addChild(this._content);
						}
						else
						this._displayObject.addChild(this._content);
						(this._content).tex=this._contentItem.texture;
						(this._content).scale9Grid=this._contentItem.scale9Grid;
						(this._content).scaleByTile=this._contentItem.scaleByTile;
						(this._content).tileGridIndice=this._contentItem.tileGridIndice;
						this._contentSourceWidth=this._contentItem.width;
						this._contentSourceHeight=this._contentItem.height;
						this.updateLayout();
					}
				}
				else if(this._contentItem.type==2){
					if(!((this._content instanceof fairygui.display.MovieClip ))){
						this._content=new MovieClip$1();
						this._displayObject.addChild(this._content);
					}
					else
					this._displayObject.addChild(this._content);
					this._contentSourceWidth=this._contentItem.width;
					this._contentSourceHeight=this._contentItem.height;
					(this._content).interval=this._contentItem.interval;
					(this._content).swing=this._contentItem.swing;
					(this._content).repeatDelay=this._contentItem.repeatDelay;
					(this._content).frames=this._contentItem.frames;
					(this._content).boundsRect=new Rectangle(0,0,this._contentSourceWidth,this._contentSourceHeight);
					this.updateLayout();
				}
				else
				this.setErrorState();
			}
			else
			this.setErrorState();
		}

		__proto.loadExternal=function(){
			AssetProxy.inst.load(this._url,Handler.create(this,this.__getResCompleted));
		}

		__proto.freeExternal=function(texture){}
		__proto.onExternalLoadSuccess=function(texture){
			if(!((this._content instanceof fairygui.display.Image ))){
				this._content=new Image$1();
				this._displayObject.addChild(this._content);
			}
			else
			this._displayObject.addChild(this._content);
			(this._content).tex=texture;
			(this._content).scale9Grid=null;
			(this._content).scaleByTile=false;
			this._contentSourceWidth=texture.width;
			this._contentSourceHeight=texture.height;
			this.updateLayout();
		}

		__proto.onExternalLoadFailed=function(){
			this.setErrorState();
		}

		__proto.__getResCompleted=function(tex){
			if(tex!=null)
				this.onExternalLoadSuccess(tex);
			else
			this.onExternalLoadFailed();
		}

		__proto.setErrorState=function(){
			if (!this._showErrorSign)
				return;
			if (this._errorSign==null){
				if (UIConfig$1.loaderErrorSign !=null){
					this._errorSign=fairygui.GLoader._errorSignPool.getObject(UIConfig$1.loaderErrorSign);
				}
			}
			if (this._errorSign !=null){
				this._errorSign.setSize(this.width,this.height);
				this._displayObject.addChild(this._errorSign.displayObject);
			}
		}

		__proto.clearErrorState=function(){
			if (this._errorSign !=null){
				this._displayObject.removeChild(this._errorSign.displayObject);
				fairygui.GLoader._errorSignPool.returnObject(this._errorSign);
				this._errorSign=null;
			}
		}

		__proto.updateLayout=function(){
			if (this._content==null){
				if (this._autoSize){
					this._updatingLayout=true;
					this.setSize(50,30);
					this._updatingLayout=false;
				}
				return;
			}
			this._content.x=0;
			this._content.y=0;
			this._content.scaleX=1;
			this._content.scaleY=1;
			this._contentWidth=this._contentSourceWidth;
			this._contentHeight=this._contentSourceHeight;
			if (this._autoSize){
				this._updatingLayout=true;
				if (this._contentWidth==0)
					this._contentWidth=50;
				if (this._contentHeight==0)
					this._contentHeight=30;
				this.setSize(this._contentWidth,this._contentHeight);
				this._updatingLayout=false;
				if(this._contentWidth==this._width && this._contentHeight==this._height)
					return;
			};
			var sx=1,sy=1;
			if(this._fill!=0){
				sx=this.width/this._contentSourceWidth;
				sy=this.height/this._contentSourceHeight;
				if(sx!=1 || sy!=1){
					if (this._fill==2)
						sx=sy;
					else if (this._fill==3)
					sy=sx;
					else if (this._fill==1){
						if (sx > sy)
							sx=sy;
						else
						sy=sx;
					}
					this._contentWidth=this._contentSourceWidth *sx;
					this._contentHeight=this._contentSourceHeight *sy;
				}
			}
			if ((this._content instanceof fairygui.display.Image ))
				(this._content).scaleTexture(sx,sy);
			else
			this._content.scale(sx,sy);
			if (this._align=="center")
				this._content.x=Math.floor((this.width-this._contentWidth)/ 2);
			else if (this._align=="right")
			this._content.x=this.width-this._contentWidth;
			if (this._valign=="middle")
				this._content.y=Math.floor((this.height-this._contentHeight)/ 2);
			else if (this._valign=="bottom")
			this._content.y=this.height-this._contentHeight;
		}

		__proto.clearContent=function(){
			this.clearErrorState();
			if (this._content !=null && this._content.parent !=null)
				this._displayObject.removeChild(this._content);
			if(this._contentItem==null && ((this._content instanceof fairygui.display.Image ))){
				var texture=(this._content).tex;
				if(texture !=null)
					this.freeExternal(texture);
			}
			this._contentItem=null;
		}

		__proto.handleSizeChanged=function(){
			_super.prototype.handleSizeChanged.call(this);
			if(!this._updatingLayout)
				this.updateLayout();
		}

		__proto.setup_beforeAdd=function(xml){
			_super.prototype.setup_beforeAdd.call(this,xml);
			var str;
			str=xml.getAttribute("url");
			if (str)
				this._url=str;
			str=xml.getAttribute("align");
			if (str)
				this._align=str;
			str=xml.getAttribute("vAlign");
			if (str)
				this._valign=str;
			str=xml.getAttribute("fill");
			if (str)
				this._fill=LoaderFillType.parse(str);
			this._autoSize=xml.getAttribute("autoSize")=="true";
			str=xml.getAttribute("errorSign");
			if (str)
				this._showErrorSign=str=="true";
			this._playing=xml.getAttribute("playing")!="false";
			str=xml.getAttribute("color");
			if(str)
				this.color=str;
			if (this._url)
				this.loadContent();
		}

		__getset(0,__proto,'frame',function(){
			return this._frame;
			},function(value){
			if (this._frame !=value){
				this._frame=value;
				if ((this._content instanceof fairygui.display.MovieClip ))
					(this._content).currentFrame=value;
				this.updateGear(5);
			}
		});

		__getset(0,__proto,'url',function(){
			return this._url;
			},function(value){
			if (this._url==value)
				return;
			this._url=value;
			this.loadContent();
			this.updateGear(7);
		});

		__getset(0,__proto,'align',function(){
			return this._align;
			},function(value){
			if (this._align !=value){
				this._align=value;
				this.updateLayout();
			}
		});

		__getset(0,__proto,'color',function(){
			return this._color;
			},function(value){
			if(this._color !=value){
				this._color=value;
				this.updateGear(4);
				this.applyColor();
			}
		});

		__getset(0,__proto,'fill',function(){
			return this._fill;
			},function(value){
			if (this._fill !=value){
				this._fill=value;
				this.updateLayout();
			}
		});

		__getset(0,__proto,'verticalAlign',function(){
			return this._valign;
			},function(value){
			if (this._valign !=value){
				this._valign=value;
				this.updateLayout();
			}
		});

		__getset(0,__proto,'icon',function(){
			return this._url;
			},function(value){
			this.url=value;
		});

		//todo:
		__getset(0,__proto,'showErrorSign',function(){
			return this._showErrorSign;
			},function(value){
			this._showErrorSign=value;
		});

		__getset(0,__proto,'autoSize',function(){
			return this._autoSize;
			},function(value){
			if (this._autoSize !=value){
				this._autoSize=value;
				this.updateLayout();
			}
		});

		__getset(0,__proto,'playing',function(){
			return this._playing;
			},function(value){
			if (this._playing !=value){
				this._playing=value;
				if ((this._content instanceof fairygui.display.MovieClip ))
					(this._content).playing=value;
				this.updateGear(5);
			}
		});

		__getset(0,__proto,'content',function(){
			return this._content;
		});

		__static(GLoader,
		['_errorSignPool',function(){return this._errorSignPool=new GObjectPool();}
		]);
		return GLoader;
	})(GObject)


	//class fairygui.GMovieClip extends fairygui.GObject
	var GMovieClip=(function(_super){
		function GMovieClip(){
			this.movieClip=null;
			GMovieClip.__super.call(this);
			this._sizeImplType=1;
		}

		__class(GMovieClip,'fairygui.GMovieClip',_super);
		var __proto=GMovieClip.prototype;
		Laya.imps(__proto,{"fairygui.IAnimationGear":true,"fairygui.IColorGear":true})
		__proto.createDisplayObject=function(){
			this._displayObject=this.movieClip=new MovieClip$1();
			this.movieClip.mouseEnabled=false;
			this._displayObject["$owner"]=this;
		}

		//从start帧开始，播放到end帧（-1表示结尾），重复times次（0表示无限循环），循环结束后，停止在endAt帧（-1表示参数end）
		__proto.setPlaySettings=function(start,end,times,endAt,endHandler){
			(start===void 0)&& (start=0);
			(end===void 0)&& (end=-1);
			(times===void 0)&& (times=0);
			(endAt===void 0)&& (endAt=-1);
			this.movieClip.setPlaySettings(start,end,times,endAt,endHandler);
		}

		__proto.constructFromResource=function(){
			this.sourceWidth=this.packageItem.width;
			this.sourceHeight=this.packageItem.height;
			this.initWidth=this.sourceWidth;
			this.initHeight=this.sourceHeight;
			this.setSize(this.sourceWidth,this.sourceHeight);
			this.packageItem.load();
			this.movieClip.interval=this.packageItem.interval;
			this.movieClip.swing=this.packageItem.swing;
			this.movieClip.repeatDelay=this.packageItem.repeatDelay;
			this.movieClip.frames=this.packageItem.frames;
			this.movieClip.boundsRect=new Rectangle(0,0,this.sourceWidth,this.sourceHeight);
		}

		__proto.setup_beforeAdd=function(xml){
			_super.prototype.setup_beforeAdd.call(this,xml);
			var str;
			str=xml.getAttribute("frame");
			if (str)
				this.movieClip.currentFrame=parseInt(str);
			str=xml.getAttribute("playing");
			this.movieClip.playing=str !="false";
			str=xml.getAttribute("color");
			if(str)
				this.color=str;
		}

		__getset(0,__proto,'color',function(){
			return "#FFFFFF";
			},function(value){
		});

		__getset(0,__proto,'playing',function(){
			return this.movieClip.playing;
			},function(value){
			if (this.movieClip.playing !=value){
				this.movieClip.playing=value;
				this.updateGear(5);
			}
		});

		__getset(0,__proto,'frame',function(){
			return this.movieClip.currentFrame;
			},function(value){
			if (this.movieClip.currentFrame !=value){
				this.movieClip.currentFrame=value;
				this.updateGear(5);
			}
		});

		return GMovieClip;
	})(GObject)


	//class laya.ui.AutoBitmap extends laya.display.Graphics
	var AutoBitmap=(function(_super){
		function AutoBitmap(){
			this.autoCacheCmd=true;
			this._width=0;
			this._height=0;
			this._source=null;
			this._sizeGrid=null;
			this._isChanged=false;
			this._offset=null;
			AutoBitmap.__super.call(this);
		}

		__class(AutoBitmap,'laya.ui.AutoBitmap',_super);
		var __proto=AutoBitmap.prototype;
		/**@inheritDoc */
		__proto.destroy=function(){
			_super.prototype.destroy.call(this);
			this._source=null;
			this._sizeGrid=null;
			this._offset=null;
		}

		/**@private */
		__proto._setChanged=function(){
			if (!this._isChanged){
				this._isChanged=true;
				Laya.timer.callLater(this,this.changeSource);
			}
		}

		/**
		*@private
		*修改纹理资源。
		*/
		__proto.changeSource=function(){
			this._isChanged=false;
			var source=this._source;
			if (!source || !source.bitmap)return;
			var width=this.width;
			var height=this.height;
			var sizeGrid=this._sizeGrid;
			var sw=source.sourceWidth;
			var sh=source.sourceHeight;
			if (!sizeGrid || (sw===width && sh===height)){
				this.cleanByTexture(source,this._offset ? this._offset[0] :0,this._offset ? this._offset[1] :0,width,height);
				}else {
				source.$_GID || (source.$_GID=Utils.getGID());
				var key=source.$_GID+"."+width+"."+height+"."+sizeGrid.join(".");
				if (Utils.isOKCmdList(WeakObject.I.get(key))){
					this.cmds=WeakObject.I.get(key);
					return;
				}
				this.clear();
				var top=sizeGrid[0];
				var right=sizeGrid[1];
				var bottom=sizeGrid[2];
				var left=sizeGrid[3];
				var repeat=sizeGrid[4];
				var needClip=false;
				if (width==sw){
					left=right=0;
				}
				if (height==sh){
					top=bottom=0;
				}
				if (left+right > width){
					var clipWidth=width;
					needClip=true;
					width=left+right;
					this.save();
					this.clipRect(0,0,clipWidth,height);
				}
				left && top && this.drawTexture(AutoBitmap.getTexture(source,0,0,left,top),0,0,left,top);
				right && top && this.drawTexture(AutoBitmap.getTexture(source,sw-right,0,right,top),width-right,0,right,top);
				left && bottom && this.drawTexture(AutoBitmap.getTexture(source,0,sh-bottom,left,bottom),0,height-bottom,left,bottom);
				right && bottom && this.drawTexture(AutoBitmap.getTexture(source,sw-right,sh-bottom,right,bottom),width-right,height-bottom,right,bottom);
				top && this.drawBitmap(repeat,AutoBitmap.getTexture(source,left,0,sw-left-right,top),left,0,width-left-right,top);
				bottom && this.drawBitmap(repeat,AutoBitmap.getTexture(source,left,sh-bottom,sw-left-right,bottom),left,height-bottom,width-left-right,bottom);
				left && this.drawBitmap(repeat,AutoBitmap.getTexture(source,0,top,left,sh-top-bottom),0,top,left,height-top-bottom);
				right && this.drawBitmap(repeat,AutoBitmap.getTexture(source,sw-right,top,right,sh-top-bottom),width-right,top,right,height-top-bottom);
				this.drawBitmap(repeat,AutoBitmap.getTexture(source,left,top,sw-left-right,sh-top-bottom),left,top,width-left-right,height-top-bottom);
				if (needClip)this.restore();
				if (this.autoCacheCmd && !Render.isConchApp)WeakObject.I.set(key,this.cmds);
			}
			this._repaint();
		}

		__proto.drawBitmap=function(repeat,tex,x,y,width,height){
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			if (width < 0.1 || height < 0.1)return;
			if (repeat && (tex.width !=width || tex.height !=height))this.fillTexture(tex,x,y,width,height);
			else this.drawTexture(tex,x,y,width,height);
		}

		__proto.clear=function(recoverCmds){
			(recoverCmds===void 0)&& (recoverCmds=true);
			_super.prototype.clear.call(this,false);
		}

		/**
		*当前实例的有效缩放网格数据。
		*<p>如果设置为null,则在应用任何缩放转换时，将正常缩放整个显示对象。</p>
		*<p>数据格式：[上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)]。
		*<ul><li>例如：[4,4,4,4,1]</li></ul></p>
		*<p> <code>sizeGrid</code> 的值如下所示：
		*<ol>
		*<li>上边距</li>
		*<li>右边距</li>
		*<li>下边距</li>
		*<li>左边距</li>
		*<li>是否重复填充(值为0：不重复填充，1：重复填充)</li>
		*</ol></p>
		*<p>当定义 <code>sizeGrid</code> 属性时，该显示对象被分割到以 <code>sizeGrid</code> 数据中的"上边距,右边距,下边距,左边距" 组成的矩形为基础的具有九个区域的网格中，该矩形定义网格的中心区域。网格的其它八个区域如下所示：
		*<ul>
		*<li>矩形上方的区域</li>
		*<li>矩形外的右上角</li>
		*<li>矩形左侧的区域</li>
		*<li>矩形右侧的区域</li>
		*<li>矩形外的左下角</li>
		*<li>矩形下方的区域</li>
		*<li>矩形外的右下角</li>
		*<li>矩形外的左上角</li>
		*</ul>
		*同时也支持3宫格，比如0,4,0,4,1为水平3宫格，4,0,4,0,1为垂直3宫格，3宫格性能比9宫格高。
		*</p>
		*/
		__getset(0,__proto,'sizeGrid',function(){
			return this._sizeGrid;
			},function(value){
			this._sizeGrid=value;
			this._setChanged();
		});

		/**
		*表示显示对象的宽度，以像素为单位。
		*/
		__getset(0,__proto,'width',function(){
			if (this._width)return this._width;
			if (this._source)return this._source.sourceWidth;
			return 0;
			},function(value){
			if (this._width !=value){
				this._width=value;
				this._setChanged();
			}
		});

		/**
		*表示显示对象的高度，以像素为单位。
		*/
		__getset(0,__proto,'height',function(){
			if (this._height)return this._height;
			if (this._source)return this._source.sourceHeight;
			return 0;
			},function(value){
			if (this._height !=value){
				this._height=value;
				this._setChanged();
			}
		});

		/**
		*对象的纹理资源。
		*@see laya.resource.Texture
		*/
		__getset(0,__proto,'source',function(){
			return this._source;
			},function(value){
			if (value){
				this._source=value
				this._setChanged();
				}else {
				this._source=null;
				this.clear();
			}
		});

		AutoBitmap.getTexture=function(tex,x,y,width,height){
			if (width <=0)width=1;
			if (height <=0)height=1;
			tex.$_GID || (tex.$_GID=Utils.getGID())
			var key=tex.$_GID+"."+x+"."+y+"."+width+"."+height;
			var texture=WeakObject.I.get(key);
			if (!texture||!texture.source){
				texture=Texture.createFromTexture(tex,x,y,width,height);
				WeakObject.I.set(key,texture);
			}
			return texture;
		}

		return AutoBitmap;
	})(Graphics)


	//class laya.webgl.display.GraphicsGL extends laya.display.Graphics
	var GraphicsGL=(function(_super){
		function GraphicsGL(){
			GraphicsGL.__super.call(this);
		}

		__class(GraphicsGL,'laya.webgl.display.GraphicsGL',_super);
		var __proto=GraphicsGL.prototype;
		__proto.setShader=function(shader){
			this._saveToCmd(Render.context._setShader,[shader]);
		}

		__proto.setIBVB=function(x,y,ib,vb,numElement,shader){
			this._saveToCmd(Render.context._setIBVB,[x,y,ib,vb,numElement,shader]);
		}

		__proto.drawParticle=function(x,y,ps){
			var pt=RunDriver.createParticleTemplate2D(ps);
			pt.x=x;
			pt.y=y;
			this._saveToCmd(Render.context._drawParticle,[pt]);
		}

		return GraphicsGL;
	})(Graphics)


	//class laya.display.css.CSSStyle extends laya.display.css.Style
	var CSSStyle=(function(_super){
		function CSSStyle(ower){
			this._bgground=null;
			this._border=null;
			//this._ower=null;
			this._rect=null;
			this.underLine=0;
			this.lineHeight=0;
			CSSStyle.__super.call(this);
			this._padding=CSSStyle._PADDING;
			this._spacing=CSSStyle._SPACING;
			this._aligns=CSSStyle._ALIGNS;
			this._font=Font.EMPTY;
			this._ower=ower;
		}

		__class(CSSStyle,'laya.display.css.CSSStyle',_super);
		var __proto=CSSStyle.prototype;
		/**@inheritDoc */
		__proto.destroy=function(){
			this._ower=null;
			this._font=null;
			this._rect=null;
		}

		/**
		*复制传入的 CSSStyle 属性值。
		*@param src 待复制的 CSSStyle 对象。
		*/
		__proto.inherit=function(src){
			this._font=src._font;
			this._spacing=src._spacing===CSSStyle._SPACING ? CSSStyle._SPACING :src._spacing.slice();
			this.lineHeight=src.lineHeight;
		}

		/**@private */
		__proto._widthAuto=function(){
			return (this._type & 0x40000)!==0;
		}

		/**@inheritDoc */
		__proto.widthed=function(sprite){
			return (this._type & 0x8)!=0;
		}

		/**
		*@private
		*/
		__proto._calculation=function(type,value){
			if (value.indexOf('%')< 0)return false;
			var ower=this._ower;
			var parent=ower.parent;
			var rect=this._rect;
			function getValue (pw,w,nums){
				return (pw *nums[0]+w *nums[1]+nums[2]);
			}
			function onParentResize (type){
				var pw=parent.width,w=ower.width;
				rect.width && (ower.width=getValue(pw,w,rect.width));
				rect.height && (ower.height=getValue(pw,w,rect.height));
				rect.left && (ower.x=getValue(pw,w,rect.left));
				rect.top && (ower.y=getValue(pw,w,rect.top));
			}
			if (rect===null){
				parent._getCSSStyle()._type |=0x80000;
				parent.on("resize",this,onParentResize);
				this._rect=rect={input:{}};
			};
			var nums=value.split(' ');
			nums[0]=parseFloat(nums[0])/ 100;
			if (nums.length==1)
				nums[1]=nums[2]=0;
			else {
				nums[1]=parseFloat(nums[1])/ 100;
				nums[2]=parseFloat(nums[2]);
			}
			rect[type]=nums;
			rect.input[type]=value;
			onParentResize(type);
			return true;
		}

		/**
		*是否已设置高度。
		*@param sprite 显示对象 Sprite。
		*@return 一个Boolean 表示是否已设置高度。
		*/
		__proto.heighted=function(sprite){
			return (this._type & 0x2000)!=0;
		}

		/**
		*设置宽高。
		*@param w 宽度。
		*@param h 高度。
		*/
		__proto.size=function(w,h){
			var ower=this._ower;
			var resize=false;
			if (w!==-1 && w !=this._ower.width){
				this._type |=0x8;
				this._ower.width=w;
				resize=true;
			}
			if (h!==-1 && h !=this._ower.height){
				this._type |=0x2000;
				this._ower.height=h;
				resize=true;
			}
			if (resize){
				ower._layoutLater();
				(this._type & 0x80000)&& ower.event("resize",this);
			}
		}

		/**@private */
		__proto._getAlign=function(){
			return this._aligns[0];
		}

		/**@private */
		__proto._getValign=function(){
			return this._aligns[1];
		}

		/**@private */
		__proto._getCssFloat=function(){
			return (this._type & 0x8000)!=0 ? 0x8000 :0;
		}

		__proto._createFont=function(){
			return (this._type & 0x1000)? this._font :(this._type |=0x1000,this._font=new Font(this._font));
		}

		/**@inheritDoc */
		__proto.render=function(sprite,context,x,y){
			var w=sprite.width;
			var h=sprite.height;
			x-=sprite.pivotX;
			y-=sprite.pivotY;
			this._bgground && this._bgground.color !=null && context.ctx.fillRect(x,y,w,h,this._bgground.color);
			this._border && this._border.color && context.drawRect(x,y,w,h,this._border.color.strColor,this._border.size);
		}

		/**@inheritDoc */
		__proto.getCSSStyle=function(){
			return this;
		}

		/**
		*设置 CSS 样式字符串。
		*@param text CSS样式字符串。
		*/
		__proto.cssText=function(text){
			this.attrs(CSSStyle.parseOneCSS(text,';'));
		}

		/**
		*根据传入的属性名、属性值列表，设置此对象的属性值。
		*@param attrs 属性名与属性值列表。
		*/
		__proto.attrs=function(attrs){
			if (attrs){
				for (var i=0,n=attrs.length;i < n;i++){
					var attr=attrs[i];
					this[attr[0]]=attr[1];
				}
			}
		}

		/**@inheritDoc */
		__proto.setTransform=function(value){
			(value==='none')? (this._tf=Style._TF_EMPTY):this.attrs(CSSStyle.parseOneCSS(value,','));
		}

		/**
		*定义 X 轴、Y 轴移动转换。
		*@param x X 轴平移量。
		*@param y Y 轴平移量。
		*/
		__proto.translate=function(x,y){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.translateX=x;
			this._tf.translateY=y;
		}

		/**
		*定义 缩放转换。
		*@param x X 轴缩放值。
		*@param y Y 轴缩放值。
		*/
		__proto.scale=function(x,y){
			this._tf===Style._TF_EMPTY && (this._tf=new TransformInfo());
			this._tf.scaleX=x;
			this._tf.scaleY=y;
		}

		/**@private */
		__proto._enableLayout=function(){
			return (this._type & 0x2)===0 && (this._type & 0x4)===0;
		}

		/**
		*是否显示为块级元素。
		*/
		__getset(0,__proto,'block',_super.prototype._$get_block,function(value){
			value ? (this._type |=0x1):(this._type &=(~0x1));
		});

		/**
		*垂直对齐方式。
		*/
		__getset(0,__proto,'valign',function(){
			return CSSStyle._valigndef[this._aligns[1]];
			},function(value){
			this._aligns===CSSStyle._ALIGNS && (this._aligns=[0,0,0]);
			this._aligns[1]=CSSStyle._valigndef[value];
		});

		/**
		*高度。
		*/
		__getset(0,__proto,'height',null,function(h){
			this._type |=0x2000;
			if ((typeof h=='string')){
				if (this._calculation("height",h))return;
				h=parseInt(h);
			}
			this.size(-1,h);
		});

		/**
		*宽度。
		*/
		__getset(0,__proto,'width',null,function(w){
			this._type |=0x8;
			if ((typeof w=='string')){
				var offset=w.indexOf('auto');
				if (offset >=0){
					this._type |=0x40000;
					w=w.substr(0,offset);
				}
				if (this._calculation("width",w))return;
				w=parseInt(w);
			}
			this.size(w,-1);
		});

		/**
		*字体粗细。
		*/
		__getset(0,__proto,'fontWeight',function(){
			return this._font.weight;
			},function(value){
			this._createFont().weight=value;
		});

		/**
		*表示左边距。
		*/
		__getset(0,__proto,'left',null,function(value){
			var ower=this._ower;
			if (((typeof value=='string'))){
				if (value==="center")
					value="50% -50% 0";
				else if (value==="right")
				value="100% -100% 0";
				if (this._calculation("left",value))return;
				value=parseInt(value);
			}
			ower.x=value;
		});

		__getset(0,__proto,'_translate',null,function(value){
			this.translate(value[0],value[1]);
		});

		/**@inheritDoc */
		__getset(0,__proto,'absolute',function(){
			return (this._type & 0x4)!==0;
		});

		/**
		*表示上边距。
		*/
		__getset(0,__proto,'top',null,function(value){
			var ower=this._ower;
			if (((typeof value=='string'))){
				if (value==="middle")
					value="50% -50% 0";
				else if (value==="bottom")
				value="100% -100% 0";
				if (this._calculation("top",value))return;
				value=parseInt(value);
			}
			ower.y=value;
		});

		/**
		*水平对齐方式。
		*/
		__getset(0,__proto,'align',function(){
			return CSSStyle._aligndef[this._aligns[0]];
			},function(value){
			this._aligns===CSSStyle._ALIGNS && (this._aligns=[0,0,0]);
			this._aligns[0]=CSSStyle._aligndef[value];
		});

		/**
		*表示是否加粗。
		*/
		__getset(0,__proto,'bold',function(){
			return this._font.bold;
			},function(value){
			this._createFont().bold=value;
		});

		/**
		*边距信息。
		*/
		__getset(0,__proto,'padding',function(){
			return this._padding;
			},function(value){
			this._padding=value;
		});

		/**
		*行间距。
		*/
		__getset(0,__proto,'leading',function(){
			return this._spacing[1];
			},function(d){
			((typeof d=='string'))&& (d=parseInt(d+""));
			this._spacing===CSSStyle._SPACING && (this._spacing=[0,0]);
			this._spacing[1]=d;
		});

		/**
		*是否是行元素。
		*/
		__getset(0,__proto,'lineElement',function(){
			return (this._type & 0x10000)!=0;
			},function(value){
			value ? (this._type |=0x10000):(this._type &=(~0x10000));
		});

		/**
		*浮动方向。
		*/
		__getset(0,__proto,'cssFloat',function(){
			return (this._type & 0x8000)!=0 ? "right" :"left";
			},function(value){
			this.lineElement=false;
			value==="right" ? (this._type |=0x8000):(this._type &=(~0x8000));
		});

		/**
		*添加到文本的修饰。
		*/
		__getset(0,__proto,'textDecoration',function(){
			return this._font.decoration;
			},function(value){
			this._createFont().decoration=value;
		});

		/**
		*设置如何处理元素内的空白。
		*/
		__getset(0,__proto,'whiteSpace',function(){
			return (this._type & 0x20000)? "nowrap" :"";
			},function(type){
			type==="nowrap" && (this._type |=0x20000);
			type==="none" && (this._type &=~0x20000);
		});

		__getset(0,__proto,'background',null,function(value){
			if (!value){
				this._bgground=null;
				return;
			}
			this._bgground || (this._bgground={});
			this._bgground.color=value;
			this._ower.conchModel && this._ower.conchModel.bgColor(value);
			this._type |=0x4000;
			this._ower._renderType |=0x100;
		});

		/**
		*表示是否换行。
		*/
		__getset(0,__proto,'wordWrap',function(){
			return (this._type & 0x20000)===0;
			},function(value){
			value ? (this._type &=~0x20000):(this._type |=0x20000);
		});

		/**
		*字体颜色。
		*/
		__getset(0,__proto,'color',function(){
			return this._font.color;
			},function(value){
			this._createFont().color=value;
		});

		/**
		*<p>指定文本字段是否是密码文本字段。</p>
		*如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。
		*/
		__getset(0,__proto,'password',function(){
			return this._font.password;
			},function(value){
			this._createFont().password=value;
		});

		/**
		*背景颜色。
		*/
		__getset(0,__proto,'backgroundColor',function(){
			return this._bgground ? this._bgground.color :null;
			},function(value){
			if (value==='none')this._bgground=null;
			else (this._bgground || (this._bgground={}),this._bgground.color=value);
			this._ower.conchModel && this._ower.conchModel.bgColor(value);
			this._ower._renderType |=0x100;
		});

		/**
		*字体信息。
		*/
		__getset(0,__proto,'font',function(){
			return this._font.toString();
			},function(value){
			this._createFont().set(value);
		});

		/**
		*文本的粗细。
		*/
		__getset(0,__proto,'weight',null,function(value){
			this._createFont().weight=value;
		});

		/**
		*间距。
		*/
		__getset(0,__proto,'letterSpacing',function(){
			return this._spacing[0];
			},function(d){
			((typeof d=='string'))&& (d=parseInt(d+""));
			this._spacing===CSSStyle._SPACING && (this._spacing=[0,0]);
			this._spacing[0]=d;
		});

		/**
		*字体大小。
		*/
		__getset(0,__proto,'fontSize',function(){
			return this._font.size;
			},function(value){
			this._createFont().size=value;
		});

		/**
		*表示是否为斜体。
		*/
		__getset(0,__proto,'italic',function(){
			return this._font.italic;
			},function(value){
			this._createFont().italic=value;
		});

		/**
		*字体系列。
		*/
		__getset(0,__proto,'fontFamily',function(){
			return this._font.family;
			},function(value){
			this._createFont().family=value;
		});

		/**
		*<p>描边宽度（以像素为单位）。</p>
		*默认值0，表示不描边。
		*@default 0
		*/
		__getset(0,__proto,'stroke',function(){
			return this._font.stroke[0];
			},function(value){
			if (this._createFont().stroke===Font._STROKE)this._font.stroke=[0,"#000000"];
			this._font.stroke[0]=value;
		});

		/**
		*<p>描边颜色，以字符串表示。</p>
		*@default "#000000";
		*/
		__getset(0,__proto,'strokeColor',function(){
			return this._font.stroke[1];
			},function(value){
			if (this._createFont().stroke===Font._STROKE)this._font.stroke=[0,"#000000"];
			this._font.stroke[1]=value;
		});

		/**
		*边框属性，比如border="5px solid red"
		*/
		__getset(0,__proto,'border',function(){
			return this._border ? this._border.value :"";
			},function(value){
			if (value=='none'){
				this._border=null;
				return;
			}
			this._border || (this._border={});
			this._border.value=value;
			var values=value.split(' ');
			this._border.color=Color$1.create(values[values.length-1]);
			if (values.length==1){
				this._border.size=1;
				this._border.type='solid';
				return;
			};
			var i=0;
			if (values[0].indexOf('px')> 0){
				this._border.size=parseInt(values[0]);
				i++;
			}else this._border.size=1;
			this._border.type=values[i];
			this._ower._renderType |=0x100;
		});

		/**
		*边框的颜色。
		*/
		__getset(0,__proto,'borderColor',function(){
			return (this._border && this._border.color)? this._border.color.strColor :null;
			},function(value){
			if (!value){
				this._border=null;
				return;
			}
			this._border || (this._border={size:1,type:'solid'});
			this._border.color=(value==null)? null :Color$1.create(value);
			this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor);
			this._ower._renderType |=0x100;
		});

		/**
		*元素的定位类型。
		*/
		__getset(0,__proto,'position',function(){
			return (this._type & 0x4)? "absolute" :"";
			},function(value){
			value=="absolute" ? (this._type |=0x4):(this._type &=~0x4);
		});

		/**
		*规定元素应该生成的框的类型。
		*/
		__getset(0,__proto,'display',null,function(value){
			switch (value){
				case '':
					this._type &=~0x2;
					this.visible=true;
					break ;
				case 'none':
					this._type |=0x2;
					this.visible=false;
					this._ower._layoutLater();
					break ;
				}
		});

		/**@inheritDoc */
		__getset(0,__proto,'paddingLeft',function(){
			return this.padding[3];
		});

		/**@inheritDoc */
		__getset(0,__proto,'paddingTop',function(){
			return this.padding[0];
		});

		__getset(0,__proto,'_scale',null,function(value){
			this._ower.scale(value[0],value[1]);
		});

		__getset(0,__proto,'_rotate',null,function(value){
			this._ower.rotation=value;
		});

		CSSStyle.parseOneCSS=function(text,clipWord){
			var out=[];
			var attrs=text.split(clipWord);
			var valueArray;
			for (var i=0,n=attrs.length;i < n;i++){
				var attr=attrs[i];
				var ofs=attr.indexOf(':');
				var name=attr.substr(0,ofs).replace(/^\s+|\s+$/g,'');
				if (name.length==0)
					continue ;
				var value=attr.substr(ofs+1).replace(/^\s+|\s+$/g,'');
				var one=[name,value];
				switch (name){
					case 'italic':
					case 'bold':
						one[1]=value=="true";
						break ;
					case 'line-height':
						one[0]='lineHeight';
						one[1]=parseInt(value);
						break ;
					case 'font-size':
						one[0]='fontSize';
						one[1]=parseInt(value);
						break ;
					case 'padding':
						valueArray=value.split(' ');
						valueArray.length > 1 || (valueArray[1]=valueArray[2]=valueArray[3]=valueArray[0]);
						one[1]=[parseInt(valueArray[0]),parseInt(valueArray[1]),parseInt(valueArray[2]),parseInt(valueArray[3])];
						break ;
					case 'rotate':
						one[0]="_rotate";
						one[1]=parseFloat(value);
						break ;
					case 'scale':
						valueArray=value.split(' ');
						one[0]="_scale";
						one[1]=[parseFloat(valueArray[0]),parseFloat(valueArray[1])];
						break ;
					case 'translate':
						valueArray=value.split(' ');
						one[0]="_translate";
						one[1]=[parseInt(valueArray[0]),parseInt(valueArray[1])];
						break ;
					default :
						(one[0]=CSSStyle._CSSTOVALUE[name])|| (one[0]=name);
					}
				out.push(one);
			}
			return out;
		}

		CSSStyle.parseCSS=function(text,uri){
			var one;
			while ((one=CSSStyle._parseCSSRegExp.exec(text))!=null){
				CSSStyle.styleSheets[one[1]]=CSSStyle.parseOneCSS(one[2],';');
			}
		}

		CSSStyle.EMPTY=new CSSStyle(null);
		CSSStyle._CSSTOVALUE={'letter-spacing':'letterSpacing','line-spacing':'lineSpacing','white-space':'whiteSpace','line-height':'lineHeight','scale-x':'scaleX','scale-y':'scaleY','translate-x':'translateX','translate-y':'translateY','font-family':'fontFamily','font-weight':'fontWeight','vertical-align':'valign','text-decoration':'textDecoration','background-color':'backgroundColor','border-color':'borderColor','float':'cssFloat'};
		CSSStyle._parseCSSRegExp=new RegExp("([\.\#]\\w+)\\s*{([\\s\\S]*?)}","g");
		CSSStyle._aligndef={'left':0,'center':1,'right':2,0:'left',1:'center',2:'right'};
		CSSStyle._valigndef={'top':0,'middle':1,'bottom':2,0:'top',1:'middle',2:'bottom'};
		CSSStyle.styleSheets={};
		CSSStyle.ALIGN_CENTER=1;
		CSSStyle.ALIGN_RIGHT=2;
		CSSStyle.VALIGN_MIDDLE=1;
		CSSStyle.VALIGN_BOTTOM=2;
		CSSStyle._CSS_BLOCK=0x1;
		CSSStyle._DISPLAY_NONE=0x2;
		CSSStyle._ABSOLUTE=0x4;
		CSSStyle._WIDTH_SET=0x8;
		CSSStyle._PADDING=[0,0,0,0];
		CSSStyle._RECT=[-1,-1,-1,-1];
		CSSStyle._SPACING=[0,0];
		CSSStyle._ALIGNS=[0,0,0];
		CSSStyle.ADDLAYOUTED=0x200;
		CSSStyle._NEWFONT=0x1000;
		CSSStyle._HEIGHT_SET=0x2000;
		CSSStyle._BACKGROUND_SET=0x4000;
		CSSStyle._FLOAT_RIGHT=0x8000;
		CSSStyle._LINE_ELEMENT=0x10000;
		CSSStyle._NOWARP=0x20000;
		CSSStyle._WIDTHAUTO=0x40000;
		CSSStyle._LISTERRESZIE=0x80000;
		return CSSStyle;
	})(Style)


	//class laya.filters.ColorFilter extends laya.filters.Filter
	var ColorFilter=(function(_super){
		function ColorFilter(mat){
			//this._mat=null;
			//this._alpha=null;
			ColorFilter.__super.call(this);
			if (!mat){
				mat=[0.3,0.59,0.11,0,0,0.3,0.59,0.11,0,0,0.3,0.59,0.11,0,0,0,0,0,1,0];
			}
			this._mat=new Float32Array(16);
			this._alpha=new Float32Array(4);
			var j=0;
			var z=0;
			for (var i=0;i < 20;i++){
				if (i % 5 !=4){
					this._mat[j++]=mat[i];
					}else {
					this._alpha[z++]=mat[i];
				}
			}
			this._action=RunDriver.createFilterAction(0x20);
			this._action.data=this;
		}

		__class(ColorFilter,'laya.filters.ColorFilter',_super);
		var __proto=ColorFilter.prototype;
		Laya.imps(__proto,{"laya.filters.IFilter":true})
		/**
		*@private 通知微端
		*/
		__proto.callNative=function(sp){
			var t=sp._$P.cf=this;
			sp.conchModel && sp.conchModel.setFilterMatrix && sp.conchModel.setFilterMatrix(this._mat,this._alpha);
		}

		/**@private */
		__getset(0,__proto,'type',function(){
			return 0x20;
		});

		/**@private */
		__getset(0,__proto,'action',function(){
			return this._action;
		});

		return ColorFilter;
	})(Filter)


	//class laya.filters.webgl.ColorFilterActionGL extends laya.filters.webgl.FilterActionGL
	var ColorFilterActionGL=(function(_super){
		function ColorFilterActionGL(){
			this.data=null;
			ColorFilterActionGL.__super.call(this);
		}

		__class(ColorFilterActionGL,'laya.filters.webgl.ColorFilterActionGL',_super);
		var __proto=ColorFilterActionGL.prototype;
		Laya.imps(__proto,{"laya.filters.IFilterActionGL":true})
		__proto.setValue=function(shader){
			shader.colorMat=this.data._mat;
			shader.colorAlpha=this.data._alpha;
		}

		__proto.apply3d=function(scope,sprite,context,x,y){
			var b=scope.getValue("bounds");
			var shaderValue=Value2D.create(0x01,0);
			shaderValue.setFilters([this.data]);
			var tMatrix=Matrix.TEMP;
			tMatrix.identity();
			context.ctx.drawTarget(scope,0,0,b.width,b.height,tMatrix,"src",shaderValue);
		}

		return ColorFilterActionGL;
	})(FilterActionGL)


	//class laya.ui.UIEvent extends laya.events.Event
	var UIEvent=(function(_super){
		function UIEvent(){UIEvent.__super.call(this);;
		};

		__class(UIEvent,'laya.ui.UIEvent',_super);
		UIEvent.SHOW_TIP="showtip";
		UIEvent.HIDE_TIP="hidetip";
		return UIEvent;
	})(Event)


	//class laya.webgl.shader.d2.value.Value2D extends laya.webgl.shader.ShaderValue
	var Value2D=(function(_super){
		function Value2D(mainID,subID){
			this.size=[0,0];
			this.alpha=1.0;
			//this.mmat=null;
			this.ALPHA=1.0;
			//this.shader=null;
			//this.mainID=0;
			this.subID=0;
			//this.filters=null;
			//this.textureHost=null;
			//this.texture=null;
			//this.fillStyle=null;
			//this.color=null;
			//this.strokeStyle=null;
			//this.colorAdd=null;
			//this.glTexture=null;
			//this.u_mmat2=null;
			//this._inClassCache=null;
			this._cacheID=0;
			Value2D.__super.call(this);
			this.defines=new ShaderDefines2D();
			this.position=Value2D._POSITION;
			this.mainID=mainID;
			this.subID=subID;
			this.textureHost=null;
			this.texture=null;
			this.fillStyle=null;
			this.color=null;
			this.strokeStyle=null;
			this.colorAdd=null;
			this.glTexture=null;
			this.u_mmat2=null;
			this._cacheID=mainID|subID;
			this._inClassCache=Value2D._cache[this._cacheID];
			if (mainID>0 && !this._inClassCache){
				this._inClassCache=Value2D._cache[this._cacheID]=[];
				this._inClassCache._length=0;
			}
			this.clear();
		}

		__class(Value2D,'laya.webgl.shader.d2.value.Value2D',_super);
		var __proto=Value2D.prototype;
		__proto.setValue=function(value){}
		//throw new Error("todo in subclass");
		__proto.refresh=function(){
			var size=this.size;
			size[0]=RenderState2D.width;
			size[1]=RenderState2D.height;
			this.alpha=this.ALPHA *RenderState2D.worldAlpha;
			this.mmat=RenderState2D.worldMatrix4;
			return this;
		}

		__proto._ShaderWithCompile=function(){
			return Shader.withCompile2D(0,this.mainID,this.defines.toNameDic(),this.mainID | this.defines._value,Shader2X.create);
		}

		__proto._withWorldShaderDefines=function(){
			var defs=RenderState2D.worldShaderDefines;
			var sd=Shader.sharders [this.mainID | this.defines._value | defs.getValue()];
			if (!sd){
				var def={};
				var dic;
				var name;
				dic=this.defines.toNameDic();for (name in dic)def[name]="";
				dic=defs.toNameDic();for (name in dic)def[name]="";
				sd=Shader.withCompile2D(0,this.mainID,def,this.mainID | this.defines._value| defs.getValue(),Shader2X.create);
			};
			var worldFilters=RenderState2D.worldFilters;
			if (!worldFilters)return sd;
			var n=worldFilters.length,f;
			for (var i=0;i < n;i++){
				((f=worldFilters[i]))&& f.action.setValue(this);
			}
			return sd;
		}

		__proto.upload=function(){
			var renderstate2d=RenderState2D;
			this.alpha=this.ALPHA *renderstate2d.worldAlpha;
			if (RenderState2D.worldMatrix4!==RenderState2D.TEMPMAT4_ARRAY)this.defines.add(0x80);
			(WebGL.shaderHighPrecision)&& (this.defines.add(0x400));
			var sd=renderstate2d.worldShaderDefines?this._withWorldShaderDefines():(Shader.sharders [this.mainID | this.defines._value] || this._ShaderWithCompile());
			var params;
			this.size[0]=renderstate2d.width,this.size[1]=renderstate2d.height;
			this.mmat=renderstate2d.worldMatrix4;
			if (BaseShader.activeShader!==sd){
				if (sd._shaderValueWidth!==renderstate2d.width || sd._shaderValueHeight!==renderstate2d.height){
					sd._shaderValueWidth=renderstate2d.width;
					sd._shaderValueHeight=renderstate2d.height;
				}
				else{
					params=sd._params2dQuick2 || sd._make2dQuick2();
				}
				sd.upload(this,params);
			}
			else{
				if (sd._shaderValueWidth!==renderstate2d.width || sd._shaderValueHeight!==renderstate2d.height){
					sd._shaderValueWidth=renderstate2d.width;
					sd._shaderValueHeight=renderstate2d.height;
				}
				else{
					params=(sd._params2dQuick1)|| sd._make2dQuick1();
				}
				sd.upload(this,params);
			}
		}

		__proto.setFilters=function(value){
			this.filters=value;
			if (!value)
				return;
			var n=value.length,f;
			for (var i=0;i < n;i++){
				f=value[i];
				if (f){
					this.defines.add(f.type);
					f.action.setValue(this);
				}
			}
		}

		__proto.clear=function(){
			this.defines.setValue(this.subID);
		}

		__proto.release=function(){
			this._inClassCache[this._inClassCache._length++]=this;
			this.fillStyle=null;
			this.strokeStyle=null;
			this.clear();
		}

		Value2D._initone=function(type,classT){
			Value2D._typeClass[type]=classT;
			Value2D._cache[type]=[];
			Value2D._cache[type]._length=0;
		}

		Value2D.__init__=function(){
			Value2D._POSITION=[2,0x1406,false,4 *CONST3D2D.BYTES_PE,0];
			Value2D._TEXCOORD=[2,0x1406,false,4 *CONST3D2D.BYTES_PE,2 *CONST3D2D.BYTES_PE];
			Value2D._initone(0x02,Color2dSV);
			Value2D._initone(0x04,PrimitiveSV);
			Value2D._initone(0x100,FillTextureSV);
			Value2D._initone(0x200,SkinSV);
			Value2D._initone(0x01,TextureSV);
			Value2D._initone(0x01 | 0x40,TextSV);
			Value2D._initone(0x01 | 0x08,TextureSV);
		}

		Value2D.create=function(mainType,subType){
			var types=Value2D._cache[mainType|subType];
			if (types._length)
				return types[--types._length];
			else
			return new Value2D._typeClass[mainType|subType](subType);
		}

		Value2D._POSITION=null
		Value2D._TEXCOORD=null
		Value2D._cache=[];
		Value2D._typeClass=[];
		Value2D.TEMPMAT4_ARRAY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
		return Value2D;
	})(ShaderValue)


	//class laya.webgl.canvas.WebGLContext2D extends laya.resource.Context
	var WebGLContext2D=(function(_super){
		var ContextParams;
		function WebGLContext2D(c){
			this._x=0;
			this._y=0;
			this._id=++WebGLContext2D._COUNT;
			//this._other=null;
			this._path=null;
			//this._primitiveValue2D=null;
			this._drawCount=1;
			this._maxNumEle=0;
			this._clear=false;
			this._isMain=false;
			this._atlasResourceChange=0;
			this._submits=null;
			this._curSubmit=null;
			this._ib=null;
			this._vb=null;
			//this._curMat=null;
			this._nBlendType=0;
			//this._save=null;
			//this._targets=null;
			//this._renderKey=NaN;
			this._saveMark=null;
			this._shader2D=null;
			//this._triangleMesh=null;
			this.meshlist=[];
			//this.sprite=null;
			this.mId=-1;
			this.mHaveKey=false;
			this.mHaveLineKey=false;
			this.mX=0;
			this.mY=0;
			WebGLContext2D.__super.call(this);
			this._width=99999999;
			this._height=99999999;
			this._clipRect=WebGLContext2D.MAXCLIPRECT;
			this.mOutPoint
			this._canvas=c;
			WebGLContext2D._contextcount++;
			if (Render.isFlash){
				this._ib=IndexBuffer2D.create(0x88E4);
				GlUtils.fillIBQuadrangle(this._ib,16);
			}else
			this._ib=IndexBuffer2D.QuadrangleIB;
			this.clear();
		}

		__class(WebGLContext2D,'laya.webgl.canvas.WebGLContext2D',_super);
		var __proto=WebGLContext2D.prototype;
		__proto.setIsMainContext=function(){
			this._isMain=true;
		}

		__proto.clearBG=function(r,g,b,a){
			var gl=WebGL.mainContext;
			gl.clearColor(r,g,b,a);
			gl.clear(0x00004000);
		}

		__proto._getSubmits=function(){
			return this._submits;
		}

		__proto._releaseMem=function(){
			if (!this._submits)
				return;
			this._curMat.destroy();
			this._curMat=null;
			this._shader2D.destroy();
			this._shader2D=null;
			for (var i=0,n=this._submits._length;i < n;i++)
			this._submits[i].releaseRender();
			this._submits.length=0;
			this._submits._length=0;
			this._submits=null;
			this._curSubmit=null;
			this._path && this._path.recover();
			this._path=null;
			this._other && (this._other.font=null);
			this._save=null;
			if (this._vb){
				this._vb.releaseResource();
				this._vb.destroy();
				this._vb.destory();
				this._vb=null;
			}
		}

		__proto.destroy=function(){
			--WebGLContext2D._contextcount;
			this.sprite=null;
			this._releaseMem();
			this._targets && this._targets.destroy();
			this._targets=null;
			this._canvas=null;
			this._ib && (this._ib !=IndexBuffer2D.QuadrangleIB)&& this._ib.releaseResource();
		}

		__proto.clear=function(){
			if (!this._submits){
				this._other=ContextParams.DEFAULT;
				this._curMat=Matrix.create();
				this._vb=VertexBuffer2D.create(-1);
				this._submits=[];
				this._save=[SaveMark.Create(this)];
				this._save.length=10;
				this._shader2D=new Shader2D();
				this._triangleMesh=MeshTexture.getAMesh();
			}
			this._vb.clear();
			this._targets && (this._targets.repaint=true);
			this._other=ContextParams.DEFAULT;
			this._clear=true;
			this._repaint=false;
			this._drawCount=1;
			this._renderKey=0;
			this._other.lineWidth=this._shader2D.ALPHA=1.0;
			this._nBlendType=0;
			this._clipRect=WebGLContext2D.MAXCLIPRECT;
			this._curSubmit=Submit.RENDERBASE;
			this._shader2D.glTexture=null;
			this._shader2D.fillStyle=this._shader2D.strokeStyle=DrawStyle.DEFAULT;
			for (var i=0,n=this._submits._length;i < n;i++)
			this._submits[i].releaseRender();
			this._submits._length=0;
			this._curMat.identity();
			this._other.clear();
			this._saveMark=this._save[0];
			this._save._length=1;
		}

		__proto.size=function(w,h){
			if (this._width !=w || this._height !=h){
				if (w==0 || h==0){
					if (this._vb._byteLength !=0){
						this._width=w;
						this._height=h;
						this._vb.clear();
						this._vb.upload();
					}
					for (var i=0,n=this._submits._length;i < n;i++)
					this._submits[i].releaseRender();
					this._submits.length=0;
					this._submits._length=0;
					this._curSubmit=null;
					this._path && this._path.recover();
					this._path=null;
					this.sprite=null;
					this._targets && (this._targets.destroy());
					this._targets=null;
					}else {
					this._width=w;
					this._height=h;
					this._targets && (this._targets.size(w,h));
					this._canvas.memorySize-=this._canvas.memorySize;
				}
			}
			if (w===0 && h===0)this._releaseMem();
		}

		__proto._getTransformMatrix=function(){
			return this._curMat;
		}

		__proto.translate=function(x,y){
			if (x!==0 || y!==0){
				SaveTranslate.save(this);
				if (this._curMat.bTransform){
					SaveTransform.save(this);
					this._curMat.transformPointN(Point.TEMP.setTo(x,y));
					x=Point.TEMP.x;
					y=Point.TEMP.y;
				}
				this._x+=x;
				this._y+=y;
			}
		}

		__proto.save=function(){
			this._save[this._save._length++]=SaveMark.Create(this);
		}

		__proto.restore=function(){
			var sz=this._save._length;
			if (sz < 1)
				return;
			for (var i=sz-1;i >=0;i--){
				var o=this._save[i];
				o.restore(this);
				if (o.isSaveMark()){
					this._save._length=i;
					return;
				}
			}
		}

		__proto._fillText=function(txt,words,x,y,fontStr,color,strokeColor,lineWidth,textAlign,underLine){
			(underLine===void 0)&& (underLine=0);
			var shader=this._shader2D;
			var curShader=this._curSubmit.shaderValue;
			var font=fontStr ? FontInContext.create(fontStr):this._other.font;
			if (AtlasResourceManager.enabled){
				if (shader.ALPHA!==curShader.ALPHA)
					shader.glTexture=null;
				DrawText.drawText(this,txt,words,this._curMat,font,textAlign || this._other.textAlign,color,strokeColor,lineWidth,x,y,underLine);
				}else {
				var preDef=this._shader2D.defines.getValue();
				var colorAdd=color ? Color$1.create(color)._color :shader.colorAdd;
				if (shader.ALPHA!==curShader.ALPHA || colorAdd!==shader.colorAdd || curShader.colorAdd!==shader.colorAdd){
					shader.glTexture=null;
					shader.colorAdd=colorAdd;
				}
				DrawText.drawText(this,txt,words,this._curMat,font,textAlign || this._other.textAlign,color,strokeColor,lineWidth,x,y,underLine);
			}
		}

		//TODO:实现下划线
		__proto.fillWords=function(words,x,y,fontStr,color,underLine){
			this._fillText(null,words,x,y,fontStr,color,null,-1,null,underLine);
		}

		__proto.fillBorderWords=function(words,x,y,font,color,borderColor,lineWidth){
			this._fillBorderText(null,words,x,y,font,color,borderColor,lineWidth,null);
		}

		__proto.fillText=function(txt,x,y,fontStr,color,textAlign){
			this._fillText(txt,null,x,y,fontStr,color,null,-1,textAlign);
		}

		__proto.strokeText=function(txt,x,y,fontStr,color,lineWidth,textAlign){
			this._fillText(txt,null,x,y,fontStr,null,color,lineWidth || 1,textAlign);
		}

		__proto.fillBorderText=function(txt,x,y,fontStr,fillColor,borderColor,lineWidth,textAlign){
			this._fillBorderText(txt,null,x,y,fontStr,fillColor,borderColor,lineWidth,textAlign);
		}

		__proto._fillBorderText=function(txt,words,x,y,fontStr,fillColor,borderColor,lineWidth,textAlign){
			if (!AtlasResourceManager.enabled){
				this._fillText(txt,words,x,y,fontStr,null,borderColor,lineWidth || 1,textAlign);
				this._fillText(txt,words,x,y,fontStr,fillColor,null,-1,textAlign);
				return;
			};
			var shader=this._shader2D;
			var curShader=this._curSubmit.shaderValue;
			if (shader.ALPHA!==curShader.ALPHA)
				shader.glTexture=null;
			var font=fontStr ? (WebGLContext2D._fontTemp.setFont(fontStr),WebGLContext2D._fontTemp):this._other.font;
			DrawText.drawText(this,txt,words,this._curMat,font,textAlign || this._other.textAlign,fillColor,borderColor,lineWidth || 1,x,y,0);
		}

		__proto.fillRect=function(x,y,width,height,fillStyle){
			var vb=this._vb;
			if (GlUtils.fillRectImgVb(vb,this._clipRect,x,y,width,height,Texture.DEF_UV,this._curMat,this._x,this._y,0,0)){
				this._renderKey=0;
				var pre=this._shader2D.fillStyle;
				fillStyle && (this._shader2D.fillStyle=DrawStyle.create(fillStyle));
				var shader=this._shader2D;
				var curShader=this._curSubmit.shaderValue;
				if (shader.fillStyle!==curShader.fillStyle || shader.ALPHA!==curShader.ALPHA){
					shader.glTexture=null;
					var submit=this._curSubmit=Submit.createSubmit(this,this._ib,vb,((vb._byteLength-16 *4)/ 32)*3,Value2D.create(0x02,0));
					submit.shaderValue.color=shader.fillStyle._color._color;
					submit.shaderValue.ALPHA=shader.ALPHA;
					this._submits[this._submits._length++]=submit;
				}
				this._curSubmit._numEle+=6;
				this._shader2D.fillStyle=pre;
			}
		}

		__proto.fillTexture=function(texture,x,y,width,height,type,offset,other){
			if (!(texture.loaded && texture.bitmap && texture.source)){
				if (this.sprite){
					Laya.timer.callLater(this,this._repaintSprite);
				}
				return;
			};
			var vb=this._vb;
			var w=texture.bitmap.width,h=texture.bitmap.height,uv=texture.uv;
			var ox=offset.x % texture.width,oy=offset.y % texture.height;
			if (w !=other.w || h !=other.h){
				if (!other.w && !other.h){
					other.oy=other.ox=0;
					switch (type){
						case "repeat":
							other.width=width;
							other.height=height;
							break ;
						case "repeat-x":
							other.width=width;
							if (oy < 0){
								if (texture.height+oy > height){
									other.height=height;
									}else {
									other.height=texture.height+oy;
								}
								}else {
								other.oy=oy;
								if (texture.height+oy > height){
									other.height=height-oy;
									}else {
									other.height=texture.height;
								}
							}
							break ;
						case "repeat-y":
							if (ox < 0){
								if (texture.width+ox > width){
									other.width=width;
									}else {
									other.width=texture.width+ox;
								}
								}else {
								other.ox=ox;
								if (texture.width+ox > width){
									other.width=width-ox;
									}else {
									other.width=texture.width;
								}
							}
							other.height=height;
							break ;
						default :
							other.width=width;
							other.height=height;
							break ;
						}
				}
				other.w=w;
				other.h=h;
				other.uv=[0,0,other.width / w,0,other.width / w,other.height / h,0,other.height / h];
			}
			x+=other.ox;
			y+=other.oy;
			ox-=other.ox;
			oy-=other.oy;
			if (GlUtils.fillRectImgVb(vb,this._clipRect,x,y,other.width,other.height,other.uv,this._curMat,this._x,this._y,0,0)){
				this._renderKey=0;
				var submit=SubmitTexture.create(this,this._ib,vb,((vb._byteLength-16 *4)/ 32)*3,Value2D.create(0x100,0));
				this._submits[this._submits._length++]=submit;
				var shaderValue=submit.shaderValue;
				shaderValue.textureHost=texture;
				var tTextureX=uv[0] *w;
				var tTextureY=uv[1] *h;
				var tTextureW=(uv[2]-uv[0])*w;
				var tTextureH=(uv[5]-uv[3])*h;
				var tx=-ox / w;
				var ty=-oy / h;
				shaderValue.u_TexRange[0]=tTextureX / w;
				shaderValue.u_TexRange[1]=tTextureW / w;
				shaderValue.u_TexRange[2]=tTextureY / h;
				shaderValue.u_TexRange[3]=tTextureH / h;
				shaderValue.u_offset[0]=tx;
				shaderValue.u_offset[1]=ty;
				if (AtlasResourceManager.enabled && !this._isMain)
					submit.addTexture(texture,(vb._byteLength >> 2)-16);
				this._curSubmit=submit;
				submit._renderType=10017;
				submit._numEle+=6;
			}
		}

		__proto.setShader=function(shader){
			SaveBase.save(this,0x100000,this._shader2D,true);
			this._shader2D.shader=shader;
		}

		__proto.setFilters=function(value){
			SaveBase.save(this,0x200000,this._shader2D,true);
			this._shader2D.filters=value;
			this._curSubmit=Submit.RENDERBASE;
			this._renderKey=0;
			this._drawCount++;
		}

		__proto.drawTexture=function(tex,x,y,width,height,tx,ty){
			this._drawTextureM(tex,x,y,width,height,tx,ty,null,1);
		}

		__proto.addTextureVb=function(invb,x,y){
			var finalVB=this._curSubmit._vb || this._vb;
			var vpos=(finalVB._byteLength >> 2);
			finalVB.byteLength=((vpos+16)<< 2);
			var vbdata=finalVB.getFloat32Array();
			for (var i=0,ci=0;i < 16;i+=4){
				vbdata[vpos++]=invb[i]+x;
				vbdata[vpos++]=invb[i+1]+y;
				vbdata[vpos++]=invb[i+2];
				vbdata[vpos++]=invb[i+3];
			}
			this._curSubmit._numEle+=6;
			this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle);
			finalVB._upload=true;
		}

		__proto.willDrawTexture=function(tex,alpha){
			if (!(tex.loaded && tex.bitmap && tex.source)){
				if (this.sprite){
					Laya.timer.callLater(this,this._repaintSprite);
				}
				return 0;
			};
			var webGLImg=tex.bitmap;
			var rid=webGLImg.id+this._shader2D.ALPHA *alpha+10016;
			if (rid==this._renderKey)return rid;
			var shader=this._shader2D;
			var preAlpha=shader.ALPHA;
			var curShader=this._curSubmit.shaderValue;
			shader.ALPHA *=alpha;
			this._renderKey=rid;
			this._drawCount++;
			shader.glTexture=webGLImg;
			var vb=this._vb;
			var submit=null;
			var vbSize=(vb._byteLength / 32)*3;
			submit=SubmitTexture.create(this,this._ib,vb,vbSize,Value2D.create(0x01,0));
			this._submits[this._submits._length++]=submit;
			submit.shaderValue.textureHost=tex;
			submit._renderType=10016;
			submit._preIsSameTextureShader=this._curSubmit._renderType===10016 && shader.ALPHA===curShader.ALPHA;
			this._curSubmit=submit;
			shader.ALPHA=preAlpha;
			return rid;
		}

		__proto.drawTextures=function(tex,pos,tx,ty){
			if (!(tex.loaded && tex.bitmap && tex.source)){
				this.sprite && Laya.timer.callLater(this,this._repaintSprite);
				return;
			};
			var pre=this._clipRect;
			this._clipRect=WebGLContext2D.MAXCLIPRECT;
			if (!this._drawTextureM(tex,pos[0],pos[1],tex.width,tex.height,tx,ty,null,1)){
				alert("drawTextures err");
				return;
			}
			this._clipRect=pre;
			Stat.drawCall++;
			if (pos.length < 4)
				return;
			var finalVB=this._curSubmit._vb || this._vb;
			var sx=this._curMat.a,sy=this._curMat.d;
			for (var i=2,sz=pos.length;i < sz;i+=2){
				GlUtils.copyPreImgVb(finalVB,(pos[i]-pos[i-2])*sx,(pos[i+1]-pos[i-1])*sy);
				this._curSubmit._numEle+=6;
			}
			this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle);
		}

		__proto._drawTextureM=function(tex,x,y,width,height,tx,ty,m,alpha){
			if (!(tex.loaded && tex.source)){
				if (this.sprite){
					Laya.timer.callLater(this,this._repaintSprite);
				}
				return false;
			};
			var finalVB=this._curSubmit._vb || this._vb;
			var webGLImg=tex.bitmap;
			x+=tx;
			y+=ty;
			this._drawCount++;
			var rid=webGLImg.id+this._shader2D.ALPHA *alpha+10016;
			if (rid !=this._renderKey){
				this._renderKey=rid;
				var curShader=this._curSubmit.shaderValue;
				var shader=this._shader2D;
				var alphaBack=shader.ALPHA;
				shader.ALPHA *=alpha;
				shader.glTexture=webGLImg;
				var vb=this._vb;
				var submit=null;
				var vbSize=(vb._byteLength / 32)*3;
				submit=SubmitTexture.create(this,this._ib,vb,vbSize,Value2D.create(0x01,0));
				this._submits[this._submits._length++]=submit;
				submit.shaderValue.textureHost=tex;
				submit._renderType=10016;
				submit._preIsSameTextureShader=this._curSubmit._renderType===10016 && shader.ALPHA===curShader.ALPHA;
				this._curSubmit=submit;
				finalVB=this._curSubmit._vb || this._vb;
				shader.ALPHA=alphaBack;
			}
			if (GlUtils.fillRectImgVb(finalVB,this._clipRect,x,y,width || tex.width,height || tex.height,tex.uv,m || this._curMat,this._x,this._y,0,0)){
				if (AtlasResourceManager.enabled && !this._isMain)
					(this._curSubmit).addTexture(tex,(finalVB._byteLength >> 2)-16);
				this._curSubmit._numEle+=6;
				this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle);
				return true;
			}
			return false;
		}

		__proto._repaintSprite=function(){
			if(this.sprite)
				this.sprite.repaint();
		}

		//}
		__proto._drawText=function(tex,x,y,width,height,m,tx,ty,dx,dy){
			var webGLImg=tex.bitmap;
			this._drawCount++;
			var rid=webGLImg.id+this._shader2D.ALPHA+10016;
			if (rid !=this._renderKey){
				this._renderKey=rid;
				var curShader=this._curSubmit.shaderValue;
				var shader=this._shader2D;
				shader.glTexture=webGLImg;
				var vb=this._vb;
				var submit=null;
				var submitID=NaN;
				var vbSize=(vb._byteLength / 32)*3;
				if (AtlasResourceManager.enabled){
					submit=SubmitTexture.create(this,this._ib,vb,vbSize,Value2D.create(0x01,0));
					}else {
					submit=SubmitTexture.create(this,this._ib,vb,vbSize,TextSV.create());
				}
				submit._preIsSameTextureShader=this._curSubmit._renderType===10016 && shader.ALPHA===curShader.ALPHA;
				this._submits[this._submits._length++]=submit;
				submit.shaderValue.textureHost=tex;
				submit._renderType=10016;
				this._curSubmit=submit;
			}
			tex.active();
			var finalVB=this._curSubmit._vb || this._vb;
			if (GlUtils.fillRectImgVb(finalVB,this._clipRect,x+tx,y+ty,width || tex.width,height || tex.height,tex.uv,m || this._curMat,this._x,this._y,dx,dy,true)){
				if (AtlasResourceManager.enabled && !this._isMain){
					(this._curSubmit).addTexture(tex,(finalVB._byteLength >> 2)-16);
				}
				this._curSubmit._numEle+=6;
				this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle);
			}
		}

		__proto.drawTextureWithTransform=function(tex,x,y,width,height,transform,tx,ty,alpha){
			if (!transform){
				this._drawTextureM(tex,x,y,width,height,tx,ty,null,alpha);
				return;
			};
			var curMat=this._curMat;
			var prex=this._x;
			var prey=this._y;
			(tx!==0 || ty!==0)&& (this._x=tx *curMat.a+ty *curMat.c,this._y=ty *curMat.d+tx *curMat.b);
			if (transform && curMat.bTransform){
				Matrix.mul(transform,curMat,WebGLContext2D._tmpMatrix);
				transform=WebGLContext2D._tmpMatrix;
				transform._checkTransform();
				}else {
				this._x+=curMat.tx;
				this._y+=curMat.ty;
			}
			this._drawTextureM(tex,x,y,width,height,0,0,transform,alpha);
			this._x=prex;
			this._y=prey;
		}

		__proto.fillQuadrangle=function(tex,x,y,point4,m){
			var submit=this._curSubmit;
			var vb=this._vb;
			var shader=this._shader2D;
			var curShader=submit.shaderValue;
			this._renderKey=0;
			if (tex.bitmap){
				var t_tex=tex.bitmap;
				if (shader.glTexture !=t_tex || shader.ALPHA!==curShader.ALPHA){
					shader.glTexture=t_tex;
					submit=this._curSubmit=Submit.createSubmit(this,this._ib,vb,((vb._byteLength)/ 32)*3,Value2D.create(0x01,0));
					submit.shaderValue.glTexture=t_tex;
					this._submits[this._submits._length++]=submit;
				}
				GlUtils.fillQuadrangleImgVb(vb,x,y,point4,tex.uv,m || this._curMat,this._x,this._y);
				}else {
				if (!submit.shaderValue.fillStyle || !submit.shaderValue.fillStyle.equal(tex)|| shader.ALPHA!==curShader.ALPHA){
					shader.glTexture=null;
					submit=this._curSubmit=Submit.createSubmit(this,this._ib,vb,((vb._byteLength)/ 32)*3,Value2D.create(0x02,0));
					submit.shaderValue.defines.add(0x02);
					submit.shaderValue.fillStyle=DrawStyle.create(tex);
					this._submits[this._submits._length++]=submit;
				}
				GlUtils.fillQuadrangleImgVb(vb,x,y,point4,Texture.DEF_UV,m || this._curMat,this._x,this._y);
			}
			submit._numEle+=6;
		}

		__proto.drawTexture2=function(x,y,pivotX,pivotY,transform,alpha,blendMode,args){
			if (alpha==0)return;
			var curMat=this._curMat;
			this._x=x *curMat.a+y *curMat.c;
			this._y=y *curMat.d+x *curMat.b;
			if (transform){
				if (curMat.bTransform || transform.bTransform){
					Matrix.mul(transform,curMat,WebGLContext2D._tmpMatrix);
					transform=WebGLContext2D._tmpMatrix;
					}else {
					this._x+=transform.tx+curMat.tx;
					this._y+=transform.ty+curMat.ty;
					transform=Matrix.EMPTY;
				}
			}
			if (alpha===1 && !blendMode)
				this._drawTextureM(args[0],args[1]-pivotX,args[2]-pivotY,args[3],args[4],0,0,transform,1);
			else {
				var preAlpha=this._shader2D.ALPHA;
				var preblendType=this._nBlendType;
				this._shader2D.ALPHA=alpha;
				blendMode && (this._nBlendType=BlendMode.TOINT(blendMode));
				this._drawTextureM(args[0],args[1]-pivotX,args[2]-pivotY,args[3],args[4],0,0,transform,1);
				this._shader2D.ALPHA=preAlpha;
				this._nBlendType=preblendType;
			}
			this._x=this._y=0;
		}

		__proto.drawCanvas=function(canvas,x,y,width,height){
			var src=canvas.context;
			this._renderKey=0;
			if (src._targets){
				this._submits[this._submits._length++]=SubmitCanvas.create(src,0,null);
				this._curSubmit=Submit.RENDERBASE;
				src._targets.drawTo(this,x,y,width,height);
				}else {
				var submit=this._submits[this._submits._length++]=SubmitCanvas.create(src,this._shader2D.ALPHA,this._shader2D.filters);
				var sx=width / canvas.width;
				var sy=height / canvas.height;
				var mat=submit._matrix;
				this._curMat.copyTo(mat);
				sx !=1 && sy !=1 && mat.scale(sx,sy);
				var tx=mat.tx,ty=mat.ty;
				mat.tx=mat.ty=0;
				mat.transformPoint(Point.TEMP.setTo(x,y));
				mat.translate(Point.TEMP.x+tx,Point.TEMP.y+ty);
				this._curSubmit=Submit.RENDERBASE;
			}
			if (Config.showCanvasMark){
				this.save();
				this.lineWidth=4;
				this.strokeStyle=src._targets ? "yellow" :"green";
				this.strokeRect(x-1,y-1,width+2,height+2,1);
				this.strokeRect(x,y,width,height,1);
				this.restore();
			}
		}

		__proto.drawTarget=function(scope,x,y,width,height,m,proName,shaderValue,uv,blend){
			(blend===void 0)&& (blend=-1);
			var vb=this._vb;
			if (GlUtils.fillRectImgVb(vb,this._clipRect,x,y,width,height,uv || Texture.DEF_UV,m || this._curMat,this._x,this._y,0,0)){
				this._renderKey=0;
				var shader=this._shader2D;
				shader.glTexture=null;
				var curShader=this._curSubmit.shaderValue;
				var submit=this._curSubmit=SubmitTarget.create(this,this._ib,vb,((vb._byteLength-16 *4)/ 32)*3,shaderValue,proName);
				if (blend==-1){
					submit.blendType=this._nBlendType;
					}else {
					submit.blendType=blend;
				}
				submit.scope=scope;
				this._submits[this._submits._length++]=submit;
				this._curSubmit._numEle+=6;
			}
		}

		/**
		*把颜色跟当前设置的alpha混合
		*@return
		*/
		__proto.mixRGBandAlpha=function(color){
			return this._mixRGBandAlpha(color,this._shader2D.ALPHA);
		}

		__proto._mixRGBandAlpha=function(color,alpha){
			var a=((color & 0xff000000)>>> 24);
			if (a !=0){
				a*=alpha;
				}else {
				a=alpha*255;
			}
			return (color & 0x00ffffff)| (a << 24);
		}

		__proto.drawTriangles=function(tex,x,y,vertices,uvs,indices,matrix,alpha,color,blendMode){
			if (!(tex.loaded && tex.source)){
				if (this.sprite){
					Laya.timer.callLater(this,this._repaintSprite);
				}
				return false;
			}
			this._drawCount++;
			var webGLImg=tex.bitmap;
			var rgba=this._mixRGBandAlpha(0xffffffff,alpha);
			var vertNum=vertices.length / 2;
			var eleNum=indices.length;
			this._renderKey=-1;
			var submit=this._curSubmit=SubmitTexture.create(this,this._triangleMesh.getIBR(),this._triangleMesh.getVBR(),this._triangleMesh.indexNum,Value2D.create(0x01,0));
			submit.shaderValue.textureHost=tex;
			submit._renderType=10016;
			this._submits[this._submits._length++]=submit;
			if(matrix){
				WebGLContext2D._tmpMatrix.a=matrix.a;WebGLContext2D._tmpMatrix.b=matrix.b;WebGLContext2D._tmpMatrix.c=matrix.c;WebGLContext2D._tmpMatrix.d=matrix.d;WebGLContext2D._tmpMatrix.tx=matrix.tx+x;WebGLContext2D._tmpMatrix.ty=matrix.ty+y;
				Matrix.mul(WebGLContext2D._tmpMatrix,this._curMat,WebGLContext2D._tmpMatrix);
				}else {
				WebGLContext2D._tmpMatrix.a=this._curMat.a;WebGLContext2D._tmpMatrix.b=this._curMat.b;WebGLContext2D._tmpMatrix.c=this._curMat.c;WebGLContext2D._tmpMatrix.d=this._curMat.d;WebGLContext2D._tmpMatrix.tx=this._curMat.tx+x;WebGLContext2D._tmpMatrix.ty=this._curMat.ty+y;
			}
			this._triangleMesh.addData(vertices,uvs,indices,WebGLContext2D._tmpMatrix,rgba,this);
			this._curSubmit._numEle+=eleNum;
			this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle);
			return true;
		}

		__proto.transform=function(a,b,c,d,tx,ty){
			SaveTransform.save(this);
			Matrix.mul(Matrix.TEMP.setTo(a,b,c,d,tx,ty),this._curMat,this._curMat);
			this._curMat._checkTransform();
		}

		__proto.setTransformByMatrix=function(value){
			value.copyTo(this._curMat);
		}

		__proto.transformByMatrix=function(value){
			SaveTransform.save(this);
			Matrix.mul(value,this._curMat,this._curMat);
			this._curMat._checkTransform();
		}

		__proto.rotate=function(angle){
			SaveTransform.save(this);
			this._curMat.rotateEx(angle);
		}

		__proto.scale=function(scaleX,scaleY){
			SaveTransform.save(this);
			this._curMat.scaleEx(scaleX,scaleY);
		}

		__proto.clipRect=function(x,y,width,height){
			if (this._curMat.b !=0 || this._curMat.c !=0){
				this._renderKey=0;
				var submitStencil0=SubmitStencil.create(4);
				this.addRenderObject(submitStencil0);
				var vb=this._vb;
				var nPos=(vb._byteLength >> 2);
				if (GlUtils.fillRectImgVb(vb,null,x,y,width,height,Texture.DEF_UV,this._curMat,this._x,this._y,0,0)){
					var shader=this._shader2D;
					shader.glTexture=null;
					var submit=this._curSubmit=Submit.createSubmit(this,this._ib,vb,((vb._byteLength-16 *4)/ 32)*3,Value2D.create(0x02,0));
					submit.shaderValue.ALPHA=1.0;
					this._submits[this._submits._length++]=submit;
					this._curSubmit._numEle+=6;
					}else {
					alert("clipRect calc stencil rect error");
				};
				var submitStencil1=SubmitStencil.create(5);
				this.addRenderObject(submitStencil1);
				var vbdata=vb.getFloat32Array();
				var minx=Math.min(Math.min(Math.min(vbdata[nPos+0],vbdata[nPos+4]),vbdata[nPos+8]),vbdata[nPos+12]);
				var maxx=Math.max(Math.max(Math.max(vbdata[nPos+0],vbdata[nPos+4]),vbdata[nPos+8]),vbdata[nPos+12]);
				var miny=Math.min(Math.min(Math.min(vbdata[nPos+1],vbdata[nPos+5]),vbdata[nPos+9]),vbdata[nPos+13]);
				var maxy=Math.max(Math.max(Math.max(vbdata[nPos+1],vbdata[nPos+5]),vbdata[nPos+9]),vbdata[nPos+13]);
				SaveClipRectStencil.save(this,submitStencil1,x,y,width,height,minx,miny,maxx-minx,maxy-miny);
				this._curSubmit=Submit.RENDERBASE;
				}else {
				width *=this._curMat.a;
				height *=this._curMat.d;
				var p=Point.TEMP;
				this._curMat.transformPoint(p.setTo(x,y));
				if (width < 0){
					p.x=p.x+width;
					width=-width;
				}
				if (height < 0){
					p.y=p.y+height;
					height=-height;
				}
				this._renderKey=0;
				var submitSc=this._curSubmit=SubmitScissor.create(this);
				this._submits[this._submits._length++]=submitSc;
				submitSc.submitIndex=this._submits._length;
				submitSc.submitLength=9999999;
				SaveClipRect.save(this,submitSc);
				var clip=this._clipRect;
				var x1=clip.x,y1=clip.y;
				var r=p.x+width,b=p.y+height;
				x1 < p.x && (clip.x=p.x);
				y1 < p.y && (clip.y=p.y);
				clip.width=Math.min(r,x1+clip.width)-clip.x;
				clip.height=Math.min(b,y1+clip.height)-clip.y;
				this._shader2D.glTexture=null;
				submitSc.clipRect.copyFrom(clip);
				this._curSubmit=Submit.RENDERBASE;
			}
		}

		__proto.setIBVB=function(x,y,ib,vb,numElement,mat,shader,shaderValues,startIndex,offset,type){
			(startIndex===void 0)&& (startIndex=0);
			(offset===void 0)&& (offset=0);
			(type===void 0)&& (type=0);
			if (ib===null){
				if (!Render.isFlash){
					ib=this._ib;
					}else {
					var falshVB=vb;
					(falshVB._selfIB)|| (falshVB._selfIB=IndexBuffer2D.create(0x88E4));
					falshVB._selfIB.clear();
					ib=falshVB._selfIB;
				}
				GlUtils.expandIBQuadrangle(ib,(vb._byteLength / (4 *vb.vertexStride *4)));
			}
			if (!shaderValues || !shader)
				throw Error("setIBVB must input:shader shaderValues");
			var submit=SubmitOtherIBVB.create(this,vb,ib,numElement,shader,shaderValues,startIndex,offset,type);
			mat || (mat=Matrix.EMPTY);
			mat.translate(x,y);
			Matrix.mul(mat,this._curMat,submit._mat);
			mat.translate(-x,-y);
			this._submits[this._submits._length++]=submit;
			this._curSubmit=Submit.RENDERBASE;
			this._renderKey=0;
		}

		__proto.addRenderObject=function(o){
			this._submits[this._submits._length++]=o;
		}

		__proto.fillTrangles=function(tex,x,y,points,m){
			var submit=this._curSubmit;
			var vb=this._vb;
			var shader=this._shader2D;
			var curShader=submit.shaderValue;
			var length=points.length >> 4;
			var t_tex=tex.bitmap;
			this._renderKey=0;
			if (shader.glTexture !=t_tex || shader.ALPHA!==curShader.ALPHA){
				submit=this._curSubmit=Submit.createSubmit(this,this._ib,vb,((vb._byteLength)/ 32)*3,Value2D.create(0x01,0));
				submit.shaderValue.textureHost=tex;
				this._submits[this._submits._length++]=submit;
			}
			GlUtils.fillTranglesVB(vb,x,y,points,m || this._curMat,this._x,this._y);
			submit._numEle+=length *6;
		}

		__proto.submitElement=function(start,end){
			var renderList=this._submits;
			end < 0 && (end=renderList._length);
			while (start < end){
				start+=renderList[start].renderSubmit();
			}
		}

		__proto.finish=function(){
			WebGL.mainContext.finish();
		}

		__proto.flush=function(){
			var maxNum=Math.max(this._vb._byteLength / (4 *16),this._maxNumEle / 6)+8;
			if (maxNum > (this._ib.bufferLength / (6 *2))){
				GlUtils.expandIBQuadrangle(this._ib,maxNum);
			}
			if (!this._isMain && AtlasResourceManager.enabled && AtlasResourceManager._atlasRestore > this._atlasResourceChange){
				this._atlasResourceChange=AtlasResourceManager._atlasRestore;
				var renderList=this._submits;
				for (var i=0,s=renderList._length;i < s;i++){
					var submit=renderList [i];
					if (submit.getRenderType()===10016)
						(submit).checkTexture();
				}
			}
			this.submitElement(0,this._submits._length);
			this._path && this._path.reset();
			SkinMeshBuffer.instance && SkinMeshBuffer.getInstance().reset();
			var sz=0;
			for (i=0,sz=this.meshlist.length;i < sz;i++){
				var curm=this.meshlist[i];
				curm.canReuse?(curm.releaseMesh()):(curm.destroy());
			}
			this.meshlist.length=0;
			this._curSubmit=Submit.RENDERBASE;
			this._renderKey=0;
			this._triangleMesh=MeshTexture.getAMesh();
			this.meshlist.push(this._triangleMesh);
			return this._submits._length;
		}

		__proto.setPathId=function(id){
			this.mId=id;
			if (this.mId !=-1){
				this.mHaveKey=false;
				var tVGM=VectorGraphManager.getInstance();
				if (tVGM.shapeDic[this.mId]){
					this.mHaveKey=true;
				}
				this.mHaveLineKey=false;
				if (tVGM.shapeLineDic[this.mId]){
					this.mHaveLineKey=true;
				}
			}
		}

		__proto.movePath=function(x,y){
			var _x1=x,_y1=y;
			x=this._curMat.a *_x1+this._curMat.c *_y1+this._curMat.tx;
			y=this._curMat.b *_x1+this._curMat.d *_y1+this._curMat.ty;
			this.mX+=x;
			this.mY+=y;
		}

		__proto.beginPath=function(){
			var tPath=this._getPath();
			tPath.tempArray.length=0;
			tPath.closePath=false;
			this.mX=0;
			this.mY=0;
		}

		__proto.closePath=function(){
			this._path.closePath=true;
		}

		__proto.fill=function(isConvexPolygon){
			(isConvexPolygon===void 0)&& (isConvexPolygon=false);
			var tPath=this._getPath();
			this.drawPoly(0,0,tPath.tempArray,this.fillStyle._color.numColor,0,0,isConvexPolygon);
		}

		__proto.stroke=function(){
			var tPath=this._getPath();
			if (this.lineWidth > 0){
				if (this.mId==-1){
					tPath.drawLine(0,0,tPath.tempArray,this.lineWidth,this.strokeStyle._color.numColor);
					}else {
					if (this.mHaveLineKey){
						var tShapeLine=VectorGraphManager.getInstance().shapeLineDic[this.mId];
						tShapeLine.rebuild(tPath.tempArray);
						tPath.setGeomtry(tShapeLine);
						}else {
						VectorGraphManager.getInstance().addLine(this.mId,tPath.drawLine(0,0,tPath.tempArray,this.lineWidth,this.strokeStyle._color.numColor));
					}
				}
				tPath.update();
				var tPosArray=[this.mX,this.mY];
				var tempSubmit=Submit.createShape(this,tPath.ib,tPath.vb,tPath.count,tPath.offset,Value2D.create(0x04,0));
				tempSubmit.shaderValue.ALPHA=this._shader2D.ALPHA;
				(tempSubmit.shaderValue).u_pos=tPosArray;
				tempSubmit.shaderValue.u_mmat2=RenderState2D.TEMPMAT4_ARRAY;
				this._submits[this._submits._length++]=tempSubmit;
				this._renderKey=-1;
			}
		}

		__proto.line=function(fromX,fromY,toX,toY,lineWidth,mat){
			var submit=this._curSubmit;
			var vb=this._vb;
			if (GlUtils.fillLineVb(vb,this._clipRect,fromX,fromY,toX,toY,lineWidth,mat)){
				this._renderKey=0;
				var shader=this._shader2D;
				var curShader=submit.shaderValue;
				if (shader.strokeStyle!==curShader.strokeStyle || shader.ALPHA!==curShader.ALPHA){
					shader.glTexture=null;
					submit=this._curSubmit=Submit.createSubmit(this,this._ib,vb,((vb._byteLength-16 *4)/ 32)*3,Value2D.create(0x02,0));
					submit.shaderValue.strokeStyle=shader.strokeStyle;
					submit.shaderValue.mainID=0x02;
					submit.shaderValue.ALPHA=shader.ALPHA;
					this._submits[this._submits._length++]=submit;
				}
				submit._numEle+=6;
			}
		}

		__proto.moveTo=function(x,y,b){
			(b===void 0)&& (b=true);
			var tPath=this._getPath();
			if (b){
				var _x1=x,_y1=y;
				x=this._curMat.a *_x1+this._curMat.c *_y1;
				y=this._curMat.b *_x1+this._curMat.d *_y1;
			}
			tPath.addPoint(x,y);
		}

		__proto.lineTo=function(x,y,b){
			(b===void 0)&& (b=true);
			var tPath=this._getPath();
			if (b){
				var _x1=x,_y1=y;
				x=this._curMat.a *_x1+this._curMat.c *_y1;
				y=this._curMat.b *_x1+this._curMat.d *_y1;
			}
			tPath.addPoint(x,y);
		}

		__proto.drawCurves=function(x,y,args){
			this.setPathId(-1);
			this.beginPath();
			this.strokeStyle=args[3];
			this.lineWidth=args[4];
			var points=args[2];
			x+=args[0],y+=args[1];
			this.movePath(x,y);
			this.moveTo(points[0],points[1]);
			var i=2,n=points.length;
			while (i < n){
				this.quadraticCurveTo(points[i++],points[i++],points[i++],points[i++]);
			}
			this.stroke();
		}

		__proto.arcTo=function(x1,y1,x2,y2,r){
			if (this.mId !=-1){
				if (this.mHaveKey){
					return;
				}
			};
			var i=0;
			var x=0,y=0;
			var tPath=this._getPath();
			this._curMat.copyTo(WebGLContext2D._tmpMatrix);
			WebGLContext2D._tmpMatrix.tx=WebGLContext2D._tmpMatrix.ty=0;
			WebGLContext2D._tempPoint.setTo(tPath.getEndPointX(),tPath.getEndPointY());
			WebGLContext2D._tmpMatrix.invertTransformPoint(WebGLContext2D._tempPoint);
			var dx=WebGLContext2D._tempPoint.x-x1;
			var dy=WebGLContext2D._tempPoint.y-y1;
			var len1=Math.sqrt(dx*dx+dy*dy);
			if (len1 <=0.000001){
				return;
			};
			var ndx=dx / len1;
			var ndy=dy / len1;
			var dx2=x2-x1;
			var dy2=y2-y1;
			var len22=dx2*dx2+dy2*dy2;
			var len2=Math.sqrt(len22);
			if (len2 <=0.000001){
				return;
			};
			var ndx2=dx2 / len2;
			var ndy2=dy2 / len2;
			var odx=ndx+ndx2;
			var ody=ndy+ndy2;
			var olen=Math.sqrt(odx*odx+ody*ody);
			if (olen <=0.000001){
				return;
			};
			var nOdx=odx / olen;
			var nOdy=ody / olen;
			var alpha=Math.acos(nOdx*ndx+nOdy*ndy);
			var halfAng=Math.PI / 2-alpha;
			len1=r / Math.tan(halfAng);
			var ptx1=len1*ndx+x1;
			var pty1=len1*ndy+y1;
			var orilen=Math.sqrt(len1*len1+r*r);
			var orix=x1+nOdx*orilen;
			var oriy=y1+nOdy*orilen;
			var ptx2=len1*ndx2+x1;
			var pty2=len1*ndy2+y1;
			var dir=ndx *ndy2-ndy *ndx2;
			var fChgAng=0;
			var sinx=0.0;
			var cosx=0.0;
			if (dir >=0){
				fChgAng=halfAng *2;
				var fda=fChgAng / WebGLContext2D.SEGNUM;
				sinx=Math.sin(fda);
				cosx=Math.cos(fda);
			}
			else {
				fChgAng=-halfAng *2;
				fda=fChgAng / WebGLContext2D.SEGNUM;
				sinx=Math.sin(fda);
				cosx=Math.cos(fda);
			}
			x=this._curMat.a *ptx1+this._curMat.c *pty1;
			y=this._curMat.b *ptx1+this._curMat.d *pty1;
			if (x !=this._path.getEndPointX()|| y !=this._path.getEndPointY()){
				tPath.addPoint(x,y);
			};
			var cvx=ptx1-orix;
			var cvy=pty1-oriy;
			var tx=0.0;
			var ty=0.0;
			for (i=0;i < WebGLContext2D.SEGNUM;i++){
				var cx=cvx*cosx+cvy*sinx;
				var cy=-cvx*sinx+cvy*cosx;
				x=cx+orix;
				y=cy+oriy;
				x1=this._curMat.a *x+this._curMat.c *y;
				y1=this._curMat.b *x+this._curMat.d *y;
				x=x1;
				y=y1;
				if (x !=this._path.getEndPointX()|| y !=this._path.getEndPointY()){
					tPath.addPoint(x,y);
				}
				cvx=cx;
				cvy=cy;
			}
		}

		__proto.arc=function(cx,cy,r,startAngle,endAngle,counterclockwise,b){
			(counterclockwise===void 0)&& (counterclockwise=false);
			(b===void 0)&& (b=true);
			if (this.mId !=-1){
				var tShape=VectorGraphManager.getInstance().shapeDic[this.mId];
				if (tShape){
					if (this.mHaveKey && !tShape.needUpdate(this._curMat))
						return;
				}
				cx=0;
				cy=0;
			};
			var a=0,da=0,hda=0,kappa=0;
			var dx=0,dy=0,x=0,y=0,tanx=0,tany=0;
			var px=0,py=0,ptanx=0,ptany=0;
			var i=0,ndivs=0,nvals=0;
			da=endAngle-startAngle;
			if (!counterclockwise){
				if (Math.abs(da)>=Math.PI *2){
					da=Math.PI *2;
					}else {
					while (da < 0.0){
						da+=Math.PI *2;
					}
				}
				}else {
				if (Math.abs(da)>=Math.PI *2){
					da=-Math.PI *2;
					}else {
					while (da > 0.0){
						da-=Math.PI *2;
					}
				}
			}
			if (r < 101){
				ndivs=Math.max(10,da *r / 5);
				}else if (r < 201){
				ndivs=Math.max(10,da *r / 20);
				}else {
				ndivs=Math.max(10,da *r / 40);
			}
			hda=(da / ndivs)/ 2.0;
			kappa=Math.abs(4 / 3 *(1-Math.cos(hda))/ Math.sin(hda));
			if (counterclockwise)
				kappa=-kappa;
			nvals=0;
			var tPath=this._getPath();
			var _x1=NaN,_y1=NaN;
			for (i=0;i <=ndivs;i++){
				a=startAngle+da *(i / ndivs);
				dx=Math.cos(a);
				dy=Math.sin(a);
				x=cx+dx *r;
				y=cy+dy *r;
				if (b){
					_x1=x,_y1=y;
					x=this._curMat.a *_x1+this._curMat.c *_y1;
					y=this._curMat.b *_x1+this._curMat.d *_y1;
				}
				if (x !=this._path.getEndPointX()|| y !=this._path.getEndPointY()){
					tPath.addPoint(x,y);
				}
			}
			dx=Math.cos(endAngle);
			dy=Math.sin(endAngle);
			x=cx+dx *r;
			y=cy+dy *r;
			if (b){
				_x1=x,_y1=y;
				x=this._curMat.a *_x1+this._curMat.c *_y1;
				y=this._curMat.b *_x1+this._curMat.d *_y1;
			}
			if (x !=this._path.getEndPointX()|| y !=this._path.getEndPointY()){
				tPath.addPoint(x,y);
			}
		}

		__proto.quadraticCurveTo=function(cpx,cpy,x,y){
			var tBezier=Bezier.I;
			var tResultArray=[];
			var _x1=x,_y1=y;
			x=this._curMat.a *_x1+this._curMat.c *_y1;
			y=this._curMat.b *_x1+this._curMat.d *_y1;
			_x1=cpx,_y1=cpy;
			cpx=this._curMat.a *_x1+this._curMat.c *_y1;
			cpy=this._curMat.b *_x1+this._curMat.d *_y1;
			var tArray=tBezier.getBezierPoints([this._path.getEndPointX(),this._path.getEndPointY(),cpx,cpy,x,y],30,2);
			for (var i=0,n=tArray.length / 2;i < n;i++){
				this.lineTo(tArray[i *2],tArray[i *2+1],false);
			}
			this.lineTo(x,y,false);
		}

		__proto.rect=function(x,y,width,height){
			this._other=this._other.make();
			this._other.path || (this._other.path=new Path());
			this._other.path.rect(x,y,width,height);
		}

		__proto.strokeRect=function(x,y,width,height,parameterLineWidth){
			var tW=parameterLineWidth *0.5;
			this.line(x-tW,y,x+width+tW,y,parameterLineWidth,this._curMat);
			this.line(x+width,y,x+width,y+height,parameterLineWidth,this._curMat);
			this.line(x,y,x,y+height,parameterLineWidth,this._curMat);
			this.line(x-tW,y+height,x+width+tW,y+height,parameterLineWidth,this._curMat);
		}

		__proto.clip=function(){}
		/**
		*画多边形(用)
		*@param x
		*@param y
		*@param points
		*/
		__proto.drawPoly=function(x,y,points,color,lineWidth,boderColor,isConvexPolygon){
			(isConvexPolygon===void 0)&& (isConvexPolygon=false);
			this._renderKey=0;
			this._shader2D.glTexture=null;
			var tPath=this._getPath();
			if (this.mId==-1){
				tPath.polygon(x,y,points,color,lineWidth ? lineWidth :1,boderColor)
				}else {
				if (this.mHaveKey){
					var tShape=VectorGraphManager.getInstance().shapeDic[this.mId];
					tShape.setMatrix(this._curMat);
					tShape.rebuild(tPath.tempArray);
					tPath.setGeomtry(tShape);
					}else {
					var t=tPath.polygon(x,y,points,color,lineWidth ? lineWidth :1,boderColor);
					VectorGraphManager.getInstance().addShape(this.mId,t);
					t.setMatrix(this._curMat);
				}
			}
			tPath.update();
			var tPosArray=[this.mX,this.mY];
			var tempSubmit;
			tempSubmit=Submit.createShape(this,tPath.ib,tPath.vb,tPath.count,tPath.offset,Value2D.create(0x04,0));
			tempSubmit.shaderValue.ALPHA=this._shader2D.ALPHA;
			(tempSubmit.shaderValue).u_pos=tPosArray;
			tempSubmit.shaderValue.u_mmat2=RenderState2D.EMPTYMAT4_ARRAY;
			this._submits[this._submits._length++]=tempSubmit;
			if (lineWidth > 0){
				if (this.mHaveLineKey){
					var tShapeLine=VectorGraphManager.getInstance().shapeLineDic[this.mId];
					tShapeLine.rebuild(tPath.tempArray);
					tPath.setGeomtry(tShapeLine);
					}else {
					VectorGraphManager.getInstance().addShape(this.mId,tPath.drawLine(x,y,points,lineWidth,boderColor));
				}
				tPath.update();
				tempSubmit=Submit.createShape(this,tPath.ib,tPath.vb,tPath.count,tPath.offset,Value2D.create(0x04,0));
				tempSubmit.shaderValue.ALPHA=this._shader2D.ALPHA;
				tempSubmit.shaderValue.u_mmat2=RenderState2D.EMPTYMAT4_ARRAY;
				this._submits[this._submits._length++]=tempSubmit;
			}
		}

		/*******************************************end矢量绘制***************************************************/
		__proto.drawParticle=function(x,y,pt){
			pt.x=x;
			pt.y=y;
			this._submits[this._submits._length++]=pt;
		}

		__proto._getPath=function(){
			return this._path || (this._path=new Path());
		}

		/*,_shader2D.ALPHA=1*/
		__getset(0,__proto,'globalCompositeOperation',function(){
			return BlendMode.NAMES[this._nBlendType];
			},function(value){
			var n=BlendMode.TOINT[value];
			n==null || (this._nBlendType===n)|| (SaveBase.save(this,0x10000,this,true),this._curSubmit=Submit.RENDERBASE,this._renderKey=0,this._nBlendType=n);
		});

		__getset(0,__proto,'strokeStyle',function(){
			return this._shader2D.strokeStyle;
			},function(value){
			this._shader2D.strokeStyle.equal(value)|| (SaveBase.save(this,0x200,this._shader2D,false),this._shader2D.strokeStyle=DrawStyle.create(value));
		});

		__getset(0,__proto,'globalAlpha',function(){
			return this._shader2D.ALPHA;
			},function(value){
			value=Math.floor(value *1000)/ 1000;
			if (value !=this._shader2D.ALPHA){
				SaveBase.save(this,0x1,this._shader2D,true);
				this._shader2D.ALPHA=value;
			}
		});

		__getset(0,__proto,'asBitmap',null,function(value){
			if (value){
				this._targets || (this._targets=new RenderTargetMAX());
				this._targets.repaint=true;
				if (!this._width || !this._height)
					throw Error("asBitmap no size!");
				this._targets.setSP(this.sprite);
				this._targets.size(this._width,this._height);
			}else
			this._targets=null;
		});

		__getset(0,__proto,'fillStyle',function(){
			return this._shader2D.fillStyle;
			},function(value){
			this._shader2D.fillStyle.equal(value)|| (SaveBase.save(this,0x2,this._shader2D,false),this._shader2D.fillStyle=DrawStyle.create(value));
		});

		__getset(0,__proto,'textAlign',function(){
			return this._other.textAlign;
			},function(value){
			(this._other.textAlign===value)|| (this._other=this._other.make(),SaveBase.save(this,0x8000,this._other,false),this._other.textAlign=value);
		});

		__getset(0,__proto,'lineWidth',function(){
			return this._other.lineWidth;
			},function(value){
			(this._other.lineWidth===value)|| (this._other=this._other.make(),SaveBase.save(this,0x100,this._other,false),this._other.lineWidth=value);
		});

		__getset(0,__proto,'textBaseline',function(){
			return this._other.textBaseline;
			},function(value){
			(this._other.textBaseline===value)|| (this._other=this._other.make(),SaveBase.save(this,0x4000,this._other,false),this._other.textBaseline=value);
		});

		__getset(0,__proto,'font',null,function(str){
			if (str==this._other.font.toString())
				return;
			this._other=this._other.make();
			SaveBase.save(this,0x8,this._other,false);
			this._other.font===FontInContext.EMPTY ? (this._other.font=new FontInContext(str)):(this._other.font.setFont(str));
		});

		WebGLContext2D.__init__=function(){
			ContextParams.DEFAULT=new ContextParams();
		}

		WebGLContext2D._tempPoint=new Point();
		WebGLContext2D._SUBMITVBSIZE=32000;
		WebGLContext2D._MAXSIZE=99999999;
		WebGLContext2D._RECTVBSIZE=16;
		WebGLContext2D.MAXCLIPRECT=new Rectangle(0,0,99999999,99999999);
		WebGLContext2D._COUNT=0;
		WebGLContext2D._tmpMatrix=new Matrix();
		WebGLContext2D.SEGNUM=32;
		WebGLContext2D._contextcount=0;
		__static(WebGLContext2D,
		['_fontTemp',function(){return this._fontTemp=new FontInContext();},'_drawStyleTemp',function(){return this._drawStyleTemp=new DrawStyle(null);}
		]);
		WebGLContext2D.__init$=function(){
			//class ContextParams
			ContextParams=(function(){
				function ContextParams(){
					this.lineWidth=1;
					this.path=null;
					this.textAlign=null;
					this.textBaseline=null;
					this.font=FontInContext.EMPTY;
				}
				__class(ContextParams,'');
				var __proto=ContextParams.prototype;
				__proto.clear=function(){
					this.lineWidth=1;
					this.path && this.path.clear();
					this.textAlign=this.textBaseline=null;
					this.font=FontInContext.EMPTY;
				}
				__proto.make=function(){
					return this===ContextParams.DEFAULT ? new ContextParams():this;
				}
				ContextParams.DEFAULT=null
				return ContextParams;
			})()
		}

		return WebGLContext2D;
	})(Context)


	//class laya.webgl.utils.RenderSprite3D extends laya.renders.RenderSprite
	var RenderSprite3D=(function(_super){
		function RenderSprite3D(type,next){
			RenderSprite3D.__super.call(this,type,next);
		}

		__class(RenderSprite3D,'laya.webgl.utils.RenderSprite3D',_super);
		var __proto=RenderSprite3D.prototype;
		__proto.onCreate=function(type){
			switch (type){
				case 0x08:
					this._fun=this._blend;
					return;
				case 0x04:
					this._fun=this._transform;
					return;
				}
		}

		__proto._mask=function(sprite,context,x,y){
			var next=this._next;
			var mask=sprite.mask;
			var submitCMD;
			var submitStencil;
			if (mask){
				context.ctx.save();
				var preBlendMode=(context.ctx).globalCompositeOperation;
				var tRect=new Rectangle();
				tRect.copyFrom(mask.getBounds());
				tRect.width=Math.round(tRect.width);
				tRect.height=Math.round(tRect.height);
				tRect.x=Math.round(tRect.x);
				tRect.y=Math.round(tRect.y);
				if (tRect.width > 0 && tRect.height > 0){
					var tf=sprite._style._tf;
					var scope=SubmitCMDScope.create();
					scope.addValue("bounds",tRect);
					submitCMD=SubmitCMD.create([scope,context],laya.webgl.utils.RenderSprite3D.tmpTarget);
					context.addRenderObject(submitCMD);
					mask.render(context,-tRect.x,-tRect.y);
					submitCMD=SubmitCMD.create([scope],laya.webgl.utils.RenderSprite3D.endTmpTarget);
					context.addRenderObject(submitCMD);
					context.ctx.save();
					context.clipRect(x-tf.translateX+tRect.x,y-tf.translateY+tRect.y,tRect.width,tRect.height);
					next._fun.call(next,sprite,context,x,y);
					context.ctx.restore();
					submitStencil=SubmitStencil.create(6);
					preBlendMode=(context.ctx).globalCompositeOperation;
					submitStencil.blendMode="mask";
					context.addRenderObject(submitStencil);
					Matrix.TEMP.identity();
					var shaderValue=Value2D.create(0x01,0);
					var uv=Texture.INV_UV;
					var w=tRect.width;
					var h=tRect.height;
					var tempLimit=32;
					if (tRect.width < tempLimit || tRect.height < tempLimit){
						uv=RenderSprite3D.tempUV;
						uv[0]=0;
						uv[1]=0;
						uv[2]=(tRect.width >=32)? 1 :tRect.width/tempLimit;
						uv[3]=0
						uv[4]=(tRect.width >=32)? 1 :tRect.width/tempLimit;
						uv[5]=(tRect.height >=32)? 1 :tRect.height/tempLimit;
						uv[6]=0;
						uv[7]=(tRect.height >=32)? 1 :tRect.height/tempLimit;
						tRect.width=(tRect.width >=32)? tRect.width :tempLimit;
						tRect.height=(tRect.height >=32)? tRect.height :tempLimit;
						uv[1] *=-1;uv[3] *=-1;uv[5] *=-1;uv[7] *=-1;
						uv[1]+=1;uv[3]+=1;uv[5]+=1;uv[7]+=1;
					}
					(context.ctx).drawTarget(scope,x+tRect.x-tf.translateX,y+tRect.y-tf.translateY,w,h,Matrix.TEMP,"tmpTarget",shaderValue,uv,6);
					submitCMD=SubmitCMD.create([scope],laya.webgl.utils.RenderSprite3D.recycleTarget);
					context.addRenderObject(submitCMD);
					submitStencil=SubmitStencil.create(6);
					submitStencil.blendMode=preBlendMode;
					context.addRenderObject(submitStencil);
				}
				context.ctx.restore();
			}
			else{
				next._fun.call(next,sprite,context,x,y);
			}
		}

		__proto._blend=function(sprite,context,x,y){
			var style=sprite._style;
			var next=this._next;
			if (style.blendMode){
				context.ctx.save();
				context.ctx.globalCompositeOperation=style.blendMode;
				next._fun.call(next,sprite,context,x,y);
				context.ctx.restore();
			}
			else{
				next._fun.call(next,sprite,context,x,y);
			}
		}

		__proto._transform=function(sprite,context,x,y){
			var transform=sprite.transform,_next=this._next;
			if (transform && _next !=RenderSprite.NORENDER){
				var ctx=context.ctx;
				var style=sprite._style;
				transform.tx=x;
				transform.ty=y;
				var m2=ctx._getTransformMatrix();
				var m1=m2.clone();
				Matrix.mul(transform,m2,m2);
				m2._checkTransform();
				transform.tx=transform.ty=0;
				_next._fun.call(_next,sprite,context,0,0);
				m1.copyTo(m2);
				m1.destroy();
				}else {
				_next._fun.call(_next,sprite,context,x,y);
			}
		}

		RenderSprite3D.tmpTarget=function(scope,context){
			var b=scope.getValue("bounds");
			var tmpTarget=RenderTarget2D.create(b.width,b.height);
			tmpTarget.start();
			tmpTarget.clear(0,0,0,0);
			scope.addValue("tmpTarget",tmpTarget);
		}

		RenderSprite3D.endTmpTarget=function(scope){
			var tmpTarget=scope.getValue("tmpTarget");
			tmpTarget.end();
		}

		RenderSprite3D.recycleTarget=function(scope){
			var tmpTarget=scope.getValue("tmpTarget");
			tmpTarget.recycle();
			scope.recycle();
		}

		__static(RenderSprite3D,
		['tempUV',function(){return this.tempUV=new Array(8);}
		]);
		return RenderSprite3D;
	})(RenderSprite)


	//class laya.webgl.atlas.Atlaser extends laya.webgl.atlas.AtlasGrid
	var Atlaser=(function(_super){
		function Atlaser(gridNumX,gridNumY,width,height,atlasID){
			this._atlasCanvas=null;
			this._inAtlasTextureKey=null;
			this._inAtlasTextureBitmapValue=null;
			this._inAtlasTextureOriUVValue=null;
			this._InAtlasWebGLImagesKey=null;
			this._InAtlasWebGLImagesOffsetValue=null;
			Atlaser.__super.call(this,gridNumX,gridNumY,atlasID);
			this._inAtlasTextureKey=[];
			this._inAtlasTextureBitmapValue=[];
			this._inAtlasTextureOriUVValue=[];
			this._InAtlasWebGLImagesKey={};
			this._InAtlasWebGLImagesOffsetValue=[];
			this._atlasCanvas=new AtlasWebGLCanvas();
			this._atlasCanvas._atlaser=this;
			this._atlasCanvas.width=width;
			this._atlasCanvas.height=height;
			this._atlasCanvas.activeResource();
			this._atlasCanvas.lock=true;
		}

		__class(Atlaser,'laya.webgl.atlas.Atlaser',_super);
		var __proto=Atlaser.prototype;
		__proto.computeUVinAtlasTexture=function(texture,oriUV,offsetX,offsetY){
			var tex=texture;
			var _width=AtlasResourceManager.atlasTextureWidth;
			var _height=AtlasResourceManager.atlasTextureHeight;
			var u1=offsetX / _width,v1=offsetY / _height,u2=(offsetX+texture.bitmap.width)/ _width,v2=(offsetY+texture.bitmap.height)/ _height;
			var inAltasUVWidth=texture.bitmap.width / _width,inAltasUVHeight=texture.bitmap.height / _height;
			texture.uv=[u1+oriUV[0] *inAltasUVWidth,v1+oriUV[1] *inAltasUVHeight,u2-(1-oriUV[2])*inAltasUVWidth,v1+oriUV[3] *inAltasUVHeight,u2-(1-oriUV[4])*inAltasUVWidth,v2-(1-oriUV[5])*inAltasUVHeight,u1+oriUV[6] *inAltasUVWidth,v2-(1-oriUV[7])*inAltasUVHeight];
		}

		__proto.findBitmapIsExist=function(bitmap){
			if ((bitmap instanceof laya.webgl.resource.WebGLImage )){
				var webImage=bitmap;
				var sUrl=webImage.url;
				var object=this._InAtlasWebGLImagesKey[sUrl?sUrl:webImage.id]
				if (object){
					return object.offsetInfoID;
				}
			}
			return-1;
		}

		/**
		*
		*@param inAtlasRes
		*@return 是否已经存在队列中
		*/
		__proto.addToAtlasTexture=function(mergeAtlasBitmap,offsetX,offsetY){
			if ((mergeAtlasBitmap instanceof laya.webgl.resource.WebGLImage )){
				var webImage=mergeAtlasBitmap;
				var sUrl=webImage.url;
				this._InAtlasWebGLImagesKey[sUrl?sUrl:webImage.id]={bitmap:mergeAtlasBitmap,offsetInfoID:this._InAtlasWebGLImagesOffsetValue.length};
				this._InAtlasWebGLImagesOffsetValue.push([offsetX,offsetY]);
			}
			this._atlasCanvas.texSubImage2D(offsetX,offsetY,mergeAtlasBitmap.atlasSource);
			mergeAtlasBitmap.clearAtlasSource();
		}

		__proto.addToAtlas=function(texture,offsetX,offsetY){
			texture._atlasID=this._inAtlasTextureKey.length;
			var oriUV=texture.uv.slice();
			var oriBitmap=texture.bitmap;
			this._inAtlasTextureKey.push(texture);
			this._inAtlasTextureOriUVValue.push(oriUV);
			this._inAtlasTextureBitmapValue.push(oriBitmap);
			this.computeUVinAtlasTexture(texture,oriUV,offsetX,offsetY);
			texture.bitmap=this._atlasCanvas;
		}

		__proto.clear=function(){
			for (var i=0,n=this._inAtlasTextureKey.length;i < n;i++){
				this._inAtlasTextureKey[i].bitmap=this._inAtlasTextureBitmapValue[i];
				this._inAtlasTextureKey[i].uv=this._inAtlasTextureOriUVValue[i];
				this._inAtlasTextureKey[i]._atlasID=-1;
				this._inAtlasTextureKey[i].bitmap.lock=false;
				this._inAtlasTextureKey[i].bitmap.releaseResource();
			}
			this._inAtlasTextureKey.length=0;
			this._inAtlasTextureBitmapValue.length=0;
			this._inAtlasTextureOriUVValue.length=0;
			this._InAtlasWebGLImagesKey=null;
			this._InAtlasWebGLImagesOffsetValue.length=0;
		}

		__proto.dispose=function(){
			this.clear();
			this._atlasCanvas.destroy();
		}

		__getset(0,__proto,'InAtlasWebGLImagesOffsetValue',function(){
			return this._InAtlasWebGLImagesOffsetValue;
		});

		__getset(0,__proto,'texture',function(){
			return this._atlasCanvas;
		});

		__getset(0,__proto,'inAtlasWebGLImagesKey',function(){
			return this._InAtlasWebGLImagesKey;
		});

		return Atlaser;
	})(AtlasGrid)


	//class laya.webgl.shader.d2.ShaderDefines2D extends laya.webgl.shader.ShaderDefines
	var ShaderDefines2D=(function(_super){
		function ShaderDefines2D(){
			ShaderDefines2D.__super.call(this,ShaderDefines2D.__name2int,ShaderDefines2D.__int2name,ShaderDefines2D.__int2nameMap);
		}

		__class(ShaderDefines2D,'laya.webgl.shader.d2.ShaderDefines2D',_super);
		ShaderDefines2D.__init__=function(){
			ShaderDefines2D.reg("TEXTURE2D",0x01);
			ShaderDefines2D.reg("COLOR2D",0x02);
			ShaderDefines2D.reg("PRIMITIVE",0x04);
			ShaderDefines2D.reg("GLOW_FILTER",0x08);
			ShaderDefines2D.reg("BLUR_FILTER",0x10);
			ShaderDefines2D.reg("COLOR_FILTER",0x20);
			ShaderDefines2D.reg("COLOR_ADD",0x40);
			ShaderDefines2D.reg("WORLDMAT",0x80);
			ShaderDefines2D.reg("FILLTEXTURE",0x100);
			ShaderDefines2D.reg("FSHIGHPRECISION",0x400);
		}

		ShaderDefines2D.reg=function(name,value){
			ShaderDefines$1._reg(name,value,ShaderDefines2D.__name2int,ShaderDefines2D.__int2name);
		}

		ShaderDefines2D.toText=function(value,int2name,int2nameMap){
			return ShaderDefines$1._toText(value,int2name,int2nameMap);
		}

		ShaderDefines2D.toInt=function(names){
			return ShaderDefines$1._toInt(names,ShaderDefines2D.__name2int);
		}

		ShaderDefines2D.TEXTURE2D=0x01;
		ShaderDefines2D.COLOR2D=0x02;
		ShaderDefines2D.PRIMITIVE=0x04;
		ShaderDefines2D.FILTERGLOW=0x08;
		ShaderDefines2D.FILTERBLUR=0x10;
		ShaderDefines2D.FILTERCOLOR=0x20;
		ShaderDefines2D.COLORADD=0x40;
		ShaderDefines2D.WORLDMAT=0x80;
		ShaderDefines2D.FILLTEXTURE=0x100;
		ShaderDefines2D.SKINMESH=0x200;
		ShaderDefines2D.SHADERDEFINE_FSHIGHPRECISION=0x400;
		ShaderDefines2D.__name2int={};
		ShaderDefines2D.__int2name=[];
		ShaderDefines2D.__int2nameMap=[];
		return ShaderDefines2D;
	})(ShaderDefines$1)


	//class laya.webgl.shapes.Line extends laya.webgl.shapes.BasePoly
	var Line=(function(_super){
		function Line(x,y,points,borderWidth,color){
			this._points=[];
			this.rebuild(points);
			Line.__super.call(this,x,y,0,0,0,color,borderWidth,color,0);
		}

		__class(Line,'laya.webgl.shapes.Line',_super);
		var __proto=Line.prototype;
		__proto.rebuild=function(points){
			var len=points.length;
			var preLen=this._points.length;
			if (len !=preLen){
				this.mUint16Array=new Uint16Array((len/2-1)*6);
				this.mFloat32Array=new Float32Array(len*5);
			}
			this._points.length=0;
			var tCurrX=NaN;
			var tCurrY=NaN;
			var tLastX=-1;
			var tLastY=-1;
			var tLen=points.length / 2;
			for (var i=0;i < tLen;i++){
				tCurrX=points[i *2];
				tCurrY=points[i *2+1];
				if (Math.abs(tLastX-tCurrX)> 0.01 || Math.abs(tLastY-tCurrY)>0.01){
					this._points.push(tCurrX,tCurrY);
				}
				tLastX=tCurrX;
				tLastY=tCurrY;
			}
		}

		__proto.getData=function(ib,vb,start){
			var indices=[];
			var verts=[];
			(this.borderWidth > 0)&& this.createLine2(this._points,indices,this.borderWidth,start,verts,this._points.length / 2);
			this.mUint16Array.set(indices,0);
			this.mFloat32Array.set(verts,0);
			ib.append(this.mUint16Array);
			vb.append(this.mFloat32Array);
		}

		return Line;
	})(BasePoly)


	//class laya.webgl.shapes.LoopLine extends laya.webgl.shapes.BasePoly
	var LoopLine=(function(_super){
		function LoopLine(x,y,points,width,color){
			this._points=[];
			var tCurrX=NaN;
			var tCurrY=NaN;
			var tLastX=-1;
			var tLastY=-1;
			var tLen=points.length / 2-1;
			for (var i=0;i < tLen;i++){
				tCurrX=points[i *2];
				tCurrY=points[i *2+1];
				if (Math.abs(tLastX-tCurrX)> 0.01 || Math.abs(tLastY-tCurrY)> 0.01){
					this._points.push(tCurrX,tCurrY);
				}
				tLastX=tCurrX;
				tLastY=tCurrY;
			}
			tCurrX=points[tLen *2];
			tCurrY=points[tLen *2+1];
			tLastX=this._points[0];
			tLastY=this._points[1];
			if (Math.abs(tLastX-tCurrX)> 0.01 || Math.abs(tLastY-tCurrY)> 0.01){
				this._points.push(tCurrX,tCurrY);
			}
			LoopLine.__super.call(this,x,y,0,0,this._points.length / 2,0,width,color);
		}

		__class(LoopLine,'laya.webgl.shapes.LoopLine',_super);
		var __proto=LoopLine.prototype;
		__proto.getData=function(ib,vb,start){
			if (this.borderWidth > 0){
				var color=this.color;
				var r=((color >> 16)& 0x0000ff)/ 255,g=((color >> 8)& 0xff)/ 255,b=(color & 0x0000ff)/ 255;
				var verts=[];
				var tLastX=-1,tLastY=-1;
				var tCurrX=0,tCurrY=0;
				var indices=[];
				var tLen=Math.floor(this._points.length / 2);
				for (var i=0;i < tLen;i++){
					tCurrX=this._points[i *2];
					tCurrY=this._points[i *2+1];
					verts.push(this.x+tCurrX,this.y+tCurrY,r,g,b);
				}
				this.createLoopLine(verts,indices,this.borderWidth,start+verts.length / 5);
				ib.append(new Uint16Array(indices));
				vb.append(new Float32Array(verts));
			}
		}

		__proto.createLoopLine=function(p,indices,lineWidth,len,outVertex,outIndex){
			var tLen=p.length / 5;
			var points=p.concat();
			var result=outVertex ? outVertex :p;
			var color=this.borderColor;
			var r=((color >> 16)& 0x0000ff)/ 255,g=((color >> 8)& 0xff)/ 255,b=(color & 0x0000ff)/ 255;
			var firstPoint=[points[0],points[1]];
			var lastPoint=[points[points.length-5],points[points.length-4]];
			var midPointX=lastPoint[0]+(firstPoint[0]-lastPoint[0])*0.5;
			var midPointY=lastPoint[1]+(firstPoint[1]-lastPoint[1])*0.5;
			points.unshift(midPointX,midPointY,0,0,0);
			points.push(midPointX,midPointY,0,0,0);
			var length=points.length / 5;
			var iStart=len,w=lineWidth / 2;
			var px,py,p1x,p1y,p2x,p2y,p3x,p3y;
			var perpx,perpy,perp2x,perp2y,perp3x,perp3y;
			var a1,b1,c1,a2,b2,c2;
			var denom,pdist,dist;
			p1x=points[0];
			p1y=points[1];
			p2x=points[5];
			p2y=points[6];
			perpx=-(p1y-p2y);
			perpy=p1x-p2x;
			dist=Math.sqrt(perpx *perpx+perpy *perpy);
			perpx=perpx / dist *w;
			perpy=perpy / dist *w;
			result.push(p1x-perpx,p1y-perpy,r,g,b,p1x+perpx,p1y+perpy,r,g,b);
			for (var i=1;i < length-1;i++){
				p1x=points[(i-1)*5];
				p1y=points[(i-1)*5+1];
				p2x=points[(i)*5];
				p2y=points[(i)*5+1];
				p3x=points[(i+1)*5];
				p3y=points[(i+1)*5+1];
				perpx=-(p1y-p2y);
				perpy=p1x-p2x;
				dist=Math.sqrt(perpx *perpx+perpy *perpy);
				perpx=perpx / dist *w;
				perpy=perpy / dist *w;
				perp2x=-(p2y-p3y);
				perp2y=p2x-p3x;
				dist=Math.sqrt(perp2x *perp2x+perp2y *perp2y);
				perp2x=perp2x / dist *w;
				perp2y=perp2y / dist *w;
				a1=(-perpy+p1y)-(-perpy+p2y);
				b1=(-perpx+p2x)-(-perpx+p1x);
				c1=(-perpx+p1x)*(-perpy+p2y)-(-perpx+p2x)*(-perpy+p1y);
				a2=(-perp2y+p3y)-(-perp2y+p2y);
				b2=(-perp2x+p2x)-(-perp2x+p3x);
				c2=(-perp2x+p3x)*(-perp2y+p2y)-(-perp2x+p2x)*(-perp2y+p3y);
				denom=a1 *b2-a2 *b1;
				if (Math.abs(denom)< 0.1){
					denom+=10.1;
					result.push(p2x-perpx,p2y-perpy,r,g,b,p2x+perpx,p2y+perpy,r,g,b);
					continue ;
				}
				px=(b1 *c2-b2 *c1)/ denom;
				py=(a2 *c1-a1 *c2)/ denom;
				pdist=(px-p2x)*(px-p2x)+(py-p2y)+(py-p2y);
				result.push(px,py,r,g,b,p2x-(px-p2x),p2y-(py-p2y),r,g,b);
			}
			if (outIndex){
				indices=outIndex;
			};
			var groupLen=this.edges+1;
			for (i=1;i < groupLen;i++){
				indices.push(iStart+(i-1)*2,iStart+(i-1)*2+1,iStart+i *2+1,iStart+i *2+1,iStart+i *2,iStart+(i-1)*2);
			}
			indices.push(iStart+(i-1)*2,iStart+(i-1)*2+1,iStart+1,iStart+1,iStart,iStart+(i-1)*2);
			return result;
		}

		return LoopLine;
	})(BasePoly)


	//class laya.webgl.shapes.Polygon extends laya.webgl.shapes.BasePoly
	var Polygon=(function(_super){
		function Polygon(x,y,points,color,borderWidth,borderColor){
			this._points=null;
			this._start=-1;
			this._repaint=false;
			this.earcutTriangles=null;
			this._mat=Matrix.create();
			this._points=points.slice(0,points.length);
			Polygon.__super.call(this,x,y,0,0,this._points.length / 2,color,borderWidth,borderColor);
		}

		__class(Polygon,'laya.webgl.shapes.Polygon',_super);
		var __proto=Polygon.prototype;
		__proto.rebuild=function(point){
			if (!this._repaint){
				this._points.length=0;
				this._points=this._points.concat(point);
			}
		}

		__proto.setMatrix=function(mat){
			mat.copyTo(this._mat);
		}

		__proto.needUpdate=function(mat){
			this._repaint=(this._mat.a==mat.a && this._mat.b==mat.b && this._mat.c==mat.c && this._mat.d==mat.d && this._mat.tx==mat.tx && this._mat.ty==mat.ty);
			return !this._repaint;
		}

		__proto.getData=function(ib,vb,start){
			var indices,i=0;
			var tArray=this._points;
			var tLen=0;
			if (this.mUint16Array && this.mFloat32Array&&this._repaint){
				if (this._start !=start){
					this._start=start;
					indices=[];
					tLen=this.earcutTriangles.length;
					for (i=0;i < tLen;i++){
						indices.push(this.earcutTriangles[i]+start);
					}
					this.mUint16Array=new Uint16Array(indices);
				}
			}
			else {
				this._start=start;
				indices=[];
				var verts=[];
				var vertsEarcut=[];
				var color=this.color;
				var r=((color >> 16)& 0x0000ff)/ 255,g=((color >> 8)& 0xff)/ 255,b=(color & 0x0000ff)/ 255;
				tLen=Math.floor(tArray.length / 2);
				for (i=0;i < tLen;i++){
					verts.push(this.x+tArray[i *2],this.y+tArray[i *2+1],r,g,b);
					vertsEarcut.push(this.x+tArray[i *2],this.y+tArray[i *2+1]);
				}
				this.earcutTriangles=Earcut.earcut(vertsEarcut,null,2);
				tLen=this.earcutTriangles.length;
				for (i=0;i < tLen;i++){
					indices.push(this.earcutTriangles[i]+start);
				}
				this.mUint16Array=new Uint16Array(indices);
				this.mFloat32Array=new Float32Array(verts);
			}
			ib.append(this.mUint16Array);
			vb.append(this.mFloat32Array);
		}

		return Polygon;
	})(BasePoly)


	//class laya.webgl.submit.SubmitCanvas extends laya.webgl.submit.Submit
	var SubmitCanvas=(function(_super){
		function SubmitCanvas(){
			//this._ctx_src=null;
			this._matrix=new Matrix();
			this._matrix4=CONST3D2D.defaultMatrix4.concat();
			SubmitCanvas.__super.call(this,10000);
			this.shaderValue=new Value2D(0,0);
		}

		__class(SubmitCanvas,'laya.webgl.submit.SubmitCanvas',_super);
		var __proto=SubmitCanvas.prototype;
		__proto.renderSubmit=function(){
			if (this._ctx_src._targets){
				this._ctx_src._targets.flush(this._ctx_src);
				return 1;
			};
			var preAlpha=RenderState2D.worldAlpha;
			var preMatrix4=RenderState2D.worldMatrix4;
			var preMatrix=RenderState2D.worldMatrix;
			var preFilters=RenderState2D.worldFilters;
			var preWorldShaderDefines=RenderState2D.worldShaderDefines;
			var v=this.shaderValue;
			var m=this._matrix;
			var m4=this._matrix4;
			var mout=Matrix.TEMP;
			Matrix.mul(m,preMatrix,mout);
			m4[0]=mout.a;
			m4[1]=mout.b;
			m4[4]=mout.c;
			m4[5]=mout.d;
			m4[12]=mout.tx;
			m4[13]=mout.ty;
			RenderState2D.worldMatrix=mout.clone();
			RenderState2D.worldMatrix4=m4;
			RenderState2D.worldAlpha=RenderState2D.worldAlpha *v.alpha;
			if (v.filters && v.filters.length){
				RenderState2D.worldFilters=v.filters;
				RenderState2D.worldShaderDefines=v.defines;
			}
			this._ctx_src.flush();
			RenderState2D.worldAlpha=preAlpha;
			RenderState2D.worldMatrix4=preMatrix4;
			RenderState2D.worldMatrix.destroy();
			RenderState2D.worldMatrix=preMatrix;
			RenderState2D.worldFilters=preFilters;
			RenderState2D.worldShaderDefines=preWorldShaderDefines;
			return 1;
		}

		__proto.releaseRender=function(){
			var cache=SubmitCanvas._cache;
			this._ctx_src=null;
			cache[cache._length++]=this;
		}

		__proto.getRenderType=function(){
			return 10003;
		}

		SubmitCanvas.create=function(ctx_src,alpha,filters){
			var o=(!SubmitCanvas._cache._length)? (new SubmitCanvas()):SubmitCanvas._cache[--SubmitCanvas._cache._length];
			o._ctx_src=ctx_src;
			var v=o.shaderValue;
			v.alpha=alpha;
			v.defines.setValue(0);
			filters && filters.length && v.setFilters(filters);
			return o;
		}

		SubmitCanvas._cache=(SubmitCanvas._cache=[],SubmitCanvas._cache._length=0,SubmitCanvas._cache);
		return SubmitCanvas;
	})(Submit)


	//class laya.webgl.submit.SubmitTexture extends laya.webgl.submit.Submit
	var SubmitTexture=(function(_super){
		function SubmitTexture(renderType){
			this._preIsSameTextureShader=false;
			this._isSameTexture=true;
			this._texs=new Array;
			this._texsID=new Array;
			this._vbPos=new Array;
			(renderType===void 0)&& (renderType=10000);
			SubmitTexture.__super.call(this,renderType);
		}

		__class(SubmitTexture,'laya.webgl.submit.SubmitTexture',_super);
		var __proto=SubmitTexture.prototype;
		__proto.releaseRender=function(){
			var cache=SubmitTexture._cache;
			cache[cache._length++]=this;
			this.shaderValue.release();
			this._preIsSameTextureShader=false;
			this._vb=null;
			this._texs.length=0;
			this._vbPos.length=0;
			this._isSameTexture=true;
		}

		__proto.addTexture=function(tex,vbpos){
			this._texsID[this._texs.length]=tex._uvID;
			this._texs.push(tex);
			this._vbPos.push(vbpos);
		}

		//检查材质是否修改，修改UV，设置是否是同一材质
		__proto.checkTexture=function(){
			if (this._texs.length < 1){
				this._isSameTexture=true;
				return;
			};
			var _tex=this.shaderValue.textureHost;
			var webGLImg=_tex.bitmap;
			if (webGLImg===null)return;
			var vbdata=this._vb.getFloat32Array();
			for (var i=0,s=this._texs.length;i < s;i++){
				var tex=this._texs[i];
				tex.active();
				var newUV=tex.uv;
				if (this._texsID[i]!==tex._uvID){
					this._texsID[i]=tex._uvID;
					var vbPos=this._vbPos[i];
					vbdata[vbPos+2]=newUV[0];
					vbdata[vbPos+3]=newUV[1];
					vbdata[vbPos+6]=newUV[2];
					vbdata[vbPos+7]=newUV[3];
					vbdata[vbPos+10]=newUV[4];
					vbdata[vbPos+11]=newUV[5];
					vbdata[vbPos+14]=newUV[6];
					vbdata[vbPos+15]=newUV[7];
					this._vb.setNeedUpload();
				}
				if (tex.bitmap!==webGLImg){
					this._isSameTexture=false;
				}
			}
		}

		__proto.renderSubmit=function(){
			if (this._numEle===0){
				SubmitTexture._shaderSet=false;
				return 1;
			};
			var _tex=this.shaderValue.textureHost;
			if (_tex){
				var source=_tex.source;
				if (!_tex.bitmap || !source){
					SubmitTexture._shaderSet=false;
					return 1;
				}
				this.shaderValue.texture=source;
			}
			this._vb.bind_upload(this._ib);
			var gl=WebGL.mainContext;
			if (BlendMode.activeBlendFunction!==this._blendFn){
				gl.enable(0x0BE2);
				this._blendFn(gl);
				BlendMode.activeBlendFunction=this._blendFn;
			}
			Stat.drawCall++;
			Stat.trianglesFaces+=this._numEle / 3;
			if (this._preIsSameTextureShader && BaseShader.activeShader && SubmitTexture._shaderSet)
				(BaseShader.activeShader).uploadTexture2D(this.shaderValue.texture);
			else this.shaderValue.upload();
			SubmitTexture._shaderSet=true;
			if (this._texs.length > 1 && !this._isSameTexture){
				var webGLImg=_tex.bitmap;
				var index=0;
				var shader=BaseShader.activeShader;
				for (var i=0,s=this._texs.length;i < s;i++){
					var tex2=this._texs[i];
					if (tex2.bitmap!==webGLImg || (i+1)===s){
						shader.uploadTexture2D(tex2.source);
						gl.drawElements(0x0004,(i-index+1)*6,0x1403,this._startIdx+index *6 *CONST3D2D.BYTES_PIDX);
						webGLImg=tex2.bitmap;
						index=i;
					}
				}
				}else {
				gl.drawElements(0x0004,this._numEle,0x1403,this._startIdx);
			}
			return 1;
		}

		SubmitTexture.create=function(context,ib,vb,pos,sv){
			var o=SubmitTexture._cache._length ? SubmitTexture._cache[--SubmitTexture._cache._length] :new SubmitTexture();
			if (vb==null){
				vb=o._selfVb || (o._selfVb=VertexBuffer2D.create(-1));
				vb.clear();
				pos=0;
			}
			o._ib=ib;
			o._vb=vb;
			o._startIdx=pos *CONST3D2D.BYTES_PIDX;
			o._numEle=0;
			var blendType=context._nBlendType;
			o._blendFn=context._targets ? BlendMode.targetFns[blendType] :BlendMode.fns[blendType];
			o.shaderValue=sv;
			o.shaderValue.setValue(context._shader2D);
			var filters=context._shader2D.filters;
			filters && o.shaderValue.setFilters(filters);
			return o;
		}

		SubmitTexture._cache=(SubmitTexture._cache=[],SubmitTexture._cache._length=0,SubmitTexture._cache);
		SubmitTexture._shaderSet=true;
		return SubmitTexture;
	})(Submit)


	//class laya.webgl.utils.MeshTexture extends laya.webgl.utils.Mesh2D
	var MeshTexture=(function(_super){
		function MeshTexture(){
			MeshTexture.__super.call(this,laya.webgl.utils.MeshTexture.const_stride,0,0);
			this.canReuse=true;
			this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo);
		}

		__class(MeshTexture,'laya.webgl.utils.MeshTexture',_super);
		var __proto=MeshTexture.prototype;
		__proto.addData=function(vertices,uvs,idx,matrix,rgba,ctx){
			var sz=vertices.length / 2;
			var startpos=this._vb.needSize(sz *MeshTexture.const_stride);
			var f32pos=startpos >> 2;
			var vbdata=this._vb.getFloat32Array();
			var ci=0;
			for (var i=0;i < sz;i++){
				var x=vertices[ci],y=vertices[ci+1];
				var x1=x *matrix.a+y *matrix.c+matrix.tx;
				var y1=x *matrix.b+y *matrix.d+matrix.ty;
				vbdata[f32pos++]=x1;vbdata[f32pos++]=y1;
				vbdata[f32pos++]=uvs[ci];vbdata[f32pos++]=uvs[ci+1];
				ci+=2;
			}
			this._vb.setNeedUpload();
			var vertN=this.vertNum;
			if (vertN > 0){
				sz=idx.length;
				if (sz > MeshTexture.tmpIdx.length)MeshTexture.tmpIdx=new Uint16Array(sz);
				for (var ii=0;ii < sz;ii++){
					MeshTexture.tmpIdx[ii]=idx[ii]+vertN;
				}
				this._ib.appendU16Array(MeshTexture.tmpIdx,idx.length);
				}else {
				this._ib.append(idx);
			}
			this._ib.setNeedUpload();
			this.vertNum+=sz;
			this.indexNum+=idx.length;
		}

		/**
		*把本对象放到回收池中，以便getMesh能用。
		*/
		__proto.releaseMesh=function(){
			this._vb._byteLength=0;
			this._ib._byteLength=0;
			this.vertNum=0;
			this.indexNum=0;
			laya.webgl.utils.MeshTexture._POOL.push(this);
		}

		__proto.destroy=function(){
			this._ib.destroy();
			this._vb.destroy();
		}

		MeshTexture.getAMesh=function(){
			if (laya.webgl.utils.MeshTexture._POOL.length){
				return laya.webgl.utils.MeshTexture._POOL.pop();
			}
			return new MeshTexture();
		}

		MeshTexture.const_stride=16;
		MeshTexture._POOL=[];
		__static(MeshTexture,
		['_fixattriInfo',function(){return this._fixattriInfo=[
			0x1406,2,0,
			0x1406,2,8];},'tmpIdx',function(){return this.tmpIdx=new Uint16Array(4);}
		]);
		return MeshTexture;
	})(Mesh2D)


	//class fairygui.utils.PixelHitTest extends laya.utils.HitArea
	var PixelHitTest=(function(_super){
		function PixelHitTest(data,offsetX,offsetY){
			this._data=null;
			this.offsetX=0;
			this.offsetY=0;
			this.scaleX=NaN;
			this.scaleY=NaN;
			PixelHitTest.__super.call(this);
			(offsetX===void 0)&& (offsetX=0);
			(offsetY===void 0)&& (offsetY=0);
			this._data=data;
			this.offsetX=offsetX;
			this.offsetY=offsetY;
			this.scaleX=1;
			this.scaleY=1;
		}

		__class(PixelHitTest,'fairygui.utils.PixelHitTest',_super);
		var __proto=PixelHitTest.prototype;
		__proto.isHit=function(x,y){
			x=Math.floor((x / this.scaleX-this.offsetX)*this._data.scale);
			y=Math.floor((y / this.scaleY-this.offsetY)*this._data.scale);
			if (x < 0 || y < 0 || x >=this._data.pixelWidth)
				return false;
			var pos=y *this._data.pixelWidth+x;
			var pos2=Math.floor(pos / 8);
			var pos3=pos % 8;
			if (pos2 >=0 && pos2 < this._data.pixels.length)
				return ((this._data.pixels[pos2] >> pos3)& 0x1)==1;
			else
			return false;
		}

		return PixelHitTest;
	})(HitArea)


	//class fairygui.action.ChangePageAction extends fairygui.action.ControllerAction
	var ChangePageAction=(function(_super){
		function ChangePageAction(){
			this.objectId=null;
			this.controllerName=null;
			this.targetPage=null;
			ChangePageAction.__super.call(this);
		}

		__class(ChangePageAction,'fairygui.action.ChangePageAction',_super);
		var __proto=ChangePageAction.prototype;
		__proto.enter=function(controller){
			if(!this.controllerName)
				return;
			var gcom;
			if(this.objectId)
				gcom=controller.parent.getChildById(this.objectId);
			else
			gcom=controller.parent;
			if(gcom){
				var cc=gcom.getController(this.controllerName);
				if(cc && cc!=controller && !cc.changing)
					cc.selectedPageId=this.targetPage;
			}
		}

		__proto.setup=function(xml){
			_super.prototype.setup.call(this,xml);
			this.objectId=xml.getAttribute("objectId");
			this.controllerName=xml.getAttribute("controller");
			this.targetPage=xml.getAttribute("targetPage");
		}

		return ChangePageAction;
	})(ControllerAction)


	//class fairygui.action.PlayTransitionAction extends fairygui.action.ControllerAction
	var PlayTransitionAction=(function(_super){
		function PlayTransitionAction(){
			this.transitionName=null;
			this.repeat=1;
			this.delay=0;
			this.stopOnExit=false;
			this._currentTransition=null;
			PlayTransitionAction.__super.call(this);
		}

		__class(PlayTransitionAction,'fairygui.action.PlayTransitionAction',_super);
		var __proto=PlayTransitionAction.prototype;
		__proto.enter=function(controller){
			var trans=controller.parent.getTransition(this.transitionName);
			if(trans){
				if(this._currentTransition && this._currentTransition.playing)
					trans.changeRepeat(this.repeat);
				else
				trans.play(null,this.repeat,this.delay);
				this._currentTransition=trans;
			}
		}

		__proto.leave=function(controller){
			if(this.stopOnExit && this._currentTransition){
				this._currentTransition.stop();
				this._currentTransition=null;
			}
		}

		__proto.setup=function(xml){
			_super.prototype.setup.call(this,xml);
			this.transitionName=xml.getAttribute("transition");
			var str;
			str=xml.getAttribute("repeat");
			if(str)
				this.repeat=parseInt(str);
			str=xml.getAttribute("delay");
			if(str)
				this.delay=parseFloat(str);
			this.stopOnExit=xml.getAttribute("stopOnExit")=="true";
		}

		return PlayTransitionAction;
	})(ControllerAction)


	//class fairygui.GearAnimation extends fairygui.GearBase
	var GearAnimation=(function(_super){
		var GearAnimationValue;
		function GearAnimation(owner){
			this._storage=null;
			this._default=null;
			GearAnimation.__super.call(this,owner);
		}

		__class(GearAnimation,'fairygui.GearAnimation',_super);
		var __proto=GearAnimation.prototype;
		__proto.init=function(){
			this._default=new GearAnimationValue((this._owner).playing,
			(this._owner).frame);
			this._storage={};
		}

		__proto.addStatus=function(pageId,value){
			if(value=="-" || value.length==0)
				return;
			var gv;
			if (pageId==null)
				gv=this._default;
			else {
				gv=new GearAnimationValue();
				this._storage[pageId]=gv;
			};
			var arr=value.split(",");
			gv.frame=parseInt(arr[0]);
			gv.playing=arr[1]=="p";
		}

		__proto.apply=function(){
			this._owner._gearLocked=true;
			var gv=this._storage[this._controller.selectedPageId];
			if (!gv)
				gv=this._default;
			(this._owner).frame=gv.frame;
			(this._owner).playing=gv.playing;
			this._owner._gearLocked=false;
		}

		__proto.updateState=function(){
			var mc=(this._owner);
			var gv=this._storage[this._controller.selectedPageId];
			if(!gv){
				gv=new GearAnimationValue();
				this._storage[this._controller.selectedPageId]=gv;
			}
			gv.frame=mc.frame;
			gv.playing=mc.playing;
		}

		GearAnimation.__init$=function(){
			//class GearAnimationValue
			GearAnimationValue=(function(){
				function GearAnimationValue(playing,frame){
					this.playing=false;
					this.frame=NaN;
					(playing===void 0)&& (playing=true);
					(frame===void 0)&& (frame=0);
					this.playing=playing;
					this.frame=frame;
				}
				__class(GearAnimationValue,'');
				return GearAnimationValue;
			})()
		}

		return GearAnimation;
	})(GearBase)


	//class fairygui.GearColor extends fairygui.GearBase
	var GearColor=(function(_super){
		var GearColorValue;
		function GearColor(owner){
			this._storage=null;
			this._default=null;
			GearColor.__super.call(this,owner);
		}

		__class(GearColor,'fairygui.GearColor',_super);
		var __proto=GearColor.prototype;
		__proto.init=function(){
			if(this._owner["strokeColor"]!=undefined)
				this._default=new GearColorValue(this._owner["color"],this._owner["strokeColor"]);
			else
			this._default=new GearColorValue(this._owner["color"],null);
			this._storage={};
		}

		__proto.addStatus=function(pageId,value){
			if(value=="-"|| value.length==0)
				return;
			var pos=value.indexOf(",");
			var col1;
			var col2;
			if(pos==-1){
				col1=value;
				col2=null;
			}
			else{
				col1=value.substr(0,pos);
				col2=value.substr(pos+1);
			}
			if(pageId==null){
				this._default.color=col1;
				this._default.strokeColor=col2;
			}
			else
			this._storage[pageId]=new GearColorValue(col1,col2);
		}

		__proto.apply=function(){
			this._owner._gearLocked=true;
			var gv=this._storage[this._controller.selectedPageId];
			if(!gv)
				gv=this._default;
			(this._owner).color=gv.color;
			if(this._owner["strokeColor"]!=undefined && gv.strokeColor!=null)
				this._owner["strokeColor"]=gv.strokeColor;
			this._owner._gearLocked=false;
		}

		__proto.updateState=function(){
			var gv=this._storage[this._controller.selectedPageId];
			if(!gv){
				gv=new GearColorValue(null,null);
				this._storage[this._controller.selectedPageId]=gv;
			}
			gv.color=(this._owner).color;
			if(this._owner["strokeColor"]!=undefined)
				gv.strokeColor=this._owner["strokeColor"];
		}

		GearColor.__init$=function(){
			//class GearColorValue
			GearColorValue=(function(){
				function GearColorValue(color,strokeColor){
					this.color=null;
					this.strokeColor=null;
					this.color=color;
					this.strokeColor=strokeColor;
				}
				__class(GearColorValue,'');
				return GearColorValue;
			})()
		}

		return GearColor;
	})(GearBase)


	//class fairygui.GearDisplay extends fairygui.GearBase
	var GearDisplay=(function(_super){
		function GearDisplay(owner){
			this.pages=null;
			this._visible=0;
			GearDisplay.__super.call(this,owner);
			this._displayLockToken=1;
		}

		__class(GearDisplay,'fairygui.GearDisplay',_super);
		var __proto=GearDisplay.prototype;
		__proto.init=function(){
			this.pages=null;
		}

		__proto.addLock=function(){
			this._visible++;
			return this._displayLockToken;
		}

		__proto.releaseLock=function(token){
			if(token==this._displayLockToken)
				this._visible--;
		}

		__proto.apply=function(){
			this._displayLockToken++;
			if(this._displayLockToken<=0)
				this._displayLockToken=1;
			if(this.pages==null || this.pages.length==0
				|| this.pages.indexOf(this._controller.selectedPageId)!=-1)
			this._visible=1;
			else
			this._visible=0;
		}

		__getset(0,__proto,'connected',function(){
			return this._controller==null || this._visible>0;
		});

		return GearDisplay;
	})(GearBase)


	//class fairygui.GearIcon extends fairygui.GearBase
	var GearIcon=(function(_super){
		function GearIcon(owner){
			this._storage=null;
			this._default=null;
			GearIcon.__super.call(this,owner);
		}

		__class(GearIcon,'fairygui.GearIcon',_super);
		var __proto=GearIcon.prototype;
		__proto.init=function(){
			this._default=this._owner.icon;
			this._storage={};
		}

		__proto.addStatus=function(pageId,value){
			if(pageId==null)
				this._default=value;
			else
			this._storage[pageId]=value;
		}

		__proto.apply=function(){
			this._owner._gearLocked=true;
			var data=this._storage[this._controller.selectedPageId];
			if(data!=undefined)
				this._owner.icon=String(data);
			else
			this._owner.icon=this._default;
			this._owner._gearLocked=false;
		}

		__proto.updateState=function(){
			this._storage[this._controller.selectedPageId]=this._owner.icon;
		}

		return GearIcon;
	})(GearBase)


	//class fairygui.GearLook extends fairygui.GearBase
	var GearLook=(function(_super){
		var GearLookValue;
		function GearLook(owner){
			this.tweener=null;
			this._storage=null;
			this._default=null;
			this._tweenValue=null;
			this._tweenTarget=null;
			GearLook.__super.call(this,owner);
		}

		__class(GearLook,'fairygui.GearLook',_super);
		var __proto=GearLook.prototype;
		__proto.init=function(){
			this._default=new GearLookValue(this._owner.alpha,this._owner.rotation,this._owner.grayed,this._owner.touchable);
			this._storage={};
		}

		__proto.addStatus=function(pageId,value){
			if(value=="-"|| value.length==0)
				return;
			var arr=value.split(",");
			var gv;
			if(pageId==null)
				gv=this._default;
			else {
				gv=new GearLookValue();
				this._storage[pageId]=gv;
			}
			gv.alpha=parseFloat(arr[0]);
			gv.rotation=parseInt(arr[1]);
			gv.grayed=arr[2]=="1" ? true :false;
			if(arr.length<4)
				gv.touchable=this._owner.touchable;
			else
			gv.touchable=arr[3]=="1"?true:false;
		}

		__proto.apply=function(){
			var gv=this._storage[this._controller.selectedPageId];
			if(!gv)
				gv=this._default;
			if(this._tween && !UIPackage._constructing && !GearBase.disableAllTweenEffect){
				this._owner._gearLocked=true;
				this._owner.grayed=gv.grayed;
				this._owner.touchable=gv.touchable;
				this._owner._gearLocked=false;
				if (this.tweener !=null){
					if (this._tweenTarget.alpha !=gv.alpha || this._tweenTarget.rotation !=gv.rotation){
						this.tweener.complete();
						this.tweener=null;
					}
					else
					return;
				};
				var a=gv.alpha !=this._owner.alpha;
				var b=gv.rotation !=this._owner.rotation;
				if(a || b){
					if(this._owner.checkGearController(0,this._controller))
						this._displayLockToken=this._owner.addDisplayLock();
					this._tweenTarget=gv;
					if(this._tweenValue==null)
						this._tweenValue=new Point();
					this._tweenValue.x=this._owner.alpha;
					this._tweenValue.y=this._owner.rotation;
					this.tweener=Tween.to(this._tweenValue,
					{x:gv.alpha,y:gv.rotation },
					this._tweenTime*1000,
					this._easeType,
					Handler.create(this,this.__tweenComplete),
					this._delay*1000);
					this.tweener.update=Handler.create(this,this.__tweenUpdate,[a,b],false);
				}
			}
			else {
				this._owner._gearLocked=true;
				this._owner.grayed=gv.grayed;
				this._owner.alpha=gv.alpha;
				this._owner.rotation=gv.rotation;
				this._owner.touchable=gv.touchable;
				this._owner._gearLocked=false;
			}
		}

		__proto.__tweenUpdate=function(a,b){
			this._owner._gearLocked=true;
			if(a)
				this._owner.alpha=this._tweenValue.x;
			if(b)
				this._owner.rotation=this._tweenValue.y;
			this._owner._gearLocked=false;
		}

		__proto.__tweenComplete=function(){
			if(this._displayLockToken!=0){
				this._owner.releaseDisplayLock(this._displayLockToken);
				this._displayLockToken=0;
			}
			this.tweener=null;
			this._owner.displayObject.event("fui_gear_stop");
		}

		__proto.updateState=function(){
			var gv=this._storage[this._controller.selectedPageId];
			if(!gv){
				gv=new GearLookValue();
				this._storage[this._controller.selectedPageId]=gv;
			}
			gv.alpha=this._owner.alpha;
			gv.rotation=this._owner.rotation;
			gv.grayed=this._owner.grayed;
			gv.touchable=this._owner.touchable;
		}

		GearLook.__init$=function(){
			//class GearLookValue
			GearLookValue=(function(){
				function GearLookValue(alpha,rotation,grayed,touchable){
					this.alpha=NaN;
					this.rotation=NaN;
					this.grayed=false;
					this.touchable=false;
					(alpha===void 0)&& (alpha=0);
					(rotation===void 0)&& (rotation=0);
					(grayed===void 0)&& (grayed=false);
					(touchable===void 0)&& (touchable=true);
					this.alpha=alpha;
					this.rotation=rotation;
					this.grayed=grayed;
					this.touchable=touchable;
				}
				__class(GearLookValue,'');
				return GearLookValue;
			})()
		}

		return GearLook;
	})(GearBase)


	//class fairygui.GearSize extends fairygui.GearBase
	var GearSize=(function(_super){
		var GearSizeValue;
		function GearSize(owner){
			this.tweener=null;
			this._storage=null;
			this._default=null;
			this._tweenValue=null;
			this._tweenTarget=null;
			GearSize.__super.call(this,owner);
		}

		__class(GearSize,'fairygui.GearSize',_super);
		var __proto=GearSize.prototype;
		__proto.init=function(){
			this._default=new GearSizeValue(this._owner.width,this._owner.height,
			this._owner.scaleX,this._owner.scaleY);
			this._storage={};
		}

		__proto.addStatus=function(pageId,value){
			if(value=="-"|| value.length==0)
				return;
			var arr=value.split(",");
			var gv;
			if (pageId==null)
				gv=this._default;
			else {
				gv=new GearSizeValue();
				this._storage[pageId]=gv;
			}
			gv.width=parseInt(arr[0]);
			gv.height=parseInt(arr[1]);
			if(arr.length>2){
				gv.scaleX=parseFloat(arr[2]);
				gv.scaleY=parseFloat(arr[3]);
			}
		}

		__proto.apply=function(){
			var gv=this._storage[this._controller.selectedPageId];
			if (!gv)
				gv=this._default;
			if(this._tween && !UIPackage._constructing && !GearBase.disableAllTweenEffect){
				if(this.tweener!=null){
					if (this._tweenTarget.width !=gv.width || this._tweenTarget.height !=gv.height
						|| this._tweenTarget.scaleX !=gv.scaleX || this._tweenTarget.scaleY !=gv.scaleY){
						this.tweener.complete();
						this.tweener=null;
					}
					else
					return;
				};
				var a=gv.width !=this._owner.width || gv.height !=this._owner.height;
				var b=gv.scaleX !=this._owner.scaleX || gv.scaleY !=this._owner.scaleY;
				if(a || b){
					if(this._owner.checkGearController(0,this._controller))
						this._displayLockToken=this._owner.addDisplayLock();
					this._tweenTarget=gv;
					if(this._tweenValue==null)
						this._tweenValue=new GearSizeValue();
					this._tweenValue.width=this._owner.width;
					this._tweenValue.height=this._owner.height;
					this._tweenValue.scaleX=this._owner.scaleX;
					this._tweenValue.scaleY=this._owner.scaleY;
					this.tweener=Tween.to(this._tweenValue,
					{width:gv.width,height:gv.height,scaleX:gv.scaleX,scaleY:gv.scaleY },
					this._tweenTime*1000,
					this._easeType,
					Handler.create(this,this.__tweenComplete),
					this._delay*1000);
					this.tweener.update=Handler.create(this,this.__tweenUpdate,[a,b],false);
				}
			}
			else {
				this._owner._gearLocked=true;
				this._owner.setSize(gv.width,gv.height,this._owner.checkGearController(1,this._controller));
				this._owner.setScale(gv.scaleX,gv.scaleY);
				this._owner._gearLocked=false;
			}
		}

		__proto.__tweenUpdate=function(a,b){
			this._owner._gearLocked=true;
			if(a)
				this._owner.setSize(this._tweenValue.width,this._tweenValue.height,this._owner.checkGearController(1,this._controller));
			if(b)
				this._owner.setScale(this._tweenValue.scaleX,this._tweenValue.scaleY);
			this._owner._gearLocked=false;
		}

		__proto.__tweenComplete=function(){
			if(this._displayLockToken!=0){
				this._owner.releaseDisplayLock(this._displayLockToken);
				this._displayLockToken=0;
			}
			this.tweener=null;
			this._owner.displayObject.event("fui_gear_stop");
		}

		__proto.updateState=function(){
			var gv=this._storage[this._controller.selectedPageId];
			if(!gv){
				gv=new GearSizeValue();
				this._storage[this._controller.selectedPageId]=gv;
			}
			gv.width=this._owner.width;
			gv.height=this._owner.height;
			gv.scaleX=this._owner.scaleX;
			gv.scaleY=this._owner.scaleY;
		}

		__proto.updateFromRelations=function(dx,dy){
			if(this._controller==null || this._storage==null)
				return;
			for(var key in this._storage){
				var gv=this._storage[key];
				gv.width+=dx;
				gv.height+=dy;
			}
			this._default.width+=dx;
			this._default.height+=dy;
			this.updateState();
		}

		GearSize.__init$=function(){
			//class GearSizeValue
			GearSizeValue=(function(){
				function GearSizeValue(width,height,scaleX,scaleY){
					this.width=NaN;
					this.height=NaN;
					this.scaleX=NaN;
					this.scaleY=NaN;
					(width===void 0)&& (width=0);
					(height===void 0)&& (height=0);
					(scaleX===void 0)&& (scaleX=0);
					(scaleY===void 0)&& (scaleY=0);
					this.width=width;
					this.height=height;
					this.scaleX=scaleX;
					this.scaleY=scaleY;
				}
				__class(GearSizeValue,'');
				return GearSizeValue;
			})()
		}

		return GearSize;
	})(GearBase)


	//class fairygui.GearText extends fairygui.GearBase
	var GearText=(function(_super){
		function GearText(owner){
			this._storage=null;
			this._default=null;
			GearText.__super.call(this,owner);
		}

		__class(GearText,'fairygui.GearText',_super);
		var __proto=GearText.prototype;
		__proto.init=function(){
			this._default=this._owner.text;
			this._storage={};
		}

		__proto.addStatus=function(pageId,value){
			if(pageId==null)
				this._default=value;
			else
			this._storage[pageId]=value;
		}

		__proto.apply=function(){
			this._owner._gearLocked=true;
			var data=this._storage[this._controller.selectedPageId];
			if(data!=undefined)
				this._owner.text=String(data);
			else
			this._owner.text=this._default;
			this._owner._gearLocked=false;
		}

		__proto.updateState=function(){
			this._storage[this._controller.selectedPageId]=this._owner.text;
		}

		return GearText;
	})(GearBase)


	//class fairygui.GearXY extends fairygui.GearBase
	var GearXY=(function(_super){
		function GearXY(owner){
			this.tweener=null;
			this._storage=null;
			this._default=null;
			this._tweenValue=null;
			this._tweenTarget=null;
			GearXY.__super.call(this,owner);
		}

		__class(GearXY,'fairygui.GearXY',_super);
		var __proto=GearXY.prototype;
		__proto.init=function(){
			this._default=new Point(this._owner.x,this._owner.y);
			this._storage={};
		}

		__proto.addStatus=function(pageId,value){
			if(value=="-"|| value.length==0)
				return;
			var arr=value.split(",");
			var pt;
			if (pageId==null)
				pt=this._default;
			else {
				pt=new Point();
				this._storage[pageId]=pt;
			}
			pt.x=parseInt(arr[0]);
			pt.y=parseInt(arr[1]);
		}

		__proto.apply=function(){
			var pt=this._storage[this._controller.selectedPageId];
			if (!pt)
				pt=this._default;
			if(this._tween && !UIPackage._constructing && !GearBase.disableAllTweenEffect){
				if(this.tweener){
					if(this._tweenTarget.x!=pt.x || this._tweenTarget.y!=pt.y){
						this.tweener.complete();
						this.tweener=null;
					}
					else
					return;
				}
				if(this._owner.x !=pt.x || this._owner.y !=pt.y){
					if(this._owner.checkGearController(0,this._controller))
						this._displayLockToken=this._owner.addDisplayLock();
					this._tweenTarget=pt;
					if(this._tweenValue==null)
						this._tweenValue=new Point();
					this._tweenValue.x=this._owner.x;
					this._tweenValue.y=this._owner.y;
					this.tweener=Tween.to(this._tweenValue,
					{x:pt.x,y:pt.y },
					this._tweenTime*1000,
					this._easeType,
					Handler.create(this,this.__tweenComplete),
					this._delay*1000);
					this.tweener.update=Handler.create(this,this.__tweenUpdate,null,false);
				}
			}
			else {
				this._owner._gearLocked=true;
				this._owner.setXY(pt.x,pt.y);
				this._owner._gearLocked=false;
			}
		}

		__proto.__tweenUpdate=function(){
			this._owner._gearLocked=true;
			this._owner.setXY(this._tweenValue.x,this._tweenValue.y);
			this._owner._gearLocked=false;
		}

		__proto.__tweenComplete=function(){
			if(this._displayLockToken!=0){
				this._owner.releaseDisplayLock(this._displayLockToken);
				this._displayLockToken=0;
			}
			this.tweener=null;
			this._owner.displayObject.event("fui_gear_stop");
		}

		__proto.updateState=function(){
			var pt=this._storage[this._controller.selectedPageId];
			if(!pt){
				pt=new Point();
				this._storage[this._controller.selectedPageId]=pt;
			}
			pt.x=this._owner.x;
			pt.y=this._owner.y;
		}

		__proto.updateFromRelations=function(dx,dy){
			if(this._controller==null || this._storage==null)
				return;
			for (var key in this._storage){
				var pt=this._storage[key];
				pt.x+=dx;
				pt.y+=dy;
			}
			this._default.x+=dx;
			this._default.y+=dy;
			this.updateState();
		}

		return GearXY;
	})(GearBase)


	//class robotLegs.model.SoundSessionModel extends robotLegs.model.BaseSessionModel
	var SoundSessionModel=(function(_super){
		function SoundSessionModel(){
			this.startBol=true;
			this.music=null;
			this.soundVolume=NaN;
			this.musicVolume=NaN;
			this.__sesionKey="Sound";
			SoundSessionModel.__super.call(this);
			this.soundVolume=this.getValue("soundVolume");
			this.musicVolume=this.getValue("musicVolume");
			this.soundVolume=this.soundVolume ? this.soundVolume :1;
			this.musicVolume=this.musicVolume ? this.musicVolume :1;
			SoundManager.soundVolume=this.soundVolume;
			SoundManager.musicVolume=this.musicVolume;
		}

		__class(SoundSessionModel,'robotLegs.model.SoundSessionModel',_super);
		return SoundSessionModel;
	})(BaseSessionModel)


	//class robotLegs.command.BaseCommand extends robotLegs.RLObj
	var BaseCommand=(function(_super){
		function BaseCommand(){
			this.commandDelayRun=null;
			this.__notificationVo=null;
			this.__singletonNameArr=[];
			BaseCommand.__super.call(this);
			this.init();
		}

		__class(BaseCommand,'robotLegs.command.BaseCommand',_super);
		var __proto=BaseCommand.prototype;
		Laya.imps(__proto,{"robotLegs.interfaces.ICommad":true})
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.getSingletoObj();
		}

		/**
		*获取单例对象
		*
		*/
		__proto.getSingletoObj=function(){
			for(var singletonName in this){
				var singleton=this.injector.singletonObj[singletonName];
				if(!singleton)
					continue ;
				this[singletonName]=singleton;
				this.__singletonNameArr.push(singletonName);
			}
		}

		/**
		*获取到单例
		*@return
		*
		*/
		__proto.getSingleto=function(){}
		/**
		*执行
		*@param e
		*
		*/
		__proto.execute=function(_notificationVo){}
		/**
		*延后执行
		*@param _cmd 消息
		*@param _delayTime 延后时长,毫秒为单位
		*
		*/
		__proto.delayRun=function(_cmd,_delayTime,_data){
			this.commandDelayRun.delayRun(_cmd,_delayTime,_data);
		}

		__proto.startLoad=function(_notificationVo){
			this.__notificationVo=_notificationVo;
			var loadCommandVo=this.__notificationVo.data;
			BaseCommand.errorUrl=loadCommandVo.mainUrl;
			loadCommandVo.initFile();
			Laya.loader.load(loadCommandVo.fileArr,Handler.create(this,this.onLoaded),Handler.create(this,this.onProcess,null,false),null,1,loadCommandVo.cache);
			Laya.loader.on("error",this,this.loadingFailed);
		}

		__proto.loadingFailed=function(_failedFile){
			if(_failedFile.indexOf("ggphoto")>-1)
				return;
			if(_failedFile.indexOf("Hall")>-1)
				return;
			var obj=new Object();
			obj={
				"platform":UITypeConfig.UI_TYPE,
				"report_content":'Load failed:'+_failedFile,
				"client_id":0,
				"device":"",
				"os":""
			};
			try{
				this.sendHttpRequest(BaseCommand.errorUrl,"","","json",obj,false);
			}
			catch(e){
			}
		}

		/**
		*加载进度
		*
		*/
		__proto.onProcess=function(_progress){
			console.log("加载进度：",_progress);
		}

		/**
		*加载完毕
		*
		*/
		__proto.onLoaded=function(){
			if(this.__notificationVo.data && this.__notificationVo.data["loadTypeBol"]){
				var loadCommandVo=this.__notificationVo.data;
				loadCommandVo.fileArr.length=0;
			}
			this.execute(this.__notificationVo);
			Laya.timer.once(1000,this,this.clearMemory);
		}

		/**
		*开始播放动画
		*
		*/
		__proto.playAni=function(_aniArr){
			this.sendNotification("Add_Cmd",_aniArr);
			this.sendNotification("Play_Cmd");
		}

		/**
		*简单点的改变状态
		*@param _baseViewVo
		*@param _status
		*@param _data
		*@param _delayTime
		*@param _soundBol
		*@param _cmdBol
		*
		*/
		__proto.changeStatusByAni=function(_baseViewVo,_status,_data,_delayTime,_soundBol,_cmdBol){
			(_delayTime===void 0)&& (_delayTime=0);
			(_soundBol===void 0)&& (_soundBol=false);
			(_cmdBol===void 0)&& (_cmdBol=false);
			var areaIndex=_baseViewVo ? _baseViewVo.areaIndex :"";
			var aniArr=[];
			aniArr.push(new AnimationVo(areaIndex,_status,_data,_delayTime,_soundBol,_cmdBol));
			this.playAni(aniArr);
		}

		/**
		*添加包
		*@param _packageName
		*
		*/
		__proto.addPackage=function(_packageName){
			var path="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/"+_packageName;
			if(!UIPackage.getById(path))
				UIPackage.addPackage(path);
		}

		/**
		*删除包
		*@param _packageName
		*
		*/
		__proto.removePackage=function(_packageName){
			var path="res/fairyGUI/"+UITypeConfig.UI_TYPE+"/"+_packageName;
			if(UIPackage.getById(path))
				UIPackage.removePackage(path);
		}

		/**
		*发送http请求
		*@param _url 服务器链接地址
		*@param _completeCmd 得到数据后，需要回调的cmd
		*@param _errorCmd 如果出错，需要回调的cmd
		*@param _responseType 返回消息的类型,可设置为"text"，"json"，"xml","arraybuffer"
		*@param _postData 需要传输的数据,如果是string，类似a=111&b=222，可以使用二进制arraybuffer
		*@param _getTypeBol post提交还是get提交,默认是get
		*@param _heads 头信息，key value数组，比如["Content-Type","application/json"]
		*@param _progressCmd 提交请求后的进度，需要回调的cmd
		*
		*/
		__proto.sendHttpRequest=function(_url,_completeCmd,_errorCmd,_responseType,_postData,_getTypeBol,_heads,_progressCmd,_deleteBol,putBol){
			(_responseType===void 0)&& (_responseType="text");
			(_getTypeBol===void 0)&& (_getTypeBol=true);
			(_progressCmd===void 0)&& (_progressCmd="");
			(_deleteBol===void 0)&& (_deleteBol=false);
			(putBol===void 0)&& (putBol=false);
			var httpRequestVo=new HttpRequestVo();
			httpRequestVo.url=_url;
			httpRequestVo.completeBackCmd=_completeCmd;
			httpRequestVo.errorBackCmd=_errorCmd;
			httpRequestVo.responseType=_responseType;
			httpRequestVo.postData=_postData;
			httpRequestVo.headers=_heads;
			if(_getTypeBol){
				httpRequestVo.method="get";
			}
			else{
				httpRequestVo.method="post";
			}
			this.sendNotification("Request_Cmd",httpRequestVo);
		}

		/**
		*清理Res
		*
		*/
		__proto.clearRes=function(){
			var className;
			className=this.constructor.name;
			var resUrlArr=LoadCommandVo.resUrlObj[className];
			if(!resUrlArr)
				return;
			while(resUrlArr.length > 0){
				Laya.loader.clearRes(resUrlArr[0]);
				resUrlArr.shift();
			}
		}

		/**
		*清除缓存
		*
		*/
		__proto.clearMemory=function(){
			if(this.__notificationVo){
				if(this.__notificationVo.data && this.__notificationVo.data["loadTypeBol"]){
					var loadCommandVo=this.__notificationVo.data;
					if(loadCommandVo.fileArr.length > 0){
						return;
					}
				}
			}
			while(this.__singletonNameArr.length > 0){
				this[this.__singletonNameArr[0]]=null;
				this.__singletonNameArr.shift();
			}
			this.commandMap=null;
			this.viewClassMap=null;
			this.injector=null;
			this.__notificationVo=null;
		}

		BaseCommand.errorUrl=null
		return BaseCommand;
	})(RLObj)


	//class robotLegs.vo.BaseViewVo extends robotLegs.events.PropertyChangeEventDispatcher
	var BaseViewVo=(function(_super){
		function BaseViewVo(){
			this.__status=null;
			this.__areaIndex=null;
			this.aniData=null;
			this.openAlreadyBol=false;
			BaseViewVo.__super.call(this);
			BaseViewVo.__count++;
			this.__areaIndex="Area_"+BaseViewVo.__count;
		}

		__class(BaseViewVo,'robotLegs.vo.BaseViewVo',_super);
		var __proto=BaseViewVo.prototype;
		/**
		*View区域的标识
		*@return
		*
		*/
		__getset(0,__proto,'areaIndex',function(){
			return this.__areaIndex;
		});

		/**
		*当前View的状态
		*/
		__getset(0,__proto,'status',function(){
			return this.__status;
			},function(_status){
			this.__status=_status;
			if(this.__status.length > 0)
				this.event("status",this.__status);
		});

		BaseViewVo.HIDE_STATUS="Hide_Status";
		BaseViewVo.DISPLAY_STATUS="Display_Status";
		BaseViewVo.REMOVE_STATUS="Remove_Status";
		BaseViewVo.REMOVE_BY_ANI_STATUS="Remove_By_Ani_Status";
		BaseViewVo.__count=0;
		return BaseViewVo;
	})(PropertyChangeEventDispatcher)


	//class fairygui.GButton extends fairygui.GComponent
	var GButton=(function(_super){
		function GButton(){
			this._titleObject=null;
			this._iconObject=null;
			this._relatedController=null;
			this._mode=0;
			this._selected=false;
			this._title=null;
			this._selectedTitle=null;
			this._icon=null;
			this._selectedIcon=null;
			this._sound=null;
			this._soundVolumeScale=0;
			this._pageOption=null;
			this._buttonController=null;
			this._changeStateOnClick=false;
			this._linkedPopup=null;
			this._downEffect=0;
			this._downEffectValue=0;
			this._downScaled=false;
			this._down=false;
			this._over=false;
			GButton.__super.call(this);
			this._mode=0;
			this._title="";
			this._icon="";
			this._sound=UIConfig$1.buttonSound;
			this._soundVolumeScale=UIConfig$1.buttonSoundVolumeScale;
			this._pageOption=new PageOption();
			this._changeStateOnClick=true;
			this._downEffectValue=0.8;
		}

		__class(GButton,'fairygui.GButton',_super);
		var __proto=GButton.prototype;
		__proto.fireClick=function(downEffect){
			(downEffect===void 0)&& (downEffect=true);
			if (downEffect && this._mode==0){
				this.setState("over");
				Laya.timer.once(100,this,this.setState,[ "down"]);
				Laya.timer.once(200,this,this.setState,[ "up"]);
			}
			this.__click(Events.createEvent("click",this.displayObject));
		}

		__proto.setState=function(val){
			if (this._buttonController)
				this._buttonController.selectedPage=val;
			if(this._downEffect==1){
				var cnt=this.numChildren;
				if(val=="down" || val=="selectedOver" || val=="selectedDisabled"){
					var r=this._downEffectValue *255;
					var color=Utils.toHexColor((r << 16)+(r << 8)+r);
					for(var i=0;i < cnt;i++){
						var obj=this.getChildAt(i);
						if(((obj instanceof fairygui.GImage ))|| ((obj instanceof fairygui.GLoader ))
							|| ((obj instanceof fairygui.GMovieClip )))
						(obj).color=color;
					}
				}
				else {
					for(i=0;i < cnt;i++){
						obj=this.getChildAt(i);
						if(((obj instanceof fairygui.GImage ))|| ((obj instanceof fairygui.GLoader ))
							|| ((obj instanceof fairygui.GMovieClip )))
						(obj).color="#FFFFFF";
					}
				}
			}
			else if(this._downEffect==2){
				if(val=="down" || val=="selectedOver" || val=="selectedDisabled"){
					if(!this._downScaled){
						this.setScale(this.scaleX*this._downEffectValue,this.scaleY*this._downEffectValue);
						this._downScaled=true;
					}
				}
				else{
					if(this._downScaled){
						this.setScale(this.scaleX/this._downEffectValue,this.scaleY/this._downEffectValue);
						this._downScaled=false;
					}
				}
			}
		}

		__proto.handleControllerChanged=function(c){
			_super.prototype.handleControllerChanged.call(this,c);
			if (this._relatedController==c)
				this.selected=this._pageOption.id==c.selectedPageId;
		}

		__proto.handleGrayedChanged=function(){
			if(this._buttonController && this._buttonController.hasPage("disabled")){
				if(this.grayed){
					if(this._selected && this._buttonController.hasPage("selectedDisabled"))
						this.setState("selectedDisabled");
					else
					this.setState("disabled");
				}
				else if(this._selected)
				this.setState("down");
				else
				this.setState("up");
			}
			else
			_super.prototype.handleGrayedChanged.call(this);
		}

		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			xml=ToolSet.findChildNode(xml,"Button");
			var str;
			str=xml.getAttribute("mode");
			if (str)
				this._mode=ButtonMode.parse(str);
			str=xml.getAttribute("sound");
			if(str)
				this._sound=str;
			str=xml.getAttribute("volume");
			if(str)
				this._soundVolumeScale=parseInt(str)/ 100;
			str=xml.getAttribute("downEffect");
			if(str){
				this._downEffect=str=="dark"?1:(str=="scale"?2:0);
				str=xml.getAttribute("downEffectValue");
				this._downEffectValue=parseFloat(str);
				if(this._downEffect==2)
					this.setPivot(0.5,0.5);
			}
			this._buttonController=this.getController("button");
			this._titleObject=this.getChild("title");
			this._iconObject=this.getChild("icon");
			if (this._titleObject !=null)
				this._title=this._titleObject.text;
			if (this._iconObject !=null)
				this._icon=this._iconObject.icon;
			if (this._mode==0)
				this.setState("up");
			this.on("mouseover",this,this.__rollover);
			this.on("mouseout",this,this.__rollout);
			this.on("mousedown",this,this.__mousedown);
			this.on("click",this,this.__click);
		}

		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			xml=ToolSet.findChildNode(xml,"Button");
			if (xml){
				var str;
				str=xml.getAttribute("title");
				if (str)
					this.title=str;
				str=xml.getAttribute("icon");
				if (str)
					this.icon=str;
				str=xml.getAttribute("selectedTitle");
				if (str)
					this.selectedTitle=str;
				str=xml.getAttribute("selectedIcon");
				if (str)
					this.selectedIcon=str;
				str=xml.getAttribute("titleColor");
				if (str)
					this.titleColor=str;
				str=xml.getAttribute("titleFontSize");
				if(str)
					this.titleFontSize=parseInt(str);
				str=xml.getAttribute("sound");
				if (str!=null)
					this._sound=str;
				str=xml.getAttribute("volume");
				if(str)
					this._soundVolumeScale=parseInt(str)/100;
				str=xml.getAttribute("controller");
				if (str)
					this._relatedController=this._parent.getController(str);
				else
				this._relatedController=null;
				this._pageOption.id=xml.getAttribute("page");
				this.selected=xml.getAttribute("checked")=="true";
			}
		}

		__proto.__rollover=function(){
			if(!this._buttonController || !this._buttonController.hasPage("over"))
				return;
			this._over=true;
			if (this._down)
				return;
			if(this.grayed && this._buttonController.hasPage("disabled"))
				return;
			this.setState(this._selected ? "selectedOver" :"over");
		}

		__proto.__rollout=function(){
			if(!this._buttonController || !this._buttonController.hasPage("over"))
				return;
			this._over=false;
			if (this._down)
				return;
			if(this.grayed && this._buttonController.hasPage("disabled"))
				return;
			this.setState(this._selected ? "down" :"up");
		}

		__proto.__mousedown=function(evt){
			this._down=true;
			GRoot.inst.checkPopups(evt.target);
			Laya.stage.on("mouseup",this,this.__mouseup);
			if(this._mode==0){
				if(this.grayed && this._buttonController && this._buttonController.hasPage("disabled"))
					this.setState("selectedDisabled");
				else
				this.setState("down");
			}
			if (this._linkedPopup !=null){
				if ((this._linkedPopup instanceof fairygui.Window ))
					(this._linkedPopup).toggleStatus();
				else
				this.root.togglePopup(this._linkedPopup,this);
			}
		}

		__proto.__mouseup=function(){
			if (this._down){
				Laya.stage.off("mouseup",this,this.__mouseup);
				this._down=false;
				if(this._mode==0){
					if(this.grayed && this._buttonController && this._buttonController.hasPage("disabled"))
						this.setState("disabled");
					else if(this._over)
					this.setState("over");
					else
					this.setState("up");
				}
			}
		}

		__proto.__click=function(evt){
			if(this._sound){
				var pi=UIPackage.getItemByURL(this._sound);
				if (pi)
					GRoot.inst.playOneShotSound(pi.owner.getItemAssetURL(pi));
				else
				GRoot.inst.playOneShotSound(this._sound);
			}
			if (this._mode==1){
				if(this._changeStateOnClick){
					this.selected=!this._selected;
					Events.dispatch("fui_state_changed",this.displayObject,evt);
				}
			}
			else if (this._mode==2){
				if (this._changeStateOnClick && !this._selected){
					this.selected=true;
					Events.dispatch("fui_state_changed",this.displayObject,evt);
				}
			}
			else{
				if(this._relatedController)
					this._relatedController.selectedPageId=this._pageOption.id;
			}
		}

		__getset(0,__proto,'relatedController',function(){
			return this._relatedController;
			},function(val){
			if (val !=this._relatedController){
				this._relatedController=val;
				this._pageOption.controller=val;
				this._pageOption.clear();
			}
		});

		__getset(0,__proto,'icon',function(){
			return this._icon;
			},function(value){
			this._icon=value;
			value=(this._selected && this._selectedIcon)? this._selectedIcon :this._icon;
			if(this._iconObject!=null)
				this._iconObject.icon=value;
			this.updateGear(7);
		});

		__getset(0,__proto,'titleFontSize',function(){
			if((this._titleObject instanceof fairygui.GTextField ))
				return (this._titleObject).fontSize;
			else if((this._titleObject instanceof fairygui.GLabel ))
			return (this._titleObject).titleFontSize;
			else if((this._titleObject instanceof fairygui.GButton ))
			return (this._titleObject).titleFontSize;
			else
			return 0;
			},function(value){
			if((this._titleObject instanceof fairygui.GTextField ))
				(this._titleObject).fontSize=value;
			else if((this._titleObject instanceof fairygui.GLabel ))
			(this._titleObject).titleFontSize=value;
			else if((this._titleObject instanceof fairygui.GButton ))
			(this._titleObject).titleFontSize=value;
		});

		__getset(0,__proto,'selectedIcon',function(){
			return this._selectedIcon;
			},function(value){
			this._selectedIcon=value;
			value=(this._selected && this._selectedIcon)? this._selectedIcon :this._icon;
			if(this._iconObject!=null)
				this._iconObject.icon=value;
		});

		__getset(0,__proto,'title',function(){
			return this._title;
			},function(value){
			this._title=value;
			if (this._titleObject)
				this._titleObject.text=(this._selected && this._selectedTitle)? this._selectedTitle :this._title;
			this.updateGear(6);
		});

		__getset(0,__proto,'text',function(){
			return this.title;
			},function(value){
			this.title=value;
		});

		__getset(0,__proto,'selectedTitle',function(){
			return this._selectedTitle;
			},function(value){
			this._selectedTitle=value;
			if (this._titleObject)
				this._titleObject.text=(this._selected && this._selectedTitle)? this._selectedTitle :this._title;
		});

		__getset(0,__proto,'soundVolumeScale',function(){
			return this._soundVolumeScale;
			},function(value){
			this._soundVolumeScale=value;
		});

		__getset(0,__proto,'sound',function(){
			return this._sound;
			},function(val){
			this._sound=val;
		});

		__getset(0,__proto,'titleColor',function(){
			if((this._titleObject instanceof fairygui.GTextField ))
				return (this._titleObject).color;
			else if((this._titleObject instanceof fairygui.GLabel ))
			return (this._titleObject).titleColor;
			else if((this._titleObject instanceof fairygui.GButton ))
			return (this._titleObject).titleColor;
			else
			return "#000000";
			},function(value){
			if((this._titleObject instanceof fairygui.GTextField ))
				(this._titleObject).color=value;
			else if((this._titleObject instanceof fairygui.GLabel ))
			(this._titleObject).titleColor=value;
			else if((this._titleObject instanceof fairygui.GButton ))
			(this._titleObject).titleColor=value;
		});

		__getset(0,__proto,'selected',function(){
			return this._selected;
			},function(val){
			if (this._mode==0)
				return;
			if (this._selected !=val){
				this._selected=val;
				if(this.grayed && this._buttonController && this._buttonController.hasPage("disabled")){
					if(this._selected)
						this.setState("selectedDisabled");
					else
					this.setState("disabled");
				}
				else {
					if(this._selected)
						this.setState(this._over ? "selectedOver" :"down");
					else
					this.setState(this._over ? "over" :"up");
				}
				if(this._selectedTitle && this._titleObject)
					this._titleObject.text=this._selected ? this._selectedTitle :this._title;
				if(this._selectedIcon){
					var str=this._selected ? this._selectedIcon :this._icon;
					if(this._iconObject!=null)
						this._iconObject.icon=str;
				}
				if(this._relatedController
					&& this._parent
				&& !this._parent._buildingDisplayList){
					if(this._selected){
						this._relatedController.selectedPageId=this._pageOption.id;
						if(this._relatedController._autoRadioGroupDepth)
							this._parent.adjustRadioGroupDepth(this,this._relatedController);
					}
					else if(this._mode==1 && this._relatedController.selectedPageId==this._pageOption.id)
					this._relatedController.oppositePageId=this._pageOption.id;
				}
			}
		});

		__getset(0,__proto,'mode',function(){
			return this._mode;
			},function(value){
			if (this._mode !=value){
				if (value==0)
					this.selected=false;
				this._mode=value;
			}
		});

		__getset(0,__proto,'pageOption',function(){
			return this._pageOption;
		});

		__getset(0,__proto,'changeStateOnClick',function(){
			return this._changeStateOnClick;
			},function(value){
			this._changeStateOnClick=value;
		});

		__getset(0,__proto,'linkedPopup',function(){
			return this._linkedPopup;
			},function(value){
			this._linkedPopup=value;
		});

		GButton.UP="up";
		GButton.DOWN="down";
		GButton.OVER="over";
		GButton.SELECTED_OVER="selectedOver";
		GButton.DISABLED="disabled";
		GButton.SELECTED_DISABLED="selectedDisabled";
		return GButton;
	})(GComponent)


	//class robotLegs.sprite.BaseUISprite extends robotLegs.RLObj
	var BaseUISprite=(function(_super){
		function BaseUISprite(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.__initWidth=NaN;
			this.__initHeight=NaN;
			this.__packageName="";
			this.__mainView=null;
			this.__windowBol=false;
			this.__voName="";
			this.__updatedAniRelationsBol=false;
			this.__classComponentArr=[];
			this.__componentNameArr=[];
			this.__statusCallBackObj=new Object();
			this.__aniNameArr=[];
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			BaseUISprite.__super.call(this);
			this.__packageName=_packageName;
			this.__mainView=_mainView;
			this.__windowBol=_windowBol;
			this.__initWidth=_initWidth;
			this.__initHeight=_initHeight;
			this.init();
			this.initStatusCallBack();
		}

		__class(BaseUISprite,'robotLegs.sprite.BaseUISprite',_super);
		var __proto=BaseUISprite.prototype;
		/**
		*初始化需要注册的状态
		*
		*/
		__proto.initStatusCallBack=function(){
			this.registerStatusCallBack("Display_Status",new Handler(this,this.display));
			this.registerStatusCallBack("Hide_Status",new Handler(this,this.hide));
			this.registerStatusCallBack("Remove_Status",new Handler(this,this.remove));
			this.registerStatusCallBack("Remove_By_Ani_Status",new Handler(this,this.removeByAni));
		}

		/**
		*注册状态
		*@param _status
		*@param _func
		*
		*/
		__proto.registerStatusCallBack=function(_status,_handle){
			this.__statusCallBackObj[_status]=_handle;
		}

		/**
		*添加到舞台， 将View注入
		*@param e
		*
		*/
		__proto.init=function(){
			_super.prototype.init.call(this);
			var className;
			className=this.constructor.name;
			var viewClass=ViewClassMap.getInstance().getViewClass(className);
			var viewVo=ViewClassMap.getInstance().getViewVo(className);
			var topParentBol=false;
			if(!this.__mainView){
				topParentBol=true;
				this.__mainView=UIPackage.createObject(this.__packageName,className).asCom;
				this.__mainView.opaque=false;
				this.__mainView.name=className;
			}
			if(!this.__mainView){
				console.log("没有注入该对象->",className);
				return;
			}
			for(var componentName in this){
				if(componentName.indexOf("__")>-1){
					continue ;
				}
				if(componentName.indexOf("Vo")>-1 && componentName.indexOf("ViewVo")==-1){
					if(viewVo){
						this.bindViewVo(viewVo);
					}
					continue ;
				}
				if(this[componentName])
					continue ;
				if(componentName.indexOf("Controller")>-1){
					this[componentName]=this.__mainView.getController(componentName);
					this.__componentNameArr.push(componentName);
					continue ;
				}
				if(componentName.indexOf("Ani")>-1){
					this.bindAni(componentName);
					continue ;
				}
				if(componentName.indexOf("List")>-1){
					var gList=this.__mainView.getChild(componentName);
					if(!gList)
						continue ;
					this[componentName]=gList;
					this.__componentNameArr.push(componentName);
					if(gList.numChildren==0)
						continue ;
					var listOneClassName=gList.getChildAt(0).packageItem.name;
					var listOneClass=this.viewClassMap.getViewClass(listOneClassName);
					if(!this["__listArr"]){
						console.log("没有找到__listArr这个变量");
						continue ;
					}
					for(var gListIndex=0;gListIndex < gList.numChildren;gListIndex++){
						this["__listArr"].push(new listOneClass(this.__packageName,gList.getChildAt(gListIndex)));
					}
					continue ;
				};
				var componentClassName="";
				var childViewClass=this.viewClassMap.getViewClass(componentName);
				if(childViewClass){
					if(!this.__mainView.getChild(componentName)){
						console.log("请检查fairyGUI上这个对象的命名是否正确->"+componentName);
						continue ;
					}
					this[componentName]=new childViewClass(this.__packageName,this.__mainView.getChild(componentName));
					this.__classComponentArr.push(this[componentName]);
				}
				else{
					if(componentName.indexOf("$")>-1){
						componentClassName=componentName.split("$")[1];
					}
					if(componentClassName.length > 0){
						viewClass=this.viewClassMap.getViewClass(componentClassName);
						try{
							this[componentName]=new viewClass(this.__packageName,this.__mainView.getChild(componentName));
						}
						catch(e){
							throw Error("该视图类没用viewClassMap.map注入->"+componentClassName);
						}
						this.__classComponentArr.push(this[componentName]);
						if(componentName.indexOf("Btn")>-1 && this[componentName]){
							this.setMouseCursor(this[componentName].view.displayObject);
						}
					}
					else{
						this[componentName]=this.__mainView.getChild(componentName);
						this.__componentNameArr.push(componentName);
						if(componentName.indexOf("Btn")>-1 && this[componentName]){
							this.setMouseCursor(this[componentName].displayObject);
						}
					}
				}
			}
			if(topParentBol){
				if(this.__initWidth > 0){
					this.__mainView.setSize(this.__initWidth,this.__initHeight);
				}
				else{
					if(!this.__windowBol)
						this.__mainView.setSize(GRoot.inst.width,GRoot.inst.height);
				}
			}
			console.log("注入成功->",className);
			this.__mainView.on("added",this,this.addedToStage);
			this.__mainView.on("removed",this,this.removedFromStage);
		}

		/**
		*绑定ViewVo对象
		*
		*/
		__proto.bindViewVo=function(_baseViewVo){
			if(this[this.__voName])
				this[this.__voName].off("Property_Change",this,this._$2_update);
			this.__voName=this.getVoName(_baseViewVo);
			this[this.__voName]=_baseViewVo;
			this.sendNotification("Bind_Area_Cmd",_baseViewVo);
			_baseViewVo.on("Property_Change",this,this._$2_update);
		}

		/**
		*获取vo对象的变量名
		*@param _viewVo
		*@return
		*
		*/
		__proto.getVoName=function(_viewVo){
			var voName=_viewVo["__class"].name;
			voName=voName.charAt(0).toLocaleLowerCase()+voName.substr(1,voName.length-1);
			return voName;
		}

		/**
		*绑定动画
		*@param _componentName
		*
		*/
		__proto.bindAni=function(_componentName){
			var aniTransition=this.__mainView.getTransition(_componentName);
			this[_componentName]=aniTransition;
			this.__componentNameArr.push(_componentName);
			this.__aniNameArr.push(_componentName);
		}

		/**
		*播放动画
		*@param _aniTransition
		*@param onComplete
		*@param times
		*@param delay
		*
		*/
		__proto.playAni=function(_aniTransition,onComplete,times,delay){
			(times===void 0)&& (times=1);
			(delay===void 0)&& (delay=0);
			this.updateAniFromRelations();
			_aniTransition.play(onComplete,times,delay);
		}

		/**
		*倒着播放动画
		*@param _aniTransition
		*@param onComplete
		*@param times
		*@param delay
		*
		*/
		__proto.playReverseAni=function(_aniTransition,onComplete,times,delay){
			(times===void 0)&& (times=1);
			(delay===void 0)&& (delay=0);
			this.updateAniFromRelations();
			_aniTransition.playReverse(onComplete,times,delay);
		}

		/**
		*自适应后，更新动画的初始位置
		*
		*/
		__proto.updateAniFromRelations=function(){
			if(this.__updatedAniRelationsBol)
				return;
			this.__updatedAniRelationsBol=true;
			for(var i=0;i < this.__aniNameArr.length;i++){
				var aniTransition=this[this.__aniNameArr[i]];
				var aniStartPosCompName=this.__aniNameArr[i]+"_StartPos";
				var aniStartPosComp=this.__mainView.getChild(aniStartPosCompName);
				var ii=0;
				if(aniStartPosComp){
					for(ii=0;ii < aniTransition._items.length;ii++){
						if(aniTransition._items[ii].startValue.f1==0 && aniTransition._items[ii].startValue.f2==0)
							continue ;
						aniTransition._items[ii].startValue.f1=aniStartPosComp.x;
						aniTransition._items[ii].startValue.f2=aniStartPosComp.y;
					}
					aniStartPosComp.parent.removeChild(aniStartPosComp);
				};
				var aniEndPosCompName=this.__aniNameArr[i]+"_EndPos";
				var aniEndPosComp=this.__mainView.getChild(aniEndPosCompName);
				if(aniEndPosComp){
					for(ii=0;ii < aniTransition._items.length;ii++){
						if(aniTransition._items[ii].endValue.f1==0 && aniTransition._items[ii].endValue.f2==0)
							continue ;
						aniTransition._items[ii].endValue.f1=aniEndPosComp.x;
						aniTransition._items[ii].endValue.f2=aniEndPosComp.y;
					}
					aniEndPosComp.parent.removeChild(aniEndPosComp);
				}
			}
		}

		/**
		*添加到舞台
		*@param e
		*
		*/
		__proto.addedToStage=function(e){}
		/**
		*从舞台移除
		*@param e
		*
		*/
		__proto.removedFromStage=function(e){}
		/**
		*执行更新
		*
		*/
		__proto._$2_update=function(e){
			var status=this[this.__voName].status;
			var handle=this.__statusCallBackObj[status];
			this[this.__voName].status="";
			if(UITypeConfig.WEB_VIEW_BOL){
				try{
					handle.run();
				}
				catch(e){
				}
			}
			else{
				handle.run();
			}
		}

		/**
		*显示
		*
		*/
		__proto.display=function(){
			this.__mainView.visible=true;
		}

		/**
		*隐藏
		*
		*/
		__proto.hide=function(){
			this.__mainView.visible=false;
		}

		/**
		*移除
		*
		*/
		__proto.remove=function(){
			this.__mainView.parent.removeChild(this.__mainView);
			if(this[this.__voName])
				this[this.__voName].status="";
			while(this.__classComponentArr.length > 0){
				(this.__classComponentArr [0]).remove();
				this.__classComponentArr.shift();
			}
			this.clearMemory();
			this.event("removed");
		}

		/**
		*用动画序列移除
		*
		*/
		__proto.removeByAni=function(){
			this.__mainView.parent.removeChild(this.__mainView);
			if(this[this.__voName])
				this[this.__voName].status="";
			while(this.__classComponentArr.length > 0){
				(this.__classComponentArr [0]).remove();
				this.__classComponentArr.shift();
			}
			this.complateAni();
			this.clearMemory();
			this.event("removed");
		}

		/**
		*清除缓存
		*
		*/
		__proto.clearMemory=function(){
			this.__mainView.off("added",this,this.addedToStage);
			if(this.__voName.length > 0)
				this.sendNotification("Cancel_Bind_Area_Cmd",this[this.__voName].areaIndex);
			this.stopTime();
			for(var callBackIndex in this.__statusCallBackObj){
				delete this.__statusCallBackObj[callBackIndex];
			}
			while(this.__componentNameArr.length > 0){
				this[this.__componentNameArr[0]]=null;
				this.__componentNameArr.shift();
			}
			if(this[this.__voName])
				this[this.__voName].off("Property_Change",this,this._$2_update);
			this[this.__voName]=null;
			this.__mainView=null;
			this.viewClassMap=null;
			this.commandMap=null;
			this.injector=null;
		}

		/**
		*设置鼠标手势
		*@param _sprite
		*
		*/
		__proto.setMouseCursor=function(_sprite){
			_sprite.on("mousemove",this,this.displayCursor);
			_sprite.on("mouseover",this,this.displayCursor);
			_sprite.on("mouseout",this,this.hideCursor);
		}

		__proto.displayCursor=function(e){
			Mouse.cursor="hand";
		}

		__proto.hideCursor=function(e){
			Mouse.cursor="";
		}

		/**
		*完成动画
		*
		*/
		__proto.complateAni=function(){
			this.sendNotification("Complete_One_Ani_Cmd");
		}

		/**
		*开始计时(毫秒为单位)
		*
		*/
		__proto.startTime=function(_time,_handler){
			this.stopTime();
			Laya.timer.loop(_time,this,_handler.method);
		}

		/**
		*停止计时
		*
		*/
		__proto.stopTime=function(){
			Laya.timer.clearAll(this);
		}

		__getset(0,__proto,'view',function(){
			return this.__mainView;
		});

		__getset(0,__proto,'visible',function(){
			return this.__mainView.visible;
			},function(_visible){
			this.__mainView.visible=_visible;
		});

		return BaseUISprite;
	})(RLObj)


	//class modules.hall.v.component.CommonGridOneItem extends fairygui.GComponent
	var CommonGridOneItem=(function(_super){
		function CommonGridOneItem(){
			this.imgIcon=null;
			this.txtName=null;
			this.txtValue=null;
			CommonGridOneItem.__super.call(this);
		}

		__class(CommonGridOneItem,'modules.hall.v.component.CommonGridOneItem',_super);
		var __proto=CommonGridOneItem.prototype;
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this.imgIcon=this.getChild("imgIcon");
			this.txtName=this.getChild("txtName");
			this.txtValue=this.getChild("txtValue");
			this.width=GRoot.inst.width/2-2;
		}

		__proto.updateData=function(data){
			this.txtName.text=data.name;
			if(data["type"]==1){
				this.txtValue.text=data.value+"人";
			}
			else{
				this.txtValue.text=data.value+"元";
			}
			this.imgIcon.url="ui://"+GameUtil.Res_Hall_Package+"/"+data.icon;
		}

		return CommonGridOneItem;
	})(GComponent)


	//class modules.hall.v.component.McAccountChangeItem extends fairygui.GComponent
	var McAccountChangeItem=(function(_super){
		function McAccountChangeItem(){
			this.txtArr=null;
			McAccountChangeItem.__super.call(this);
		}

		__class(McAccountChangeItem,'modules.hall.v.component.McAccountChangeItem',_super);
		var __proto=McAccountChangeItem.prototype;
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this.txtArr=[];
			for (var i=0;i < 8;i++){
				this.txtArr.push(this.getChild("txt"+i));
			}
		}

		__proto.updateData=function(data){
			var gameTypeConfigData=DataMgr.get().gameTypeConfigData;
			this.txtArr[0].text=gameTypeConfigData.getItem(data.gameId).cn;
			this.txtArr[1].text=data.total_recharge_balance_display+"";
			this.txtArr[2].text=data.total_withdraw_balance_display+"";
			this.txtArr[3].text=data.total_bet_balance_display+"";
			this.txtArr[4].text=data.total_real_bet_balance_display+"";
			this.txtArr[5].text=data.total_reward_balance_display+"";
			this.txtArr[6].text=data.total_result_balance_display+"";
			this.txtArr[7].text=data.total_result_self_balance_display+"";
			this.txtArr[8].text=data.income_balance_display+"";
		}

		return McAccountChangeItem;
	})(GComponent)


	//class modules.hall.v.component.McWinLostItem extends fairygui.GComponent
	var McWinLostItem=(function(_super){
		function McWinLostItem(){
			this.txt_game_name=null;
			this.txt_recharge_balance=null;
			this.txt_withdraw_balance=null;
			this.txt_bet_balance=null;
			this.txt_real_bet_balance=null;
			this.txt_reward_balance=null;
			this.txt_result_balance=null;
			this.txt_result_self_balance=null;
			this.txt_income_balance=null;
			McWinLostItem.__super.call(this);
		}

		__class(McWinLostItem,'modules.hall.v.component.McWinLostItem',_super);
		var __proto=McWinLostItem.prototype;
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this.txt_game_name=this.getChild("txt_game_name");
			this.txt_recharge_balance=this.getChild("txt_recharge_balance");
			this.txt_withdraw_balance=this.getChild("txt_withdraw_balance");
			this.txt_bet_balance=this.getChild("txt_bet_balance");
			this.txt_real_bet_balance=this.getChild("txt_real_bet_balance");
			this.txt_reward_balance=this.getChild("txt_reward_balance");
			this.txt_result_balance=this.getChild("txt_result_balance");
			this.txt_result_self_balance=this.getChild("txt_result_self_balance");
			this.txt_income_balance=this.getChild("txt_income_balance");
		}

		__proto.updateData=function(data){
			var gameTypeConfigData=DataMgr.get().gameTypeConfigData;
			this.txt_game_name.text=gameTypeConfigData.getBaoBiaoItem(data.gameId).cn;
			this.txt_recharge_balance.text=data.total_recharge_balance_display+"";
			this.txt_withdraw_balance.text=data.total_withdraw_balance_display+"";
			this.txt_bet_balance.text=data.total_bet_balance_display+"";
			this.txt_real_bet_balance.text=data.total_real_bet_balance_display+"";
			this.txt_reward_balance.text=data.total_reward_balance_display+"";
			this.txt_result_balance.text=data.total_result_balance_display+"";
			this.txt_result_self_balance.text=data.total_result_self_balance_display+"";
			this.txt_income_balance.text=data.income_balance_display+"";
		}

		return McWinLostItem;
	})(GComponent)


	//class laya.display.Sprite extends laya.display.Node
	var Sprite=(function(_super){
		function Sprite(){
			this._transform=null;
			this._tfChanged=false;
			this._x=0;
			this._y=0;
			this._width=0;
			this._height=0;
			this._repaint=1;
			this._mouseEnableState=0;
			this._zOrder=0;
			this._graphics=null;
			this._renderType=0;
			this._optimizeScrollRect=false;
			this._texture=null;
			this.mouseThrough=false;
			this.autoSize=false;
			this.hitTestPrior=false;
			this.viewport=null;
			Sprite.__super.call(this);
			this._style=Style.EMPTY;
		}

		__class(Sprite,'laya.display.Sprite',_super);
		var __proto=Sprite.prototype;
		Laya.imps(__proto,{"laya.display.ILayout":true})
		/**@private */
		__proto.createConchModel=function(){
			return new ConchNode();
		}

		/**@inheritDoc */
		__proto.destroy=function(destroyChild){
			(destroyChild===void 0)&& (destroyChild=true);
			this._releaseMem();
			_super.prototype.destroy.call(this,destroyChild);
			this._style && this._style.destroy();
			this._transform && this._transform.destroy();
			this._transform=null;
			this._style=null;
			this._graphics=null;
		}

		/**根据zOrder进行重新排序。*/
		__proto.updateZOrder=function(){
			Utils.updateOrder(this._childs)&& this.repaint();
		}

		/**在设置cacheAs的情况下，调用此方法会重新刷新缓存。*/
		__proto.reCache=function(){
			if (this._$P.cacheCanvas)this._$P.cacheCanvas.reCache=true;
			this._repaint=1;
		}

		/**
		*<p>设置对象在自身坐标系下的边界范围。与 <code>getSelfBounds</code> 对应。当 autoSize==true 时，会影响对象宽高。设置后，当需要获取自身边界范围时，就不再需要计算，合理使用能提高性能。比如 <code>getBounds</code> 会优先使用 <code>setBounds</code> 指定的值，如果没有指定则进行计算，此计算会对性能消耗比较大。</p>
		*<p><b>注意：</b> <code>setBounds</code> 与 <code>getBounds</code> 并非对应相等关系， <code>getBounds</code> 获取的是本对象在父容器坐标系下的边界范围，通过设置 <code>setBounds</code> 会影响 <code>getBounds</code> 的结果。</p>
		*@param bound bounds矩形区域
		*/
		__proto.setBounds=function(bound){
			this._set$P("uBounds",bound);
		}

		/**
		*<p>获取本对象在父容器坐标系的矩形显示区域。</p>
		*<p><b>注意：</b> 1.计算量较大，尽量少用，如果需要频繁使用，可以通过手动设置 <code>setBounds</code> 来缓存自身边界信息，从而避免比较消耗性能的计算。2. <code>setBounds</code> 与 <code>getBounds</code> 并非对应相等关系， <code>getBounds</code> 获取的是本对象在父容器坐标系下的边界范围，通过设置 <code>setBounds</code> 会影响 <code>getBounds</code> 的结果。</p>
		*@return 矩形区域。
		*/
		__proto.getBounds=function(){
			if (!this._$P.mBounds)this._set$P("mBounds",new Rectangle());
			return Rectangle._getWrapRec(this._boundPointsToParent(),this._$P.mBounds);
		}

		/**
		*获取对象在自身坐标系的边界范围。与 <code>setBounds</code> 对应。
		*<p><b>注意：</b>计算量较大，尽量少用，如果需要频繁使用，可以提前手动设置 <code>setBounds</code> 来缓存自身边界信息，从而避免比较消耗性能的计算。</p>
		*@return 矩形区域。
		*/
		__proto.getSelfBounds=function(){
			if (this._$P.uBounds)return this._$P.uBounds;
			if (!this._$P.mBounds)this._set$P("mBounds",new Rectangle());
			return Rectangle._getWrapRec(this._getBoundPointsM(false),this._$P.mBounds);
		}

		/**
		*@private
		*获取本对象在父容器坐标系的显示区域多边形顶点列表。
		*当显示对象链中有旋转时，返回多边形顶点列表，无旋转时返回矩形的四个顶点。
		*@param ifRotate （可选）之前的对象链中是否有旋转。
		*@return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。
		*/
		__proto._boundPointsToParent=function(ifRotate){
			(ifRotate===void 0)&& (ifRotate=false);
			var pX=0,pY=0;
			if (this._style){
				pX=this._style._tf.translateX;
				pY=this._style._tf.translateY;
				ifRotate=ifRotate || (this._style._tf.rotate!==0);
				if (this._style.scrollRect){
					pX+=this._style.scrollRect.x;
					pY+=this._style.scrollRect.y;
				}
			};
			var pList=this._getBoundPointsM(ifRotate);
			if (!pList || pList.length < 1)return pList;
			if (pList.length !=8){
				pList=ifRotate ? GrahamScan.scanPList(pList):Rectangle._getWrapRec(pList,Rectangle.TEMP)._getBoundPoints();
			}
			if (!this.transform){
				Utils.transPointList(pList,this._x-pX,this._y-pY);
				return pList;
			};
			var tPoint=Point.TEMP;
			var i=0,len=pList.length;
			for (i=0;i < len;i+=2){
				tPoint.x=pList[i];
				tPoint.y=pList[i+1];
				this.toParentPoint(tPoint);
				pList[i]=tPoint.x;
				pList[i+1]=tPoint.y;
			}
			return pList;
		}

		/**
		*返回此实例中的绘图对象（ <code>Graphics</code> ）的显示区域，不包括子对象。
		*@param realSize （可选）使用图片的真实大小，默认为false
		*@return 一个 Rectangle 对象，表示获取到的显示区域。
		*/
		__proto.getGraphicBounds=function(realSize){
			(realSize===void 0)&& (realSize=false);
			if (!this._graphics)return Rectangle.TEMP.setTo(0,0,0,0);
			return this._graphics.getBounds(realSize);
		}

		/**
		*@private
		*获取自己坐标系的显示区域多边形顶点列表
		*@param ifRotate （可选）当前的显示对象链是否由旋转
		*@return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。
		*/
		__proto._getBoundPointsM=function(ifRotate){
			(ifRotate===void 0)&& (ifRotate=false);
			if (this._$P.uBounds)return this._$P.uBounds._getBoundPoints();
			if (!this._$P.temBM)this._set$P("temBM",[]);
			if (this.scrollRect){
				var rst=Utils.clearArray(this._$P.temBM);
				var rec=Rectangle.TEMP;
				rec.copyFrom(this.scrollRect);
				Utils.concatArray(rst,rec._getBoundPoints());
				return rst;
			};
			var pList=this._graphics ? this._graphics.getBoundPoints():Utils.clearArray(this._$P.temBM);
			var child;
			var cList;
			var __childs;
			__childs=this._childs;
			for (var i=0,n=__childs.length;i < n;i++){
				child=__childs [i];
				if ((child instanceof laya.display.Sprite )&& child.visible==true){
					cList=child._boundPointsToParent(ifRotate);
					if (cList)
						pList=pList ? Utils.concatArray(pList,cList):cList;
				}
			}
			return pList;
		}

		/**
		*@private
		*获取样式。
		*@return 样式 Style 。
		*/
		__proto.getStyle=function(){
			this._style===Style.EMPTY && (this._style=new Style());
			return this._style;
		}

		/**
		*@private
		*设置样式。
		*@param value 样式。
		*/
		__proto.setStyle=function(value){
			this._style=value;
		}

		/**@private */
		__proto._adjustTransform=function(){
			this._tfChanged=false;
			var style=this._style;
			var tf=style._tf;
			var sx=tf.scaleX,sy=tf.scaleY;
			var m;
			if (tf.rotate || sx!==1 || sy!==1 || tf.skewX || tf.skewY){
				m=this._transform || (this._transform=Matrix.create());
				m.bTransform=true;
				var skx=(tf.rotate-tf.skewX)*0.0174532922222222;
				var sky=(tf.rotate+tf.skewY)*0.0174532922222222;
				var cx=Math.cos(sky);
				var ssx=Math.sin(sky);
				var cy=Math.sin(skx);
				var ssy=Math.cos(skx);
				m.a=sx *cx;
				m.b=sx *ssx;
				m.c=-sy *cy;
				m.d=sy *ssy;
				m.tx=m.ty=0;
				return m;
				}else {
				this._transform && this._transform.destroy();
				this._transform=null;
				this._renderType &=~0x04;
			}
			return m;
		}

		/**
		*<p>设置坐标位置。相当于分别设置x和y属性。</p>
		*<p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pos(...).scale(...);</p>
		*@param x X轴坐标。
		*@param y Y轴坐标。
		*@param speedMode （可选）是否极速模式，正常是调用this.x=value进行赋值，极速模式直接调用内部函数处理，如果未重写x,y属性，建议设置为急速模式性能更高。
		*@return 返回对象本身。
		*/
		__proto.pos=function(x,y,speedMode){
			(speedMode===void 0)&& (speedMode=false);
			if (this._x!==x || this._y!==y){
				if (this.destroyed)return this;
				if (speedMode){
					this._x=x;
					this._y=y;
					this.conchModel && this.conchModel.pos(this._x,this._y);
					var p=this._parent;
					if (p && p._repaint===0){
						p._repaint=1;
						p.parentRepaint();
					}
					if (this._$P.maskParent && this._$P.maskParent._repaint===0){
						this._$P.maskParent._repaint=1;
						this._$P.maskParent.parentRepaint();
					}
					}else {
					this.x=x;
					this.y=y;
				}
			}
			return this;
		}

		/**
		*<p>设置轴心点。相当于分别设置pivotX和pivotY属性。</p>
		*<p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pivot(...).pos(...);</p>
		*@param x X轴心点。
		*@param y Y轴心点。
		*@return 返回对象本身。
		*/
		__proto.pivot=function(x,y){
			this.pivotX=x;
			this.pivotY=y;
			return this;
		}

		/**
		*<p>设置宽高。相当于分别设置width和height属性。</p>
		*<p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.size(...).pos(...);</p>
		*@param width 宽度值。
		*@param hegiht 高度值。
		*@return 返回对象本身。
		*/
		__proto.size=function(width,height){
			this.width=width;
			this.height=height;
			return this;
		}

		/**
		*<p>设置缩放。相当于分别设置scaleX和scaleY属性。</p>
		*<p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.scale(...).pos(...);</p>
		*@param scaleX X轴缩放比例。
		*@param scaleY Y轴缩放比例。
		*@param speedMode （可选）是否极速模式，正常是调用this.scaleX=value进行赋值，极速模式直接调用内部函数处理，如果未重写scaleX,scaleY属性，建议设置为急速模式性能更高。
		*@return 返回对象本身。
		*/
		__proto.scale=function(scaleX,scaleY,speedMode){
			(speedMode===void 0)&& (speedMode=false);
			var style=this.getStyle();
			var _tf=style._tf;
			if (_tf.scaleX !=scaleX || _tf.scaleY !=scaleY){
				if (this.destroyed)return this;
				if (speedMode){
					style.setScale(scaleX,scaleY);
					this._tfChanged=true;
					this.conchModel && this.conchModel.scale(scaleX,scaleY);
					this._renderType |=0x04;
					var p=this._parent;
					if (p && p._repaint===0){
						p._repaint=1;
						p.parentRepaint();
					}
					}else {
					this.scaleX=scaleX;
					this.scaleY=scaleY;
				}
			}
			return this;
		}

		/**
		*<p>设置倾斜角度。相当于分别设置skewX和skewY属性。</p>
		*<p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.skew(...).pos(...);</p>
		*@param skewX 水平倾斜角度。
		*@param skewY 垂直倾斜角度。
		*@return 返回对象本身
		*/
		__proto.skew=function(skewX,skewY){
			this.skewX=skewX;
			this.skewY=skewY;
			return this;
		}

		/**
		*更新、呈现显示对象。由系统调用。
		*@param context 渲染的上下文引用。
		*@param x X轴坐标。
		*@param y Y轴坐标。
		*/
		__proto.render=function(context,x,y){
			Stat.spriteCount++;
			RenderSprite.renders[this._renderType]._fun(this,context,x+this._x,y+this._y);
			this._repaint=0;
		}

		/**
		*<p>绘制 当前<code>Sprite</code> 到 <code>Canvas</code> 上，并返回一个HtmlCanvas。</p>
		*<p>绘制的结果可以当作图片源，再次绘制到其他Sprite里面，示例：</p>
		*
		*var htmlCanvas:HTMLCanvas=sprite.drawToCanvas(100,100,0,0);//把精灵绘制到canvas上面
		*var texture:Texture=new Texture(htmlCanvas);//使用htmlCanvas创建Texture
		*var sp:Sprite=new Sprite().pos(0,200);//创建精灵并把它放倒200位置
		*sp.graphics.drawTexture(texture);//把截图绘制到精灵上
		*Laya.stage.addChild(sp);//把精灵显示到舞台
		*
		*<p>也可以获取原始图片数据，分享到网上，从而实现截图效果，示例：</p>
		*
		*var htmlCanvas:HTMLCanvas=sprite.drawToCanvas(100,100,0,0);//把精灵绘制到canvas上面
		*
		*htmlCanvas.toBase64("image/png",0.92,function(base64){//webgl和canvas模式下为同步方法，加速器下是异步方法
			*trace(base64);//打印图片base64信息，可以发给服务器或者保存为图片
			*});
		*
		*@param canvasWidth 画布宽度。
		*@param canvasHeight 画布高度。
		*@param x 绘制的 X 轴偏移量。
		*@param y 绘制的 Y 轴偏移量。
		*@return HTMLCanvas 对象。
		*/
		__proto.drawToCanvas=function(canvasWidth,canvasHeight,offsetX,offsetY){
			if (Render.isConchNode){
				var canvas=HTMLCanvas.create("2D");
				var context=new RenderContext(canvasWidth,canvasHeight,canvas);
				context.ctx.setCanvasType(1);
				this.conchModel.drawToCanvas(canvas.source,offsetX,offsetY);
				return canvas;
				}else {
				return RunDriver.drawToCanvas(this,this._renderType,canvasWidth,canvasHeight,offsetX,offsetY);
			}
		}

		/**
		*<p>自定义更新、呈现显示对象。一般用来扩展渲染模式，请合理使用，可能会导致在加速器上无法渲染。</p>
		*<p><b>注意</b>不要在此函数内增加或删除树节点，否则会对树节点遍历造成影响。</p>
		*@param context 渲染的上下文引用。
		*@param x X轴坐标。
		*@param y Y轴坐标。
		*/
		__proto.customRender=function(context,x,y){
			this._renderType |=0x400;
		}

		/**
		*@private
		*应用滤镜。
		*/
		__proto._applyFilters=function(){
			if (Render.isWebGL)return;
			var _filters;
			_filters=this._$P.filters;
			if (!_filters || _filters.length < 1)return;
			for (var i=0,n=_filters.length;i < n;i++){
				_filters[i].action.apply(this._$P.cacheCanvas);
			}
		}

		/**
		*@private
		*查看当前原件中是否包含发光滤镜。
		*@return 一个 Boolean 值，表示当前原件中是否包含发光滤镜。
		*/
		__proto._isHaveGlowFilter=function(){
			var i=0,len=0;
			if (this.filters){
				for (i=0;i < this.filters.length;i++){
					if (this.filters[i].type==0x08){
						return true;
					}
				}
			}
			for (i=0,len=this._childs.length;i < len;i++){
				if (this._childs[i]._isHaveGlowFilter()){
					return true;
				}
			}
			return false;
		}

		/**
		*把本地坐标转换为相对stage的全局坐标。
		*@param point 本地坐标点。
		*@param createNewPoint （可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。
		*@return 转换后的坐标的点。
		*/
		__proto.localToGlobal=function(point,createNewPoint){
			(createNewPoint===void 0)&& (createNewPoint=false);
			if (createNewPoint===true){
				point=new Point(point.x,point.y);
			};
			var ele=this;
			while (ele){
				if (ele==Laya.stage)break ;
				point=ele.toParentPoint(point);
				ele=ele.parent;
			}
			return point;
		}

		/**
		*把stage的全局坐标转换为本地坐标。
		*@param point 全局坐标点。
		*@param createNewPoint （可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。
		*@return 转换后的坐标的点。
		*/
		__proto.globalToLocal=function(point,createNewPoint){
			(createNewPoint===void 0)&& (createNewPoint=false);
			if (createNewPoint){
				point=new Point(point.x,point.y);
			};
			var ele=this;
			var list=[];
			while (ele){
				if (ele==Laya.stage)break ;
				list.push(ele);
				ele=ele.parent;
			};
			var i=list.length-1;
			while (i >=0){
				ele=list[i];
				point=ele.fromParentPoint(point);
				i--;
			}
			return point;
		}

		/**
		*将本地坐标系坐标转转换到父容器坐标系。
		*@param point 本地坐标点。
		*@return 转换后的点。
		*/
		__proto.toParentPoint=function(point){
			if (!point)return point;
			point.x-=this.pivotX;
			point.y-=this.pivotY;
			if (this.transform){
				this._transform.transformPoint(point);
			}
			point.x+=this._x;
			point.y+=this._y;
			var scroll=this._style.scrollRect;
			if (scroll){
				point.x-=scroll.x;
				point.y-=scroll.y;
			}
			return point;
		}

		/**
		*将父容器坐标系坐标转换到本地坐标系。
		*@param point 父容器坐标点。
		*@return 转换后的点。
		*/
		__proto.fromParentPoint=function(point){
			if (!point)return point;
			point.x-=this._x;
			point.y-=this._y;
			var scroll=this._style.scrollRect;
			if (scroll){
				point.x+=scroll.x;
				point.y+=scroll.y;
			}
			if (this.transform){
				this._transform.invertTransformPoint(point);
			}
			point.x+=this.pivotX;
			point.y+=this.pivotY;
			return point;
		}

		/**
		*<p>增加事件侦听器，以使侦听器能够接收事件通知。</p>
		*<p>如果侦听鼠标事件，则会自动设置自己和父亲节点的属性 mouseEnabled 的值为 true(如果父节点mouseEnabled=false，则停止设置父节点mouseEnabled属性)。</p>
		*@param type 事件的类型。
		*@param caller 事件侦听函数的执行域。
		*@param listener 事件侦听函数。
		*@param args （可选）事件侦听函数的回调参数。
		*@return 此 EventDispatcher 对象。
		*/
		__proto.on=function(type,caller,listener,args){
			if (this._mouseEnableState!==1 && this.isMouseEvent(type)){
				this.mouseEnabled=true;
				this._setBit(0x2,true);
				if (this._parent){
					this._$2__onDisplay();
				}
				return this._createListener(type,caller,listener,args,false);
			}
			return _super.prototype.on.call(this,type,caller,listener,args);
		}

		/**
		*<p>增加事件侦听器，以使侦听器能够接收事件通知，此侦听事件响应一次后则自动移除侦听。</p>
		*<p>如果侦听鼠标事件，则会自动设置自己和父亲节点的属性 mouseEnabled 的值为 true(如果父节点mouseEnabled=false，则停止设置父节点mouseEnabled属性)。</p>
		*@param type 事件的类型。
		*@param caller 事件侦听函数的执行域。
		*@param listener 事件侦听函数。
		*@param args （可选）事件侦听函数的回调参数。
		*@return 此 EventDispatcher 对象。
		*/
		__proto.once=function(type,caller,listener,args){
			if (this._mouseEnableState!==1 && this.isMouseEvent(type)){
				this.mouseEnabled=true;
				this._setBit(0x2,true);
				if (this._parent){
					this._$2__onDisplay();
				}
				return this._createListener(type,caller,listener,args,true);
			}
			return _super.prototype.once.call(this,type,caller,listener,args);
		}

		/**@private */
		__proto._$2__onDisplay=function(){
			if (this._mouseEnableState!==1){
				var ele=this;
				ele=ele.parent;
				while (ele && ele._mouseEnableState!==1){
					if (ele._getBit(0x2))break ;
					ele.mouseEnabled=true;
					ele._setBit(0x2,true);
					ele=ele.parent;
				}
			}
		}

		/**
		*<p>加载并显示一个图片。功能等同于graphics.loadImage方法。支持异步加载。</p>
		*<p>注意：多次调用loadImage绘制不同的图片，会同时显示。</p>
		*@param url 图片地址。
		*@param x （可选）显示图片的x位置。
		*@param y （可选）显示图片的y位置。
		*@param width （可选）显示图片的宽度，设置为0表示使用图片默认宽度。
		*@param height （可选）显示图片的高度，设置为0表示使用图片默认高度。
		*@param complete （可选）加载完成回调。
		*@return 返回精灵对象本身。
		*/
		__proto.loadImage=function(url,x,y,width,height,complete){
			var _$this=this;
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			function loaded (tex){
				if (!_$this.destroyed){
					_$this.size(x+(width || tex.width),y+(height || tex.height));
					_$this.repaint();
					complete && complete.runWith(tex);
				}
			}
			this.graphics.loadImage(url,x,y,width,height,loaded);
			return this;
		}

		/**cacheAs后，设置自己和父对象缓存失效。*/
		__proto.repaint=function(){
			this.conchModel && this.conchModel.repaint && this.conchModel.repaint();
			if (this._repaint===0){
				this._repaint=1;
				this.parentRepaint();
			}
			if (this._$P && this._$P.maskParent){
				this._$P.maskParent.repaint();
			}
		}

		/**
		*@private
		*获取是否重新缓存。
		*@return 如果重新缓存值为 true，否则值为 false。
		*/
		__proto._needRepaint=function(){
			return (this._repaint!==0)&& this._$P.cacheCanvas && this._$P.cacheCanvas.reCache;
		}

		/**@private */
		__proto._childChanged=function(child){
			if (this._childs.length)this._renderType |=0x800;
			else this._renderType &=~0x800;
			if (child && this._get$P("hasZorder"))Laya.timer.callLater(this,this.updateZOrder);
			this.repaint();
		}

		/**cacheAs时，设置所有父对象缓存失效。 */
		__proto.parentRepaint=function(){
			var p=this._parent;
			if (p && p._repaint===0){
				p._repaint=1;
				p.parentRepaint();
			}
		}

		/**
		*开始拖动此对象。
		*@param area （可选）拖动区域，此区域为当前对象注册点活动区域（不包括对象宽高），可选。
		*@param hasInertia （可选）鼠标松开后，是否还惯性滑动，默认为false，可选。
		*@param elasticDistance （可选）橡皮筋效果的距离值，0为无橡皮筋效果，默认为0，可选。
		*@param elasticBackTime （可选）橡皮筋回弹时间，单位为毫秒，默认为300毫秒，可选。
		*@param data （可选）拖动事件携带的数据，可选。
		*@param disableMouseEvent （可选）禁用其他对象的鼠标检测，默认为false，设置为true能提高性能。
		*@param ratio （可选）惯性阻尼系数，影响惯性力度和时长。
		*/
		__proto.startDrag=function(area,hasInertia,elasticDistance,elasticBackTime,data,disableMouseEvent,ratio){
			(hasInertia===void 0)&& (hasInertia=false);
			(elasticDistance===void 0)&& (elasticDistance=0);
			(elasticBackTime===void 0)&& (elasticBackTime=300);
			(disableMouseEvent===void 0)&& (disableMouseEvent=false);
			(ratio===void 0)&& (ratio=0.92);
			this._$P.dragging || (this._set$P("dragging",new Dragging()));
			this._$P.dragging.start(this,area,hasInertia,elasticDistance,elasticBackTime,data,disableMouseEvent,ratio);
		}

		/**停止拖动此对象。*/
		__proto.stopDrag=function(){
			this._$P.dragging && this._$P.dragging.stop();
		}

		__proto._releaseMem=function(){
			if (!this._$P)return;
			var cc=this._$P.cacheCanvas;
			if (cc && cc.ctx){
				Pool.recover("RenderContext",cc.ctx);
				cc.ctx.canvas.size(0,0);
				cc.ctx=null;
			};
			var fc=this._$P._filterCache;
			if (fc){
				fc.destroy();
				fc.recycle();
				this._set$P('_filterCache',null);
			}
			this._$P._isHaveGlowFilter && this._set$P('_isHaveGlowFilter',false);
			this._$P._isHaveGlowFilter=null;
		}

		/**@private */
		__proto._setDisplay=function(value){
			if (!value)this._releaseMem();
			_super.prototype._setDisplay.call(this,value);
		}

		/**
		*检测某个点是否在此对象内。
		*@param x 全局x坐标。
		*@param y 全局y坐标。
		*@return 表示是否在对象内。
		*/
		__proto.hitTestPoint=function(x,y){
			var point=this.globalToLocal(Point.TEMP.setTo(x,y));
			x=point.x;
			y=point.y;
			var rect=this._$P.hitArea ? this._$P.hitArea :(this._width > 0 && this._height > 0)? Rectangle.TEMP.setTo(0,0,this._width,this._height):this.getSelfBounds();
			return rect.contains(x,y);
		}

		/**获得相对于本对象上的鼠标坐标信息。*/
		__proto.getMousePoint=function(){
			return this.globalToLocal(Point.TEMP.setTo(Laya.stage.mouseX,Laya.stage.mouseY));
		}

		/**@private */
		__proto._getWords=function(){
			return null;
		}

		/**@private */
		__proto._addChildsToLayout=function(out){
			var words=this._getWords();
			if (words==null && this._childs.length==0)return false;
			if (words){
				for (var i=0,n=words.length;i < n;i++){
					out.push(words[i]);
				}
			}
			this._childs.forEach(function(o,index,array){
				o._style._enableLayout()&& o._addToLayout(out);
			});
			return true;
		}

		/**@private */
		__proto._addToLayout=function(out){
			if (this._style.absolute)return;
			this._style.block ? out.push(this):(this._addChildsToLayout(out)&& (this.x=this.y=0));
		}

		/**@private */
		__proto._isChar=function(){
			return false;
		}

		/**@private */
		__proto._getCSSStyle=function(){
			return this._style.getCSSStyle();
		}

		/**
		*@private
		*设置指定属性名的属性值。
		*@param name 属性名。
		*@param value 属性值。
		*/
		__proto._setAttributes=function(name,value){
			switch (name){
				case 'x':
					this.x=parseFloat(value);
					break ;
				case 'y':
					this.y=parseFloat(value);
					break ;
				case 'width':
					this.width=parseFloat(value);
					break ;
				case 'height':
					this.height=parseFloat(value);
					break ;
				default :
					this[name]=value;
				}
		}

		/**
		*@private
		*/
		__proto._layoutLater=function(){
			this.parent && (this.parent)._layoutLater();
		}

		/**
		*<p>指定是否对使用了 scrollRect 的显示对象进行优化处理。默认为false(不优化)。</p>
		*<p>当值为ture时：将对此对象使用了scrollRect 设定的显示区域以外的显示内容不进行渲染，以提高性能(如果子对象有旋转缩放或者中心点偏移，则显示筛选会不精确)。</p>
		*/
		__getset(0,__proto,'optimizeScrollRect',function(){
			return this._optimizeScrollRect;
			},function(b){
			if (this._optimizeScrollRect !=b){
				this._optimizeScrollRect=b;
				this.conchModel && this.conchModel.optimizeScrollRect(b);
			}
		});

		/**
		*设置是否开启自定义渲染，只有开启自定义渲染，才能使用customRender函数渲染。
		*/
		__getset(0,__proto,'customRenderEnable',null,function(b){
			if (b){
				this._renderType |=0x400;
				if (Render.isConchNode){
					Sprite.CustomList.push(this);
					var canvas=new HTMLCanvas("2d");
					canvas._setContext(new CanvasRenderingContext2D());
					this.customContext=new RenderContext(0,0,canvas);
					canvas.context.setCanvasType && canvas.context.setCanvasType(2);
					this.conchModel.custom(canvas.context);
				}
			}
		});

		/**
		*指定显示对象是否缓存为静态图像。功能同cacheAs的normal模式。建议优先使用cacheAs代替。
		*/
		__getset(0,__proto,'cacheAsBitmap',function(){
			return this.cacheAs!=="none";
			},function(value){
			this.cacheAs=value ? (this._$P["hasFilter"] ? "none" :"normal"):"none";
		});

		/**
		*<p>指定显示对象是否缓存为静态图像，cacheAs时，子对象发生变化，会自动重新缓存，同时也可以手动调用reCache方法更新缓存。</p>
		*<p>建议把不经常变化的“复杂内容”缓存为静态图像，能极大提高渲染性能。cacheAs有"none"，"normal"和"bitmap"三个值可选。
		*<li>默认为"none"，不做任何缓存。</li>
		*<li>当值为"normal"时，canvas模式下进行画布缓存，webgl模式下进行命令缓存。</li>
		*<li>当值为"bitmap"时，canvas模式下进行依然是画布缓存，webgl模式下使用renderTarget缓存。</li></p>
		*<p>webgl下renderTarget缓存模式缺点：会额外创建renderTarget对象，增加内存开销，缓存面积有最大2048限制，不断重绘时会增加CPU开销。优点：大幅减少drawcall，渲染性能最高。
		*webgl下命令缓存模式缺点：只会减少节点遍历及命令组织，不会减少drawcall数，性能中等。优点：没有额外内存开销，无需renderTarget支持。</p>
		*/
		__getset(0,__proto,'cacheAs',function(){
			return this._$P.cacheCanvas==null ? "none" :this._$P.cacheCanvas.type;
			},function(value){
			var cacheCanvas=this._$P.cacheCanvas;
			if (value===(cacheCanvas ? cacheCanvas.type :"none"))return;
			if (value!=="none"){
				if (!this._getBit(0x1))this._setUpNoticeType(0x1);
				cacheCanvas || (cacheCanvas=this._set$P("cacheCanvas",Pool.getItemByClass("cacheCanvas",Object)));
				cacheCanvas.type=value;
				cacheCanvas.reCache=true;
				this._renderType |=0x10;
				if (value=="bitmap")this.conchModel && this.conchModel.cacheAs(1);
				this._set$P("cacheForFilters",false);
				}else {
				if (this._$P["_mask"]){
				}else
				if (this._$P["hasFilter"]){
					this._set$P("cacheForFilters",true);
					}else {
					if (cacheCanvas){
						var cc=cacheCanvas;
						if (cc && cc.ctx){
							Pool.recover("RenderContext",cc.ctx);
							cc.ctx.canvas.size(0,0);
							cc.ctx=null;
						}
						Pool.recover("cacheCanvas",cacheCanvas);
					}
					this._$P.cacheCanvas=null;
					this._renderType &=~0x10;
					this.conchModel && this.conchModel.cacheAs(0);
				}
			}
			this.repaint();
		});

		/**z排序，更改此值，则会按照值的大小对同一容器的所有对象重新排序。值越大，越靠上。默认为0，则根据添加顺序排序。*/
		__getset(0,__proto,'zOrder',function(){
			return this._zOrder;
			},function(value){
			if (this._zOrder !=value){
				this._zOrder=value;
				this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(value);
				if (this._parent){
					value && this._parent._set$P("hasZorder",true);
					Laya.timer.callLater(this._parent,this.updateZOrder);
				}
			}
		});

		/**旋转角度，默认值为0。以角度为单位。*/
		__getset(0,__proto,'rotation',function(){
			return this._style._tf.rotate;
			},function(value){
			var style=this.getStyle();
			if (style._tf.rotate!==value){
				style.setRotate(value);
				this._tfChanged=true;
				this.conchModel && this.conchModel.rotate(value);
				this._renderType |=0x04;
				var p=this._parent;
				if (p && p._repaint===0){
					p._repaint=1;
					p.parentRepaint();
				}
			}
		});

		/**
		*<p>显示对象的宽度，单位为像素，默认为0。</p>
		*<p>此宽度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>
		*<p>可以通过getbounds获取显示对象图像的实际宽度。</p>
		*/
		__getset(0,__proto,'width',function(){
			if (!this.autoSize)return this._width;
			return this.getSelfBounds().width;
			},function(value){
			if (this._width!==value){
				this._width=value;
				this.conchModel && this.conchModel.size(value,this._height)
				this.repaint();
			}
		});

		/**表示显示对象相对于父容器的水平方向坐标值。*/
		__getset(0,__proto,'x',function(){
			return this._x;
			},function(value){
			if (this._x!==value){
				if (this.destroyed)return;
				this._x=value;
				this.conchModel && this.conchModel.pos(value,this._y);
				var p=this._parent;
				if (p && p._repaint===0){
					p._repaint=1;
					p.parentRepaint();
				}
				if (this._$P.maskParent && this._$P.maskParent._repaint===0){
					this._$P.maskParent._repaint=1;
					this._$P.maskParent.parentRepaint();
				}
			}
		});

		/**
		*获得相对于stage的全局Y轴缩放值（会叠加父亲节点的缩放值）。
		*/
		__getset(0,__proto,'globalScaleY',function(){
			var scale=1;
			var ele=this;
			while (ele){
				if (ele===Laya.stage)break ;
				scale *=ele.scaleY;
				ele=ele.parent;
			}
			return scale;
		});

		/**
		*<p>可以设置一个Rectangle区域作为点击区域，或者设置一个<code>HitArea</code>实例作为点击区域，HitArea内可以设置可点击和不可点击区域。</p>
		*<p>如果不设置hitArea，则根据宽高形成的区域进行碰撞。</p>
		*/
		__getset(0,__proto,'hitArea',function(){
			return this._$P.hitArea;
			},function(value){
			this._set$P("hitArea",value);
		});

		/**
		*是否静态缓存此对象的当前帧的最终属性。为 true 时，子对象变化时不会自动更新缓存，但是可以通过调用 reCache 方法手动刷新。
		*<b>注意：</b> 1. 设置 cacheAs 为非空和非"none"时才有效。 2. 由于渲染的时机在脚本执行之后，也就是说当前帧渲染的是对象的最终属性，所以如果在当前帧渲染之前、设置静态缓存之后改变对象属性，则最终渲染结果表现的是对象的最终属性。
		*/
		__getset(0,__proto,'staticCache',function(){
			return this._$P.staticCache;
			},function(value){
			this._set$P("staticCache",value);
			if (!value)this.reCache();
		});

		/**设置一个Texture实例，并显示此图片（如果之前有其他绘制，则会被清除掉）。等同于graphics.clear();graphics.drawTexture()*/
		__getset(0,__proto,'texture',function(){
			return this._texture;
			},function(value){
			if (this._texture !=value){
				this._texture=value;
				this.graphics.cleanByTexture(value,0,0);
			}
		});

		/**表示显示对象相对于父容器的垂直方向坐标值。*/
		__getset(0,__proto,'y',function(){
			return this._y;
			},function(value){
			if (this._y!==value){
				if (this.destroyed)return;
				this._y=value;
				this.conchModel && this.conchModel.pos(this._x,value);
				var p=this._parent;
				if (p && p._repaint===0){
					p._repaint=1;
					p.parentRepaint();
				}
				if (this._$P.maskParent && this._$P.maskParent._repaint===0){
					this._$P.maskParent._repaint=1;
					this._$P.maskParent.parentRepaint();
				}
			}
		});

		/**
		*<p>显示对象的高度，单位为像素，默认为0。</p>
		*<p>此高度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>
		*<p>可以通过getbounds获取显示对象图像的实际高度。</p>
		*/
		__getset(0,__proto,'height',function(){
			if (!this.autoSize)return this._height;
			return this.getSelfBounds().height;
			},function(value){
			if (this._height!==value){
				this._height=value;
				this.conchModel && this.conchModel.size(this._width,value);
				this.repaint();
			}
		});

		/**指定要使用的混合模式。目前只支持"lighter"。*/
		__getset(0,__proto,'blendMode',function(){
			return this._style.blendMode;
			},function(value){
			this.getStyle().blendMode=value;
			this.conchModel && this.conchModel.blendMode(value);
			if (value && value !="source-over")this._renderType |=0x08;
			else this._renderType &=~0x08;
			this.parentRepaint();
		});

		/**X轴缩放值，默认值为1。设置为负数，可以实现水平反转效果，比如scaleX=-1。*/
		__getset(0,__proto,'scaleX',function(){
			return this._style._tf.scaleX;
			},function(value){
			var style=this.getStyle();
			if (style._tf.scaleX!==value){
				style.setScaleX(value);
				this._tfChanged=true;
				this.conchModel && this.conchModel.scale(value,style._tf.scaleY);
				this._renderType |=0x04;
				var p=this._parent;
				if (p && p._repaint===0){
					p._repaint=1;
					p.parentRepaint();
				}
			}
		});

		/**Y轴缩放值，默认值为1。设置为负数，可以实现垂直反转效果，比如scaleX=-1。*/
		__getset(0,__proto,'scaleY',function(){
			return this._style._tf.scaleY;
			},function(value){
			var style=this.getStyle();
			if (style._tf.scaleY!==value){
				style.setScaleY(value);
				this._tfChanged=true;
				this.conchModel && this.conchModel.scale(style._tf.scaleX,value);
				this._renderType |=0x04;
				var p=this._parent;
				if (p && p._repaint===0){
					p._repaint=1;
					p.parentRepaint();
				}
			}
		});

		/**对舞台 <code>stage</code> 的引用。*/
		__getset(0,__proto,'stage',function(){
			return Laya.stage;
		});

		/**水平倾斜角度，默认值为0。以角度为单位。*/
		__getset(0,__proto,'skewX',function(){
			return this._style._tf.skewX;
			},function(value){
			var style=this.getStyle();
			if (style._tf.skewX!==value){
				style.setSkewX(value);
				this._tfChanged=true;
				this.conchModel && this.conchModel.skew(value,style._tf.skewY);
				this._renderType |=0x04;
				var p=this._parent;
				if (p && p._repaint===0){
					p._repaint=1;
					p.parentRepaint();
				}
			}
		});

		/**
		*<p>显示对象的滚动矩形范围，具有裁剪效果(如果只想限制子对象渲染区域，请使用viewport)，设置optimizeScrollRect=true，可以优化裁剪区域外的内容不进行渲染。</p>
		*<p> srollRect和viewport的区别：<br/>
		*1.srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>
		*2.设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>
		*/
		__getset(0,__proto,'scrollRect',function(){
			return this._style.scrollRect;
			},function(value){
			this.getStyle().scrollRect=value;
			this.repaint();
			if (value){
				this._renderType |=0x80;
				this.conchModel && this.conchModel.scrollRect(value.x,value.y,value.width,value.height);
				}else {
				this._renderType &=~0x80;
				if (this.conchModel){
					if (Sprite.RUNTIMEVERION < "0.9.1")
						this.conchModel.removeType(0x40);
					else
					this.conchModel.removeType(0x80);
				}
			}
		});

		/**垂直倾斜角度，默认值为0。以角度为单位。*/
		__getset(0,__proto,'skewY',function(){
			return this._style._tf.skewY;
			},function(value){
			var style=this.getStyle();
			if (style._tf.skewY!==value){
				style.setSkewY(value);
				this._tfChanged=true;
				this.conchModel && this.conchModel.skew(style._tf.skewX,value);
				this._renderType |=0x04;
				var p=this._parent;
				if (p && p._repaint===0){
					p._repaint=1;
					p.parentRepaint();
				}
			}
		});

		/**
		*<p>对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。</p>
		*<p>矩阵更多信息请参考 <code>Matrix</code></p>
		*/
		__getset(0,__proto,'transform',function(){
			return this._tfChanged ? this._adjustTransform():this._transform;
			},function(value){
			this._tfChanged=false;
			this._transform=value;
			if (value){
				this._x=value.tx;
				this._y=value.ty;
				value.tx=value.ty=0;
				this.conchModel && this.conchModel.transform(value.a,value.b,value.c,value.d,this._x,this._y);
			}
			if (value)this._renderType |=0x04;
			else {
				this._renderType &=~0x04;
				this.conchModel && this.conchModel.removeType(0x04);
			}
			this.parentRepaint();
		});

		/**X轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/
		__getset(0,__proto,'pivotX',function(){
			return this._style._tf.translateX;
			},function(value){
			this.getStyle().setTranslateX(value);
			this.conchModel && this.conchModel.pivot(value,this._style._tf.translateY);
			this.repaint();
		});

		/**Y轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/
		__getset(0,__proto,'pivotY',function(){
			return this._style._tf.translateY;
			},function(value){
			this.getStyle().setTranslateY(value);
			this.conchModel && this.conchModel.pivot(this._style._tf.translateX,value);
			this.repaint();
		});

		/**透明度，值为0-1，默认值为1，表示不透明。更改alpha值会影响drawcall。*/
		__getset(0,__proto,'alpha',function(){
			return this._style.alpha;
			},function(value){
			if (this._style && this._style.alpha!==value){
				value=value < 0 ? 0 :(value > 1 ? 1 :value);
				this.getStyle().alpha=value;
				this.conchModel && this.conchModel.alpha(value);
				if (value!==1)this._renderType |=0x02;
				else this._renderType &=~0x02;
				this.parentRepaint();
			}
		});

		/**表示是否可见，默认为true。如果设置不可见，节点将不被渲染。*/
		__getset(0,__proto,'visible',function(){
			return this._style.visible;
			},function(value){
			if (this._style && this._style.visible!==value){
				this.getStyle().visible=value;
				this.conchModel && this.conchModel.visible(value);
				this.parentRepaint();
			}
		});

		/**绘图对象。封装了绘制位图和矢量图的接口，Sprite所有的绘图操作都通过Graphics来实现的。*/
		__getset(0,__proto,'graphics',function(){
			return this._graphics || (this.graphics=RunDriver.createGraphics());
			},function(value){
			if (this._graphics)this._graphics._sp=null;
			this._graphics=value;
			if (value){
				this._renderType &=~0x01;
				this._renderType |=0x200;
				value._sp=this;
				this.conchModel && this.conchModel.graphics(this._graphics);
				}else {
				this._renderType &=~0x200;
				this._renderType &=~0x01;
				if (this.conchModel){
					if (Sprite.RUNTIMEVERION < "0.9.1")
						this.conchModel.removeType(0x100);
					else
					this.conchModel.removeType(0x200);
				}
			}
			this.repaint();
		});

		/**滤镜集合。可以设置多个滤镜组合。*/
		__getset(0,__proto,'filters',function(){
			return this._$P.filters;
			},function(value){
			value && value.length===0 && (value=null);
			if (this._$P.filters==value)return;
			this._set$P("filters",value ? value.slice():null);
			if (Render.isConchApp){
				if (this.conchModel){
					if (Sprite.RUNTIMEVERION < "0.9.1")
						this.conchModel.removeType(0x10);
					else
					this.conchModel.removeType(0x20);
				}
				if (this._$P.filters && this._$P.filters.length==1){
					this._$P.filters[0].callNative(this);
				}
			}
			if (Render.isWebGL){
				if (value && value.length){
					this._renderType |=0x20;
					}else {
					this._renderType &=~0x20;
				}
			}
			if (value && value.length > 0){
				if (!this._getBit(0x1))this._setUpNoticeType(0x1);
				if (!(Render.isWebGL && value.length==1 && (((value[0])instanceof laya.filters.ColorFilter )))){
					if (this.cacheAs !="bitmap"){
						if (!Render.isConchNode)this.cacheAs="bitmap";
						this._set$P("cacheForFilters",true);
					}
					this._set$P("hasFilter",true);
				}
				}else {
				this._set$P("hasFilter",false);
				if (this._$P["cacheForFilters"] && this.cacheAs=="bitmap"){
					this.cacheAs="none";
				}
			}
			this.repaint();
		});

		__getset(0,__proto,'parent',_super.prototype._$get_parent,function(value){
			_super.prototype._$set_parent.call(this,value);
			if (value && this._getBit(0x2)){
				this._$2__onDisplay();
			}
		});

		/**
		*<p>遮罩，可以设置一个对象(支持位图和矢量图)，根据对象形状进行遮罩显示。</p>
		*<p>【注意】遮罩对象坐标系是相对遮罩对象本身的，和Flash机制不同</p>
		*/
		__getset(0,__proto,'mask',function(){
			return this._$P._mask;
			},function(value){
			if (value && this.mask && this.mask._$P.maskParent)return;
			if (value){
				this.cacheAs="bitmap";
				this._set$P("_mask",value);
				value._set$P("maskParent",this);
				}else {
				this.mask && this.mask._set$P("maskParent",null);
				this._set$P("_mask",value);
				this.cacheAs="none";
			}
			this.conchModel && this.conchModel.mask(value ? value.conchModel :null);
			this._renderType |=0x40;
			this.parentRepaint();
		});

		/**
		*是否接受鼠标事件。
		*默认为false，如果监听鼠标事件，则会自动设置本对象及父节点的属性 mouseEnable 的值都为 true（如果父节点手动设置为false，则不会更改）。
		**/
		__getset(0,__proto,'mouseEnabled',function(){
			return this._mouseEnableState > 1;
			},function(value){
			this._mouseEnableState=value ? 2 :1;
		});

		/**
		*获得相对于stage的全局X轴缩放值（会叠加父亲节点的缩放值）。
		*/
		__getset(0,__proto,'globalScaleX',function(){
			var scale=1;
			var ele=this;
			while (ele){
				if (ele===Laya.stage)break ;
				scale *=ele.scaleX;
				ele=ele.parent;
			}
			return scale;
		});

		/**
		*返回鼠标在此对象坐标系上的 X 轴坐标信息。
		*/
		__getset(0,__proto,'mouseX',function(){
			return this.getMousePoint().x;
		});

		/**
		*返回鼠标在此对象坐标系上的 Y 轴坐标信息。
		*/
		__getset(0,__proto,'mouseY',function(){
			return this.getMousePoint().y;
		});

		Sprite.fromImage=function(url){
			return new Sprite().loadImage(url);
		}

		Sprite.CustomList=[];
		__static(Sprite,
		['RUNTIMEVERION',function(){return this.RUNTIMEVERION=window.conch?conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf('-')+1):'';}
		]);
		return Sprite;
	})(Node)


	//class laya.webgl.utils.Buffer extends laya.resource.Resource
	var Buffer=(function(_super){
		function Buffer(){
			this._glBuffer=null;
			this._buffer=null;
			this._bufferType=0;
			this._bufferUsage=0;
			this._byteLength=0;
			Buffer.__super.call(this);
			Buffer._gl=WebGL.mainContext;
		}

		__class(Buffer,'laya.webgl.utils.Buffer',_super);
		var __proto=Buffer.prototype;
		__proto._bind=function(){
			this.activeResource();
			if (Buffer._bindActive[this._bufferType]!==this._glBuffer){
				(this._bufferType===0x8892)&& (Buffer._bindVertexBuffer=this._glBuffer);
				Buffer._gl.bindBuffer(this._bufferType,Buffer._bindActive[this._bufferType]=this._glBuffer);
				BaseShader.activeShader=null;
			}
		}

		__proto.recreateResource=function(){
			this._glBuffer || (this._glBuffer=Buffer._gl.createBuffer());
			this.completeCreate();
		}

		__proto.disposeResource=function(){
			if (this._glBuffer){
				WebGL.mainContext.deleteBuffer(this._glBuffer);
				this._glBuffer=null;
			}
			this.memorySize=0;
		}

		__getset(0,__proto,'bufferUsage',function(){
			return this._bufferUsage;
		});

		Buffer._gl=null
		Buffer._bindActive={};
		Buffer._bindVertexBuffer=null
		Buffer._enableAtributes=[];
		return Buffer;
	})(Resource)


	//class fairygui.GComboBox extends fairygui.GComponent
	var GComboBox=(function(_super){
		function GComboBox(){
			this.dropdown=null;
			this._titleObject=null;
			this._iconObject=null;
			this._list=null;
			this._items=null;
			this._icons=null;
			this._values=null;
			this._popupDownward=null;
			this._visibleItemCount=0;
			this._itemsUpdated=false;
			this._selectedIndex=0;
			this._buttonController=null;
			this._selectionController=null;
			this._down=false;
			this._over=false;
			GComboBox.__super.call(this);
			this._visibleItemCount=UIConfig$1.defaultComboBoxVisibleItemCount;
			this._itemsUpdated=true;
			this._selectedIndex=-1;
			this._items=[];
			this._values=[];
		}

		__class(GComboBox,'fairygui.GComboBox',_super);
		var __proto=GComboBox.prototype;
		__proto.setState=function(val){
			if (this._buttonController)
				this._buttonController.selectedPage=val;
		}

		__proto.handleControllerChanged=function(c){
			_super.prototype.handleControllerChanged.call(this,c);
			if (this._selectionController==c)
				this.selectedIndex=c.selectedIndex;
		}

		__proto.updateSelectionController=function(){
			if (this._selectionController !=null && !this._selectionController.changing
				&& this._selectedIndex < this._selectionController.pageCount){
				var c=this._selectionController;
				this._selectionController=null;
				c.selectedIndex=this._selectedIndex;
				this._selectionController=c;
			}
		}

		__proto.dispose=function(){
			if(this.dropdown){
				this.dropdown.dispose();
				this.dropdown=null;
			}
			this._selectionController=null;
			_super.prototype.dispose.call(this);
		}

		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			xml=ToolSet.findChildNode(xml,"ComboBox");
			var str;
			this._buttonController=this.getController("button");
			this._titleObject=this.getChild("title");
			this._iconObject=this.getChild("icon");
			str=xml.getAttribute("dropdown");
			if (str){
				this.dropdown=(UIPackage.createObjectFromURL(str));
				if (!this.dropdown){
					Log.print("下拉框必须为元件");
					return;
				}
				this.dropdown.name="this._dropdownObject";
				this._list=this.dropdown.getChild("list").asList;
				if (this._list==null){
					Log.print(this.resourceURL+": 下拉框的弹出元件里必须包含名为list的列表");
					return;
				}
				this._list.on("fui_click_item",this,this.__clickItem);
				this._list.addRelation(this.dropdown,14);
				this._list.removeRelation(this.dropdown,15);
				this.dropdown.addRelation(this._list,15);
				this.dropdown.removeRelation(this._list,14);
				this.dropdown.displayObject.on("undisplay",this,this.__popupWinClosed);
			}
			this.on("mouseover",this,this.__rollover);
			this.on("mouseout",this,this.__rollout);
			this.on("mousedown",this,this.__mousedown);
		}

		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			xml=ToolSet.findChildNode(xml,"ComboBox");
			if (xml){
				var str;
				str=xml.getAttribute("titleColor");
				if (str)
					this.titleColor=str;
				str=xml.getAttribute("visibleItemCount");
				if (str)
					this._visibleItemCount=parseInt(str);
				var col=xml.childNodes;
				var length=col.length;
				for (var i=0;i < length;i++){
					var cxml=col[i];
					if(cxml.nodeName=="item"){
						this._items.push(cxml.getAttribute("title"));
						this._values.push(cxml.getAttribute("value"));
						str=cxml.getAttribute("icon");
						if (str){
							if(!this._icons)
								this._icons=new Array(length);
							this._icons[i]=str;
						}
					}
				}
				str=xml.getAttribute("title");
				if(str){
					this.text=str;
					this._selectedIndex=this._items.indexOf(str);
				}
				else if(this._items.length>0){
					this._selectedIndex=0;
					this.text=this._items[0];
				}
				else
				this._selectedIndex=-1;
				str=xml.getAttribute("icon");
				if(str)
					this.icon=str;
				str=xml.getAttribute("direction");
				if(str){
					if(str=="up")
						this._popupDownward=false;
					else if(str=="auto")
					this._popupDownward=null;
				}
				str=xml.getAttribute("selectionController");
				if (str)
					this._selectionController=this.parent.getController(str);
			}
		}

		__proto.showDropdown=function(){
			if (this._itemsUpdated){
				this._itemsUpdated=false;
				this._list.removeChildrenToPool();
				var cnt=this._items.length;
				for (var i=0;i < cnt;i++){
					var item=this._list.addItemFromPool();
					item.name=i < this._values.length ? this._values[i] :"";
					item.text=this._items[i];
					item.icon=(this._icons !=null && i < this._icons.length)? this._icons[i] :null;
				}
				this._list.resizeToFit(this._visibleItemCount);
			}
			this._list.selectedIndex=-1;
			this.dropdown.width=this.width;
			this.root.togglePopup(this.dropdown,this,this._popupDownward);
			if (this.dropdown.parent)
				this.setState("down");
		}

		__proto.__popupWinClosed=function(){
			if(this._over)
				this.setState("over");
			else
			this.setState("up");
		}

		__proto.__clickItem=function(itemObject,evt){
			Laya.timer.callLater(this,this.__clickItem2,[this._list.getChildIndex(itemObject),evt])
		}

		__proto.__clickItem2=function(index,evt){
			if ((this.dropdown.parent instanceof fairygui.GRoot ))
				(this.dropdown.parent).hidePopup();
			this._selectedIndex=-1;
			this.selectedIndex=index;
			Events.dispatch("fui_state_changed",this.displayObject,evt);
		}

		__proto.__rollover=function(){
			this._over=true;
			if (this._down || this.dropdown && this.dropdown.parent)
				return;
			this.setState("over");
		}

		__proto.__rollout=function(){
			this._over=false;
			if (this._down || this.dropdown && this.dropdown.parent)
				return;
			this.setState("up");
		}

		__proto.__mousedown=function(evt){
			if((evt.target instanceof laya.display.Input ))
				return;
			this._down=true;
			GRoot.inst.checkPopups(evt.target);
			Laya.stage.on("mouseup",this,this.__mouseup);
			if (this.dropdown)
				this.showDropdown();
		}

		__proto.__mouseup=function(){
			if(this._down){
				this._down=false;
				Laya.stage.off("mouseup",this,this.__mouseup);
				if(this.dropdown && !this.dropdown.parent){
					if(this._over)
						this.setState("over");
					else
					this.setState("up");
				}
			}
		}

		__getset(0,__proto,'text',function(){
			if (this._titleObject)
				return this._titleObject.text;
			else
			return null;
			},function(value){
			if (this._titleObject)
				this._titleObject.text=value;
			this.updateGear(6);
		});

		__getset(0,__proto,'titleColor',function(){
			if((this._titleObject instanceof fairygui.GTextField ))
				return (this._titleObject).color;
			else if((this._titleObject instanceof fairygui.GLabel ))
			return (this._titleObject).titleColor;
			else if((this._titleObject instanceof fairygui.GButton ))
			return (this._titleObject).titleColor;
			else
			return "#000000";
			},function(value){
			if((this._titleObject instanceof fairygui.GTextField ))
				(this._titleObject).color=value;
			else if((this._titleObject instanceof fairygui.GLabel ))
			(this._titleObject).titleColor=value;
			else if((this._titleObject instanceof fairygui.GButton ))
			(this._titleObject).titleColor=value;
		});

		__getset(0,__proto,'selectedIndex',function(){
			return this._selectedIndex;
			},function(val){
			if(this._selectedIndex==val)
				return;
			this._selectedIndex=val;
			if(this._selectedIndex>=0 && this._selectedIndex<this._items.length){
				this.text=this._items[this._selectedIndex];
				if (this._icons !=null && this._selectedIndex < this._icons.length)
					this.icon=this._icons[this._selectedIndex];
			}
			else{
				this.text="";
				if (this._icons !=null)
					this.icon=null;
			}
			this.updateSelectionController();
		});

		__getset(0,__proto,'icon',function(){
			if(this._iconObject)
				return this._iconObject.icon;
			else
			return null;
			},function(value){
			if(this._iconObject)
				this._iconObject.icon=value;
			this.updateGear(7);
		});

		__getset(0,__proto,'icons',function(){
			return this._icons;
			},function(value){
			this._icons=value;
			if (this._icons !=null && this._selectedIndex !=-1 && this._selectedIndex < this._icons.length)
				this.icon=this._icons[this._selectedIndex];
		});

		__getset(0,__proto,'selectionController',function(){
			return this._selectionController;
			},function(value){
			this._selectionController=value;
		});

		__getset(0,__proto,'visibleItemCount',function(){
			return this._visibleItemCount;
			},function(value){
			this._visibleItemCount=value;
		});

		__getset(0,__proto,'popupDownward',function(){
			return this._popupDownward;
			},function(value){
			this._popupDownward=value;
		});

		__getset(0,__proto,'values',function(){
			return this._values;
			},function(value){
			if (!value)
				this._values.length=0;
			else
			this._values=value.concat();
		});

		__getset(0,__proto,'items',function(){
			return this._items;
			},function(value){
			if(!value)
				this._items.length=0;
			else
			this._items=value.concat();
			if(this._items.length>0){
				if(this._selectedIndex>=this._items.length)
					this._selectedIndex=this._items.length-1;
				else if(this._selectedIndex==-1)
				this._selectedIndex=0;
				this.text=this._items[this._selectedIndex];
				if (this._icons !=null && this._selectedIndex < this._icons.length)
					this.icon=this._icons[this._selectedIndex];
			}
			else{
				this.text="";
				if (this._icons !=null)
					this.icon=null;
				this._selectedIndex=-1;
			}
			this._itemsUpdated=true;
		});

		__getset(0,__proto,'value',function(){
			return this._values[this._selectedIndex];
			},function(val){
			this.selectedIndex=this._values.indexOf(val);
		});

		return GComboBox;
	})(GComponent)


	//class fairygui.GLabel extends fairygui.GComponent
	var GLabel=(function(_super){
		function GLabel(){
			this._titleObject=null;
			this._iconObject=null;
			GLabel.__super.call(this);
		}

		__class(GLabel,'fairygui.GLabel',_super);
		var __proto=GLabel.prototype;
		Laya.imps(__proto,{"fairygui.IColorGear":true})
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this._titleObject=this.getChild("title");
			this._iconObject=this.getChild("icon");
		}

		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			xml=ToolSet.findChildNode(xml,"Label");
			if (xml){
				var str;
				str=xml.getAttribute("title");
				if(str)
					this.text=str;
				str=xml.getAttribute("icon");
				if(str)
					this.icon=str;
				str=xml.getAttribute("titleColor");
				if (str)
					this.titleColor=str;
				str=xml.getAttribute("titleFontSize");
				if(str)
					this.titleFontSize=parseInt(str);
				if((this._titleObject instanceof fairygui.GTextInput )){
					str=xml.getAttribute("prompt");
					if(str)
						(this._titleObject).promptText=str;
					str=xml.getAttribute("maxLength");
					if(str)
						(this._titleObject).maxLength=parseInt(str);
					str=xml.getAttribute("restrict");
					if(str)
						(this._titleObject).restrict=str;
					str=xml.getAttribute("password");
					if(str)
						(this._titleObject).password=str=="true";
					str=xml.getAttribute("keyboardType");
					if(str=="4")
						(this._titleObject).keyboardType="number";
					else if(str=="3")
					(this._titleObject).keyboardType="url";
				}
			}
		}

		__getset(0,__proto,'color',function(){
			return this.titleColor;
			},function(value){
			this.titleColor=value;
		});

		__getset(0,__proto,'icon',function(){
			if(this._iconObject!=null)
				return this._iconObject.icon;
			else
			return null;
			},function(value){
			if(this._iconObject!=null)
				this._iconObject.icon=value;
			this.updateGear(7);
		});

		__getset(0,__proto,'editable',function(){
			if (this._titleObject && ((this._titleObject instanceof fairygui.GTextInput )))
				return this._titleObject.asTextInput.editable;
			else
			return false;
			},function(val){
			if (this._titleObject)
				this._titleObject.asTextInput.editable=val;
		});

		__getset(0,__proto,'title',function(){
			if (this._titleObject)
				return this._titleObject.text;
			else
			return null;
			},function(value){
			if (this._titleObject)
				this._titleObject.text=value;
			this.updateGear(6);
		});

		__getset(0,__proto,'text',function(){
			return this.title;
			},function(value){
			this.title=value;
		});

		__getset(0,__proto,'titleColor',function(){
			if((this._titleObject instanceof fairygui.GTextField ))
				return (this._titleObject).color;
			else if((this._titleObject instanceof fairygui.GLabel ))
			return (this._titleObject).titleColor;
			else if((this._titleObject instanceof fairygui.GButton ))
			return (this._titleObject).titleColor;
			else
			return "#000000";
			},function(value){
			if((this._titleObject instanceof fairygui.GTextField ))
				(this._titleObject).color=value;
			else if((this._titleObject instanceof fairygui.GLabel ))
			(this._titleObject).titleColor=value;
			else if((this._titleObject instanceof fairygui.GButton ))
			(this._titleObject).titleColor=value;
			this.updateGear(4);
		});

		__getset(0,__proto,'titleFontSize',function(){
			if((this._titleObject instanceof fairygui.GTextField ))
				return (this._titleObject).fontSize;
			else if((this._titleObject instanceof fairygui.GLabel ))
			return (this._titleObject).titleFontSize;
			else if((this._titleObject instanceof fairygui.GButton ))
			return (this._titleObject).titleFontSize;
			else
			return 0;
			},function(value){
			if((this._titleObject instanceof fairygui.GTextField ))
				(this._titleObject).fontSize=value;
			else if((this._titleObject instanceof fairygui.GLabel ))
			(this._titleObject).titleFontSize=value;
			else if((this._titleObject instanceof fairygui.GButton ))
			(this._titleObject).titleFontSize=value;
		});

		return GLabel;
	})(GComponent)


	//class fairygui.GList extends fairygui.GComponent
	var GList=(function(_super){
		var ItemInfo;
		function GList(){
			this.itemRenderer=null;
			this.itemProvider=null;
			this.scrollItemToViewOnClick=false;
			this.foldInvisibleItems=false;
			this._layout=0;
			this._lineCount=0;
			this._columnCount=0;
			this._lineGap=0;
			this._columnGap=0;
			this._defaultItem=null;
			this._autoResizeItem=false;
			this._selectionMode=0;
			this._align=null;
			this._verticalAlign=null;
			this._selectionController=null;
			this._lastSelectedIndex=0;
			this._pool=null;
			this._virtual=false;
			this._loop=false;
			this._numItems=0;
			this._realNumItems=0;
			this._firstIndex=0;
			this._curLineItemCount=0;
			this._curLineItemCount2=0;
			this._itemSize=null;
			this._virtualListChanged=0;
			this._virtualItems=null;
			this._eventLocked=false;
			GList.__super.call(this);
			this._trackBounds=true;
			this._pool=new GObjectPool();
			this._layout=0;
			this._autoResizeItem=true;
			this._lastSelectedIndex=-1;
			this._selectionMode=0;
			this.opaque=true;
			this.scrollItemToViewOnClick=true;
			this._align="left";
			this._verticalAlign="top";
			this._container=new Sprite();
			this._displayObject.addChild(this._container);
		}

		__class(GList,'fairygui.GList',_super);
		var __proto=GList.prototype;
		__proto.dispose=function(){
			this._pool.clear();
			_super.prototype.dispose.call(this);
		}

		__proto.getFromPool=function(url){
			if (!url)
				url=this._defaultItem;
			var obj=this._pool.getObject(url);
			if(obj!=null)
				obj.visible=true;
			return obj;
		}

		__proto.returnToPool=function(obj){
			obj.displayObject.cacheAsBitmap=false;
			this._pool.returnObject(obj);
		}

		__proto.addChildAt=function(child,index){
			(index===void 0)&& (index=0);
			_super.prototype.addChildAt.call(this,child,index);
			if ((child instanceof fairygui.GButton )){
				var button=(child);
				button.selected=false;
				button.changeStateOnClick=false;
			}
			child.on("click",this,this.__clickItem);
			return child;
		}

		__proto.addItem=function(url){
			if (!url)
				url=this._defaultItem;
			return this.addChild(UIPackage.createObjectFromURL(url));
		}

		__proto.addItemFromPool=function(url){
			return this.addChild(this.getFromPool(url));
		}

		__proto.removeChildAt=function(index,dispose){
			(dispose===void 0)&& (dispose=false);
			var child=_super.prototype.removeChildAt.call(this,index,dispose);
			child.off("click",this,this.__clickItem);
			return child;
		}

		__proto.removeChildToPoolAt=function(index){
			(index===void 0)&& (index=0);
			var child=_super.prototype.removeChildAt.call(this,index);
			this.returnToPool(child);
		}

		__proto.removeChildToPool=function(child){
			this.removeChild(child);
			this.returnToPool(child);
		}

		__proto.removeChildrenToPool=function(beginIndex,endIndex){
			(beginIndex===void 0)&& (beginIndex=0);
			(endIndex===void 0)&& (endIndex=-1);
			if (endIndex < 0 || endIndex >=this._children.length)
				endIndex=this._children.length-1;
			for (var i=beginIndex;i <=endIndex;++i)
			this.removeChildToPoolAt(beginIndex);
		}

		__proto.getSelection=function(){
			var ret=[];
			var i=0;
			if (this._virtual){
				for (i=0;i < this._realNumItems;i++){
					var ii=this._virtualItems[i];
					if (((ii.obj instanceof fairygui.GButton ))&& (ii.obj).selected
						|| ii.obj==null && ii.selected){
						if (this._loop){
							i=i % this._numItems;
							if (ret.indexOf(i)!=-1)
								continue ;
						}
						ret.push(i);
					}
				}
			}
			else{
				var cnt=this._children.length;
				for (i=0;i < cnt;i++){
					var obj=this._children[i].asButton;
					if (obj !=null && obj.selected)
						ret.push(i);
				}
			}
			return ret;
		}

		__proto.addSelection=function(index,scrollItToView){
			(scrollItToView===void 0)&& (scrollItToView=false);
			if(this._selectionMode==3)
				return;
			this.checkVirtualList();
			if(this._selectionMode==0)
				this.clearSelection();
			if (scrollItToView)
				this.scrollToView(index);
			this._lastSelectedIndex=index;
			var obj=null;
			if (this._virtual){
				var ii=this._virtualItems[index];
				if (ii.obj !=null)
					obj=ii.obj.asButton;
				ii.selected=true;
			}
			else
			obj=this.getChildAt(index).asButton;
			if (obj !=null && !obj.selected){
				obj.selected=true;
				this.updateSelectionController(index);
			}
		}

		__proto.removeSelection=function(index){
			if(this._selectionMode==3)
				return;
			var obj=null;
			if (this._virtual){
				var ii=this._virtualItems[index];
				if (ii.obj !=null)
					obj=ii.obj.asButton;
				ii.selected=false;
			}
			else
			obj=this.getChildAt(index).asButton;
			if (obj !=null)
				obj.selected=false;
		}

		__proto.clearSelection=function(){
			var i=0;
			if (this._virtual){
				for (i=0;i < this._realNumItems;i++){
					var ii=this._virtualItems[i];
					if ((ii.obj instanceof fairygui.GButton ))
						(ii.obj).selected=false;
					ii.selected=false;
				}
			}
			else{
				var cnt=this._children.length;
				for (i=0;i < cnt;i++){
					var obj=this._children[i].asButton;
					if (obj !=null)
						obj.selected=false;
				}
			}
		}

		__proto.clearSelectionExcept=function(g){
			var i=0;
			if (this._virtual){
				for (i=0;i < this._realNumItems;i++){
					var ii=this._virtualItems[i];
					if (ii.obj !=g){
						if (((ii.obj instanceof fairygui.GButton )))
							(ii.obj).selected=false;
						ii.selected=false;
					}
				}
			}
			else{
				var cnt=this._children.length;
				for (i=0;i < cnt;i++){
					var obj=this._children[i].asButton;
					if (obj !=null && obj !=g)
						obj.selected=false;
				}
			}
		}

		__proto.selectAll=function(){
			this.checkVirtualList();
			var last=-1;
			var i=0;
			if (this._virtual){
				for (i=0;i < this._realNumItems;i++){
					var ii=this._virtualItems[i];
					if (((ii.obj instanceof fairygui.GButton ))&& !(ii.obj).selected){
						(ii.obj).selected=true;
						last=i;
					}
					ii.selected=true;
				}
			}
			else{
				var cnt=this._children.length;
				for (i=0;i < cnt;i++){
					var obj=this._children[i].asButton;
					if (obj !=null && !obj.selected){
						obj.selected=true;
						last=i;
					}
				}
			}
			if(last!=-1)
				this.updateSelectionController(last);
		}

		__proto.selectNone=function(){
			this.clearSelection();
		}

		__proto.selectReverse=function(){
			this.checkVirtualList();
			var last=-1;
			var i=0;
			if (this._virtual){
				for (i=0;i < this._realNumItems;i++){
					var ii=this._virtualItems[i];
					if ((ii.obj instanceof fairygui.GButton )){
						(ii.obj).selected=!(ii.obj).selected;
						if ((ii.obj).selected)
							last=i;
					}
					ii.selected=!ii.selected;
				}
			}
			else{
				var cnt=this._children.length;
				for (i=0;i < cnt;i++){
					var obj=this._children[i].asButton;
					if (obj !=null){
						obj.selected=!obj.selected;
						if (obj.selected)
							last=i;
					}
				}
			}
			if(last!=-1)
				this.updateSelectionController(last);
		}

		__proto.handleArrowKey=function(dir){
			(dir===void 0)&& (dir=0);
			var index=this.selectedIndex;
			if (index==-1)
				return;
			switch (dir){
				case 1:
					if (this._layout==0 || this._layout==3){
						index--;
						if (index >=0){
							this.clearSelection();
							this.addSelection(index,true);
						}
					}
					else if (this._layout==2 || this._layout==4){
						var current=this._children[index];
						var k=0;
						for (var i=index-1;i >=0;i--){
							var obj=this._children[i];
							if (obj.y !=current.y){
								current=obj;
								break ;
							}
							k++;
						}
						for (;i >=0;i--){
							obj=this._children[i];
							if (obj.y !=current.y){
								this.clearSelection();
								this.addSelection(i+k+1,true);
								break ;
							}
						}
					}
					break ;
				case 3:
					if (this._layout==1 || this._layout==2 || this._layout==4){
						index++;
						if (index < this._children.length){
							this.clearSelection();
							this.addSelection(index,true);
						}
					}
					else if (this._layout==3){
						current=this._children[index];
						k=0;
						var cnt=this._children.length;
						for (i=index+1;i < cnt;i++){
							obj=this._children[i];
							if (obj.x !=current.x){
								current=obj;
								break ;
							}
							k++;
						}
						for (;i < cnt;i++){
							obj=this._children[i];
							if (obj.x !=current.x){
								this.clearSelection();
								this.addSelection(i-k-1,true);
								break ;
							}
						}
					}
					break ;
				case 5:
					if (this._layout==0 || this._layout==3){
						index++;
						if (index < this._children.length){
							this.clearSelection();
							this.addSelection(index,true);
						}
					}
					else if (this._layout==2 || this._layout==4){
						current=this._children[index];
						k=0;
						cnt=this._children.length;
						for (i=index+1;i < cnt;i++){
							obj=this._children[i];
							if (obj.y !=current.y){
								current=obj;
								break ;
							}
							k++;
						}
						for (;i < cnt;i++){
							obj=this._children[i];
							if (obj.y !=current.y){
								this.clearSelection();
								this.addSelection(i-k-1,true);
								break ;
							}
						}
					}
					break ;
				case 7:
					if (this._layout==1 || this._layout==2 || this._layout==4){
						index--;
						if (index >=0){
							this.clearSelection();
							this.addSelection(index,true);
						}
					}
					else if (this._layout==3){
						current=this._children[index];
						k=0;
						for (i=index-1;i >=0;i--){
							obj=this._children[i];
							if (obj.x !=current.x){
								current=obj;
								break ;
							}
							k++;
						}
						for (;i >=0;i--){
							obj=this._children[i];
							if (obj.x !=current.x){
								this.clearSelection();
								this.addSelection(i+k+1,true);
								break ;
							}
						}
					}
					break ;
				}
		}

		__proto.__clickItem=function(evt){
			if (this._scrollPane !=null && this._scrollPane.isDragged)
				return;
			var item=GObject.cast(evt.currentTarget);
			this.setSelectionOnEvent(item,evt);
			if(this._scrollPane && this.scrollItemToViewOnClick)
				this._scrollPane.scrollToView(item,true);
			this.displayObject.event("fui_click_item",[item,Events.createEvent("fui_click_item",this.displayObject,evt)]);
		}

		__proto.setSelectionOnEvent=function(item,evt){
			if (!((item instanceof fairygui.GButton ))|| this._selectionMode==3)
				return;
			var dontChangeLastIndex=false;
			var button=(item);
			var index=this.childIndexToItemIndex(this.getChildIndex(item));
			if (this._selectionMode==0){
				if (!button.selected){
					this.clearSelectionExcept(button);
					button.selected=true;
				}
			}
			else {
				if (evt.shiftKey){
					if (!button.selected){
						if (this._lastSelectedIndex !=-1){
							var min=Math.min(this._lastSelectedIndex,index);
							var max=Math.max(this._lastSelectedIndex,index);
							max=Math.min(max,this.numItems-1);
							var i=0;
							if (this._virtual){
								for (i=min;i <=max;i++){
									var ii=this._virtualItems[i];
									if ((ii.obj instanceof fairygui.GButton ))
										(ii.obj).selected=true;
									ii.selected=true;
								}
							}
							else{
								for(i=min;i<=max;i++){
									var obj=this.getChildAt(i).asButton;
									if(obj!=null)
										obj.selected=true;
								}
							}
							dontChangeLastIndex=true;
						}
						else {
							button.selected=true;
						}
					}
				}
				else if (evt.ctrlKey || this._selectionMode==2){
					button.selected=!button.selected;
				}
				else {
					if (!button.selected){
						this.clearSelectionExcept(button);
						button.selected=true;
					}
					else
					this.clearSelectionExcept(button);
				}
			}
			if (!dontChangeLastIndex)
				this._lastSelectedIndex=index;
			if(button.selected)
				this.updateSelectionController(index);
		}

		__proto.resizeToFit=function(itemCount,minSize){
			(itemCount===void 0)&& (itemCount=1000000);
			(minSize===void 0)&& (minSize=0);
			this.ensureBoundsCorrect();
			var curCount=this.numItems;
			if (itemCount > curCount)
				itemCount=curCount;
			if(this._virtual){
				var lineCount=Math.ceil(itemCount / this._curLineItemCount);
				if(this._layout==0 || this._layout==2)
					this.viewHeight=lineCount *this._itemSize.y+Math.max(0,lineCount-1)*this._lineGap;
				else
				this.viewWidth=lineCount *this._itemSize.x+Math.max(0,lineCount-1)*this._columnGap;
			}
			else if(itemCount==0){
				if (this._layout==0 || this._layout==2)
					this.viewHeight=minSize;
				else
				this.viewWidth=minSize;
			}
			else {
				var i=itemCount-1;
				var obj=null;
				while (i >=0){
					obj=this.getChildAt(i);
					if (!this.foldInvisibleItems || obj.visible)
						break ;
					i--;
				}
				if (i < 0){
					if (this._layout==0 || this._layout==2)
						this.viewHeight=minSize;
					else
					this.viewWidth=minSize;
				}
				else {
					var size=0;
					if (this._layout==0 || this._layout==2){
						size=obj.y+obj.height;
						if (size < minSize)
							size=minSize;
						this.viewHeight=size;
					}
					else {
						size=obj.x+obj.width;
						if (size < minSize)
							size=minSize;
						this.viewWidth=size;
					}
				}
			}
		}

		__proto.getMaxItemWidth=function(){
			var cnt=this._children.length;
			var max=0;
			for (var i=0;i < cnt;i++){
				var child=this.getChildAt(i);
				if (child.width > max)
					max=child.width;
			}
			return max;
		}

		__proto.handleSizeChanged=function(){
			_super.prototype.handleSizeChanged.call(this);
			this.setBoundsChangedFlag();
			if (this._virtual)
				this.setVirtualListChangedFlag(true);
		}

		__proto.handleControllerChanged=function(c){
			_super.prototype.handleControllerChanged.call(this,c);
			if (this._selectionController==c)
				this.selectedIndex=c.selectedIndex;
		}

		__proto.updateSelectionController=function(index){
			if (this._selectionController !=null && !this._selectionController.changing
				&& index < this._selectionController.pageCount){
				var c=this._selectionController;
				this._selectionController=null;
				c.selectedIndex=index;
				this._selectionController=c;
			}
		}

		__proto.getSnappingPosition=function(xValue,yValue,resultPoint){
			if (this._virtual){
				if(!resultPoint)
					resultPoint=new Point();
				var saved=NaN;
				var index=0;
				if (this._layout==0 || this._layout==2){
					saved=yValue;
					fairygui.GList.pos_param=yValue;
					index=this.getIndexOnPos1(false);
					yValue=fairygui.GList.pos_param;
					if (index < this._virtualItems.length && saved-yValue > this._virtualItems[index].height / 2 && index < this._realNumItems)
						yValue+=this._virtualItems[index].height+this._lineGap;
				}
				else if (this._layout==1 || this._layout==3){
					saved=xValue;
					fairygui.GList.pos_param=xValue;
					index=this.getIndexOnPos2(false);
					xValue=fairygui.GList.pos_param;
					if (index < this._virtualItems.length && saved-xValue > this._virtualItems[index].width / 2 && index < this._realNumItems)
						xValue+=this._virtualItems[index].width+this._columnGap;
				}
				else{
					saved=xValue;
					fairygui.GList.pos_param=xValue;
					index=this.getIndexOnPos3(false);
					xValue=fairygui.GList.pos_param;
					if (index < this._virtualItems.length && saved-xValue > this._virtualItems[index].width / 2 && index < this._realNumItems)
						xValue+=this._virtualItems[index].width+this._columnGap;
				}
				resultPoint.x=xValue;
				resultPoint.y=yValue;
				return resultPoint;
			}
			else
			return _super.prototype.getSnappingPosition.call(this,xValue,yValue,resultPoint);
		}

		__proto.scrollToView=function(index,ani,setFirst){
			(ani===void 0)&& (ani=false);
			(setFirst===void 0)&& (setFirst=false);
			if (this._virtual){
				if(this._numItems==0)
					return;
				this.checkVirtualList();
				if (index >=this._virtualItems.length)
					throw new Error("Invalid child index: "+index+">"+this._virtualItems.length);
				if(this._loop)
					index=Math.floor(this._firstIndex/this._numItems)*this._numItems+index;
				var rect;
				var ii=this._virtualItems[index];
				var pos=0;
				var i=0;
				if (this._layout==0 || this._layout==2){
					for (i=0;i < index;i+=this._curLineItemCount)
					pos+=this._virtualItems[i].height+this._lineGap;
					rect=new Rectangle(0,pos,this._itemSize.x,ii.height);
				}
				else if (this._layout==1 || this._layout==3){
					for (i=0;i < index;i+=this._curLineItemCount)
					pos+=this._virtualItems[i].width+this._columnGap;
					rect=new Rectangle(pos,0,ii.width,this._itemSize.y);
				}
				else{
					var page=index / (this._curLineItemCount *this._curLineItemCount2);
					rect=new Rectangle(page *this.viewWidth+(index % this._curLineItemCount)*(ii.width+this._columnGap),
					(index / this._curLineItemCount)% this._curLineItemCount2 *(ii.height+this._lineGap),
					ii.width,ii.height);
				}
				setFirst=true;
				if (this._scrollPane !=null)
					this.scrollPane.scrollToView(rect,ani,setFirst);
			}
			else{
				var obj=this.getChildAt(index);
				if (this._scrollPane !=null)
					this.scrollPane.scrollToView(obj,ani,setFirst);
				else if (this.parent !=null && this.parent.scrollPane !=null)
				this.parent.scrollPane.scrollToView(obj,ani,setFirst);
			}
		}

		__proto.getFirstChildInView=function(){
			return this.childIndexToItemIndex(_super.prototype.getFirstChildInView.call(this));
		}

		__proto.childIndexToItemIndex=function(index){
			if (!this._virtual)
				return index;
			if (this._layout==4){
				for (var i=this._firstIndex;i < this._realNumItems;i++){
					if (this._virtualItems[i].obj !=null){
						index--;
						if (index < 0)
							return i;
					}
				}
				return index;
			}
			else{
				index+=this._firstIndex;
				if (this._loop && this._numItems > 0)
					index=index % this._numItems;
				return index;
			}
		}

		__proto.itemIndexToChildIndex=function(index){
			if (!this._virtual)
				return index;
			if (this._layout==4){
				return this.getChildIndex(this._virtualItems[index].obj);
			}
			else{
				if (this._loop && this._numItems > 0){
					var j=this._firstIndex % this._numItems;
					if (index >=j)
						index=this._firstIndex+(index-j);
					else
					index=this._firstIndex+this._numItems+(j-index);
				}
				else
				index-=this._firstIndex;
				return index;
			}
		}

		__proto.setVirtual=function(){
			this._setVirtual(false);
		}

		/// </summary>
		__proto.setVirtualAndLoop=function(){
			this._setVirtual(true);
		}

		/// </summary>
		__proto._setVirtual=function(loop){
			if(!this._virtual){
				if(this._scrollPane==null)
					throw new Error("Virtual list must be scrollable!");
				if(loop){
					if(this._layout==2 || this._layout==3)
						throw new Error("Loop list is not supported for FlowHorizontal or FlowVertical layout!");
					this._scrollPane.bouncebackEffect=false;
				}
				this._virtual=true;
				this._loop=loop;
				this._virtualItems=[];
				this.removeChildrenToPool();
				if(this._itemSize==null){
					this._itemSize=new Point();
					var obj=this.getFromPool(null);
					if (obj==null){
						throw new Error("Virtual List must have a default list item resource.");
					}
					else{
						this._itemSize.x=obj.width;
						this._itemSize.y=obj.height;
					}
					this.returnToPool(obj);
				}
				if(this._layout==0 || this._layout==2)
					this._scrollPane.scrollSpeed=this._itemSize.y;
				else
				this._scrollPane.scrollSpeed=this._itemSize.x;
				this.on("fui_scroll",this,this.__scrolled);
				this.setVirtualListChangedFlag(true);
			}
		}

		__proto.refreshVirtualList=function(){
			this.setVirtualListChangedFlag(false);
		}

		__proto.checkVirtualList=function(){
			if(this._virtualListChanged!=0){
				this._refreshVirtualList();
				Laya.timer.clear(this,this._refreshVirtualList);
			}
		}

		__proto.setVirtualListChangedFlag=function(layoutChanged){
			(layoutChanged===void 0)&& (layoutChanged=false);
			if(layoutChanged)
				this._virtualListChanged=2;
			else if(this._virtualListChanged==0)
			this._virtualListChanged=1;
			Laya.timer.callLater(this,this._refreshVirtualList);
		}

		__proto._refreshVirtualList=function(){
			var layoutChanged=this._virtualListChanged==2;
			this._virtualListChanged=0;
			this._eventLocked=true;
			if (layoutChanged){
				if (this._layout==0 || this._layout==1)
					this._curLineItemCount=1;
				else if (this._layout==2){
					if (this._columnCount > 0)
						this._curLineItemCount=this._columnCount;
					else{
						this._curLineItemCount=Math.floor((this._scrollPane.viewWidth+this._columnGap)/ (this._itemSize.x+this._columnGap));
						if (this._curLineItemCount <=0)
							this._curLineItemCount=1;
					}
				}
				else if (this._layout==3){
					if (this._lineCount > 0)
						this._curLineItemCount=this._lineCount;
					else{
						this._curLineItemCount=Math.floor((this._scrollPane.viewHeight+this._lineGap)/ (this._itemSize.y+this._lineGap));
						if (this._curLineItemCount <=0)
							this._curLineItemCount=1;
					}
				}
				else{
					if (this._columnCount > 0)
						this._curLineItemCount=this._columnCount;
					else{
						this._curLineItemCount=Math.floor((this._scrollPane.viewWidth+this._columnGap)/ (this._itemSize.x+this._columnGap));
						if (this._curLineItemCount <=0)
							this._curLineItemCount=1;
					}
					if (this._lineCount > 0)
						this._curLineItemCount2=this._lineCount;
					else{
						this._curLineItemCount2=Math.floor((this._scrollPane.viewHeight+this._lineGap)/ (this._itemSize.y+this._lineGap));
						if (this._curLineItemCount2 <=0)
							this._curLineItemCount2=1;
					}
				}
			};
			var ch=0,cw=0;
			if (this._realNumItems > 0){
				var i=0;
				var len=Math.ceil(this._realNumItems / this._curLineItemCount)*this._curLineItemCount;
				var len2=Math.min(this._curLineItemCount,this._realNumItems);
				if (this._layout==0 || this._layout==2){
					for (i=0;i < len;i+=this._curLineItemCount)
					ch+=this._virtualItems[i].height+this._lineGap;
					if (ch > 0)
						ch-=this._lineGap;
					if (this._autoResizeItem)
						cw=this.scrollPane.viewWidth;
					else{
						for (i=0;i < len2;i++)
						cw+=this._virtualItems[i].width+this._columnGap;
						if (cw > 0)
							cw-=this._columnGap;
					}
				}
				else if (this._layout==1 || this._layout==3){
					for (i=0;i < len;i+=this._curLineItemCount)
					cw+=this._virtualItems[i].width+this._columnGap;
					if (cw > 0)
						cw-=this._columnGap;
					if (this._autoResizeItem)
						ch=this.scrollPane.viewHeight;
					else{
						for (i=0;i < len2;i++)
						ch+=this._virtualItems[i].height+this._lineGap;
						if (ch > 0)
							ch-=this._lineGap;
					}
				}
				else{
					var pageCount=Math.ceil(len / (this._curLineItemCount *this._curLineItemCount2));
					cw=pageCount *this.viewWidth;
					ch=this.viewHeight;
				}
			}
			this.handleAlign(cw,ch);
			this._scrollPane.setContentSize(cw,ch);
			this._eventLocked=false;
			this.handleScroll(true);
		}

		__proto.__scrolled=function(evt){
			this.handleScroll(false);
		}

		__proto.getIndexOnPos1=function(forceUpdate){
			if (this._realNumItems < this._curLineItemCount){
				GList.pos_param=0;
				return 0;
			};
			var i=0;
			var pos2=NaN;
			var pos3=NaN;
			if (this.numChildren > 0 && !forceUpdate){
				pos2=this.getChildAt(0).y;
				if (pos2 > GList.pos_param){
					for (i=this._firstIndex-this._curLineItemCount;i >=0;i-=this._curLineItemCount){
						pos2-=(this._virtualItems[i].height+this._lineGap);
						if (pos2 <=GList.pos_param){
							GList.pos_param=pos2;
							return i;
						}
					}
					GList.pos_param=0;
					return 0;
				}
				else{
					for (i=this._firstIndex;i < this._realNumItems;i+=this._curLineItemCount){
						pos3=pos2+this._virtualItems[i].height+this._lineGap;
						if (pos3 > GList.pos_param){
							GList.pos_param=pos2;
							return i;
						}
						pos2=pos3;
					}
					GList.pos_param=pos2;
					return this._realNumItems-this._curLineItemCount;
				}
			}
			else{
				pos2=0;
				for (i=0;i < this._realNumItems;i+=this._curLineItemCount){
					pos3=pos2+this._virtualItems[i].height+this._lineGap;
					if (pos3 > GList.pos_param){
						GList.pos_param=pos2;
						return i;
					}
					pos2=pos3;
				}
				GList.pos_param=pos2;
				return this._realNumItems-this._curLineItemCount;
			}
		}

		__proto.getIndexOnPos2=function(forceUpdate){
			if (this._realNumItems < this._curLineItemCount){
				GList.pos_param=0;
				return 0;
			};
			var i=0;
			var pos2=NaN;
			var pos3=NaN;
			if (this.numChildren > 0 && !forceUpdate){
				pos2=this.getChildAt(0).x;
				if (pos2 > GList.pos_param){
					for (i=this._firstIndex-this._curLineItemCount;i >=0;i-=this._curLineItemCount){
						pos2-=(this._virtualItems[i].width+this._columnGap);
						if (pos2 <=GList.pos_param){
							GList.pos_param=pos2;
							return i;
						}
					}
					GList.pos_param=0;
					return 0;
				}
				else{
					for (i=this._firstIndex;i < this._realNumItems;i+=this._curLineItemCount){
						pos3=pos2+this._virtualItems[i].width+this._columnGap;
						if (pos3 > GList.pos_param){
							GList.pos_param=pos2;
							return i;
						}
						pos2=pos3;
					}
					GList.pos_param=pos2;
					return this._realNumItems-this._curLineItemCount;
				}
			}
			else{
				pos2=0;
				for (i=0;i < this._realNumItems;i+=this._curLineItemCount){
					pos3=pos2+this._virtualItems[i].width+this._columnGap;
					if (pos3 > GList.pos_param){
						GList.pos_param=pos2;
						return i;
					}
					pos2=pos3;
				}
				GList.pos_param=pos2;
				return this._realNumItems-this._curLineItemCount;
			}
		}

		__proto.getIndexOnPos3=function(forceUpdate){
			if (this._realNumItems < this._curLineItemCount){
				GList.pos_param=0;
				return 0;
			};
			var viewWidth=this.viewWidth;
			var page=Math.floor(GList.pos_param / viewWidth);
			var startIndex=page *(this._curLineItemCount *this._curLineItemCount2);
			var pos2=page *viewWidth;
			var i=0;
			var pos3=NaN;
			for (i=0;i < this._curLineItemCount;i++){
				pos3=pos2+this._virtualItems[startIndex+i].width+this._columnGap;
				if (pos3 > GList.pos_param){
					GList.pos_param=pos2;
					return startIndex+i;
				}
				pos2=pos3;
			}
			GList.pos_param=pos2;
			return startIndex+this._curLineItemCount-1;
		}

		__proto.handleScroll=function(forceUpdate){
			if (this._eventLocked)
				return;
			var pos=NaN;
			var roundSize=0;
			if (this._layout==0 || this._layout==2){
				if (this._loop){
					pos=this.scrollPane.scrollingPosY;
					roundSize=this._numItems *(this._itemSize.y+this._lineGap);
					if (pos==0)
						this.scrollPane.posY=roundSize;
					else if (pos==this.scrollPane.contentHeight-this.scrollPane.viewHeight)
					this.scrollPane.posY=this.scrollPane.contentHeight-roundSize-this.viewHeight;
				}
				this.handleScroll1(forceUpdate);
			}
			else if (this._layout==1 || this._layout==3){
				if (this._loop){
					pos=this.scrollPane.scrollingPosX;
					roundSize=this._numItems *(this._itemSize.x+this._columnGap);
					if (pos==0)
						this.scrollPane.posX=roundSize;
					else if (pos==this.scrollPane.contentWidth-this.scrollPane.viewWidth)
					this.scrollPane.posX=this.scrollPane.contentWidth-roundSize-this.viewWidth;
				}
				this.handleScroll2(forceUpdate);
			}
			else{
				if (this._loop){
					pos=this.scrollPane.scrollingPosX;
					roundSize=Math.floor(this._numItems / (this._curLineItemCount *this._curLineItemCount2))*this.viewWidth;
					if (pos==0)
						this.scrollPane.posX=roundSize;
					else if (pos==this.scrollPane.contentWidth-this.scrollPane.viewWidth)
					this.scrollPane.posX=this.scrollPane.contentWidth-roundSize-this.viewWidth;
				}
				this.handleScroll3(forceUpdate);
			}
			this._boundsChanged=false;
		}

		__proto.handleScroll1=function(forceUpdate){
			GList.enterCounter++;
			if (GList.enterCounter > 3)
				return;
			var pos=this.scrollPane.scrollingPosY;
			var max=pos+this.scrollPane.viewHeight;
			var end=max==this.scrollPane.contentHeight;
			fairygui.GList.pos_param=pos;
			var newFirstIndex=this.getIndexOnPos1(forceUpdate);
			pos=fairygui.GList.pos_param;
			if (newFirstIndex==this._firstIndex && !forceUpdate){
				GList.enterCounter--;
				return;
			};
			var oldFirstIndex=this._firstIndex;
			this._firstIndex=newFirstIndex;
			var curIndex=newFirstIndex;
			var forward=oldFirstIndex > newFirstIndex;
			var oldCount=this.numChildren;
			var lastIndex=oldFirstIndex+oldCount-1;
			var reuseIndex=forward ? lastIndex :oldFirstIndex;
			var curX=0,curY=pos;
			var needRender=false;
			var deltaSize=0;
			var firstItemDeltaSize=0;
			var url=this.defaultItem;
			var ii,ii2;
			var i=0,j=0;
			var partSize=(this.scrollPane.viewWidth-this._columnGap *(this._curLineItemCount-1))/ this._curLineItemCount;
			GList.itemInfoVer++;
			while (curIndex < this._realNumItems && (end || curY < max)){
				ii=this._virtualItems[curIndex];
				if (ii.obj==null || forceUpdate){
					if (this.itemProvider !=null){
						url=this.itemProvider.runWith(curIndex % this._numItems);
						if (url==null)
							url=this._defaultItem;
						url=UIPackage.normalizeURL(url);
					}
					if (ii.obj !=null && ii.obj.resourceURL !=url){
						if ((ii.obj instanceof fairygui.GButton ))
							ii.selected=(ii.obj).selected;
						this.removeChildToPool(ii.obj);
						ii.obj=null;
					}
				}
				if (ii.obj==null){
					if (forward){
						for (j=reuseIndex;j >=oldFirstIndex;j--){
							ii2=this._virtualItems[j];
							if (ii2.obj !=null && ii2.updateFlag !=GList.itemInfoVer && ii2.obj.resourceURL==url){
								if ((ii2.obj instanceof fairygui.GButton ))
									ii2.selected=(ii2.obj).selected;
								ii.obj=ii2.obj;
								ii2.obj=null;
								if (j==reuseIndex)
									reuseIndex--;
								break ;
							}
						}
					}
					else{
						for (j=reuseIndex;j <=lastIndex;j++){
							ii2=this._virtualItems[j];
							if (ii2.obj !=null && ii2.updateFlag !=GList.itemInfoVer && ii2.obj.resourceURL==url){
								if ((ii2.obj instanceof fairygui.GButton ))
									ii2.selected=(ii2.obj).selected;
								ii.obj=ii2.obj;
								ii2.obj=null;
								if (j==reuseIndex)
									reuseIndex++;
								break ;
							}
						}
					}
					if (ii.obj !=null){
						this.setChildIndex(ii.obj,forward ? curIndex-newFirstIndex :this.numChildren);
					}
					else{
						ii.obj=this._pool.getObject(url);
						if (forward)
							this.addChildAt(ii.obj,curIndex-newFirstIndex);
						else
						this.addChild(ii.obj);
					}
					if ((ii.obj instanceof fairygui.GButton ))
						(ii.obj).selected=ii.selected;
					needRender=true;
				}
				else
				needRender=forceUpdate;
				if (needRender){
					if (this._autoResizeItem && (this._layout==0 || this._columnCount > 0))
						ii.obj.setSize(partSize,ii.obj.height,true);
					this.itemRenderer.runWith([curIndex % this._numItems,ii.obj]);
					if (curIndex % this._curLineItemCount==0){
						deltaSize+=Math.ceil(ii.obj.height)-ii.height;
						if (curIndex==newFirstIndex && oldFirstIndex > newFirstIndex){
							firstItemDeltaSize=Math.ceil(ii.obj.height)-ii.height;
						}
					}
					ii.width=Math.ceil(ii.obj.width);
					ii.height=Math.ceil(ii.obj.height);
				}
				ii.updateFlag=GList.itemInfoVer;
				ii.obj.setXY(curX,curY);
				if (curIndex==newFirstIndex)
					max+=ii.height;
				curX+=ii.width+this._columnGap;
				if (curIndex % this._curLineItemCount==this._curLineItemCount-1){
					curX=0;
					curY+=ii.height+this._lineGap;
				}
				curIndex++;
			}
			for (i=0;i < oldCount;i++){
				ii=this._virtualItems[oldFirstIndex+i];
				if (ii.updateFlag !=GList.itemInfoVer && ii.obj !=null){
					if ((ii.obj instanceof fairygui.GButton ))
						ii.selected=(ii.obj).selected;
					this.removeChildToPool(ii.obj);
					ii.obj=null;
				}
			}
			if (deltaSize !=0 || firstItemDeltaSize !=0)
				this._scrollPane.changeContentSizeOnScrolling(0,deltaSize,0,firstItemDeltaSize);
			if (curIndex > 0 && this.numChildren > 0 && this._container.y < 0 && this.getChildAt(0).y >-this._container.y)
				this.handleScroll1(false);
			GList.enterCounter--;
		}

		__proto.handleScroll2=function(forceUpdate){
			GList.enterCounter++;
			if (GList.enterCounter > 3)
				return;
			var pos=this.scrollPane.scrollingPosX;
			var max=pos+this.scrollPane.viewWidth;
			var end=pos==this.scrollPane.contentWidth;
			fairygui.GList.pos_param=pos;
			var newFirstIndex=this.getIndexOnPos2(forceUpdate);
			pos=fairygui.GList.pos_param;
			if (newFirstIndex==this._firstIndex && !forceUpdate){
				GList.enterCounter--;
				return;
			};
			var oldFirstIndex=this._firstIndex;
			this._firstIndex=newFirstIndex;
			var curIndex=newFirstIndex;
			var forward=oldFirstIndex > newFirstIndex;
			var oldCount=this.numChildren;
			var lastIndex=oldFirstIndex+oldCount-1;
			var reuseIndex=forward ? lastIndex :oldFirstIndex;
			var curX=pos,curY=0;
			var needRender=false;
			var deltaSize=0;
			var firstItemDeltaSize=0;
			var url=this.defaultItem;
			var ii,ii2;
			var i=0,j=0;
			var partSize=(this.scrollPane.viewHeight-this._lineGap *(this._curLineItemCount-1))/ this._curLineItemCount;
			GList.itemInfoVer++;
			while (curIndex < this._realNumItems && (end || curX < max)){
				ii=this._virtualItems[curIndex];
				if (ii.obj==null || forceUpdate){
					if (this.itemProvider !=null){
						url=this.itemProvider.runWith(curIndex % this._numItems);
						if (url==null)
							url=this._defaultItem;
						url=UIPackage.normalizeURL(url);
					}
					if (ii.obj !=null && ii.obj.resourceURL !=url){
						if ((ii.obj instanceof fairygui.GButton ))
							ii.selected=(ii.obj).selected;
						this.removeChildToPool(ii.obj);
						ii.obj=null;
					}
				}
				if (ii.obj==null){
					if (forward){
						for (j=reuseIndex;j >=oldFirstIndex;j--){
							ii2=this._virtualItems[j];
							if (ii2.obj !=null && ii2.updateFlag !=GList.itemInfoVer && ii2.obj.resourceURL==url){
								if ((ii2.obj instanceof fairygui.GButton ))
									ii2.selected=(ii2.obj).selected;
								ii.obj=ii2.obj;
								ii2.obj=null;
								if (j==reuseIndex)
									reuseIndex--;
								break ;
							}
						}
					}
					else{
						for (j=reuseIndex;j <=lastIndex;j++){
							ii2=this._virtualItems[j];
							if (ii2.obj !=null && ii2.updateFlag !=GList.itemInfoVer && ii2.obj.resourceURL==url){
								if ((ii2.obj instanceof fairygui.GButton ))
									ii2.selected=(ii2.obj).selected;
								ii.obj=ii2.obj;
								ii2.obj=null;
								if (j==reuseIndex)
									reuseIndex++;
								break ;
							}
						}
					}
					if (ii.obj !=null){
						this.setChildIndex(ii.obj,forward ? curIndex-newFirstIndex :this.numChildren);
					}
					else{
						ii.obj=this._pool.getObject(url);
						if (forward)
							this.addChildAt(ii.obj,curIndex-newFirstIndex);
						else
						this.addChild(ii.obj);
					}
					if ((ii.obj instanceof fairygui.GButton ))
						(ii.obj).selected=ii.selected;
					needRender=true;
				}
				else
				needRender=forceUpdate;
				if (needRender){
					if (this._autoResizeItem && (this._layout==1 || this._lineCount > 0))
						ii.obj.setSize(ii.obj.width,partSize,true);
					this.itemRenderer.runWith([curIndex % this._numItems,ii.obj]);
					if (curIndex % this._curLineItemCount==0){
						deltaSize+=Math.ceil(ii.obj.width)-ii.width;
						if (curIndex==newFirstIndex && oldFirstIndex > newFirstIndex){
							firstItemDeltaSize=Math.ceil(ii.obj.width)-ii.width;
						}
					}
					ii.width=Math.ceil(ii.obj.width);
					ii.height=Math.ceil(ii.obj.height);
				}
				ii.updateFlag=GList.itemInfoVer;
				ii.obj.setXY(curX,curY);
				if (curIndex==newFirstIndex)
					max+=ii.width;
				curY+=ii.height+this._lineGap;
				if (curIndex % this._curLineItemCount==this._curLineItemCount-1){
					curY=0;
					curX+=ii.width+this._columnGap;
				}
				curIndex++;
			}
			for (i=0;i < oldCount;i++){
				ii=this._virtualItems[oldFirstIndex+i];
				if (ii.updateFlag !=GList.itemInfoVer && ii.obj !=null){
					if ((ii.obj instanceof fairygui.GButton ))
						ii.selected=(ii.obj).selected;
					this.removeChildToPool(ii.obj);
					ii.obj=null;
				}
			}
			if (deltaSize !=0 || firstItemDeltaSize !=0)
				this._scrollPane.changeContentSizeOnScrolling(deltaSize,0,firstItemDeltaSize,0);
			if (curIndex > 0 && this.numChildren > 0 && this._container.x < 0 && this.getChildAt(0).x >-this._container.x)
				this.handleScroll2(false);
			GList.enterCounter--;
		}

		__proto.handleScroll3=function(forceUpdate){
			var pos=this.scrollPane.scrollingPosX;
			fairygui.GList.pos_param=pos;
			var newFirstIndex=this.getIndexOnPos3(forceUpdate);
			pos=fairygui.GList.pos_param;
			if (newFirstIndex==this._firstIndex && !forceUpdate)
				return;
			var oldFirstIndex=this._firstIndex;
			this._firstIndex=newFirstIndex;
			var reuseIndex=oldFirstIndex;
			var virtualItemCount=this._virtualItems.length;
			var pageSize=this._curLineItemCount *this._curLineItemCount2;
			var startCol=newFirstIndex % this._curLineItemCount;
			var viewWidth=this.viewWidth;
			var page=Math.floor(newFirstIndex / pageSize);
			var startIndex=page *pageSize;
			var lastIndex=startIndex+pageSize *2;
			var needRender=false;
			var i=0;
			var ii,ii2;
			var col=0;
			var url=this._defaultItem;
			var partWidth=(this.scrollPane.viewWidth-this._columnGap *(this._curLineItemCount-1))/ this._curLineItemCount;
			var partHeight=(this.scrollPane.viewHeight-this._lineGap *(this._curLineItemCount2-1))/ this._curLineItemCount2;
			GList.itemInfoVer++;
			for (i=startIndex;i < lastIndex;i++){
				if (i >=this._realNumItems)
					continue ;
				col=i % this._curLineItemCount;
				if (i-startIndex < pageSize){
					if (col < startCol)
						continue ;
				}
				else{
					if (col > startCol)
						continue ;
				}
				ii=this._virtualItems[i];
				ii.updateFlag=GList.itemInfoVer;
			};
			var lastObj=null;
			var insertIndex=0;
			for (i=startIndex;i < lastIndex;i++){
				if (i >=this._realNumItems)
					continue ;
				ii=this._virtualItems[i];
				if (ii.updateFlag !=GList.itemInfoVer)
					continue ;
				if (ii.obj==null){
					while (reuseIndex < virtualItemCount){
						ii2=this._virtualItems[reuseIndex];
						if (ii2.obj !=null && ii2.updateFlag !=GList.itemInfoVer){
							if ((ii2.obj instanceof fairygui.GButton ))
								ii2.selected=(ii2.obj).selected;
							ii.obj=ii2.obj;
							ii2.obj=null;
							break ;
						}
						reuseIndex++;
					}
					if (insertIndex==-1)
						insertIndex=this.getChildIndex(lastObj)+1;
					if (ii.obj==null){
						if (this.itemProvider !=null){
							url=this.itemProvider.runWith(i % this._numItems);
							if (url==null)
								url=this._defaultItem;
							url=UIPackage.normalizeURL(url);
						}
						ii.obj=this._pool.getObject(url);
						this.addChildAt(ii.obj,insertIndex);
					}
					else{
						insertIndex=this.setChildIndexBefore(ii.obj,insertIndex);
					}
					insertIndex++;
					if ((ii.obj instanceof fairygui.GButton ))
						(ii.obj).selected=ii.selected;
					needRender=true;
				}
				else{
					needRender=forceUpdate;
					insertIndex=-1;
					lastObj=ii.obj;
				}
				if (needRender){
					if (this._autoResizeItem){
						if (this._curLineItemCount==this._columnCount && this._curLineItemCount2==this._lineCount)
							ii.obj.setSize(partWidth,partHeight,true);
						else if (this._curLineItemCount==this._columnCount)
						ii.obj.setSize(partWidth,ii.obj.height,true);
						else if (this._curLineItemCount2==this._lineCount)
						ii.obj.setSize(ii.obj.width,partHeight,true);
					}
					this.itemRenderer.runWith([i % this._numItems,ii.obj]);
					ii.width=Math.ceil(ii.obj.width);
					ii.height=Math.ceil(ii.obj.height);
				}
			};
			var borderX=(startIndex / pageSize)*viewWidth;
			var xx=borderX;
			var yy=0;
			var lineHeight=0;
			for (i=startIndex;i < lastIndex;i++){
				if (i >=this._realNumItems)
					continue ;
				ii=this._virtualItems[i];
				if (ii.updateFlag==GList.itemInfoVer)
					ii.obj.setXY(xx,yy);
				if (ii.height > lineHeight)
					lineHeight=ii.height;
				if (i % this._curLineItemCount==this._curLineItemCount-1){
					xx=borderX;
					yy+=lineHeight+this._lineGap;
					lineHeight=0;
					if (i==startIndex+pageSize-1){
						borderX+=viewWidth;
						xx=borderX;
						yy=0;
					}
				}
				else
				xx+=ii.width+this._columnGap;
			}
			for (i=reuseIndex;i < virtualItemCount;i++){
				ii=this._virtualItems[i];
				if (ii.updateFlag !=GList.itemInfoVer && ii.obj !=null){
					if ((ii.obj instanceof fairygui.GButton ))
						ii.selected=(ii.obj).selected;
					this.removeChildToPool(ii.obj);
					ii.obj=null;
				}
			}
		}

		__proto.handleAlign=function(contentWidth,contentHeight){
			var newOffsetX=0;
			var newOffsetY=0;
			if (contentHeight < this.viewHeight){
				if (this._verticalAlign=="middle")
					newOffsetY=Math.floor((this.viewHeight-contentHeight)/ 2);
				else if (this._verticalAlign=="bottom")
				newOffsetY=this.viewHeight-contentHeight;
			}
			if (contentWidth < this.viewWidth){
				if (this._align=="center")
					newOffsetX=Math.floor((this.viewWidth-contentWidth)/ 2);
				else if (this._align=="right")
				newOffsetX=this.viewWidth-contentWidth;
			}
			if (newOffsetX!=this._alignOffset.x || newOffsetY!=this._alignOffset.y){
				this._alignOffset.setTo(newOffsetX,newOffsetY);
				if (this.scrollPane !=null)
					this.scrollPane.adjustMaskContainer();
				else
				this._container.pos(this._margin.left+this._alignOffset.x,this._margin.top+this._alignOffset.y);
			}
		}

		__proto.updateBounds=function(){
			if(this._virtual)
				return;
			var i=0;
			var child;
			var curX=0;
			var curY=0;
			var maxWidth=0;
			var maxHeight=0;
			var cw=0,ch=0;
			var j=0;
			var page=0;
			var k=0;
			var cnt=this._children.length;
			var viewWidth=this.viewWidth;
			var viewHeight=this.viewHeight;
			var lineSize=0;
			var lineStart=0;
			var ratio=NaN;
			if(this._layout==0){
				for(i=0;i<cnt;i++){
					child=this.getChildAt(i);
					if (this.foldInvisibleItems && !child.visible)
						continue ;
					if (curY !=0)
						curY+=this._lineGap;
					child.y=curY;
					if (this._autoResizeItem)
						child.setSize(viewWidth,child.height,true);
					curY+=Math.ceil(child.height);
					if(child.width>maxWidth)
						maxWidth=child.width;
				}
				cw=Math.ceil(maxWidth);
				ch=curY;
			}
			else if(this._layout==1){
				for(i=0;i<cnt;i++){
					child=this.getChildAt(i);
					if (this.foldInvisibleItems && !child.visible)
						continue ;
					if(curX!=0)
						curX+=this._columnGap;
					child.x=curX;
					if (this._autoResizeItem)
						child.setSize(child.width,viewHeight,true);
					curX+=Math.ceil(child.width);
					if(child.height>maxHeight)
						maxHeight=child.height;
				}
				cw=curX;
				ch=Math.ceil(maxHeight);
			}
			else if(this._layout==2){
				if (this._autoResizeItem && this._columnCount > 0){
					for (i=0;i < cnt;i++){
						child=this.getChildAt(i);
						if (this.foldInvisibleItems && !child.visible)
							continue ;
						lineSize+=child.sourceWidth;
						j++;
						if (j==this._columnCount || i==cnt-1){
							ratio=(viewWidth-lineSize-(j-1)*this._columnGap)/ lineSize;
							curX=0;
							for (j=lineStart;j <=i;j++){
								child=this.getChildAt(j);
								if (this.foldInvisibleItems && !child.visible)
									continue ;
								child.setXY(curX,curY);
								if (j < i){
									child.setSize(child.sourceWidth+Math.round(child.sourceWidth *ratio),child.height,true);
									curX+=Math.ceil(child.width)+this._columnGap;
								}
								else{
									child.setSize(viewWidth-curX,child.height,true);
								}
								if (child.height > maxHeight)
									maxHeight=child.height;
							}
							curY+=Math.ceil(maxHeight)+this._lineGap;
							maxHeight=0;
							j=0;
							lineStart=i+1;
							lineSize=0;
						}
					}
					ch=curY+Math.ceil(maxHeight);
					cw=viewWidth;
				}
				else{
					for(i=0;i<cnt;i++){
						child=this.getChildAt(i);
						if (this.foldInvisibleItems && !child.visible)
							continue ;
						if(curX!=0)
							curX+=this._columnGap;
						if (this._columnCount !=0 && j >=this._columnCount
							|| this._columnCount==0 && curX+child.width > viewWidth && maxHeight !=0){
							curX=0;
							curY+=Math.ceil(maxHeight)+this._lineGap;
							maxHeight=0;
							j=0;
						}
						child.setXY(curX,curY);
						curX+=Math.ceil(child.width);
						if (curX > maxWidth)
							maxWidth=curX;
						if (child.height > maxHeight)
							maxHeight=child.height;
						j++;
					}
					ch=curY+Math.ceil(maxHeight);
					cw=Math.ceil(maxWidth);
				}
			}
			else if (this._layout==3){
				if (this._autoResizeItem && this._lineCount > 0){
					for (i=0;i < cnt;i++){
						child=this.getChildAt(i);
						if (this.foldInvisibleItems && !child.visible)
							continue ;
						lineSize+=child.sourceHeight;
						j++;
						if (j==this._lineCount || i==cnt-1){
							ratio=(viewHeight-lineSize-(j-1)*this._lineGap)/ lineSize;
							curY=0;
							for (j=lineStart;j <=i;j++){
								child=this.getChildAt(j);
								if (this.foldInvisibleItems && !child.visible)
									continue ;
								child.setXY(curX,curY);
								if (j < i){
									child.setSize(child.width,child.sourceHeight+Math.round(child.sourceHeight *ratio),true);
									curY+=Math.ceil(child.height)+this._lineGap;
								}
								else{
									child.setSize(child.width,viewHeight-curY,true);
								}
								if (child.width > maxWidth)
									maxWidth=child.width;
							}
							curX+=Math.ceil(maxWidth)+this._columnGap;
							maxWidth=0;
							j=0;
							lineStart=i+1;
							lineSize=0;
						}
					}
					cw=curX+Math.ceil(maxWidth);
					ch=viewHeight;
				}
				else{
					for(i=0;i<cnt;i++){
						child=this.getChildAt(i);
						if (this.foldInvisibleItems && !child.visible)
							continue ;
						if(curY!=0)
							curY+=this._lineGap;
						if (this._lineCount !=0 && j >=this._lineCount
							|| this._lineCount==0 && curY+child.height > viewHeight && maxWidth !=0){
							curY=0;
							curX+=Math.ceil(maxWidth)+this._columnGap;
							maxWidth=0;
							j=0;
						}
						child.setXY(curX,curY);
						curY+=Math.ceil(child.height);
						if (curY > maxHeight)
							maxHeight=curY;
						if (child.width > maxWidth)
							maxWidth=child.width;
						j++;
					}
					cw=curX+Math.ceil(maxWidth);
					ch=Math.ceil(maxHeight);
				}
			}
			else{
				var eachHeight=0;
				if(this._autoResizeItem && this._lineCount>0)
					eachHeight=Math.floor((viewHeight-(this._lineCount-1)*this._lineGap)/this._lineCount);
				if (this._autoResizeItem && this._columnCount > 0){
					for (i=0;i < cnt;i++){
						child=this.getChildAt(i);
						if (this.foldInvisibleItems && !child.visible)
							continue ;
						lineSize+=child.sourceWidth;
						j++;
						if (j==this._columnCount || i==cnt-1){
							ratio=(viewWidth-lineSize-(j-1)*this._columnGap)/ lineSize;
							curX=0;
							for (j=lineStart;j <=i;j++){
								child=this.getChildAt(j);
								if (this.foldInvisibleItems && !child.visible)
									continue ;
								child.setXY(page *viewWidth+curX,curY);
								if (j < i){
									child.setSize(child.sourceWidth+Math.round(child.sourceWidth *ratio),
									this._lineCount>0?eachHeight:child.height,true);
									curX+=Math.ceil(child.width)+this._columnGap;
								}
								else{
									child.setSize(viewWidth-curX,this._lineCount>0?eachHeight:child.height,true);
								}
								if (child.height > maxHeight)
									maxHeight=child.height;
							}
							curY+=Math.ceil(maxHeight)+this._lineGap;
							maxHeight=0;
							j=0;
							lineStart=i+1;
							lineSize=0;
							k++;
							if (this._lineCount !=0 && k >=this._lineCount
								|| this._lineCount==0 && curY+child.height > viewHeight){
								page++;
								curY=0;
								k=0;
							}
						}
					}
				}
				else{
					for (i=0;i < cnt;i++){
						child=this.getChildAt(i);
						if (this.foldInvisibleItems && !child.visible)
							continue ;
						if (curX !=0)
							curX+=this._columnGap;
						if (this._autoResizeItem && this._lineCount > 0)
							child.setSize(child.width,eachHeight,true);
						if (this._columnCount !=0 && j >=this._columnCount
							|| this._columnCount==0 && curX+child.width > viewWidth && maxHeight !=0){
							curX=0;
							curY+=Math.ceil(maxHeight)+this._lineGap;
							maxHeight=0;
							j=0;
							k++;
							if (this._lineCount !=0 && k >=this._lineCount
								|| this._lineCount==0 && curY+child.height > viewHeight && maxWidth !=0){
								page++;
								curY=0;
								k=0;
							}
						}
						child.setXY(page *viewWidth+curX,curY);
						curX+=Math.ceil(child.width);
						if (curX > maxWidth)
							maxWidth=curX;
						if (child.height > maxHeight)
							maxHeight=child.height;
						j++;
					}
				}
				ch=page > 0 ? viewHeight :curY+Math.ceil(maxHeight);
				cw=(page+1)*viewWidth;
			}
			this.handleAlign(cw,ch);
			this.setBounds(0,0,cw,ch);
		}

		__proto.setup_beforeAdd=function(xml){
			fairygui.GObject.prototype.setup_beforeAdd.call(this,xml);
			var str;
			var arr;
			str=xml.getAttribute("layout");
			if (str)
				this._layout=ListLayoutType.parse(str);
			var overflow=0;
			str=xml.getAttribute("overflow");
			if (str)
				overflow=OverflowType.parse(str);
			else
			overflow=0;
			str=xml.getAttribute("margin");
			if(str)
				this._margin.parse(str);
			str=xml.getAttribute("align");
			if(str)
				this._align=str;
			str=xml.getAttribute("vAlign");
			if(str)
				this._verticalAlign=str;
			if(overflow==2){
				var scroll=0;
				str=xml.getAttribute("scroll");
				if (str)
					scroll=ScrollType.parse(str);
				else
				scroll=1;
				var scrollBarDisplay=0;
				str=xml.getAttribute("scrollBar");
				if (str)
					scrollBarDisplay=ScrollBarDisplayType.parse(str);
				else
				scrollBarDisplay=0;
				var scrollBarFlags=NaN;
				str=xml.getAttribute("scrollBarFlags");
				if(str)
					scrollBarFlags=parseInt(str);
				else
				scrollBarFlags=0;
				var scrollBarMargin=new Margin();
				str=xml.getAttribute("scrollBarMargin");
				if(str)
					scrollBarMargin.parse(str);
				var vtScrollBarRes;
				var hzScrollBarRes;
				str=xml.getAttribute("scrollBarRes");
				if(str){
					arr=str.split(",");
					vtScrollBarRes=arr[0];
					hzScrollBarRes=arr[1];
				}
				this.setupScroll(scrollBarMargin,scroll,scrollBarDisplay,scrollBarFlags,vtScrollBarRes,hzScrollBarRes);
			}
			else
			this.setupOverflow(overflow);
			str=xml.getAttribute("lineGap");
			if (str)
				this._lineGap=parseInt(str);
			str=xml.getAttribute("colGap");
			if (str)
				this._columnGap=parseInt(str);
			str=xml.getAttribute("lineItemCount");
			if(str){
				if (this._layout==2 || this._layout==4)
					this._columnCount=parseInt(str);
				else if (this._layout==3)
				this._lineCount=parseInt(str);
			}
			str=xml.getAttribute("lineItemCount2");
			if(str)
				this._lineCount=parseInt(str);
			str=xml.getAttribute("selectionMode");
			if (str)
				this._selectionMode=ListSelectionMode.parse(str);
			str=xml.getAttribute("defaultItem");
			if (str)
				this._defaultItem=str;
			str=xml.getAttribute("autoItemSize");
			if (this._layout==1 || this._layout==0)
				this._autoResizeItem=str!="false";
			else
			this._autoResizeItem=str=="true";
			str=xml.getAttribute("renderOrder");
			if(str){
				this._childrenRenderOrder=ChildrenRenderOrder.parse(str);
				if(this._childrenRenderOrder==2){
					str=xml.getAttribute("apex");
					if(str)
						this._apexIndex=parseInt(str);
				}
			};
			var col=xml.childNodes;
			var length=col.length;
			for (var i=0;i < length;i++){
				var cxml=col[i];
				if(cxml.nodeName !="item")
					continue ;
				var url=cxml.getAttribute("url");
				if (!url)
					url=this._defaultItem;
				if (!url)
					continue ;
				var obj=this.getFromPool(url);
				if(obj !=null){
					this.addChild(obj);
					str=cxml.getAttribute("title");
					if(str)
						obj.text=str;
					str=cxml.getAttribute("icon");
					if(str)
						obj.icon=str;
					str=cxml.getAttribute("name");
					if(str)
						obj.name=str;
				}
			}
		}

		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			var str;
			str=xml.getAttribute("selectionController");
			if(str)
				this._selectionController=this.parent.getController(str);
		}

		__getset(0,__proto,'layout',function(){
			return this._layout;
			},function(value){
			if (this._layout !=value){
				this._layout=value;
				this.setBoundsChangedFlag();
				if(this._virtual)
					this.setVirtualListChangedFlag(true);
			}
		});

		__getset(0,__proto,'align',function(){
			return this._align;
			},function(value){
			if(this._align!=value){
				this._align=value;
				this.setBoundsChangedFlag();
				if (this._virtual)
					this.setVirtualListChangedFlag(true);
			}
		});

		__getset(0,__proto,'lineCount',function(){
			return this._lineCount;
			},function(value){
			if (this._lineCount !=value){
				this._lineCount=value;
				if (this._layout==3 || this._layout==4){
					this.setBoundsChangedFlag();
					if (this._virtual)
						this.setVirtualListChangedFlag(true);
				}
			}
		});

		__getset(0,__proto,'columnCount',function(){
			return this._columnCount;
			},function(value){
			if (this._columnCount !=value){
				this._columnCount=value;
				if (this._layout==2 || this._layout==4){
					this.setBoundsChangedFlag();
					if (this._virtual)
						this.setVirtualListChangedFlag(true);
				}
			}
		});

		__getset(0,__proto,'lineGap',function(){
			return this._lineGap;
			},function(value){
			if (this._lineGap !=value){
				this._lineGap=value;
				this.setBoundsChangedFlag();
				if(this._virtual)
					this.setVirtualListChangedFlag(true);
			}
		});

		__getset(0,__proto,'columnGap',function(){
			return this._columnGap;
			},function(value){
			if(this._columnGap !=value){
				this._columnGap=value;
				this.setBoundsChangedFlag();
				if (this._virtual)
					this.setVirtualListChangedFlag(true);
			}
		});

		__getset(0,__proto,'verticalAlign',function(){
			return this._verticalAlign;
			},function(value){
			if(this._verticalAlign!=value){
				this._verticalAlign=value;
				this.setBoundsChangedFlag();
				if (this._virtual)
					this.setVirtualListChangedFlag(true);
			}
		});

		__getset(0,__proto,'virtualItemSize',function(){
			return this._itemSize;
			},function(value){
			if(this._virtual){
				if(this._itemSize==null)
					this._itemSize=new Point();
				this._itemSize.setTo(value.x,value.y);
				this.setVirtualListChangedFlag(true);
			}
		});

		__getset(0,__proto,'defaultItem',function(){
			return this._defaultItem;
			},function(val){
			this._defaultItem=val;
		});

		__getset(0,__proto,'autoResizeItem',function(){
			return this._autoResizeItem;
			},function(value){
			if(this._autoResizeItem !=value){
				this._autoResizeItem=value;
				this.setBoundsChangedFlag();
				if (this._virtual)
					this.setVirtualListChangedFlag(true);
			}
		});

		__getset(0,__proto,'selectionMode',function(){
			return this._selectionMode;
			},function(value){
			this._selectionMode=value;
		});

		__getset(0,__proto,'selectionController',function(){
			return this._selectionController;
			},function(value){
			this._selectionController=value;
		});

		__getset(0,__proto,'itemPool',function(){
			return this._pool;
		});

		__getset(0,__proto,'selectedIndex',function(){
			var i=0;
			if (this._virtual){
				for (i=0;i < this._realNumItems;i++){
					var ii=this._virtualItems[i];
					if (((ii.obj instanceof fairygui.GButton ))&& (ii.obj).selected
						|| ii.obj==null && ii.selected){
						if (this._loop)
							return i % this._numItems;
						else
						return i;
					}
				}
			}
			else{
				var cnt=this._children.length;
				for (i=0;i < cnt;i++){
					var obj=this._children[i].asButton;
					if (obj !=null && obj.selected)
						return i;
				}
			}
			return-1;
			},function(value){
			if (value >=0 && value < this.numItems){
				if(this._selectionMode!=0)
					this.clearSelection();
				this.addSelection(value);
			}
			else
			this.clearSelection();
		});

		/// </summary>
		__getset(0,__proto,'numItems',function(){
			if(this._virtual)
				return this._numItems;
			else
			return this._children.length;
			},function(value){
			var i=0;
			if (this._virtual){
				if (this.itemRenderer==null)
					throw new Error("Set itemRenderer first!");
				this._numItems=value;
				if (this._loop)
					this._realNumItems=this._numItems *5;
				else
				this._realNumItems=this._numItems;
				var oldCount=this._virtualItems.length;
				if (this._realNumItems > oldCount){
					for (i=oldCount;i < this._realNumItems;i++){
						var ii=new ItemInfo();
						ii.width=this._itemSize.x;
						ii.height=this._itemSize.y;
						this._virtualItems.push(ii);
					}
				}
				else{
					for (i=this._realNumItems;i < oldCount;i++)
					this._virtualItems[i].selected=false;
				}
				if (this._virtualListChanged !=0)
					Laya.timer.clear(this,this._refreshVirtualList);
				this._refreshVirtualList();
			}
			else{
				var cnt=this._children.length;
				if (value > cnt){
					for (i=cnt;i < value;i++){
						if (this.itemProvider==null)
							this.addItemFromPool();
						else
						this.addItemFromPool(this.itemProvider.runWith(i));
					}
				}
				else{
					this.removeChildrenToPool(value,cnt);
				}
				if (this.itemRenderer !=null){
					for (i=0;i < value;i++){
						this.itemRenderer.runWith([i,this.getChildAt(i)]);
					}
				}
			}
		});

		GList.itemInfoVer=0;
		GList.enterCounter=0;
		GList.pos_param=NaN
		GList.__init$=function(){
			//class ItemInfo
			ItemInfo=(function(){
				function ItemInfo(){
					this.width=0;
					this.height=0;
					this.obj=null;
					this.updateFlag=0;
					this.selected=false;
				}
				__class(ItemInfo,'');
				return ItemInfo;
			})()
		}

		return GList;
	})(GComponent)


	//class fairygui.GProgressBar extends fairygui.GComponent
	var GProgressBar=(function(_super){
		function GProgressBar(){
			this._max=0;
			this._value=0;
			this._titleType=0;
			this._reverse=false;
			this._titleObject=null;
			this._aniObject=null;
			this._barObjectH=null;
			this._barObjectV=null;
			this._barMaxWidth=0;
			this._barMaxHeight=0;
			this._barMaxWidthDelta=0;
			this._barMaxHeightDelta=0;
			this._barStartX=0;
			this._barStartY=0;
			this._tweener=null;
			this._tweenValue=0;
			GProgressBar.__super.call(this);
			this._titleType=0;
			this._value=50;
			this._max=100;
		}

		__class(GProgressBar,'fairygui.GProgressBar',_super);
		var __proto=GProgressBar.prototype;
		__proto.tweenValue=function(value,duration){
			if(this._value !=value){
				if(this._tweener)
					this._tweener.clear();
				this._tweenValue=this._value;
				this._value=value;
				this._tweener=Tween.to(this,{_tweenValue:value },duration *1000,fairygui.GProgressBar.easeLinear,
				Handler.create(this,this.onTweenComplete,null,true));
				this._tweener.update=Handler.create(this,this.onUpdateTween,null,false);
				return this._tweener;
			}
			else
			return null;
		}

		__proto.onUpdateTween=function(){
			this.update(this._tweenValue);
		}

		__proto.onTweenComplete=function(){
			this._tweener=null;
		}

		__proto.update=function(newValue){
			var percent=Math.min(newValue / this._max,1);
			if(this._titleObject){
				switch(this._titleType){
					case 0:
						this._titleObject.text=Math.round(percent *100)+"%";
						break ;
					case 1:
						this._titleObject.text=Math.round(newValue)+"/"+Math.round(this._max);
						break ;
					case 2:
						this._titleObject.text=""+Math.round(newValue);
						break ;
					case 3:
						this._titleObject.text=""+Math.round(this._max);
						break ;
					}
			};
			var fullWidth=this.width-this._barMaxWidthDelta;
			var fullHeight=this.height-this._barMaxHeightDelta;
			if(!this._reverse){
				if(this._barObjectH)
					this._barObjectH.width=Math.round(fullWidth *percent);
				if(this._barObjectV)
					this._barObjectV.height=Math.round(fullHeight *percent);
			}
			else {
				if(this._barObjectH){
					this._barObjectH.width=Math.round(fullWidth *percent);
					this._barObjectH.x=this._barStartX+(fullWidth-this._barObjectH.width);
				}
				if(this._barObjectV){
					this._barObjectV.height=Math.round(fullHeight *percent);
					this._barObjectV.y=this._barStartY+(fullHeight-this._barObjectV.height);
				}
			}
			if((this._aniObject instanceof fairygui.GMovieClip ))
				(this._aniObject).frame=Math.round(percent *100);
		}

		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			xml=ToolSet.findChildNode(xml,"ProgressBar");
			var str;
			str=xml.getAttribute("titleType");
			if(str)
				this._titleType=ProgressTitleType.parse(str);
			this._reverse=xml.getAttribute("reverse")=="true";
			this._titleObject=(this.getChild("title"));
			this._barObjectH=this.getChild("bar");
			this._barObjectV=this.getChild("bar_v");
			this._aniObject=this.getChild("ani");
			if(this._barObjectH){
				this._barMaxWidth=this._barObjectH.width;
				this._barMaxWidthDelta=this.width-this._barMaxWidth;
				this._barStartX=this._barObjectH.x;
			}
			if(this._barObjectV){
				this._barMaxHeight=this._barObjectV.height;
				this._barMaxHeightDelta=this.height-this._barMaxHeight;
				this._barStartY=this._barObjectV.y;
			}
		}

		__proto.handleSizeChanged=function(){
			_super.prototype.handleSizeChanged.call(this);
			if(this._barObjectH)
				this._barMaxWidth=this.width-this._barMaxWidthDelta;
			if(this._barObjectV)
				this._barMaxHeight=this.height-this._barMaxHeightDelta;
			if(!this._underConstruct)
				this.update(this._value);
		}

		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			xml=ToolSet.findChildNode(xml,"ProgressBar");
			if (xml){
				this._value=parseInt(xml.getAttribute("value"));
				this._max=parseInt(xml.getAttribute("max"));
			}
			this.update(this._value);
		}

		__proto.dispose=function(){
			if(this._tweener)
				this._tweener.clear();
			_super.prototype.dispose.call(this);
		}

		__getset(0,__proto,'max',function(){
			return this._max;
			},function(value){
			if(this._max !=value){
				this._max=value;
				this.update(this._value);
			}
		});

		__getset(0,__proto,'titleType',function(){
			return this._titleType;
			},function(value){
			if(this._titleType !=value){
				this._titleType=value;
				this.update(this._value);
			}
		});

		__getset(0,__proto,'value',function(){
			return this._value;
			},function(value){
			if(this._tweener !=null){
				this._tweener.clear();
				this._tweener=null;
			}
			if(this._value !=value){
				this._value=value;
				this.update(this._value);
			}
		});

		__static(GProgressBar,
		['easeLinear',function(){return this.easeLinear=Ease.linearNone;}
		]);
		return GProgressBar;
	})(GComponent)


	//class fairygui.GRoot extends fairygui.GComponent
	var GRoot=(function(_super){
		function GRoot(){
			this._modalLayer=null;
			this._popupStack=null;
			this._justClosedPopups=null;
			this._modalWaitPane=null;
			this._focusedObject=null;
			this._tooltipWin=null;
			this._defaultTooltipWin=null;
			this._checkPopups=false;
			GRoot.__super.call(this);
			if(fairygui.GRoot._inst==null)
				fairygui.GRoot._inst=this;
			this.opaque=false;
			this._popupStack=[];
			this._justClosedPopups=[];
			this.displayObject.once("display",this,this.__addedToStage);
		}

		__class(GRoot,'fairygui.GRoot',_super);
		var __proto=GRoot.prototype;
		__proto.showWindow=function(win){
			this.addChild(win);
			win.requestFocus();
			if(win.x > this.width)
				win.x=this.width-win.width;
			else if(win.x+win.width < 0)
			win.x=0;
			if(win.y > this.height)
				win.y=this.height-win.height;
			else if(win.y+win.height < 0)
			win.y=0;
			this.adjustModalLayer();
		}

		__proto.hideWindow=function(win){
			win.hide();
		}

		__proto.hideWindowImmediately=function(win){
			if(win.parent==this)
				this.removeChild(win);
			this.adjustModalLayer();
		}

		__proto.bringToFront=function(win){
			var cnt=this.numChildren;
			var i=NaN;
			if(this._modalLayer.parent!=null && !win.modal)
				i=this.getChildIndex(this._modalLayer)-1;
			else
			i=cnt-1;
			for(;i >=0;i--){
				var g=this.getChildAt(i);
				if(g==win)
					return;
				if((g instanceof fairygui.Window ))
					break ;
			}
			if(i>=0)
				this.setChildIndex(win,i);
		}

		__proto.showModalWait=function(msg){
			if(UIConfig$1.globalModalWaiting !=null){
				if(this._modalWaitPane==null)
					this._modalWaitPane=UIPackage.createObjectFromURL(UIConfig$1.globalModalWaiting);
				this._modalWaitPane.setSize(this.width,this.height);
				this._modalWaitPane.addRelation(this,24);
				this.addChild(this._modalWaitPane);
				this._modalWaitPane.text=msg;
			}
		}

		__proto.closeModalWait=function(){
			if(this._modalWaitPane !=null && this._modalWaitPane.parent !=null)
				this.removeChild(this._modalWaitPane);
		}

		__proto.closeAllExceptModals=function(){
			var arr=this._children.slice();
			var cnt=arr.length;
			for(var i=0;i < cnt;i++){
				var g=arr[i];
				if(((g instanceof fairygui.Window ))&& !(g).modal)
					(g).hide();
			}
		}

		__proto.closeAllWindows=function(){
			var arr=this._children.slice();
			var cnt=arr.length;
			for(var i=0;i < cnt;i++){
				var g=arr[i];
				if((g instanceof fairygui.Window ))
					(g).hide();
			}
		}

		__proto.getTopWindow=function(){
			var cnt=this.numChildren;
			for(var i=cnt-1;i >=0;i--){
				var g=this.getChildAt(i);
				if((g instanceof fairygui.Window )){
					return (g);
				}
			}
			return null;
		}

		__proto.showPopup=function(popup,target,downward){
			if(this._popupStack.length > 0){
				var k=this._popupStack.indexOf(popup);
				if(k !=-1){
					for(var i=this._popupStack.length-1;i >=k;i--)
					this.removeChild(this._popupStack.pop());
				}
			}
			this._popupStack.push(popup);
			this.addChild(popup);
			this.adjustModalLayer();
			var pos;
			var sizeW=0,sizeH=0;
			if(target){
				pos=target.localToGlobal();
				sizeW=target.width;
				sizeH=target.height;
			}
			else {
				pos=this.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY);
			};
			var xx=NaN,yy=NaN;
			xx=pos.x;
			if(xx+popup.width > this.width)
				xx=xx+sizeW-popup.width;
			yy=pos.y+sizeH;
			if((downward==null && yy+popup.height > this.height)
				|| downward==false){
				yy=pos.y-popup.height-1;
				if(yy < 0){
					yy=0;
					xx+=sizeW / 2;
				}
			}
			popup.x=xx;
			popup.y=yy;
		}

		__proto.togglePopup=function(popup,target,downward){
			if(this._justClosedPopups.indexOf(popup)!=-1)
				return;
			this.showPopup(popup,target,downward);
		}

		__proto.hidePopup=function(popup){
			if(popup !=null){
				var k=this._popupStack.indexOf(popup);
				if(k !=-1){
					for(var i=this._popupStack.length-1;i >=k;i--)
					this.closePopup(this._popupStack.pop());
				}
			}
			else {
				var cnt=this._popupStack.length;
				for(i=cnt-1;i >=0;i--)
				this.closePopup(this._popupStack[i]);
				this._popupStack.length=0;
			}
		}

		__proto.closePopup=function(target){
			if(target.parent !=null){
				if((target instanceof fairygui.Window ))
					(target).hide();
				else
				this.removeChild(target);
			}
		}

		__proto.showTooltips=function(msg){
			if (this._defaultTooltipWin==null){
				var resourceURL=UIConfig$1.tooltipsWin;
				if (!resourceURL){
					Log.print("UIConfig.tooltipsWin not defined");
					return;
				}
				this._defaultTooltipWin=UIPackage.createObjectFromURL(resourceURL);
			}
			this._defaultTooltipWin.text=msg;
			this.showTooltipsWin(this._defaultTooltipWin);
		}

		__proto.showTooltipsWin=function(tooltipWin,position){
			this.hideTooltips();
			this._tooltipWin=tooltipWin;
			var xx=0;
			var yy=0;
			if (position==null){
				xx=Laya.stage.mouseX+10;
				yy=Laya.stage.mouseY+20;
			}
			else {
				xx=position.x;
				yy=position.y;
			};
			var pt=this.globalToLocal(xx,yy);
			xx=pt.x;
			yy=pt.y;
			if (xx+this._tooltipWin.width > this.width){
				xx=xx-this._tooltipWin.width-1;
				if (xx < 0)
					xx=10;
			}
			if (yy+this._tooltipWin.height > this.height){
				yy=yy-this._tooltipWin.height-1;
				if (xx-this._tooltipWin.width-1 > 0)
					xx=xx-this._tooltipWin.width-1;
				if (yy < 0)
					yy=10;
			}
			this._tooltipWin.x=xx;
			this._tooltipWin.y=yy;
			this.addChild(this._tooltipWin);
		}

		__proto.hideTooltips=function(){
			if (this._tooltipWin !=null){
				if (this._tooltipWin.parent)
					this.removeChild(this._tooltipWin);
				this._tooltipWin=null;
			}
		}

		__proto.getObjectUnderPoint=function(globalX,globalY){
			return null;
		}

		__proto.setFocus=function(value){
			if(this._focusedObject!=value){
				this._focusedObject=value;
				this.displayObject.event("fui_focus_changed");
			}
		}

		__proto.playOneShotSound=function(url,volumeScale){
			(volumeScale===void 0)&& (volumeScale=1);
			SoundManager.playSound(url);
		}

		__proto.adjustModalLayer=function(){
			var cnt=this.numChildren;
			if (this._modalWaitPane !=null && this._modalWaitPane.parent !=null)
				this.setChildIndex(this._modalWaitPane,cnt-1);
			for(var i=cnt-1;i >=0;i--){
				var g=this.getChildAt(i);
				if(((g instanceof fairygui.Window ))&& (g).modal){
					if(this._modalLayer.parent==null)
						this.addChildAt(this._modalLayer,i);
					else
					this.setChildIndexBefore(this._modalLayer,i);
					return;
				}
			}
			if (this._modalLayer.parent !=null)
				this.removeChild(this._modalLayer);
		}

		__proto.__addedToStage=function(){
			Laya.stage.on("mousedown",this,this.__stageMouseDown);
			Laya.stage.on("mouseup",this,this.__stageMouseUp);
			this._modalLayer=new GGraph();
			this._modalLayer.setSize(this.width,this.height);
			this._modalLayer.drawRect(0,null,UIConfig$1.modalLayerColor);
			this._modalLayer.addRelation(this,24);
			this.displayObject.stage.on("resize",this,this.__winResize);
			this.__winResize();
		}

		__proto.checkPopups=function(clickTarget){
			if(this._checkPopups)
				return;
			this._checkPopups=true;
			this._justClosedPopups.length=0;
			if (this._popupStack.length > 0){
				var mc=clickTarget;
				while (mc !=this.displayObject.stage && mc !=null){
					if (mc["$owner"]){
						var pindex=this._popupStack.indexOf(mc["$owner"]);
						if (pindex !=-1){
							for(var i=this._popupStack.length-1;i > pindex;i--){
								var popup=this._popupStack.pop();
								this.closePopup(popup);
								this._justClosedPopups.push(popup);
							}
							return;
						}
					}
					mc=mc.parent;
				};
				var cnt=this._popupStack.length;
				for(i=cnt-1;i >=0;i--){
					popup=this._popupStack[i];
					this.closePopup(popup);
					this._justClosedPopups.push(popup);
				}
				this._popupStack.length=0;
			}
		}

		__proto.__stageMouseDown=function(evt){
			var mc=evt.target;
			while (mc !=this.displayObject.stage && mc !=null){
				if (mc["$owner"]){
					var gg=mc["$owner"];
					if (gg.touchable && gg.focusable){
						this.setFocus(gg);
						break ;
					}
				}
				mc=mc.parent;
			}
			if (this._tooltipWin !=null)
				this.hideTooltips();
			this.checkPopups(evt.target);
		}

		__proto.__stageMouseUp=function(){
			this._checkPopups=false;
		}

		__proto.__winResize=function(){
			this.setSize(Laya.stage.width,Laya.stage.height);
		}

		__getset(0,__proto,'focus',function(){
			if (this._focusedObject && !this._focusedObject.onStage)
				this._focusedObject=null;
			return this._focusedObject;
			},function(value){
			if (value && (!value.focusable || !value.onStage))
				throw "invalid focus target";
			this.setFocus(value);
		});

		__getset(0,__proto,'hasAnyPopup',function(){
			return this._popupStack.length !=0;
		});

		__getset(0,__proto,'modalLayer',function(){
			return this._modalLayer;
		});

		__getset(0,__proto,'hasModalWindow',function(){
			return this._modalLayer.parent !=null;
		});

		__getset(0,__proto,'modalWaiting',function(){
			return this._modalWaitPane && this._modalWaitPane.inContainer;
		});

		__getset(0,__proto,'volumeScale',function(){
			return SoundManager.soundVolume;
			},function(value){
			SoundManager.soundVolume=value;
		});

		__getset(1,GRoot,'inst',function(){
			if(fairygui.GRoot._inst==null)
				new GRoot();
			return fairygui.GRoot._inst;
		},fairygui.GComponent._$SET_inst);

		GRoot._inst=null
		return GRoot;
	})(GComponent)


	//class fairygui.GScrollBar extends fairygui.GComponent
	var GScrollBar=(function(_super){
		function GScrollBar(){
			this._grip=null;
			this._arrowButton1=null;
			this._arrowButton2=null;
			this._bar=null;
			this._target=null;
			this._vertical=false;
			this._scrollPerc=0;
			this._fixedGripSize=false;
			this._dragOffset=null;
			GScrollBar.__super.call(this);
			this._dragOffset=new laya.maths.Point();
			this._scrollPerc=0;
		}

		__class(GScrollBar,'fairygui.GScrollBar',_super);
		var __proto=GScrollBar.prototype;
		__proto.setScrollPane=function(target,vertical){
			this._target=target;
			this._vertical=vertical;
		}

		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			xml=ToolSet.findChildNode(xml,"ScrollBar");
			if (xml){
				this._fixedGripSize=xml.getAttribute("fixedGripSize")=="true";
			}
			this._grip=this.getChild("grip");
			if(!this._grip){
				Log.print("需要定义grip");
				return;
			}
			this._bar=this.getChild("bar");
			if(!this._bar){
				Log.print("需要定义bar");
				return;
			}
			this._arrowButton1=this.getChild("arrow1");
			this._arrowButton2=this.getChild("arrow2");
			this._grip.on("mousedown",this,this.__gripMouseDown);
			if(this._arrowButton1)
				this._arrowButton1.on("mousedown",this,this.__arrowButton1Click);
			if(this._arrowButton2)
				this._arrowButton2.on("mousedown",this,this.__arrowButton2Click);
			this.on("mousedown",this,this.__barMouseDown);
		}

		__proto.__gripMouseDown=function(evt){
			if (!this._bar)
				return;
			evt.stopPropagation();
			Laya.stage.on("mousemove",this,this.__gripMouseMove);
			Laya.stage.on("mouseup",this,this.__gripMouseUp);
			this.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY,this._dragOffset);
			this._dragOffset.x-=this._grip.x;
			this._dragOffset.y-=this._grip.y;
		}

		__proto.__gripMouseMove=function(){
			var pt=this.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY,fairygui.GScrollBar.sScrollbarHelperPoint);
			if (this._vertical){
				var curY=pt.y-this._dragOffset.y;
				this._target.setPercY((curY-this._bar.y)/ (this._bar.height-this._grip.height),false);
			}
			else {
				var curX=pt.x-this._dragOffset.x;
				this._target.setPercX((curX-this._bar.x)/ (this._bar.width-this._grip.width),false);
			}
		}

		__proto.__gripMouseUp=function(evt){
			if (!this._bar)
				return;
			Laya.stage.off("mousemove",this,this.__gripMouseMove);
			Laya.stage.off("mouseup",this,this.__gripMouseUp);
		}

		__proto.__arrowButton1Click=function(evt){
			evt.stopPropagation();
			if (this._vertical)
				this._target.scrollUp();
			else
			this._target.scrollLeft();
		}

		__proto.__arrowButton2Click=function(evt){
			evt.stopPropagation();
			if (this._vertical)
				this._target.scrollDown();
			else
			this._target.scrollRight();
		}

		__proto.__barMouseDown=function(evt){
			var pt=this._grip.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY,fairygui.GScrollBar.sScrollbarHelperPoint);
			if (this._vertical){
				if (pt.y < 0)
					this._target.scrollUp(4);
				else
				this._target.scrollDown(4);
			}
			else {
				if (pt.x < 0)
					this._target.scrollLeft(4);
				else
				this._target.scrollRight(4);
			}
		}

		__getset(0,__proto,'displayPerc',null,function(val){
			if (this._vertical){
				if(!this._fixedGripSize)
					this._grip.height=val *this._bar.height;
				this._grip.y=this._bar.y+(this._bar.height-this._grip.height)*this._scrollPerc;
			}
			else {
				if(!this._fixedGripSize)
					this._grip.width=val *this._bar.width;
				this._grip.x=this._bar.x+(this._bar.width-this._grip.width)*this._scrollPerc;
			}
		});

		__getset(0,__proto,'scrollPerc',null,function(val){
			this._scrollPerc=val;
			if (this._vertical)
				this._grip.y=this._bar.y+(this._bar.height-this._grip.height)*this._scrollPerc;
			else
			this._grip.x=this._bar.x+(this._bar.width-this._grip.width)*this._scrollPerc;
		});

		__getset(0,__proto,'minSize',function(){
			if (this._vertical)
				return (this._arrowButton1 !=null ? this._arrowButton1.height :0)+(this._arrowButton2 !=null ? this._arrowButton2.height :0);
			else
			return (this._arrowButton1 !=null ? this._arrowButton1.width :0)+(this._arrowButton2 !=null ? this._arrowButton2.width :0);
		});

		__static(GScrollBar,
		['sScrollbarHelperPoint',function(){return this.sScrollbarHelperPoint=new Point();}
		]);
		return GScrollBar;
	})(GComponent)


	//class fairygui.GSlider extends fairygui.GComponent
	var GSlider=(function(_super){
		function GSlider(){
			this._max=0;
			this._value=0;
			this._titleType=0;
			this._reverse=false;
			this._titleObject=null;
			this._barObjectH=null;
			this._barObjectV=null;
			this._barMaxWidth=0;
			this._barMaxHeight=0;
			this._barMaxWidthDelta=0;
			this._barMaxHeightDelta=0;
			this._gripObject=null;
			this._clickPos=null;
			this._clickPercent=0;
			this._barStartX=0;
			this._barStartY=0;
			this.changeOnClick=true;
			this.canDrag=true;
			GSlider.__super.call(this);
			this._titleType=0;
			this._value=50;
			this._max=100;
			this._clickPos=new laya.maths.Point();
		}

		__class(GSlider,'fairygui.GSlider',_super);
		var __proto=GSlider.prototype;
		// }
		__proto.update=function(){
			var percent=Math.min(this._value / this._max,1);
			this.updateWidthPercent(percent);
		}

		__proto.updateWidthPercent=function(percent){
			if (this._titleObject){
				switch (this._titleType){
					case 0:
						this._titleObject.text=Math.round(percent *100)+"%";
						break ;
					case 1:
						this._titleObject.text=this._value+"/"+this._max;
						break ;
					case 2:
						this._titleObject.text=""+this._value;
						break ;
					case 3:
						this._titleObject.text=""+this._max;
						break ;
					}
			};
			var fullWidth=this.width-this._barMaxWidthDelta;
			var fullHeight=this.height-this._barMaxHeightDelta;
			if(!this._reverse){
				if(this._barObjectH)
					this._barObjectH.width=Math.round(fullWidth*percent);
				if(this._barObjectV)
					this._barObjectV.height=Math.round(fullHeight*percent);
			}
			else{
				if(this._barObjectH){
					this._barObjectH.width=Math.round(fullWidth*percent);
					this._barObjectH.x=this._barStartX+(fullWidth-this._barObjectH.width);
				}
				if(this._barObjectV){
					this._barObjectV.height=Math.round(fullHeight*percent);
					this._barObjectV.y=this._barStartY+(fullHeight-this._barObjectV.height);
				}
			}
		}

		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			xml=ToolSet.findChildNode(xml,"Slider");
			var str;
			str=xml.getAttribute("titleType");
			if(str)
				this._titleType=ProgressTitleType.parse(str);
			this._reverse=xml.getAttribute("reverse")=="true";
			this._titleObject=(this.getChild("title"));
			this._barObjectH=this.getChild("bar");
			this._barObjectV=this.getChild("bar_v");
			this._gripObject=this.getChild("grip");
			if(this._barObjectH){
				this._barMaxWidth=this._barObjectH.width;
				this._barMaxWidthDelta=this.width-this._barMaxWidth;
				this._barStartX=this._barObjectH.x;
			}
			if(this._barObjectV){
				this._barMaxHeight=this._barObjectV.height;
				this._barMaxHeightDelta=this.height-this._barMaxHeight;
				this._barStartY=this._barObjectV.y;
			}
			if(this._gripObject){
				this._gripObject.on("mousedown",this,this.__gripMouseDown);
			}
			this.displayObject.on("mousedown",this,this.__barMouseDown);
		}

		__proto.handleSizeChanged=function(){
			_super.prototype.handleSizeChanged.call(this);
			if(this._barObjectH)
				this._barMaxWidth=this.width-this._barMaxWidthDelta;
			if(this._barObjectV)
				this._barMaxHeight=this.height-this._barMaxHeightDelta;
			if(!this._underConstruct)
				this.update();
		}

		__proto.setup_afterAdd=function(xml){
			_super.prototype.setup_afterAdd.call(this,xml);
			xml=ToolSet.findChildNode(xml,"Slider");
			if (xml){
				this._value=parseInt(xml.getAttribute("value"));
				this._max=parseInt(xml.getAttribute("max"));
			}
			this.update();
		}

		__proto.__gripMouseDown=function(evt){
			this.canDrag=true;
			evt.stopPropagation();
			this._clickPos=this.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY);
			this._clickPercent=this._value / this._max;
			Laya.stage.on("mousemove",this,this.__gripMouseMove);
			Laya.stage.on("mouseup",this,this.__gripMouseUp);
		}

		__proto.__gripMouseMove=function(evt){
			if(!this.canDrag){
				return;
			};
			var pt=this.globalToLocal(Laya.stage.mouseX,Laya.stage.mouseY,fairygui.GSlider.sSilderHelperPoint);
			var deltaX=pt.x-this._clickPos.x;
			var deltaY=pt.y-this._clickPos.y;
			if(this._reverse){
				deltaX=-deltaX;
				deltaY=-deltaY;
			};
			var percent=NaN;
			if (this._barObjectH)
				percent=this._clickPercent+deltaX / this._barMaxWidth;
			else
			percent=this._clickPercent+deltaY / this._barMaxHeight;
			if (percent > 1)
				percent=1;
			else if (percent < 0)
			percent=0;
			var newValue=Math.round(this._max *percent);
			if (newValue !=this._value){
				this._value=newValue;
				Events.dispatch("fui_state_changed",this.displayObject,evt);
			}
			this.updateWidthPercent(percent);
		}

		__proto.__gripMouseUp=function(evt){
			Laya.stage.off("mousemove",this,this.__gripMouseMove);
			Laya.stage.off("mouseup",this,this.__gripMouseUp);
		}

		__proto.__barMouseDown=function(evt){
			if(!this.changeOnClick)
				return;
			var pt=this._gripObject.globalToLocal(evt.stageX,evt.stageY,fairygui.GSlider.sSilderHelperPoint);
			var percent=this._value/this._max;
			var delta=NaN;
			if(this._barObjectH)
				delta=(pt.x-this._gripObject.width/2)/this._barMaxWidth;
			if(this._barObjectV)
				delta=(pt.y-this._gripObject.height/2)/this._barMaxHeight;
			if(this._reverse)
				percent-=delta;
			else
			percent+=delta;
			if(percent>1)
				percent=1;
			else if(percent<0)
			percent=0;
			var newValue=Math.round(this._max*percent);
			if(newValue!=this._value){
				this._value=newValue;
				Events.dispatch("fui_state_changed",this.displayObject,evt);
			}
			this.updateWidthPercent(percent);
		}

		__getset(0,__proto,'max',function(){
			return this._max;
			},function(value){
			if (this._max !=value){
				this._max=value;
				this.update();
			}
		});

		__getset(0,__proto,'titleType',function(){
			return this._titleType;
			},function(value){
			this._titleType=value;
		});

		__getset(0,__proto,'value',function(){
			return this._value;
			},function(value){
			this._value=value;
			this.update();
		});

		__static(GSlider,
		['sSilderHelperPoint',function(){return this.sSilderHelperPoint=new Point();}
		]);
		return GSlider;
	})(GComponent)


	//class fairygui.Window extends fairygui.GComponent
	var Window$2=(function(_super){
		function Window(){
			this._contentPane=null;
			this._modalWaitPane=null;
			this._closeButton=null;
			this._dragArea=null;
			this._contentArea=null;
			this._frame=null;
			this._modal=false;
			this._uiSources=null;
			this._inited=false;
			this._loading=false;
			this._requestingCmd=0;
			this.bringToFontOnClick=false;
			Window.__super.call(this);
			this.focusable=true;
			this._uiSources=[];
			this.bringToFontOnClick=UIConfig$1.bringWindowToFrontOnClick;
			this.displayObject.on("display",this,this.__onShown);
			this.displayObject.on("undisplay",this,this.__onHidden);
			this.displayObject.on("mousedown",this,this.__mouseDown);
		}

		__class(Window,'fairygui.Window',_super,'Window$2');
		var __proto=Window.prototype;
		__proto.addUISource=function(source){
			this._uiSources.push(source);
		}

		__proto.show=function(){
			GRoot.inst.showWindow(this);
		}

		__proto.showOn=function(root){
			root.showWindow(this);
		}

		__proto.hide=function(){
			if(this.isShowing)
				this.doHideAnimation();
		}

		__proto.hideImmediately=function(){
			var r=((this.parent instanceof fairygui.GRoot ))? (this.parent):null;
			if(!r)
				r=GRoot.inst;
			r.hideWindowImmediately(this);
		}

		__proto.centerOn=function(r,restraint){
			(restraint===void 0)&& (restraint=false);
			this.setXY(Math.round((r.width-this.width)/ 2),Math.round((r.height-this.height)/ 2));
			if(restraint){
				this.addRelation(r,3);
				this.addRelation(r,10);
			}
		}

		__proto.toggleStatus=function(){
			if(this.isTop)
				this.hide();
			else
			this.show();
		}

		__proto.bringToFront=function(){
			this.root.bringToFront(this);
		}

		__proto.showModalWait=function(requestingCmd){
			(requestingCmd===void 0)&& (requestingCmd=0);
			if(requestingCmd !=0)
				this._requestingCmd=requestingCmd;
			if(UIConfig$1.windowModalWaiting){
				if(!this._modalWaitPane)
					this._modalWaitPane=UIPackage.createObjectFromURL(UIConfig$1.windowModalWaiting);
				this.layoutModalWaitPane();
				this.addChild(this._modalWaitPane);
			}
		}

		__proto.layoutModalWaitPane=function(){
			if(this._contentArea !=null){
				var pt=this._frame.localToGlobal();
				pt=this.globalToLocal(pt.x,pt.y,pt);
				this._modalWaitPane.setXY(pt.x+this._contentArea.x,pt.y+this._contentArea.y);
				this._modalWaitPane.setSize(this._contentArea.width,this._contentArea.height);
			}
			else
			this._modalWaitPane.setSize(this.width,this.height);
		}

		__proto.closeModalWait=function(requestingCmd){
			(requestingCmd===void 0)&& (requestingCmd=0);
			if(requestingCmd !=0){
				if(this._requestingCmd !=requestingCmd)
					return false;
			}
			this._requestingCmd=0;
			if(this._modalWaitPane && this._modalWaitPane.parent !=null)
				this.removeChild(this._modalWaitPane);
			return true;
		}

		__proto.init=function(){
			if(this._inited || this._loading)
				return;
			if(this._uiSources.length > 0){
				this._loading=false;
				var cnt=this._uiSources.length;
				for(var i=0;i < cnt;i++){
					var lib=this._uiSources[i];
					if(!lib.loaded){
						lib.load(this.__uiLoadComplete,this);
						this._loading=true;
					}
				}
				if(!this._loading)
					this._init();
			}
			else
			this._init();
		}

		__proto.onInit=function(){}
		__proto.onShown=function(){}
		__proto.onHide=function(){}
		__proto.doShowAnimation=function(){
			this.onShown();
		}

		__proto.doHideAnimation=function(){
			this.hideImmediately();
		}

		__proto.__uiLoadComplete=function(){
			var cnt=this._uiSources.length;
			for(var i=0;i < cnt;i++){
				var lib=this._uiSources[i];
				if(!lib.loaded)
					return;
			}
			this._loading=false;
			this._init();
		}

		__proto._init=function(){
			this._inited=true;
			this.onInit();
			if(this.isShowing)
				this.doShowAnimation();
		}

		__proto.dispose=function(){
			if(this.parent !=null)
				this.hideImmediately();
			_super.prototype.dispose.call(this);
		}

		__proto.closeEventHandler=function(){
			this.hide();
		}

		__proto.__onShown=function(){
			if(!this._inited)
				this.init();
			else
			this.doShowAnimation();
		}

		__proto.__onHidden=function(){
			this.closeModalWait();
			this.onHide();
		}

		__proto.__mouseDown=function(){
			if(this.isShowing && this.bringToFontOnClick)
				this.bringToFront();
		}

		__proto.__dragStart=function(evt){
			GObject.cast(evt.currentTarget).stopDrag();
			this.startDrag();
		}

		__getset(0,__proto,'contentPane',function(){
			return this._contentPane;
			},function(val){
			if(this._contentPane !=val){
				if(this._contentPane !=null)
					this.removeChild(this._contentPane);
				this._contentPane=val;
				if(this._contentPane !=null){
					this.addChild(this._contentPane);
					this.setSize(this._contentPane.width,this._contentPane.height);
					this._contentPane.addRelation(this,24);
					this._frame=(this._contentPane.getChild("frame"));
					if(this._frame !=null){
						this.closeButton=this._frame.getChild("closeButton");
						this.dragArea=this._frame.getChild("dragArea");
						this.contentArea=this._frame.getChild("contentArea");
					}
				}
			}
		});

		__getset(0,__proto,'isShowing',function(){
			return this.parent !=null;
		});

		__getset(0,__proto,'isTop',function(){
			return this.parent !=null && this.parent.getChildIndex(this)==this.parent.numChildren-1;
		});

		__getset(0,__proto,'modal',function(){
			return this._modal;
			},function(val){
			this._modal=val;
		});

		__getset(0,__proto,'dragArea',function(){
			return this._dragArea;
			},function(value){
			if(this._dragArea !=value){
				if(this._dragArea !=null){
					this._dragArea.draggable=false;
					this._dragArea.off("fui_drag_start",this,this.__dragStart);
				}
				this._dragArea=value;
				if(this._dragArea !=null){
					if((this._dragArea instanceof fairygui.GGraph ))
						this._dragArea.asGraph.drawRect(0,null,null);
					this._dragArea.draggable=true;
					this._dragArea.on("fui_drag_start",this,this.__dragStart);
				}
			}
		});

		__getset(0,__proto,'frame',function(){
			return this._frame;
		});

		__getset(0,__proto,'closeButton',function(){
			return this._closeButton;
			},function(value){
			if(this._closeButton !=null)
				this._closeButton.offClick(this,this.closeEventHandler);
			this._closeButton=value;
			if(this._closeButton !=null)
				this._closeButton.onClick(this,this.closeEventHandler);
		});

		__getset(0,__proto,'contentArea',function(){
			return this._contentArea;
			},function(value){
			this._contentArea=value;
		});

		__getset(0,__proto,'modalWaiting',function(){
			return this._modalWaitPane && this._modalWaitPane.parent !=null;
		});

		return Window;
	})(GComponent)


	//class laya.webgl.shader.BaseShader extends laya.resource.Resource
	var BaseShader=(function(_super){
		function BaseShader(){
			BaseShader.__super.call(this);
			this.lock=true;
		}

		__class(BaseShader,'laya.webgl.shader.BaseShader',_super);
		BaseShader.activeShader=null
		BaseShader.bindShader=null
		return BaseShader;
	})(Resource)


	//class robotLegs.singleInstance.CommandDelayRun extends robotLegs.RLObj
	var CommandDelayRun=(function(_super){
		function CommandDelayRun(){
			this.delayBol=false;
			this.__delayInfoArr=[];
			CommandDelayRun.__super.call(this);
			this.init();
		}

		__class(CommandDelayRun,'robotLegs.singleInstance.CommandDelayRun',_super);
		var __proto=CommandDelayRun.prototype;
		/**
		*延后执行
		*@param _cmd 消息
		*@param _delayTime 延后时长
		*
		*/
		__proto.delayRun=function(_cmd,_delayTime,_data){
			if(this.delayBol){
				this.__delayInfoArr.push([_cmd,_delayTime,_data]);
				return;
			}
			this.delayBol=true;
			Laya.timer.once(_delayTime,this,this.runFunc,[_cmd,_data]);
		}

		__proto.runFunc=function(_cmd,_data){
			this.sendNotification(_cmd,_data);
			this.delayBol=false;
			if(this.__delayInfoArr.length > 0){
				this.delayRun(this.__delayInfoArr[0][0],this.__delayInfoArr[0][1],this.__delayInfoArr[0][2]);
				this.__delayInfoArr.shift();
			}
		}

		return CommandDelayRun;
	})(RLObj)


	//class robotLegs.singleInstance.TimerManager extends robotLegs.RLObj
	var TimerManager=(function(_super){
		function TimerManager(){
			this.__distanceTime=0;
			this.__distanceBackCmd=null;
			this.__completeBackCmd=null;
			this.__totalTime=0;
			TimerManager.__super.call(this);
			this.init();
		}

		__class(TimerManager,'robotLegs.singleInstance.TimerManager',_super);
		var __proto=TimerManager.prototype;
		/**
		*开始计时
		*@param _distanceTime 时间间隔
		*@param _distanceBackCmd 每个时间间隔回调的cmd,如果传的totalTime值大于0，那么会返回剩余的时间
		*@param _totalTime 总的时间，超过这个时间后，停止倒计时，-1是无限循环，需要手动停止
		*@param _completeBackCmd 当这个时间到了，回调的cmd
		*
		*/
		__proto.start=function(_distanceTime,_distanceBackCmd,_totalTime,_completeBackCmd){
			(_totalTime===void 0)&& (_totalTime=0);
			(_completeBackCmd===void 0)&& (_completeBackCmd="");
			this.__distanceTime=_distanceTime;
			this.__distanceBackCmd=_distanceBackCmd;
			this.__totalTime=_totalTime;
			this.__completeBackCmd=_completeBackCmd;
			this.stop();
			var frames=30;
			switch(Laya.stage.frameRate){
				case "fast":
					frames=60;
					break ;
				case "slow":
					frames=30;
					break ;
				};
			var frame=(_distanceTime / 1000)*frames;
			Laya.timer.frameLoop(frame,this,this.countDown);
		}

		/**
		*计时
		*
		*/
		__proto.countDown=function(){
			if(this.__totalTime > 0){
				this.__totalTime-=this.__distanceTime;
				if(this.__totalTime <=0){
					this.__totalTime=0;
					this.stop();
					if(this.__completeBackCmd.length > 0)
						this.sendNotification(this.__completeBackCmd);
				}
			}
			if(this.__distanceBackCmd.length > 0)
				this.sendNotification(this.__distanceBackCmd,this.__totalTime);
		}

		/**
		*停止计时
		*
		*/
		__proto.stop=function(){
			Laya.timer.clear(this,this.countDown);
		}

		return TimerManager;
	})(RLObj)


	//class laya.resource.Bitmap extends laya.resource.Resource
	var Bitmap=(function(_super){
		function Bitmap(){
			//this._source=null;
			//this._w=NaN;
			//this._h=NaN;
			Bitmap.__super.call(this);
			this._w=0;
			this._h=0;
		}

		__class(Bitmap,'laya.resource.Bitmap',_super);
		var __proto=Bitmap.prototype;
		/***
		*宽度。
		*/
		__getset(0,__proto,'width',function(){
			return this._w;
		});

		/***
		*高度。
		*/
		__getset(0,__proto,'height',function(){
			return this._h;
		});

		/***
		*HTML Image 或 HTML Canvas 或 WebGL Texture 。
		*/
		__getset(0,__proto,'source',function(){
			return this._source;
		});

		return Bitmap;
	})(Resource)


	//class laya.media.h5audio.AudioSoundChannel extends laya.media.SoundChannel
	var AudioSoundChannel=(function(_super){
		function AudioSoundChannel(audio){
			this._audio=null;
			this._onEnd=null;
			this._resumePlay=null;
			AudioSoundChannel.__super.call(this);
			this._onEnd=Utils.bind(this.__onEnd,this);
			this._resumePlay=Utils.bind(this.__resumePlay,this);
			audio.addEventListener("ended",this._onEnd);
			this._audio=audio;
		}

		__class(AudioSoundChannel,'laya.media.h5audio.AudioSoundChannel',_super);
		var __proto=AudioSoundChannel.prototype;
		__proto.__onEnd=function(){
			if (this.loops==1){
				if (this.completeHandler){
					Laya.timer.once(10,this,this.__runComplete,[this.completeHandler],false);
					this.completeHandler=null;
				}
				this.stop();
				this.event("complete");
				return;
			}
			if (this.loops > 0){
				this.loops--;
			}
			this.startTime=0;
			this.play();
		}

		__proto.__resumePlay=function(){
			if(this._audio)this._audio.removeEventListener("canplay",this._resumePlay);
			try {
				this._audio.currentTime=this.startTime;
				Browser.container.appendChild(this._audio);
				this._audio.play();
				}catch (e){
				this.event("error");
			}
		}

		/**
		*播放
		*/
		__proto.play=function(){
			this.isStopped=false;
			try {
				this._audio.playbackRate=SoundManager.playbackRate;
				this._audio.currentTime=this.startTime;
				}catch (e){
				this._audio.addEventListener("canplay",this._resumePlay);
				return;
			}
			SoundManager.addChannel(this);
			Browser.container.appendChild(this._audio);
			if("play" in this._audio)
				this._audio.play();
		}

		/**
		*停止播放
		*
		*/
		__proto.stop=function(){
			this.isStopped=true;
			SoundManager.removeChannel(this);
			this.completeHandler=null;
			if (!this._audio)
				return;
			if ("pause" in this._audio)
				if (Render.isConchApp){
				this._audio.stop();
			}
			this._audio.pause();
			this._audio.removeEventListener("ended",this._onEnd);
			this._audio.removeEventListener("canplay",this._resumePlay);
			if (!Browser.onIE){
				if (this._audio!=AudioSound._musicAudio){
					Pool.recover("audio:"+this.url,this._audio);
				}
			}
			Browser.removeElement(this._audio);
			this._audio=null;
		}

		__proto.pause=function(){
			this.isStopped=true;
			SoundManager.removeChannel(this);
			if("pause" in this._audio)
				this._audio.pause();
		}

		__proto.resume=function(){
			if (!this._audio)
				return;
			this.isStopped=false;
			SoundManager.addChannel(this);
			if("play" in this._audio)
				this._audio.play();
		}

		/**
		*当前播放到的位置
		*@return
		*
		*/
		__getset(0,__proto,'position',function(){
			if (!this._audio)
				return 0;
			return this._audio.currentTime;
		});

		/**
		*获取总时间。
		*/
		__getset(0,__proto,'duration',function(){
			if (!this._audio)
				return 0;
			return this._audio.duration;
		});

		/**
		*设置音量
		*@param v
		*
		*/
		/**
		*获取音量
		*@return
		*
		*/
		__getset(0,__proto,'volume',function(){
			if (!this._audio)return 1;
			return this._audio.volume;
			},function(v){
			if (!this._audio)return;
			this._audio.volume=v;
		});

		return AudioSoundChannel;
	})(SoundChannel)


	//class laya.media.webaudio.WebAudioSoundChannel extends laya.media.SoundChannel
	var WebAudioSoundChannel=(function(_super){
		function WebAudioSoundChannel(){
			this.audioBuffer=null;
			this.gain=null;
			this.bufferSource=null;
			this._currentTime=0;
			this._volume=1;
			this._startTime=0;
			this._pauseTime=0;
			this._onPlayEnd=null;
			this.context=WebAudioSound.ctx;
			WebAudioSoundChannel.__super.call(this);
			this._onPlayEnd=Utils.bind(this.__onPlayEnd,this);
			if (this.context["createGain"]){
				this.gain=this.context["createGain"]();
				}else {
				this.gain=this.context["createGainNode"]();
			}
		}

		__class(WebAudioSoundChannel,'laya.media.webaudio.WebAudioSoundChannel',_super);
		var __proto=WebAudioSoundChannel.prototype;
		/**
		*播放声音
		*/
		__proto.play=function(){
			SoundManager.addChannel(this);
			this.isStopped=false;
			this._clearBufferSource();
			if (!this.audioBuffer)return;
			var context=this.context;
			var gain=this.gain;
			var bufferSource=context.createBufferSource();
			this.bufferSource=bufferSource;
			bufferSource.buffer=this.audioBuffer;
			bufferSource.connect(gain);
			if (gain)
				gain.disconnect();
			gain.connect(context.destination);
			bufferSource.onended=this._onPlayEnd;
			if (this.startTime >=this.duration)this.startTime=0;
			this._startTime=Browser.now();
			this.gain.gain.value=this._volume;
			if (this.loops==0){
				bufferSource.loop=true;
			}
			bufferSource.playbackRate.value=SoundManager.playbackRate;
			bufferSource.start(0,this.startTime);
			this._currentTime=0;
		}

		__proto.__onPlayEnd=function(){
			if (this.loops==1){
				if (this.completeHandler){
					Laya.timer.once(10,this,this.__runComplete,[this.completeHandler],false);
					this.completeHandler=null;
				}
				this.stop();
				this.event("complete");
				return;
			}
			if (this.loops > 0){
				this.loops--;
			}
			this.startTime=0;
			this.play();
		}

		__proto._clearBufferSource=function(){
			if (this.bufferSource){
				var sourceNode=this.bufferSource;
				if (sourceNode.stop){
					sourceNode.stop(0);
					}else {
					sourceNode.noteOff(0);
				}
				sourceNode.disconnect(0);
				sourceNode.onended=null;
				if (!WebAudioSoundChannel._tryCleanFailed)this._tryClearBuffer(sourceNode);
				this.bufferSource=null;
			}
		}

		__proto._tryClearBuffer=function(sourceNode){
			if (!Browser.onMac){
				try{
					sourceNode.buffer=null;
					}catch (e){
					WebAudioSoundChannel._tryCleanFailed=true;
				}
				return;
			}
			try {sourceNode.buffer=WebAudioSound._miniBuffer;}catch (e){WebAudioSoundChannel._tryCleanFailed=true;}
		}

		/**
		*停止播放
		*/
		__proto.stop=function(){
			this._clearBufferSource();
			this.audioBuffer=null;
			if (this.gain)
				this.gain.disconnect();
			this.isStopped=true;
			SoundManager.removeChannel(this);
			this.completeHandler=null;
			if(SoundManager.autoReleaseSound)
				Laya.timer.once(5000,null,SoundManager.disposeSoundIfNotUsed,[this.url],false);
		}

		__proto.pause=function(){
			if (!this.isStopped){
				this._pauseTime=this.position;
			}
			this._clearBufferSource();
			if (this.gain)
				this.gain.disconnect();
			this.isStopped=true;
			SoundManager.removeChannel(this);
			if(SoundManager.autoReleaseSound)
				Laya.timer.once(5000,null,SoundManager.disposeSoundIfNotUsed,[this.url],false);
		}

		__proto.resume=function(){
			this.startTime=this._pauseTime;
			this.play();
		}

		/**
		*获取当前播放位置
		*/
		__getset(0,__proto,'position',function(){
			if (this.bufferSource){
				return (Browser.now()-this._startTime)/ 1000+this.startTime;
			}
			return 0;
		});

		__getset(0,__proto,'duration',function(){
			if (this.audioBuffer){
				return this.audioBuffer.duration;
			}
			return 0;
		});

		/**
		*设置音量
		*/
		/**
		*获取音量
		*/
		__getset(0,__proto,'volume',function(){
			return this._volume;
			},function(v){
			if (this.isStopped){
				return;
			}
			this._volume=v;
			this.gain.gain.value=v;
		});

		WebAudioSoundChannel._tryCleanFailed=false;
		return WebAudioSoundChannel;
	})(SoundChannel)


	//class laya.webgl.resource.RenderTarget2D extends laya.resource.Texture
	var RenderTarget2D=(function(_super){
		function RenderTarget2D(width,height,surfaceFormat,surfaceType,depthStencilFormat,mipMap,repeat,minFifter,magFifter){
			this._type=0;
			this._svWidth=NaN;
			this._svHeight=NaN;
			this._preRenderTarget=null;
			this._alreadyResolved=false;
			this._looked=false;
			this._surfaceFormat=0;
			this._surfaceType=0;
			this._depthStencilFormat=0;
			this._mipMap=false;
			this._repeat=false;
			this._minFifter=0;
			this._magFifter=0;
			this._destroy=false;
			(surfaceFormat===void 0)&& (surfaceFormat=0x1908);
			(surfaceType===void 0)&& (surfaceType=0x1401);
			(depthStencilFormat===void 0)&& (depthStencilFormat=0x84F9);
			(mipMap===void 0)&& (mipMap=false);
			(repeat===void 0)&& (repeat=false);
			(minFifter===void 0)&& (minFifter=-1);
			(magFifter===void 0)&& (magFifter=-1);
			this._type=1;
			this._w=width;
			this._h=height;
			this._surfaceFormat=surfaceFormat;
			this._surfaceType=surfaceType;
			this._depthStencilFormat=depthStencilFormat;
			if (Render.isConchWebGL && this._depthStencilFormat===0x84F9){
				this._depthStencilFormat=0x81A5;
			}
			this._mipMap=mipMap;
			this._repeat=repeat;
			this._minFifter=minFifter;
			this._magFifter=magFifter;
			this._createWebGLRenderTarget();
			this.bitmap.lock=true;
			RenderTarget2D.__super.call(this,this.bitmap,Texture.INV_UV);
		}

		__class(RenderTarget2D,'laya.webgl.resource.RenderTarget2D',_super);
		var __proto=RenderTarget2D.prototype;
		Laya.imps(__proto,{"laya.resource.IDispose":true})
		//TODO:临时......................................................
		__proto.getType=function(){
			return this._type;
		}

		//*/
		__proto.getTexture=function(){
			return this;
		}

		__proto.size=function(w,h){
			if (this._w==w && this._h==h)return;
			this._w=w;
			this._h=h;
			this.release();
			if (this._w !=0 && this._h !=0)this._createWebGLRenderTarget();
		}

		__proto.release=function(){
			this.destroy();
		}

		__proto.recycle=function(){
			RenderTarget2D.POOL.push(this);
		}

		__proto.start=function(){
			var gl=WebGL.mainContext;
			this._preRenderTarget=RenderState2D.curRenderTarget;
			RenderState2D.curRenderTarget=this;
			gl.bindFramebuffer(0x8D40,this.bitmap.frameBuffer);
			this._alreadyResolved=false;
			if (this._type==1){
				gl.viewport(0,0,this._w,this._h);
				this._svWidth=RenderState2D.width;
				this._svHeight=RenderState2D.height;
				RenderState2D.width=this._w;
				RenderState2D.height=this._h;
				BaseShader.activeShader=null;
			}
			return this;
		}

		__proto.clear=function(r,g,b,a){
			(r===void 0)&& (r=0.0);
			(g===void 0)&& (g=0.0);
			(b===void 0)&& (b=0.0);
			(a===void 0)&& (a=1.0);
			var gl=WebGL.mainContext;
			gl.clearColor(r,g,b,a);
			var clearFlag=0x00004000;
			switch (this._depthStencilFormat){
				case 0x81A5:
					clearFlag |=0x00000100;
					break ;
				case 0x8D48:
					clearFlag |=0x00000400;
					break ;
				case 0x84F9:
					clearFlag |=0x00000100;
					clearFlag |=0x00000400
					break ;
				}
			gl.clear(clearFlag);
		}

		__proto.end=function(){
			var gl=WebGL.mainContext;
			gl.bindFramebuffer(0x8D40,this._preRenderTarget ? this._preRenderTarget.bitmap.frameBuffer :null);
			this._alreadyResolved=true;
			RenderState2D.curRenderTarget=this._preRenderTarget;
			if (this._type==1){
				gl.viewport(0,0,this._svWidth,this._svHeight);
				RenderState2D.width=this._svWidth;
				RenderState2D.height=this._svHeight;
				BaseShader.activeShader=null;
			}else gl.viewport(0,0,Laya.stage.width,Laya.stage.height);
		}

		__proto.getData=function(x,y,width,height){
			var gl=WebGL.mainContext;
			gl.bindFramebuffer(0x8D40,(this.bitmap).frameBuffer);
			var canRead=(gl.checkFramebufferStatus(0x8D40)===0x8CD5);
			if (!canRead){
				gl.bindFramebuffer(0x8D40,null);
				return null;
			};
			var pixels=new Uint8Array(this._w *this._h *4);
			gl.readPixels(x,y,width,height,this._surfaceFormat,this._surfaceType,pixels);
			gl.bindFramebuffer(0x8D40,null);
			return pixels;
		}

		/**彻底清理资源,注意会强制解锁清理*/
		__proto.destroy=function(foreDiposeTexture){
			(foreDiposeTexture===void 0)&& (foreDiposeTexture=false);
			if (!this._destroy){
				this._loaded=false;
				this.bitmap.offAll();
				this.bitmap.disposeResource();
				this.bitmap.dispose();
				this.offAll();
				this.bitmap=null;
				this._alreadyResolved=false;
				this._destroy=true;
				_super.prototype.destroy.call(this);
			}
		}

		//待测试
		__proto.dispose=function(){}
		__proto._createWebGLRenderTarget=function(){
			this.bitmap=new WebGLRenderTarget(this.width,this.height,this._surfaceFormat,this._surfaceType,this._depthStencilFormat,this._mipMap,this._repeat,this._minFifter,this._magFifter);
			this.bitmap.activeResource();
			this._alreadyResolved=true;
			this._destroy=false;
			this._loaded=true;
			this.bitmap.on("recovered",this,function(e){
				this.event("recovered");
			})
		}

		__getset(0,__proto,'surfaceFormat',function(){
			return this._surfaceFormat;
		});

		__getset(0,__proto,'magFifter',function(){
			return this._magFifter;
		});

		__getset(0,__proto,'surfaceType',function(){
			return this._surfaceType;
		});

		__getset(0,__proto,'mipMap',function(){
			return this._mipMap;
		});

		__getset(0,__proto,'depthStencilFormat',function(){
			return this._depthStencilFormat;
		});

		//}
		__getset(0,__proto,'minFifter',function(){
			return this._minFifter;
		});

		/**返回RenderTarget的Texture*/
		__getset(0,__proto,'source',function(){
			if (this._alreadyResolved)
				return _super.prototype._$get_source.call(this);
			return null;
		});

		RenderTarget2D.create=function(w,h,surfaceFormat,surfaceType,depthStencilFormat,mipMap,repeat,minFifter,magFifter){
			(surfaceFormat===void 0)&& (surfaceFormat=0x1908);
			(surfaceType===void 0)&& (surfaceType=0x1401);
			(depthStencilFormat===void 0)&& (depthStencilFormat=0x84F9);
			(mipMap===void 0)&& (mipMap=false);
			(repeat===void 0)&& (repeat=false);
			(minFifter===void 0)&& (minFifter=-1);
			(magFifter===void 0)&& (magFifter=-1);
			var t=RenderTarget2D.POOL.pop();
			t || (t=new RenderTarget2D(w,h));
			if (!t.bitmap || t._w !=w || t._h !=h || t._surfaceFormat !=surfaceFormat || t._surfaceType !=surfaceType || t._depthStencilFormat !=depthStencilFormat || t._mipMap !=mipMap || t._repeat !=repeat || t._minFifter !=minFifter || t._magFifter !=magFifter){
				t._w=w;
				t._h=h;
				t._surfaceFormat=surfaceFormat;
				t._surfaceType=surfaceType;
				t._depthStencilFormat=depthStencilFormat;
				if (Render.isConchWebGL && t._depthStencilFormat===0x84F9){
					t._depthStencilFormat=0x81A5;
				}
				t._mipMap=mipMap;
				t._repeat=repeat;
				t._minFifter=minFifter;
				t._magFifter=magFifter;
				t.release();
				t._createWebGLRenderTarget();
			}
			return t;
		}

		RenderTarget2D.TYPE2D=1;
		RenderTarget2D.TYPE3D=2;
		RenderTarget2D.POOL=[];
		return RenderTarget2D;
	})(Texture)


	//class fairygui.GBasicTextField extends fairygui.GTextField
	var GBasicTextField=(function(_super){
		var LineInfo,TextExt;
		function GBasicTextField(){
			this.textField=null;
			this._font=null;
			this._color=null;
			this._text=null;
			this._ubbEnabled=false;
			this._singleLine=false;
			this._letterSpacing=0;
			this._autoSize=0;
			this._widthAutoSize=false;
			this._heightAutoSize=false;
			this._updatingSize=false;
			this._textWidth=0;
			this._textHeight=0;
			this._bitmapFont=null;
			this._lines=null;
			GBasicTextField.__super.call(this);
			this._text="";
			this._color="#000000";
			this.textField.align="left";
			this.textField.font=UIConfig$1.defaultFont;
			this._autoSize=1;
			this._widthAutoSize=this._heightAutoSize=true;
			this.textField["_sizeDirty"]=false;
		}

		__class(GBasicTextField,'fairygui.GBasicTextField',_super);
		var __proto=GBasicTextField.prototype;
		__proto.createDisplayObject=function(){
			this._displayObject=this.textField=new TextExt(this);
			this._displayObject["$owner"]=this;
			this._displayObject.mouseEnabled=false;
		}

		__proto.setAutoSize=function(value){
			this._autoSize=value;
			this._widthAutoSize=value==1;
			this._heightAutoSize=value==1 || value==2;
			this.textField.wordWrap=!this._widthAutoSize && !this._singleLine;
			if(!this._underConstruct){
				if(!this._heightAutoSize)
					this.textField.size(this.width,this.height);
				else if(!this._widthAutoSize)
				this.textField.width=this.width;
			}
		}

		__proto.ensureSizeCorrect=function(){
			if (!this._underConstruct && this.textField["_isChanged"])
				this.textField.typeset();
		}

		__proto.typeset=function(){
			if(this._bitmapFont!=null)
				this.renderWithBitmapFont();
			else if(this._widthAutoSize || this._heightAutoSize)
			this.updateSize();
		}

		__proto.updateSize=function(){
			this._textWidth=Math.ceil(this.textField.textWidth);
			this._textHeight=Math.ceil(this.textField.textHeight);
			var w=NaN,h=0;
			if(this._widthAutoSize){
				w=this._textWidth;
				if(this.textField.width!=w){
					this.textField.width=w;
					if(this.textField.align!="left")
						this.textField["baseTypeset"]();
				}
			}
			else
			w=this.width;
			if(this._heightAutoSize){
				h=this._textHeight;
				if(!this._widthAutoSize){
					if(this.textField.height!=this._textHeight)
						this.textField.height=this._textHeight;
				}
			}
			else {
				h=this.height;
				if(this._textHeight > h)
					this._textHeight=h;
				if(this.textField.height!=this._textHeight)
					this.textField.height=this._textHeight;
			}
			this._updatingSize=true;
			this.setSize(w,h);
			this._updatingSize=false;
		}

		__proto.renderWithBitmapFont=function(){
			var gr=this._displayObject.graphics;
			gr.clear();
			if (!this._lines)
				this._lines=[];
			else
			LineInfo.returnList(this._lines);
			var letterSpacing=this.letterSpacing;
			var lineSpacing=this.leading-1;
			var rectWidth=this.width-2 *2;
			var lineWidth=0,lineHeight=0,lineTextHeight=0;
			var glyphWidth=0,glyphHeight=0;
			var wordChars=0,wordStart=0,wordEnd=0;
			var lastLineHeight=0;
			var lineBuffer="";
			var lineY=2;
			var line;
			var wordWrap=!this._widthAutoSize && !this._singleLine;
			var fontSize=this.fontSize;
			var fontScale=this._bitmapFont.resizable?fontSize/this._bitmapFont.size:1;
			this._textWidth=0;
			this._textHeight=0;
			var textLength=this._text.length;
			for (var offset=0;offset < textLength;++offset){
				var ch=this._text.charAt(offset);
				var cc=ch.charCodeAt(0);
				if (cc==10){
					lineBuffer+=ch;
					line=LineInfo.borrow();
					line.width=lineWidth;
					if (lineTextHeight==0){
						if (lastLineHeight==0)
							lastLineHeight=fontSize;
						if (lineHeight==0)
							lineHeight=lastLineHeight;
						lineTextHeight=lineHeight;
					}
					line.height=lineHeight;
					lastLineHeight=lineHeight;
					line.textHeight=lineTextHeight;
					line.text=lineBuffer;
					line.y=lineY;
					lineY+=(line.height+lineSpacing);
					if (line.width > this._textWidth)
						this._textWidth=line.width;
					this._lines.push(line);
					lineBuffer="";
					lineWidth=0;
					lineHeight=0;
					lineTextHeight=0;
					wordChars=0;
					wordStart=0;
					wordEnd=0;
					continue ;
				}
				if (cc>=65 && cc<=90 || cc>=97 && cc<=122){
					if (wordChars==0)
						wordStart=lineWidth;
					wordChars++;
				}
				else{
					if (wordChars > 0)
						wordEnd=lineWidth;
					wordChars=0;
				}
				if (cc==32){
					glyphWidth=Math.ceil(fontSize / 2);
					glyphHeight=fontSize;
				}
				else {
					var glyph=this._bitmapFont.glyphs[ch];
					if (glyph){
						glyphWidth=Math.ceil(glyph.advance*fontScale);
						glyphHeight=Math.ceil(glyph.lineHeight*fontScale);
					}
					else {
						glyphWidth=0;
						glyphHeight=0;
					}
				}
				if (glyphHeight > lineTextHeight)
					lineTextHeight=glyphHeight;
				if (glyphHeight > lineHeight)
					lineHeight=glyphHeight;
				if (lineWidth !=0)
					lineWidth+=letterSpacing;
				lineWidth+=glyphWidth;
				if (!wordWrap || lineWidth <=rectWidth){
					lineBuffer+=ch;
				}
				else {
					line=LineInfo.borrow();
					line.height=lineHeight;
					line.textHeight=lineTextHeight;
					if (lineBuffer.length==0){
						line.text=ch;
					}
					else if (wordChars > 0 && wordEnd > 0){
						lineBuffer+=ch;
						var len=lineBuffer.length-wordChars;
						line.text=ToolSet.trimRight(lineBuffer.substr(0,len));
						line.width=wordEnd;
						lineBuffer=lineBuffer.substr(len);
						lineWidth-=wordStart;
					}
					else {
						line.text=lineBuffer;
						line.width=lineWidth-(glyphWidth+letterSpacing);
						lineBuffer=ch;
						lineWidth=glyphWidth;
						lineHeight=glyphHeight;
						lineTextHeight=glyphHeight;
					}
					line.y=lineY;
					lineY+=(line.height+lineSpacing);
					if (line.width > this._textWidth)
						this._textWidth=line.width;
					wordChars=0;
					wordStart=0;
					wordEnd=0;
					this._lines.push(line);
				}
			}
			if (lineBuffer.length > 0){
				line=LineInfo.borrow();
				line.width=lineWidth;
				if (lineHeight==0)
					lineHeight=lastLineHeight;
				if (lineTextHeight==0)
					lineTextHeight=lineHeight;
				line.height=lineHeight;
				line.textHeight=lineTextHeight;
				line.text=lineBuffer;
				line.y=lineY;
				if (line.width > this._textWidth)
					this._textWidth=line.width;
				this._lines.push(line);
			}
			if (this._textWidth > 0)
				this._textWidth+=2 *2;
			var count=this._lines.length;
			if (count==0){
				this._textHeight=0;
			}
			else {
				line=this._lines[this._lines.length-1];
				this._textHeight=line.y+line.height+2;
			};
			var w=NaN,h=0;
			if (this._widthAutoSize){
				if (this._textWidth==0)
					w=0;
				else
				w=this._textWidth;
			}
			else
			w=this.width;
			if (this._heightAutoSize){
				if (this._textHeight==0)
					h=0;
				else
				h=this._textHeight;
			}
			else
			h=this.height;
			this._updatingSize=true;
			this.setSize(w,h);
			this._updatingSize=false;
			this.doAlign();
			if (w==0 || h==0)
				return;
			var charX=2;
			var lineIndent=0;
			var charIndent=0;
			rectWidth=this.width-2 *2;
			var lineCount=this._lines.length;
			for (var i=0;i < lineCount;i++){
				line=this._lines[i];
				charX=2;
				if (this.align=="center")
					lineIndent=(rectWidth-line.width)/ 2;
				else if (this.align=="right")
				lineIndent=rectWidth-line.width;
				else
				lineIndent=0;
				textLength=line.text.length;
				for (var j=0;j < textLength;j++){
					ch=line.text.charAt(j);
					cc=ch.charCodeAt(0);
					if(cc==10)
						continue ;
					if(cc==32){
						charX+=this._letterSpacing+Math.ceil(fontSize/2);
						continue ;
					}
					glyph=this._bitmapFont.glyphs[ch];
					if (glyph !=null){
						charIndent=(line.height+line.textHeight)/ 2-Math.ceil(glyph.lineHeight*fontScale);
						gr.drawTexture(glyph.texture,
						charX+lineIndent+Math.ceil(glyph.offsetX*fontScale),
						line.y+charIndent+Math.ceil(glyph.offsetY*fontScale),
						glyph.texture.width *fontScale,
						glyph.texture.height *fontScale);
						charX+=letterSpacing+Math.ceil(glyph.advance*fontScale);
					}
					else {
						charX+=letterSpacing;
					}
				}
			}
		}

		//line loop
		__proto.handleSizeChanged=function(){
			if(this._updatingSize)
				return;
			if(this._underConstruct)
				this.textField.size(this.width,this.height);
			else{
				if(this._bitmapFont!=null){
					if(!this._widthAutoSize)
						this.textField["setChanged"]();
					else
					this.doAlign();
				}
				else {
					if(!this._widthAutoSize){
						if(!this._heightAutoSize)
							this.textField.size(this.width,this.height);
						else
						this.textField.width=this.width;
					}
				}
			}
		}

		__proto.handleGrayedChanged=function(){
			fairygui.GObject.prototype.handleGrayedChanged.call(this);
			if(this.grayed)
				this.textField.color="#AAAAAA";
			else
			this.textField.color=this._color;
		}

		__proto.doAlign=function(){
			if(this.valign=="top" || this._textHeight==0)
				this._yOffset=2;
			else {
				var dh=this.height-this._textHeight;
				if(dh < 0)
					dh=0;
				if(this.valign=="middle")
					this._yOffset=Math.floor(dh / 2);
				else
				this._yOffset=Math.floor(dh);
			}
			this.handleXYChanged();
		}

		__proto.setup_beforeAdd=function(xml){
			_super.prototype.setup_beforeAdd.call(this,xml);
			var str;
			str=xml.getAttribute("autoSize");
			if (str)
				this.setAutoSize(AutoSizeType.parse(str));
		}

		__getset(0,__proto,'bold',function(){
			return this.textField.bold;
			},function(value){
			this.textField.bold=value;
		});

		__getset(0,__proto,'letterSpacing',function(){
			return this._letterSpacing;
			},function(value){
			this._letterSpacing=value;
		});

		__getset(0,__proto,'align',function(){
			return this.textField.align;
			},function(value){
			this.textField.align=value;
		});

		__getset(0,__proto,'text',function(){
			return this._text;
			},function(value){
			this._text=value;
			if(this._text==null)
				this._text="";
			if(this._bitmapFont==null){
				if(this._widthAutoSize)
					this.textField.width=10000;
				if(this._ubbEnabled)
					this.textField.text=ToolSet.removeUBB(ToolSet.encodeHTML(this._text));
				else
				this.textField.text=this._text;
			}
			else{
				this.textField.text="";
				this.textField["setChanged"]();
			}
			if(this.parent && this.parent._underConstruct)
				this.textField.typeset();
		});

		__getset(0,__proto,'color',function(){
			return this._color;
			},function(value){
			if (this._color !=value){
				this._color=value;
				if (this._gearColor.controller)
					this._gearColor.updateState();
				if(this.grayed)
					this.textField.color="#AAAAAA";
				else
				this.textField.color=this._color;
			}
		});

		__getset(0,__proto,'font',function(){
			return this.textField.font;
			},function(value){
			this._font=value;
			if(ToolSet.startsWith(this._font,"ui://")){
				this._bitmapFont=UIPackage.getBitmapFontByURL(this._font);
				this.textField["setChanged"]();
			}
			else {
				this._bitmapFont=null;
				if(this._font)
					this.textField.font=this._font;
				else
				this.textField.font=UIConfig$1.defaultFont;
			}
		});

		__getset(0,__proto,'leading',function(){
			return this.textField.leading;
			},function(value){
			this.textField.leading=value;
		});

		__getset(0,__proto,'fontSize',function(){
			return this.textField.fontSize;
			},function(value){
			this.textField.fontSize=value;
		});

		__getset(0,__proto,'valign',function(){
			return this.textField.valign;
			},function(value){
			this.textField.valign=value;
		});

		__getset(0,__proto,'italic',function(){
			return this.textField.italic;
			},function(value){
			this.textField.italic=value;
		});

		__getset(0,__proto,'underline',function(){
			return this.textField.underline;
			},function(value){
			this.textField.underline=value;
		});

		__getset(0,__proto,'singleLine',function(){
			return this._singleLine;
			},function(value){
			this._singleLine=value;
			this.textField.wordWrap=!this._widthAutoSize && !this._singleLine;
		});

		__getset(0,__proto,'stroke',function(){
			return this.textField.stroke;
			},function(value){
			this.textField.stroke=value;
		});

		__getset(0,__proto,'strokeColor',function(){
			return this.textField.strokeColor;
			},function(value){
			this.textField.strokeColor=value;
			this.updateGear(4);
		});

		__getset(0,__proto,'ubbEnabled',function(){
			return this._ubbEnabled;
			},function(value){
			this._ubbEnabled=value;
		});

		__getset(0,__proto,'autoSize',function(){
			return this._autoSize;
			},function(value){
			if (this._autoSize !=value){
				this.setAutoSize(value);
			}
		});

		__getset(0,__proto,'textWidth',function(){
			if (this.textField["_isChanged"])
				this.textField.typeset();
			return this._textWidth;
		});

		GBasicTextField.GUTTER_X=2;
		GBasicTextField.GUTTER_Y=2;
		GBasicTextField.__init$=function(){
			//class LineInfo
			LineInfo=(function(){
				function LineInfo(){
					this.width=0;
					this.height=0;
					this.textHeight=0;
					this.text=null;
					this.y=0;
				}
				__class(LineInfo,'');
				LineInfo.borrow=function(){
					if (LineInfo.pool.length){
						var ret=LineInfo.pool.pop();
						ret.width=0;
						ret.height=0;
						ret.textHeight=0;
						ret.text=null;
						ret.y=0;
						return ret;
					}
					else
					return new LineInfo();
				}
				LineInfo.returns=function(value){
					LineInfo.pool.push(value);
				}
				LineInfo.returnList=function(value){
					var length=value.length;
					for (var i=0;i < length;i++){
						var li=value[i];
						LineInfo.pool.push(li);
					}
					value.length=0;
				}
				LineInfo.pool=[];
				return LineInfo;
			})()
			//class TextExt extends laya.display.Text
			TextExt=(function(_super){
				function TextExt(owner){
					this._owner=null;
					this._lock=false;
					this._sizeDirty=false;
					TextExt.__super.call(this);
					this._owner=owner;
				}
				__class(TextExt,'',_super);
				var __proto=TextExt.prototype;
				__proto.baseTypeset=function(){
					this._lock=true;
					this.typeset();
					this._lock=false;
				}
				__proto.typeset=function(){
					this._sizeDirty=true;
					_super.prototype.typeset.call(this);
					if(!this._lock)
						this._owner.typeset();
					if(this._isChanged){
						Laya.timer.clear(this,this.typeset);
						this._isChanged=false;
					}
					this._sizeDirty=false;
				}
				__proto.setChanged=function(){
					this.isChanged=true;
				}
				__getset(0,__proto,'isChanged',null,function(value){
					if (value && !this._sizeDirty){
						if(this._owner.autoSize!=0 && this._owner.parent){
							this._sizeDirty=true;
							this.event("fui_size_delay_change");
						}
					}
					_super.prototype._$set_isChanged.call(this,value);
				});
				return TextExt;
			})(Text)
		}

		return GBasicTextField;
	})(GTextField)


	//class fairygui.GRichTextField extends fairygui.GTextField
	var GRichTextField=(function(_super){
		function GRichTextField(){
			this.div=null;
			this._text=null;
			this._ubbEnabled=false;
			this._color=null;
			GRichTextField.__super.call(this);
			this._text="";
		}

		__class(GRichTextField,'fairygui.GRichTextField',_super);
		var __proto=GRichTextField.prototype;
		__proto.createDisplayObject=function(){
			this._displayObject=this.div=new HTMLDivElement();
			this._displayObject.mouseEnabled=true;
			this._displayObject["$owner"]=this;
		}

		__proto.handleSizeChanged=function(){
			this.div.size(this.width,this.height);
		}

		__getset(0,__proto,'bold',function(){
			return this.div.style.bold;
			},function(value){
			this.div.style.bold=value;
		});

		__getset(0,__proto,'align',function(){
			return this.div.style.align;
			},function(value){
			this.div.style.align=value;
		});

		__getset(0,__proto,'text',function(){
			return this._text;
			},function(value){
			this._text=value;
			if(this._ubbEnabled)
				this.div.innerHTML=ToolSet.parseUBB(this._text);
			else
			this.div.innerHTML=this._text;
		});

		__getset(0,__proto,'color',function(){
			return this._color;
			},function(value){
			if (this._color !=value){
				this._color=value;
				this.div.color=value;
				if (this._gearColor.controller)
					this._gearColor.updateState();
			}
		});

		__getset(0,__proto,'font',function(){
			return this.div.style.fontFamily;
			},function(value){
			this.div.style.fontFamily=value;
		});

		__getset(0,__proto,'leading',function(){
			return this.div.style.leading;
			},function(value){
			this.div.style.leading=value;
		});

		__getset(0,__proto,'fontSize',function(){
			return this.div.style.fontSize;
			},function(value){
			this.div.style.fontSize=value;
		});

		__getset(0,__proto,'valign',function(){
			return this.div.style.valign;
			},function(value){
			this.div.style.valign=value;
		});

		__getset(0,__proto,'italic',function(){
			return this.div.style.italic;
			},function(value){
			this.div.style.italic=value;
		});

		__getset(0,__proto,'stroke',function(){
			return this.div.style.stroke;
			},function(value){
			this.div.style.stroke=value;
		});

		__getset(0,__proto,'strokeColor',function(){
			return this.div.style.strokeColor;
			},function(value){
			this.div.style.strokeColor=value;
			this.updateGear(4);
		});

		__getset(0,__proto,'ubbEnabled',function(){
			return this._ubbEnabled;
			},function(value){
			this._ubbEnabled=value;
		});

		return GRichTextField;
	})(GTextField)


	//class fairygui.GTextInput extends fairygui.GTextField
	var GTextInput=(function(_super){
		function GTextInput(){
			this.input=null;
			GTextInput.__super.call(this);
		}

		__class(GTextInput,'fairygui.GTextInput',_super);
		var __proto=GTextInput.prototype;
		__proto.createDisplayObject=function(){
			this._displayObject=this.input=new Input();
			this._displayObject.mouseEnabled=true;
			this._displayObject["$owner"]=this;
		}

		__proto.handleSizeChanged=function(){
			this.input.size(this.width,this.height);
		}

		__proto.setup_beforeAdd=function(xml){
			_super.prototype.setup_beforeAdd.call(this,xml);
			var str=xml.getAttribute("prompt");
			if(str)
				this.promptText=str;
			str=xml.getAttribute("maxLength");
			if(str)
				this.input.maxChars=parseInt(str);
			str=xml.getAttribute("restrict");
			if(str)
				this.input.restrict=str;
			if(xml.getAttribute("password")=="true")
				this.password=true;
			else{
				str=xml.getAttribute("keyboardType");
				if(str=="4")
					this.keyboardType="number";
				else if(str=="3")
				this.keyboardType="url";
			}
		}

		__getset(0,__proto,'bold',function(){
			return this.input.bold;
			},function(value){
			this.input.bold=value;
		});

		__getset(0,__proto,'align',function(){
			return this.input.align;
			},function(value){
			this.input.align=value;
		});

		__getset(0,__proto,'text',function(){
			return this.input.text;
			},function(value){
			this.input.text=value;
		});

		__getset(0,__proto,'password',function(){
			return this.input.type=="password";
			},function(value){
			if (value)
				this.input.type="password";
			else
			this.input.type="text";
		});

		__getset(0,__proto,'color',function(){
			return this.input.color;
			},function(value){
			this.input.color=value;
		});

		__getset(0,__proto,'font',function(){
			return this.input.font;
			},function(value){
			this.input.font=value;
		});

		__getset(0,__proto,'leading',function(){
			return this.input.leading;
			},function(value){
			this.input.leading=value;
		});

		__getset(0,__proto,'maxLength',function(){
			return this.input.maxChars;
			},function(value){
			this.input.maxChars=value;
		});

		__getset(0,__proto,'fontSize',function(){
			return this.input.fontSize;
			},function(value){
			this.input.fontSize=value;
		});

		__getset(0,__proto,'valign',function(){
			return this.input.valign;
			},function(value){
			this.input.valign=value;
		});

		__getset(0,__proto,'italic',function(){
			return this.input.italic;
			},function(value){
			this.input.italic=value;
		});

		__getset(0,__proto,'singleLine',function(){
			return !this.input.multiline;
			},function(value){
			this.input.multiline=!value;
		});

		__getset(0,__proto,'stroke',function(){
			return this.input.stroke;
			},function(value){
			this.input.stroke=value;
		});

		__getset(0,__proto,'strokeColor',function(){
			return this.input.strokeColor;
			},function(value){
			this.input.strokeColor=value;
			this.updateGear(4);
		});

		__getset(0,__proto,'keyboardType',function(){
			return this.input.type;
			},function(value){
			this.input.type=value;
		});

		__getset(0,__proto,'editable',function(){
			return this.input.editable;
			},function(value){
			this.input.editable=value;
		});

		__getset(0,__proto,'promptText',function(){
			return this.input.prompt;
			},function(value){
			this.input.prompt=value;
		});

		__getset(0,__proto,'restrict',function(){
			return this.input.restrict;
			},function(value){
			this.input.restrict=value;
		});

		__getset(0,__proto,'textWidth',function(){
			return this.input.textWidth;
		});

		return GTextInput;
	})(GTextField)


	//class laya.webgl.shader.d2.skinAnishader.SkinSV extends laya.webgl.shader.d2.value.Value2D
	var SkinSV=(function(_super){
		function SkinSV(type){
			this.texcoord=null;
			this.offsetX=300;
			this.offsetY=0;
			SkinSV.__super.call(this,0x200,0);
			var _vlen=8 *CONST3D2D.BYTES_PE;
			this.position=[2,0x1406,false,_vlen,0];
			this.texcoord=[2,0x1406,false,_vlen,2 *CONST3D2D.BYTES_PE];
			this.color=[4,0x1406,false,_vlen,4 *CONST3D2D.BYTES_PE];
		}

		__class(SkinSV,'laya.webgl.shader.d2.skinAnishader.SkinSV',_super);
		return SkinSV;
	})(Value2D)


	//class laya.webgl.shader.d2.value.Color2dSV extends laya.webgl.shader.d2.value.Value2D
	var Color2dSV=(function(_super){
		function Color2dSV(args){
			Color2dSV.__super.call(this,0x02,0);
			this.color=[];
		}

		__class(Color2dSV,'laya.webgl.shader.d2.value.Color2dSV',_super);
		var __proto=Color2dSV.prototype;
		__proto.setValue=function(value){
			value.fillStyle&&(this.color=value.fillStyle._color._color);
			value.strokeStyle&&(this.color=value.strokeStyle._color._color);
		}

		return Color2dSV;
	})(Value2D)


	//class laya.webgl.shader.d2.value.FillTextureSV extends laya.webgl.shader.d2.value.Value2D
	var FillTextureSV=(function(_super){
		function FillTextureSV(type){
			this.u_colorMatrix=null;
			this.strength=0;
			this.colorMat=null;
			this.colorAlpha=null;
			this.u_TexRange=[0,1,0,1];
			this.u_offset=[0,0];
			this.texcoord=Value2D._TEXCOORD;
			FillTextureSV.__super.call(this,0x100,0);
		}

		__class(FillTextureSV,'laya.webgl.shader.d2.value.FillTextureSV',_super);
		var __proto=FillTextureSV.prototype;
		//this.color=[4,WebGLContext.FLOAT,false,_vlen,4 *CONST3D2D.BYTES_PE];
		__proto.setValue=function(vo){
			this.ALPHA=vo.ALPHA;
			vo.filters && this.setFilters(vo.filters);
		}

		__proto.clear=function(){
			this.texture=null;
			this.shader=null;
			this.defines.setValue(0);
		}

		return FillTextureSV;
	})(Value2D)


	//class laya.webgl.shader.d2.value.TextureSV extends laya.webgl.shader.d2.value.Value2D
	var TextureSV=(function(_super){
		function TextureSV(subID){
			this.u_colorMatrix=null;
			this.strength=0;
			this.blurInfo=null;
			this.colorMat=null;
			this.colorAlpha=null;
			this.texcoord=Value2D._TEXCOORD;
			(subID===void 0)&& (subID=0);
			TextureSV.__super.call(this,0x01,subID);
		}

		__class(TextureSV,'laya.webgl.shader.d2.value.TextureSV',_super);
		var __proto=TextureSV.prototype;
		__proto.setValue=function(vo){
			this.ALPHA=vo.ALPHA;
			vo.filters && this.setFilters(vo.filters);
		}

		__proto.clear=function(){
			this.texture=null;
			this.shader=null;
			this.defines.setValue(0);
		}

		return TextureSV;
	})(Value2D)


	//class laya.webgl.shader.d2.value.PrimitiveSV extends laya.webgl.shader.d2.value.Value2D
	var PrimitiveSV=(function(_super){
		function PrimitiveSV(args){
			this.a_color=null;
			this.u_pos=[0,0];
			PrimitiveSV.__super.call(this,0x04,0);
			this.position=[2,0x1406,false,5 *CONST3D2D.BYTES_PE,0];
			this.a_color=[3,0x1406,false,5 *CONST3D2D.BYTES_PE,2 *CONST3D2D.BYTES_PE];
		}

		__class(PrimitiveSV,'laya.webgl.shader.d2.value.PrimitiveSV',_super);
		return PrimitiveSV;
	})(Value2D)


	//class core.BaseLoadingFileCommand extends robotLegs.command.BaseCommand
	var BaseLoadingFileCommand=(function(_super){
		function BaseLoadingFileCommand(){
			this.resManager=null;
			this.publicModel=null;
			this.gameUIBuilderBridge=null;
			this.__loadCommandVo=null;
			this.__label=null;
			BaseLoadingFileCommand.__super.call(this);
		}

		__class(BaseLoadingFileCommand,'core.BaseLoadingFileCommand',_super);
		var __proto=BaseLoadingFileCommand.prototype;
		/**
		*开始加载
		*@param _notificationVo
		*
		*/
		__proto.startLoad=function(_notificationVo){
			this.__loadCommandVo=_notificationVo.data;
			this.__loadCommandVo.mainUrl=this.resManager.serverUrl+"/ERROR_REPORT";
			for(var i=0;i < this.__loadCommandVo.fileArr.length;i++){
				var url=this.__loadCommandVo.fileArr[i].url;
				if(url.indexOf(".mp3")>-1){
					var nameArr=url.split("/");
					var mp3NameArr=nameArr[nameArr.length-1].split(".");
					var mp3Name=mp3NameArr[0];
					SoundCommand.soundUrlObj[mp3Name]=url;
				}
				this.__loadCommandVo.fileArr[i].url=this.resManager.getVersionUrl(url);
			}
			if(this.__loadCommandVo){
				switch(this.__loadCommandVo.loadingType){
					case "Loading_Page_Type":
						this.displayLoadingPage();
						break ;
					case "Tip_Type":
						this.displayTip();
						break ;
					case "Text_Type":
						this.displayTxt();
						break ;
					case "None_Type":
						break ;
					}
			}
			_super.prototype.startLoad.call(this,_notificationVo);
		}

		/**
		*整页都是加载
		*
		*/
		__proto.displayLoadingPage=function(){
			if(!BaseLoadingFileCommand.addBol){
				this.addPackage(GameUtil.Res_Loading_Package);
				BaseLoadingFileCommand.addBol=true;
			}
			this.viewClassMap.map(Loading,this.publicModel.loadingVo);
			this.gameUIBuilderBridge.showPage(GameUtil.PANEL_LOADING,StageUIModel.Layer_Middle);
		}

		/**
		*显示tip
		*
		*/
		__proto.displayTip=function(){}
		/**
		*显示txt
		*
		*/
		__proto.displayTxt=function(){
			this.__label=new Label();
			this.__label.text=BaseStaticFuncs.format(this.__loadCommandVo.textTemple,0);
			this.__label.color="#FFFFFF";
			this.__label.fontSize=20;
			this.__label.x=(GRoot.inst.width-this.__label.width)/ 2;
			this.__label.y=(GRoot.inst.height-this.__label.height)/ 2;
			GRoot.inst.displayObject.addChild(this.__label);
		}

		/**
		*加载进度
		*@param _progress
		*
		*/
		__proto.onProcess=function(_progress){
			_super.prototype.onProcess.call(this,_progress);
			if(this.__loadCommandVo){
				switch(this.__loadCommandVo.loadingType){
					case "Loading_Page_Type":
						this.loadingPageProgress(_progress);
						break ;
					case "Tip_Type":
						this.tipProgress(_progress);
						break ;
					case "Text_Type":
						this.txtProgress(_progress);
						break ;
					case "None_Type":
						break ;
					}
			}
		}

		/**
		*加载界面，显示的加载进度
		*@param _progress
		*
		*/
		__proto.loadingPageProgress=function(_progress){
			this.publicModel.loadingVo.progress=_progress;
			this.publicModel.loadingVo.status="Update_Progress_Status";
		}

		/**
		*tip的加载进度
		*@param _progress
		*
		*/
		__proto.tipProgress=function(_progress){}
		/**
		*文本的加载进度
		*@param _progress
		*
		*/
		__proto.txtProgress=function(_progress){
			this.__label.text=BaseStaticFuncs.format(this.__loadCommandVo.textTemple,Math.floor(_progress *100));
		}

		/**
		*加载完毕，进行一些数据处理
		*
		*/
		__proto.onLoaded=function(){
			if(this.__loadCommandVo){
				switch(this.__loadCommandVo.loadingType){
					case "Loading_Page_Type":
						this.publicModel.loadingVo.status="Remove_Status";
						this.viewClassMap.off(Loading);
						this.gameUIBuilderBridge.hidePage(GameUtil.PANEL_LOADING,true);
						break ;
					case "Tip_Type":
						this.stopTip();
						break ;
					case "Text_Type":
						this.__label.parent.removeChild(this.__label);
						this.__label=null;
						break ;
					case "None_Type":
						break ;
					}
			}
			this.__loadCommandVo=null;
			_super.prototype.onLoaded.call(this);
		}

		BaseLoadingFileCommand.addBol=false;
		return BaseLoadingFileCommand;
	})(BaseCommand)


	//class publics.c.BaseServerCommand extends robotLegs.command.BaseCommand
	var BaseServerCommand=(function(_super){
		function BaseServerCommand(){
			BaseServerCommand.__super.call(this);
		}

		__class(BaseServerCommand,'publics.c.BaseServerCommand',_super);
		var __proto=BaseServerCommand.prototype;
		__proto.sendHttpRequest=function(_url,_completeCmd,_errorCmd,_responseType,_postData,_getTypeBol,_heads,_progressCmd,_deleteBol,putBol){
			(_responseType===void 0)&& (_responseType="text");
			(_getTypeBol===void 0)&& (_getTypeBol=true);
			(_progressCmd===void 0)&& (_progressCmd="");
			(_deleteBol===void 0)&& (_deleteBol=false);
			(putBol===void 0)&& (putBol=false);
			var httpRequestVo=new HttpRequestVo();
			httpRequestVo.url=_url;
			httpRequestVo.completeBackCmd=_completeCmd;
			httpRequestVo.errorBackCmd=_errorCmd;
			httpRequestVo.responseType=_responseType;
			httpRequestVo.postData=_postData;
			httpRequestVo.headers=_heads;
			if(putBol){
				httpRequestVo.method="put";
			}
			else if(_deleteBol){
				httpRequestVo.method="delete";
			}
			else{
				if(_getTypeBol){
					httpRequestVo.method="get";
				}
				else{
					httpRequestVo.method="post";
				}
			}
			this.sendNotification("Request_Cmd",httpRequestVo);
		}

		return BaseServerCommand;
	})(BaseCommand)


	//class game.numberGame.c.NumberGamesBuilderCommand extends robotLegs.command.BaseCommand
	var NumberGamesBuilderCommand=(function(_super){
		function NumberGamesBuilderCommand(){
			this.playerInfoModel=null;
			this.numberGamesUIModel=null;
			this.numberGamesPlayerModel=null;
			this.numberGamesConfigModel=null;
			this.gameUIBuilderBridge=null;
			NumberGamesBuilderCommand.__super.call(this);
		}

		__class(NumberGamesBuilderCommand,'game.numberGame.c.NumberGamesBuilderCommand',_super);
		var __proto=NumberGamesBuilderCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Build_Number_Games_Cmd":{
						this.buildNumberGames();
						break ;
					}
				case "Start_Close_Number_Games_Cmd":{
						this.startCloseNumberGames();
						break ;
					}
				case "Play_Remove_Ani_Cmd":{
						this.playRemoveAni();
						break ;
					}
				case "Close_Number_Games_UI_Cmd":{
						this.closeNumberGames();
						break ;
					}
				case "Open_Video_Cmd":{
						this.openVideo();
						break ;
					}
				case "Close_Video_Cmd":{
						this.closeVideo();
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*建造数字彩票游戏
		*
		*/
		__proto.buildNumberGames=function(){
			this.injector.map(LotteryBet);
			this.commandMap.mapAll(NumberGamesServerCommand);
			this.commandMap.mapAll(NumberGamesMenuCommand);
			this.commandMap.mapAll(NumberGamesSelectNumberCommand);
			this.commandMap.mapAll(NumberGamesBetCommand);
			this.commandMap.mapAll(NumberGamesHistoryCommand);
			this.commandMap.mapAll(NumberGamesShuZiPanCommand);
			this.viewClassMap.map(NumberGames,this.numberGamesUIModel.numberGamesVo);
			this.viewClassMap.map(NumberGamesMenu,this.numberGamesUIModel.numberGamesVo.gameMenuVo);
			this.viewClassMap.map(NumberGamesResult,this.numberGamesUIModel.numberGamesVo.resultVo);
			this.viewClassMap.map(NumberGamesGameMenuMain,this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo);
			this.viewClassMap.map(NumberGameMenuCurrentGame,this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.currentGameVo);
			this.viewClassMap.map(NumberGameMenuGame,this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameMenuGameVo);
			this.viewClassMap.map(NumberGamesPlayTypeMenu,this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesPlayTypeMenuVo);
			this.viewClassMap.map(NumberGamesBet,this.numberGamesUIModel.numberGamesVo.betVo);
			this.viewClassMap.map(NumberGamesNumberKey,this.numberGamesUIModel.numberGamesVo.numberKeyVo);
			this.viewClassMap.map(LotterySelectNumber,this.numberGamesUIModel.numberGamesVo.selectNumberVo);
			this.viewClassMap.map(NumberGameChooseTypes,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo);
			this.viewClassMap.map(NumberGamesSelectNumberType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberTypeVo);
			this.viewClassMap.map(NumberGamesSelectNumberRXType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberRxTypeVo);
			this.viewClassMap.map(NumberGamesHelp,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.helpVo);
			this.viewClassMap.map(NumberGamesSpecialNumberTypes,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.specialNumberTypesVo);
			this.viewClassMap.map(NumberGamesDragonTigerTypes,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.dragonTigerTypesVo);
			this.viewClassMap.map(NumberGamesSelectBoxType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectBoxTypeVo);
			this.viewClassMap.map(NumberGamesZuXuanHeZhiType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.zuXuanHeZhiTypeVo);
			this.viewClassMap.map(NumberGamesDanTuo,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo);
			this.viewClassMap.map(PK10NumberGamesSelectNumberType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pk10SelectNumberTypeVo);
			this.viewClassMap.map(PK10DragonTiger,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pK10DragonTigerVo);
			this.viewClassMap.map(Hk6hSelectNumberType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hSelectNumberTypeVo);
			this.viewClassMap.map(NumberGamesSelectBSNumbers1,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.numberGamesSelectBSNumbersVoArr[0]);
			this.viewClassMap.map(NumberGamesSelectBSNumbers2,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.numberGamesSelectBSNumbersVoArr[1]);
			this.viewClassMap.map(NumberGamesSelectBSNumbers3,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.numberGamesSelectBSNumbersVoArr[2]);
			this.viewClassMap.map(NumberGamesSelectBSNumbers4,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.numberGamesSelectBSNumbersVoArr[3]);
			this.viewClassMap.map(NumberGamesSelectBSNumber);
			this.viewClassMap.map(SelectNumberInputType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputTypeVo);
			this.viewClassMap.map(SelectNumberInputRXType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputRxTypeVo);
			this.viewClassMap.map(NumberGamesSelectSXType,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hTmsxTypeVo);
			this.viewClassMap.map(NumberGamesKL8RX,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.kL8RXVo);
			this.viewClassMap.map(LotteryNumber2);
			this.viewClassMap.map(NumberGamesBetWindow,this.numberGamesUIModel.numberGamesVo.betWindowVo);
			this.viewClassMap.map(NumberGamesBetWindowMain,this.numberGamesUIModel.numberGamesVo.betWindowVo.betWindowMainVo);
			this.viewClassMap.map(NumberGamesBetResultWindow,this.numberGamesUIModel.numberGamesVo.betResultWindowVo);
			this.viewClassMap.map(NumberGamesBetResultWindowMain,this.numberGamesUIModel.numberGamesVo.betResultWindowVo.betResultWindowMainVo);
			this.viewClassMap.map(NumberGamesHistory,this.numberGamesUIModel.numberGamesVo.historyVo);
			this.viewClassMap.map(NumberGamesBetHistory,this.numberGamesUIModel.numberGamesVo.betHistoryVo);
			this.viewClassMap.map(NumberGamesBetHistoryMain,this.numberGamesUIModel.numberGamesVo.betHistoryVo.betHistoryMainVo);
			this.viewClassMap.map(CQSSCGameHistory,this.numberGamesUIModel.numberGamesVo.historyVo.cQSSCGameHistoryVo);
			this.viewClassMap.map(Fc3dGameHistory,this.numberGamesUIModel.numberGamesVo.historyVo.fc3dGameHistoryVo);
			this.viewClassMap.map(Jsk3GameHistory,this.numberGamesUIModel.numberGamesVo.historyVo.jsk3GameHistoryVo);
			this.viewClassMap.map(Bjpk10GameHistory,this.numberGamesUIModel.numberGamesVo.historyVo.bjpk10GameHistoryVo);
			this.viewClassMap.map(Bjkl8GameHistory,this.numberGamesUIModel.numberGamesVo.historyVo.bjkl8GameHistoryVo);
			this.viewClassMap.map(Hk6GameHistory,this.numberGamesUIModel.numberGamesVo.historyVo.hk6hGameHistoryVo);
			this.viewClassMap.map(KlsfGameHistory,this.numberGamesUIModel.numberGamesVo.historyVo.klsfGameHistoryVo);
			this.viewClassMap.map(NumberGamesK33THDX,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk33thdxVo);
			this.viewClassMap.map(NumberGamesK32THFX,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thfxVo);
			this.viewClassMap.map(NumberGamesK32THDX,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thdxVo);
			this.viewClassMap.map(ChooseNumberBtn);
			this.viewClassMap.map(NumberGamesZhuiHaoWindow,this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo);
			this.viewClassMap.map(NumberGamesZhuiHaoBetWindow,this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.betWindowVo);
			this.viewClassMap.map(NumberGamesZhuiHaoBetMain,this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.betWindowVo.betMainVo);
			this.viewClassMap.map(ShoppingCart,this.numberGamesUIModel.numberGamesVo.shoppingCartVo);
			this.viewClassMap.map(McBetRecordDetailPanel2,this.numberGamesUIModel.numberGamesVo.shoppingCartVo.mcBetRecordDetailPanel2Vo);
			this.viewClassMap.map(ShuZiPan,this.numberGamesUIModel.numberGamesVo.shuZiPanVo);
			this.viewClassMap.map(ShuZiPanMenu,this.numberGamesUIModel.numberGamesVo.shuZiPanVo.shuZiPanMenuVo);
			this.viewClassMap.map(ShuZiPanSelectNumbers,this.numberGamesUIModel.numberGamesVo.shuZiPanVo.selectNumbersVo);
			this.viewClassMap.map(ShuZiPanBet,this.numberGamesUIModel.numberGamesVo.shuZiPanVo.betVo);
			this.viewClassMap.map(ShuZiPanBetWindow,this.numberGamesUIModel.numberGamesVo.shuZiPanVo.betWindowVo);
			this.viewClassMap.map(ShuZiPanBetMain,this.numberGamesUIModel.numberGamesVo.shuZiPanVo.betWindowVo.betMainVo);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesGameMenuOneGame"),NumberGamesGameMenuOneGame);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesOnePlayType"),NumberGamesOnePlayType);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesOnePlayTypeBtn"),NumberGamesOnePlayTypeBtn);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","LotteryNumbers"),LotteryNumbers);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","PK10LotteryNumbers"),LotteryNumbers);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","LotteryNumber"),LotteryNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","LotteryNumber22"),LotteryNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","PK10LotteryNumber"),LotteryNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","PK10OneDragonTiger"),PK10OneDragonTiger);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Hk6hSelectNumbers"),Hk6hSelectNumbers);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Hk6hSelectNumberHong"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Hk6hSelectNumberLan"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Hk6hSelectNumberLv"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesOneDanTuo"),NumberGamesOneDanTuo);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumbers"),Hk6hSelectNumbers);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber1"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber2"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber3"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber4"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber5"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber6"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber7"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber8"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber9"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber10"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber11"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectSXNumber12"),Hk6hNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectBoxNumbers"),NumberGamesSelectBoxNumbers);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesSelectBoxNumber"),NumberGamesSelectBoxNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesZuXuanHeZhiNumbers"),NumberGamesZuXuanHeZhiNumbers);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","CQSSCOneGameHistory"),CQSSCOneGameHistory);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Fc3dOneGameHistory"),Fc3dOneGameHistory);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Jsk3OneGameHistory"),Jsk3OneGameHistory);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Bjpk10OneGameHistory"),Bjpk10OneGameHistory);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Bjkl8OneGameHistory"),Bjkl8OneGameHistory);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","Hk6OneGameHistory"),Hk6OneGameHistory);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","KlsfOneGameHistory"),KlsfOneGameHistory);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesOneBetHistory"),NumberGamesOneBetHistory);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesGameMenuOneGameType"),NumberGamesGameMenuOneGameType);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesKL8RXNumbers"),NumberGamesKL8RXNumbers);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesKL8RXNumber"),NumberGamesKL8RXNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesZhuiHaoOne"),NumberGamesZhuiHaoOne);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","NumberGamesZhuiHaoBetOne"),NumberGamesZhuiHaoBetOne);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShoppingCartOneBet"),ShoppingCartOneBet);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","OneShuZiPanMenuBtn"),OneShuZiPanMenuBtn);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber1"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber2"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber3"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber4"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber5_0"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber5_1"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber5_2"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber6_1"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber6_2"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber6_3"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber6_4"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber6_5"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber6_6"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber7_1"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber7_2"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber7_3"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber7_4"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber7_5"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneNumber7_6"),ShuZiPanOneNumber);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneType"),ShuZiPanOneType);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneType1"),ShuZiPanOneType1);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneType2"),ShuZiPanOneType2);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneType3"),ShuZiPanOneType3);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneType4"),ShuZiPanOneType4);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneType5"),ShuZiPanOneType5);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneType6"),ShuZiPanOneType6);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanOneType7"),ShuZiPanOneType7);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("Lottery","ShuZiPanBetWindowOneBet"),ShuZiPanBetWindowOneBet);
			this.gameUIBuilderBridge.openApp("Lottery",NumberGames);
			this.sendNotification("Get_Number_Games_Info_Cmd");
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.balance=this.playerInfoModel.playerInfoVo.user_balance;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.status="Update_Balance_Status";
		}

		__proto.startCloseNumberGames=function(){
			this.sendNotification("OPEN_PANEL_2_Cmd",GameUtil.PANEL_HALL);
			this.sendNotification("Play_Remove_Ani_Cmd");
		}

		/**
		*播放移除动画
		*
		*/
		__proto.playRemoveAni=function(){
			this.numberGamesUIModel.numberGamesVo.status="Remove_Ani_Status";
		}

		/**
		*打开美女视频
		*
		*/
		__proto.openVideo=function(){
			if(this.numberGamesPlayerModel.currentGameInfoVo.id !=124){
				return;
			}
			if(this.numberGamesUIModel.numberGamesVo.videoStatus==1)
				return;
			this.numberGamesUIModel.numberGamesVo.videoStatus=1;
			this.numberGamesUIModel.numberGamesVo.status="Update_Video_Staus";
		}

		/**
		*关闭美女视频
		*
		*/
		__proto.closeVideo=function(){
			this.numberGamesUIModel.numberGamesVo.videoStatus=0;
			this.numberGamesUIModel.numberGamesVo.status="Update_Video_Staus";
		}

		/**
		*关闭数字彩票
		*
		*/
		__proto.closeNumberGames=function(){
			this.numberGamesUIModel.numberGamesVo.status="Remove_Status";
			this.injector.off(LotteryBet);
			this.commandMap.offAll(NumberGamesServerCommand);
			this.commandMap.offAll(NumberGamesMenuCommand);
			this.commandMap.offAll(NumberGamesSelectNumberCommand);
			this.commandMap.offAll(NumberGamesBetCommand);
			this.commandMap.offAll(NumberGamesHistoryCommand);
			this.commandMap.offAll(NumberGamesShuZiPanCommand);
			this.viewClassMap.off(NumberGames);
			this.viewClassMap.off(NumberGamesMenu);
			this.viewClassMap.off(NumberGamesResult);
			this.viewClassMap.off(NumberGamesGameMenuMain);
			this.viewClassMap.off(NumberGameMenuCurrentGame);
			this.viewClassMap.off(NumberGameMenuGame);
			this.viewClassMap.off(NumberGamesPlayTypeMenu);
			this.viewClassMap.off(NumberGamesBet);
			this.viewClassMap.off(NumberGamesNumberKey);
			this.viewClassMap.off(LotterySelectNumber);
			this.viewClassMap.off(NumberGameChooseTypes);
			this.viewClassMap.off(NumberGamesSelectNumberType);
			this.viewClassMap.off(NumberGamesSelectNumberRXType);
			this.viewClassMap.off(NumberGamesDanTuo);
			this.viewClassMap.off(PK10NumberGamesSelectNumberType);
			this.viewClassMap.off(PK10DragonTiger);
			this.viewClassMap.off(Hk6hSelectNumberType);
			this.viewClassMap.off(NumberGamesSelectBSNumbers1);
			this.viewClassMap.off(NumberGamesSelectBSNumbers2);
			this.viewClassMap.off(NumberGamesSelectBSNumbers3);
			this.viewClassMap.off(NumberGamesSelectBSNumbers4);
			this.viewClassMap.off(NumberGamesSelectBSNumber);
			this.viewClassMap.off(NumberGamesSelectSXType);
			this.viewClassMap.off(LotteryNumber2);
			this.viewClassMap.off(SelectNumberInputType);
			this.viewClassMap.off(SelectNumberInputRXType);
			this.viewClassMap.off(NumberGamesHelp);
			this.viewClassMap.off(NumberGamesSpecialNumberTypes);
			this.viewClassMap.off(NumberGamesDragonTigerTypes);
			this.viewClassMap.off(NumberGamesSelectBoxType);
			this.viewClassMap.off(NumberGamesZuXuanHeZhiType);
			this.viewClassMap.off(NumberGamesK33THDX);
			this.viewClassMap.off(NumberGamesK32THFX);
			this.viewClassMap.off(NumberGamesK32THDX);
			this.viewClassMap.off(NumberGamesBetWindow);
			this.viewClassMap.off(NumberGamesBetWindowMain);
			this.viewClassMap.off(NumberGamesBetResultWindow);
			this.viewClassMap.off(NumberGamesBetResultWindowMain);
			this.viewClassMap.off(ChooseNumberBtn);
			this.viewClassMap.off(NumberGamesHistory);
			this.viewClassMap.off(NumberGamesBetHistory);
			this.viewClassMap.off(NumberGamesBetHistoryMain);
			this.viewClassMap.off(CQSSCGameHistory);
			this.viewClassMap.off(Fc3dGameHistory);
			this.viewClassMap.off(Jsk3GameHistory);
			this.viewClassMap.off(Bjpk10GameHistory);
			this.viewClassMap.off(Bjkl8OneGameHistory);
			this.viewClassMap.off(Hk6GameHistory);
			this.viewClassMap.off(KlsfGameHistory);
			this.viewClassMap.off(NumberGamesZhuiHaoWindow);
			this.viewClassMap.off(NumberGamesZhuiHaoBetMain);
			this.viewClassMap.off(NumberGamesZhuiHaoBetWindow);
			this.viewClassMap.off(ShoppingCart);
			this.viewClassMap.off(McBetRecordDetailPanel2);
			this.viewClassMap.off(ShuZiPan);
			this.viewClassMap.off(ShuZiPanMenu);
			this.viewClassMap.off(ShuZiPanSelectNumbers);
			this.viewClassMap.off(ShuZiPanBet);
			this.viewClassMap.off(ShuZiPanBetWindow);
			this.viewClassMap.off(ShuZiPanBetMain);
		}

		NumberGamesBuilderCommand.BUILD_NUMBER_GAMES_CMD="Build_Number_Games_Cmd";
		NumberGamesBuilderCommand.START_CLOSE_NUMBER_GAMES_CMD="Start_Close_Number_Games_Cmd";
		NumberGamesBuilderCommand.OPEN_VIDEO_CMD="Open_Video_Cmd";
		NumberGamesBuilderCommand.CLOSE_VIDEO_CMD="Close_Video_Cmd";
		NumberGamesBuilderCommand.PLAY_REMOVE_ANI_CMD="Play_Remove_Ani_Cmd";
		NumberGamesBuilderCommand.CLOSE_NUMBER_GAMES_UI_CMD="Close_Number_Games_UI_Cmd";
		return NumberGamesBuilderCommand;
	})(BaseCommand)


	//class game.numberGame.c.NumberGamesHistoryCommand extends robotLegs.command.BaseCommand
	var NumberGamesHistoryCommand=(function(_super){
		function NumberGamesHistoryCommand(){
			this.numberGamesUIModel=null;
			this.numberGamesPlayerModel=null;
			NumberGamesHistoryCommand.__super.call(this);
		}

		__class(NumberGamesHistoryCommand,'game.numberGame.c.NumberGamesHistoryCommand',_super);
		var __proto=NumberGamesHistoryCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Display_Number_Games_History_Cmd":{
						this.displayNumberGamesHistory();
						break ;
					}
				case "Display_Number_Games_Bet_History_Cmd":{
						this.displayBetHistory();
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*显示数字游戏的历史记录
		*
		*/
		__proto.displayNumberGamesHistory=function(){
			this.numberGamesUIModel.numberGamesVo.historyVo.baseGame=this.numberGamesPlayerModel.currentGameInfoVo.baseGame;
			this.numberGamesUIModel.numberGamesVo.historyVo.status="Display_History_Status";
			switch(this.numberGamesPlayerModel.currentGameInfoVo.baseGame){
				case "fc3d":
					this.numberGamesUIModel.numberGamesVo.historyVo.fc3dGameHistoryVo.status="Display_History_Status";
					break ;
				case "jsk3":
					this.numberGamesUIModel.numberGamesVo.historyVo.jsk3GameHistoryVo.status="Display_History_Status";
					break ;
				case "bjpk10":
					this.numberGamesUIModel.numberGamesVo.historyVo.bjpk10GameHistoryVo.status="Display_History_Status";
					break ;
				case "bjkl8":
					this.numberGamesUIModel.numberGamesVo.historyVo.bjkl8GameHistoryVo.status="Display_History_Status";
					break ;
				case "hk6":
					this.numberGamesUIModel.numberGamesVo.historyVo.hk6hGameHistoryVo.status="Display_History_Status";
					break ;
				case "gdklsf":
					this.numberGamesUIModel.numberGamesVo.historyVo.klsfGameHistoryVo.status="Display_History_Status";
					break ;
				default :
					this.numberGamesUIModel.numberGamesVo.historyVo.cQSSCGameHistoryVo.status="Display_History_Status";
					break ;
				}
		}

		/**
		*打开下注的历史纪录
		*
		*/
		__proto.displayBetHistory=function(){
			if(this.numberGamesUIModel.numberGamesVo.betHistoryVo.betHistoryMainVo.currentIndex==9){
				this.sendNotification("Hide_Iframe_Cmd");
				this.numberGamesUIModel.numberGamesVo.betHistoryVo.status="Open_Number_Games_Bet_History_Cmd";
			}
			this.numberGamesUIModel.numberGamesVo.betHistoryVo.betHistoryMainVo.status="Update_Bet_History_Status";
		}

		NumberGamesHistoryCommand.DISPLAY_NUMBER_GAMES_HISTORY_CMD="Display_Number_Games_History_Cmd";
		NumberGamesHistoryCommand.DISPLAY_NUMBER_GAMES_BET_HISTORY_CMD="Display_Number_Games_Bet_History_Cmd";
		return NumberGamesHistoryCommand;
	})(BaseCommand)


	//class game.numberGame.c.NumberGamesMenuCommand extends robotLegs.command.BaseCommand
	var NumberGamesMenuCommand=(function(_super){
		function NumberGamesMenuCommand(){
			this.playerInfoModel=null;
			this.resManager=null;
			this.numberGamesUIModel=null;
			this.numberGamesPlayerModel=null;
			this.numberGamesConfigModel=null;
			NumberGamesMenuCommand.__super.call(this);
		}

		__class(NumberGamesMenuCommand,'game.numberGame.c.NumberGamesMenuCommand',_super);
		var __proto=NumberGamesMenuCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Update_Game_Menu_List_Cmd":{
						this.updateGameMenuList();
						break ;
					}
				case "Open_Close_Game_Menu_Type_Cmd":{
						this.openOrCloseGameMenu(_notificationVo.data[0],_notificationVo.data[1]);
						break ;
					}
				case "Update_Play_Type_Menu_List_Cmd":{
						this.updatePlayTypeMenuList();
						break ;
					}
				case "Render_Play_Type_Menu_List_Cmd":{
						this.renderPlayTypeMenuList();
						break ;
					}
				case "Off_Play_Type_Menu_Cmd":{
						this.offPlayTypeMenu();
						break ;
					}
				case "Choose_One_Game_Cmd":{
						this.chooseOneGame(_notificationVo.data);
						break ;
					}
				case "Choose_One_Play_Type_Cmd":{
						this.choosePlayType(_notificationVo.data[0],_notificationVo.data[1]);
						break ;
					}
				case "Change_Result_Type_Cmd":{
						this.updateResultController();
						break ;
					}
				case "Hide_Menu_Cmd":{
						this.hideMenu();
						break ;
					}
				}
		}

		/**
		*更新游戏菜单列表
		*
		*/
		__proto.updateGameMenuList=function(){
			this.sendNotification("Hide_Iframe_Cmd");
			var menuOneGameTypeVoArr=this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameMenuGameVo.menuOneGameTypeVoArr;
			menuOneGameTypeVoArr.length=0;
			for(var i=0;i < this.numberGamesConfigModel.gamesInfoVoArr.length;i++){
				if(!DataMgr.get().numberGamePlayConfigData.data[this.numberGamesConfigModel.gamesInfoVoArr[i].id])
					continue ;
				if(!this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameActiveInfo[String(this.numberGamesConfigModel.gamesInfoVoArr[i].id)]){
					continue ;
				};
				var checkBol=false;
				var menuOneGameTypeVo=null;
				for(var ii=0;ii < menuOneGameTypeVoArr.length;ii++){
					if(menuOneGameTypeVoArr[ii].baseGame==this.numberGamesConfigModel.gamesInfoVoArr[i].baseGame){
						menuOneGameTypeVo=menuOneGameTypeVoArr[ii];
						break ;
					}
				}
				if(!menuOneGameTypeVo){
					menuOneGameTypeVo=new NumberGamesGameMenuOneGameTypeVo();
					menuOneGameTypeVoArr.push(menuOneGameTypeVo);
					menuOneGameTypeVo.baseGame=this.numberGamesConfigModel.gamesInfoVoArr[i].baseGame;
					switch(menuOneGameTypeVo.baseGame){
						case "bjkl8":
							menuOneGameTypeVo.lotteryType="北京快乐八";
							break ;
						case "bjpk10":
							menuOneGameTypeVo.lotteryType="北京Pk10";
							break ;
						case "cqssc":
							menuOneGameTypeVo.lotteryType="时时彩";
							break ;
						case "fc3d":
							menuOneGameTypeVo.lotteryType="3D";
							break ;
						case "gd11x5":
							menuOneGameTypeVo.lotteryType="11选5";
							break ;
						case "hk6":
							menuOneGameTypeVo.lotteryType="香港六合彩";
							break ;
						case "jsk3":
							menuOneGameTypeVo.lotteryType="快三";
							break ;
						case "ny90sssc":
							menuOneGameTypeVo.lotteryType="纽约1.5分彩";
							break ;
						case "gsklsf":
							menuOneGameTypeVo.lotteryType="广西快乐十分";
							break ;
						case "gdklsf":
							menuOneGameTypeVo.lotteryType="快乐十分";
							break ;
						case "twklb":
							menuOneGameTypeVo.lotteryType="台湾快乐8";
							break ;
						case "twpcdd":
							menuOneGameTypeVo.lotteryType="台湾pc蛋蛋";
							break ;
						case "ssq":
							menuOneGameTypeVo.lotteryType="时福彩双色球";
							break ;
						case "dlt":
							menuOneGameTypeVo.lotteryType="大乐透";
							break ;
						case "qlc":
							menuOneGameTypeVo.lotteryType="福彩七乐彩";
							break ;
						case "qxc":
							menuOneGameTypeVo.lotteryType="体彩七星彩";
							break ;
						}
				};
				var oneGame=new NumberGamesGameMenuOneGameVo();
				oneGame.gameName=this.numberGamesConfigModel.gamesInfoVoArr[i].name;
				oneGame.gameId=this.numberGamesConfigModel.gamesInfoVoArr[i].id;
				if(oneGame.gameId==this.numberGamesPlayerModel.currentGameInfoVo.id){
					oneGame.chooseIndex=1;
					menuOneGameTypeVo.openBol=true;
				}
				menuOneGameTypeVo.gameMenuOneGameVoArr.push(oneGame);
			}
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameMenuGameVo.status="Update_Status";
			var currentGameVo=this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.currentGameVo;
			currentGameVo.gameMenuOneGameArr.length=0;
			for(i=0;i < currentGameVo.currentGameIdArr.length;i++){
				for(ii=0;ii < this.numberGamesConfigModel.gamesInfoVoArr.length;ii++){
					if(currentGameVo.currentGameIdArr[i]==this.numberGamesConfigModel.gamesInfoVoArr[ii].id){
						var oneGame2=new NumberGamesGameMenuOneGameVo();
						oneGame2.gameName=this.numberGamesConfigModel.gamesInfoVoArr[ii].name;
						oneGame2.gameId=this.numberGamesConfigModel.gamesInfoVoArr[ii].id;
						currentGameVo.gameMenuOneGameArr.push(oneGame2);
						break ;
					}
				}
			}
			currentGameVo.status="Update_Status";
		}

		/**
		*打开或关闭游戏菜单
		*
		*/
		__proto.openOrCloseGameMenu=function(_baseGame,_openBol){
			var menuOneGameTypeVoArr=this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameMenuGameVo.menuOneGameTypeVoArr;
			var i=0;
			if(_openBol){
				for(i=0;i < menuOneGameTypeVoArr.length;i++){
					if(menuOneGameTypeVoArr[i].baseGame !=_baseGame){
						menuOneGameTypeVoArr[i].openBol=false;
					}
				}
			}
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameMenuGameVo.status="Update_Status";
		}

		/**
		*更新玩法菜单列表
		*
		*/
		__proto.updatePlayTypeMenuList=function(){
			this.sendNotification("Hide_Iframe_Cmd");
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesPlayTypeMenuVo.onePlayTypeVoArr.length=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentGameInfoVo.firstPlayTypeVoArr.length;i++){
				var onePlayTypeVo=new NumberGamesOnePlayTypeVo();
				onePlayTypeVo.playTypeName=this.numberGamesPlayerModel.currentGameInfoVo.firstPlayTypeVoArr[i].playTypeName;
				var secoundPlayTypeVoArr=this.numberGamesPlayerModel.currentGameInfoVo.firstPlayTypeVoArr[i].secoundPlayTypeVoArr;
				for(var ii=0;ii < secoundPlayTypeVoArr.length;ii++){
					if(!secoundPlayTypeVoArr[ii].openBol)
						continue ;
					var oneBtnVo=new NumberGamesOnePlayTypeBtnVo();
					oneBtnVo.playTypeName=secoundPlayTypeVoArr[ii].playTypeName;
					oneBtnVo.firstTypeName=onePlayTypeVo.playTypeName;
					oneBtnVo.checkId=secoundPlayTypeVoArr[ii].checkId;
					if(oneBtnVo.checkId==this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId){
						onePlayTypeVo.chooseBol=true;
						oneBtnVo.chooseBol=true;
					}
					else{
						oneBtnVo.chooseBol=false;
					}
					onePlayTypeVo.onePlayTypeBtnVoArr.push(oneBtnVo);
				}
				if(onePlayTypeVo.onePlayTypeBtnVoArr.length > 0)
					this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesPlayTypeMenuVo.onePlayTypeVoArr.push(onePlayTypeVo);
			}
			this.renderPlayTypeMenuList();
		}

		/**
		*重绘玩法列表菜单
		*
		*/
		__proto.renderPlayTypeMenuList=function(){
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesPlayTypeMenuVo.status="Render_Play_Type_Menu_Status";
		}

		/**
		*关闭所有玩法二级菜单
		*
		*/
		__proto.offPlayTypeMenu=function(){
			var onePlayTypeVoArr=this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesPlayTypeMenuVo.onePlayTypeVoArr;
			for(var i=0;i < onePlayTypeVoArr.length;i++){
				onePlayTypeVoArr[i].offBol=true;
				onePlayTypeVoArr[i].chooseBol=false;
			}
			this.renderPlayTypeMenuList();
		}

		/**
		*选中一款游戏
		*
		*/
		__proto.chooseOneGame=function(_gameId){
			if(!DataMgr.get().numberGamePlayConfigData.data[_gameId]){
				this.showAlert("游戏尚未开放");
				return;
			}
			if(!this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameActiveInfo){
				this.showAlert("稍等，正在获取配置信息。");
				return;
			}
			if(!this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameActiveInfo[String(_gameId)]){
				this.showAlert("游戏尚未开放");
				return;
			}
			for(var i=0;i < this.numberGamesConfigModel.gamesInfoVoArr.length;i++){
				if(this.numberGamesConfigModel.gamesInfoVoArr[i].id==_gameId){
					this.numberGamesPlayerModel.currentGameInfoVo=this.numberGamesConfigModel.gamesInfoVoArr[i];
					break ;
				}
			}
			this.numberGamesUIModel.numberGamesVo.resultVo.time="";
			this.numberGamesUIModel.numberGamesVo.resultVo.lastTime="";
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.betOneVoArr.length=0;
			this.sendNotification("Update_Shopping_Cart_Count_Cmd");
			this.chooseOneGameOrPlayType();
			this.sendNotification("Get_Number_Games_Play_Type_Cmd");
			this.updateResultController();
			if(this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.openShuZiBolObj[String(_gameId)]){
				this.numberGamesUIModel.numberGamesVo.shuZiPanIndex=0;
			}
			else{
				this.numberGamesUIModel.numberGamesVo.shuZiPanIndex=2;
			}
			this.numberGamesUIModel.numberGamesVo.status="Update_Bet_Type_Status";
			this.sendNotification("Change_Shu_Zi_Pan_Cmd",this.numberGamesUIModel.numberGamesVo.shuZiPanIndex);
		}

		/**
		*选中一个玩法
		*@param _playType
		*
		*/
		__proto.choosePlayType=function(_playTypeName,_checkId){
			var gameId=this.numberGamesPlayerModel.currentGameInfoVo.id;
			var firstPlayTypeIndex=0;
			var secoundPlayTypeIndex=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentGameInfoVo.firstPlayTypeVoArr.length;i++){
				if(_playTypeName==this.numberGamesPlayerModel.currentGameInfoVo.firstPlayTypeVoArr[i].playTypeName){
					this.numberGamesPlayerModel.currentFirstPlayTypeVo=this.numberGamesPlayerModel.currentGameInfoVo.firstPlayTypeVoArr[i];
					firstPlayTypeIndex=i;
					for(var ii=0;ii < this.numberGamesPlayerModel.currentFirstPlayTypeVo.secoundPlayTypeVoArr.length;ii++){
						if(this.numberGamesPlayerModel.currentFirstPlayTypeVo.secoundPlayTypeVoArr[ii].checkId==_checkId){
							secoundPlayTypeIndex=ii;
							this.numberGamesPlayerModel.currentSecoundPlayTypeVo=this.numberGamesPlayerModel.currentFirstPlayTypeVo.secoundPlayTypeVoArr[ii];
						}
					}
					break ;
				}
			}
			this.playerInfoModel.localInfo.savePlayTypeInfoObj([gameId,firstPlayTypeIndex,secoundPlayTypeIndex]);
			this.chooseOneGameOrPlayType();
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.specialNumberTypesVo.chooseValueArr.length=0;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pK10DragonTigerVo.chooseValueArr.length=0;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.dragonTigerTypesVo.chooseValueArr.length=0;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pk10SelectNumberTypeVo.chooseValueInfoArr.length=0;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectBoxTypeVo.chooseValueArr.length=0;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberTypeVo.chooseValueInfoArr.length=0;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.zuXuanHeZhiTypeVo.chooseValueArr.length=0;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo.chooseValueArr.length=0;
			this.sendNotification("Update_Number_Games_List_Cmd");
			this.sendNotification("Reset_Bet_Info_Cmd");
			this.sendNotification("Display_Iframe_Cmd");
		}

		/**
		*更新结果的样式
		*
		*/
		__proto.updateResultController=function(){
			if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="fc3d"){
				this.numberGamesUIModel.numberGamesVo.resultVo.resultControlIndex=1;
			}
			else if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="bjpk10"){
				this.numberGamesUIModel.numberGamesVo.resultVo.resultControlIndex=2;
			}
			else if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="hk6"){
				this.numberGamesUIModel.numberGamesVo.resultVo.resultControlIndex=3;
			}
			else if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="bjkl8"){
				this.numberGamesUIModel.numberGamesVo.resultVo.resultControlIndex=4;
			}
			else if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="jsk3"){
				this.numberGamesUIModel.numberGamesVo.resultVo.resultControlIndex=5;
			}
			else if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="gdklsf"){
				this.numberGamesUIModel.numberGamesVo.resultVo.resultControlIndex=6;
			}
			else{
				this.numberGamesUIModel.numberGamesVo.resultVo.resultControlIndex=0;
			}
			this.numberGamesUIModel.numberGamesVo.resultVo.gameId=String(this.numberGamesPlayerModel.currentGameInfoVo.id);
			this.numberGamesUIModel.numberGamesVo.resultVo.gameName=this.numberGamesPlayerModel.currentGameInfoVo.name;
			this.numberGamesUIModel.numberGamesVo.resultVo.status="Update_Result_Control_Status";
		}

		/**
		*选择游戏或玩法
		*
		*/
		__proto.chooseOneGameOrPlayType=function(){
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.status="Close_Menu_List_Status";
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gameName=this.numberGamesPlayerModel.currentGameInfoVo.name;
			if(this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName !=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playTypeName){
				this.numberGamesUIModel.numberGamesVo.gameMenuVo.playTypeName=this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName+"_"+this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playTypeName;
			}
			else{
				this.numberGamesUIModel.numberGamesVo.gameMenuVo.playTypeName=this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName;
			}
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.status="Update_Title_Status";
			this.offPlayTypeMenu();
			if(this.numberGamesPlayerModel.currentGameInfoVo.id==124){
				this.sendNotification("Open_Video_Cmd");
				this.sendNotification("Display_Iframe_Cmd");
			}
			else{
				this.sendNotification("Close_Video_Cmd");
			}
		}

		/**
		*隐藏菜单
		*
		*/
		__proto.hideMenu=function(){
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.status="Close_Menu_List_Status";
			this.sendNotification("Display_Iframe_Cmd");
		}

		NumberGamesMenuCommand.UPDATE_GAME_MENU_LIST_CMD="Update_Game_Menu_List_Cmd";
		NumberGamesMenuCommand.OPEN_CLOSE_GAME_MENU_TYPE_CMD="Open_Close_Game_Menu_Type_Cmd";
		NumberGamesMenuCommand.UPDATE_PLAY_TYPE_MENU_LIST_CMD="Update_Play_Type_Menu_List_Cmd";
		NumberGamesMenuCommand.RENDER_PLAY_TYPE_MENU_LIST_CMD="Render_Play_Type_Menu_List_Cmd";
		NumberGamesMenuCommand.OFF_PLAY_TYPE_MENU_CMD="Off_Play_Type_Menu_Cmd";
		NumberGamesMenuCommand.CHOOSE_ONE_GAME_CMD="Choose_One_Game_Cmd";
		NumberGamesMenuCommand.CHOOSE_PLAY_TYPE_CMD="Choose_One_Play_Type_Cmd";
		NumberGamesMenuCommand.CHANGE_RSULT_TYPE_CMD="Change_Result_Type_Cmd";
		NumberGamesMenuCommand.HIDE_MENU_CMD="Hide_Menu_Cmd";
		return NumberGamesMenuCommand;
	})(BaseCommand)


	//class game.numberGame.c.NumberGamesSelectNumberCommand extends robotLegs.command.BaseCommand
	var NumberGamesSelectNumberCommand=(function(_super){
		function NumberGamesSelectNumberCommand(){
			this.numberGamesConfigModel=null;
			this.numberGamesUIModel=null;
			this.numberGamesPlayerModel=null;
			this.lotteryBet=null;
			NumberGamesSelectNumberCommand.__super.call(this);
		}

		__class(NumberGamesSelectNumberCommand,'game.numberGame.c.NumberGamesSelectNumberCommand',_super);
		var __proto=NumberGamesSelectNumberCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Update_Number_Games_List_Cmd":{
						this.updateNumberGamesList();
						break ;
					}
				case "Choose_One_Number_Cmd":{
						this.chooseOneNumber(_notificationVo.data);
						break ;
					}
				case "Reset_Control_Btn_Cmd":{
						this.resetControlBtn();
						break ;
					}
				}
		}

		/**
		*更新数字游戏列表
		*
		*/
		__proto.updateNumberGamesList=function(){
			if(this.numberGamesConfigModel.digitalIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="digital";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="digital";
			}
			if(this.numberGamesConfigModel.renErZuXuanIdHeZhiArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="digitalrx";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="digitalrx";
			}
			else if(this.numberGamesConfigModel.pk10DigitalIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="pk10Digital";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="pk10Digital";
			}
			else if(this.numberGamesConfigModel.pk10DragonTigerArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="pk10DragonTiger";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="pk10DragonTiger";
			}
			else if(this.numberGamesConfigModel.selectBoxIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="selectBox";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="selectBox";
			}
			else if(this.numberGamesConfigModel.zuXuanHeZhiPlayIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="zuXuanHeZhi";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="zuXuanHeZhi";
			}
			else if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[0] && this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[0].indexOf("龙")>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="dragonTiger";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="dragonTiger";
			}
			else if(this.numberGamesConfigModel.danTuoIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="danTuo";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="danTuo";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo.maxDanMaCount=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId % 30;
				if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="jsk3")
					this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo.countIndex=1;
				else if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="gdklsf")
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo.countIndex=2;
				else
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo.countIndex=0;
			}
			else if(this.numberGamesConfigModel.hk6hDigitalIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="hk6hDigital";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="hk6hDigital";
			}
			else if(this.numberGamesConfigModel.tmsxIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="tmsx";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="tmsx";
			}
			else if(this.numberGamesConfigModel.tmbs1IdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="tmbs1";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="tmbs1";
			}
			else if(this.numberGamesConfigModel.tmbs2IdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="tmbs2";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="tmbs2";
			}
			else if(this.numberGamesConfigModel.tmbs3IdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="tmbs3";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="tmbs3";
			}
			else if(this.numberGamesConfigModel.tmbs4IdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="tmbs4";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="tmbs4";
			}
			else if(this.numberGamesConfigModel.inputIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="input";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="input";
			}
			else if(this.numberGamesConfigModel.inputRxIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="inputrx";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="inputrx";
			}
			else if(this.numberGamesConfigModel.bjkl8rx.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="bjkl8rx";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="bjkl8rx";
			}
			else if(this.numberGamesConfigModel.jsk33thdx.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="jsk33thdx";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="jsk33thdx";
			}
			else if(this.numberGamesConfigModel.jsk32thfx.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="jsk32thfx";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="jsk32thfx";
			}
			else if(this.numberGamesConfigModel.jsk32thdx.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType="jsk32thdx";
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType="jsk32thdx";
			}
			else{
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType;
			}
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.status="Update_Play_Type_Status";
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.helpVo.help=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.help;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.helpVo.how=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.how;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.helpVo.reward=String(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.reward);
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.helpVo.sample=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.sample;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.helpVo.status="Update_Status";
			switch(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType){
				case "pk10Digital":
				case "digital":{
						this.selectNumbers(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType);
						break ;
					}
				case "digitalrx":{
						this.selectNumbersRx();
						break ;
					}
				case "pk10DragonTiger":{
						this.pk10DragonTiger();
						break ;
					}
				case "sp_digital":{
						this.spSelectNumnbers();
						break ;
					}
				case "dragonTiger":{
						this.dragonTiger();
						break ;
					}
				case "selectBox":{
						this.selectBox();
						break ;
					}
				case "zuXuanHeZhi":{
						this.zuXuanHeZhi();
						break ;
					}
				case "danTuo":{
						this.danTuo();
						break ;
					}
				case "hk6hDigital":{
						this.hk6hDiagital();
						break ;
					}
				case "tmsx":{
						this.tmsx();
						break ;
					}
				case "tmbs1":{
						this.tmbs(0);
						break ;
					}
				case "tmbs2":{
						this.tmbs(1);
						break ;
					}
				case "tmbs3":{
						this.tmbs(2);
						break ;
					}
				case "tmbs4":{
						this.tmbs(3);
						break ;
					}
				case "input":{
						this.input();
						break ;
					}
				case "inputrx":{
						this.inputRx();
						break ;
					}
				case "bjkl8rx":{
						this.bjkl8rx();
						break ;
					}
				case "jsk33thdx":{
						this.jsk33thdx();
						break ;
					}
				case "jsk32thfx":{
						this.jsk32thfx();
						break ;
					}
				case "jsk32thdx":{
						this.jsk32thdx();
						break ;
					}
				default :{
						break ;
					}
				}
			this.saveStorage();
		}

		/**
		*存下最近玩的游戏的id
		*
		*/
		__proto.saveStorage=function(){
			var currentNumberGames=LocalStorage.getItem("currentNumberGamesIdArr");
			if(!currentNumberGames){
				currentNumberGames="[]";
			};
			var currentNumberGamesArr=JSON.parse(currentNumberGames);
			var arrIndex=currentNumberGamesArr.indexOf(this.numberGamesPlayerModel.currentGameInfoVo.id);
			if(arrIndex >-1){
				currentNumberGamesArr.splice(arrIndex,1);
			}
			currentNumberGamesArr.unshift(this.numberGamesPlayerModel.currentGameInfoVo.id);
			LocalStorage.setItem("currentNumberGamesIdArr",JSON.stringify(currentNumberGamesArr));
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.currentGameVo.currentGameIdArr=currentNumberGamesArr;
		}

		/**
		*组合选号
		*
		*/
		__proto.selectNumbers=function(_type){
			var lotteryNumbersVoArr;
			var selectNumberTypeVo;
			if(_type=="pk10Digital"){
				selectNumberTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pk10SelectNumberTypeVo;
				lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pk10SelectNumberTypeVo.lotteryNumbersVoArr;
			}
			else{
				lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberTypeVo.lotteryNumbersVoArr;
				selectNumberTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberTypeVo;
			}
			lotteryNumbersVoArr.length=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr.length;i++){
				var lotteryNumbersVo=new LotteryNumbersVo$1();
				if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length > 0)
					lotteryNumbersVo.numberCount=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length;
				lotteryNumbersVo.wei=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[i];
				lotteryNumbersVo.title=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.title;
				for(var ii=0;ii < lotteryNumbersVo.numberCount;ii++){
					var lotteryNumberVo=new LotteryNumberVo$1();
					lotteryNumberVo.chooseBol=false;
					lotteryNumberVo.value=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i][ii];
					if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="jsk3")
						lotteryNumberVo.skinIndex=1;
					lotteryNumbersVo.numberVoArr.push(lotteryNumberVo);
				}
				lotteryNumbersVoArr.push(lotteryNumbersVo);
			}
			selectNumberTypeVo.status="Update_List_Status";
		}

		//一般的数字彩票
		__proto.selectNumbersRx=function(){
			var lotteryNumbersVoArr;
			var selectNumberTypeVo;
			lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberRxTypeVo.lotteryNumbersVoArr;
			selectNumberTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberRxTypeVo;
			for(i=0;i < 5;i++){
				selectNumberTypeVo.weiArr[i]=1;
			}
			lotteryNumbersVoArr.length=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr.length;i++){
				var lotteryNumbersVo=new LotteryNumbersVo$1();
				if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length > 0)
					lotteryNumbersVo.numberCount=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length;
				lotteryNumbersVo.wei=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[i];
				lotteryNumbersVo.title=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.title;
				for(var ii=0;ii < lotteryNumbersVo.numberCount;ii++){
					var lotteryNumberVo=new LotteryNumberVo$1();
					lotteryNumberVo.chooseBol=false;
					lotteryNumberVo.value=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i][ii];
					lotteryNumbersVo.numberVoArr.push(lotteryNumberVo);
				}
				lotteryNumbersVoArr.push(lotteryNumbersVo);
			}
			selectNumberTypeVo.status="Update_List_Status";
		}

		/**
		*pk10龙虎
		*
		*/
		__proto.pk10DragonTiger=function(){
			var pK10DragonTigerVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pK10DragonTigerVo;
			for(var i=0;i < pK10DragonTigerVo.pK10OneDragonTigerVoArr.length;i++){
				pK10DragonTigerVo.pK10OneDragonTigerVoArr[i].title=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[i];
				pK10DragonTigerVo.pK10OneDragonTigerVoArr[i].value="";
			}
			pK10DragonTigerVo.status="Update_Status";
		}

		/**
		*组合特殊选号
		*
		*/
		__proto.spSelectNumnbers=function(){
			var specialNumberTypesVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.specialNumberTypesVo;
			for(var i=0;i < specialNumberTypesVo.chooseNumberBtnVoArr.length;i++){
				specialNumberTypesVo.chooseNumberBtnVoArr[i].chooseBol=false;
				specialNumberTypesVo.chooseNumberBtnVoArr[i].status="Update_Status";
			}
		}

		/**
		*组合龙虎
		*
		*/
		__proto.dragonTiger=function(){
			var dragonTigerTypesVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.dragonTigerTypesVo;
			for(var i=0;i < dragonTigerTypesVo.chooseNumberBtnVoArr.length;i++){
				dragonTigerTypesVo.chooseNumberBtnVoArr[i].chooseBol=false;
				dragonTigerTypesVo.chooseNumberBtnVoArr[i].status="Update_Status";
			}
		}

		/**
		*选择框
		*
		*/
		__proto.selectBox=function(){
			var selectBoxTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectBoxTypeVo;
			selectBoxTypeVo.boxNumbersVoArr.length=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr.length;i++){
				var lotteryNumbersVo=new NumberGamesSelectBoxNumbersVo();
				if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length > 0)
					lotteryNumbersVo.numberCount=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length;
				lotteryNumbersVo.title=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[i];
				if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="bjpk10" || this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="hk6"){
					lotteryNumbersVo.singleBol=true;
				}
				else{
					lotteryNumbersVo.singleBol=false;
				}
				for(var ii=0;ii < lotteryNumbersVo.numberCount;ii++){
					var lotteryNumberVo=new NumberGamesSelectBoxNumberVo();
					lotteryNumberVo.chooseBol=false;
					lotteryNumberVo.value=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i][ii];
					lotteryNumbersVo.lotteryNumbersVoArr.push(lotteryNumberVo);
				}
				selectBoxTypeVo.boxNumbersVoArr.push(lotteryNumbersVo);
			}
			selectBoxTypeVo.status="Update_List_Status";
		}

		/**
		*组选和值
		*
		*/
		__proto.zuXuanHeZhi=function(){
			var zuXuanHeZhiTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.zuXuanHeZhiTypeVo;
			zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr.length=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr.length;i++){
				var lotteryNumbersVo=new NumberGamesZuXuanHeZhiNumbersVo();
				if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length > 0)
					lotteryNumbersVo.numberCount=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length;
				lotteryNumbersVo.title=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[i];
				for(var ii=0;ii < lotteryNumbersVo.numberCount;ii++){
					var lotteryNumberVo=new NumberGamesZuXuanHeZhiNumberVo();
					lotteryNumberVo.chooseBol=false;
					lotteryNumberVo.value=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i][ii];
					lotteryNumbersVo.zuXuanHeZhiVoArr.push(lotteryNumberVo);
				}
				zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr.push(lotteryNumbersVo);
			}
			zuXuanHeZhiTypeVo.status="Update_List_Status";
		}

		/**
		*胆拖
		*
		*/
		__proto.danTuo=function(){
			var danTuoVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo;
			danTuoVo.chooseValueArr.length=0;
			danTuoVo.selectDanIndexArr.length=0;
			for(var i=0;i < 20;i++){
				danTuoVo.danMaNumberVoArr[i].chooseBol=false;
				danTuoVo.tuoMaNumberVoArr[i].chooseBol=false;
				if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="jsk3"){
					danTuoVo.danMaNumberVoArr[i].skinIndex=1;
					danTuoVo.tuoMaNumberVoArr[i].skinIndex=1;
				}
				else{
					danTuoVo.danMaNumberVoArr[i].skinIndex=0;
					danTuoVo.tuoMaNumberVoArr[i].skinIndex=0;
				}
			}
			danTuoVo.status="Update_All_Numbers_Status";
		}

		/**
		*香港六合彩
		*
		*/
		__proto.hk6hDiagital=function(){
			var hk6hSelectNumberTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hSelectNumberTypeVo;
			hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr.length=0;
			hk6hSelectNumberTypeVo.chooseValueArr.length=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr.length;i++){
				var lotteryNumbersVo=new NumberGamesZuXuanHeZhiNumbersVo();
				if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length > 0)
					lotteryNumbersVo.numberCount=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length;
				lotteryNumbersVo.title=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[i];
				for(var ii=0;ii < lotteryNumbersVo.numberCount;ii++){
					var lotteryNumberVo=new NumberGamesZuXuanHeZhiNumberVo();
					lotteryNumberVo.chooseBol=false;
					lotteryNumberVo.value=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i][ii];
					lotteryNumbersVo.zuXuanHeZhiVoArr.push(lotteryNumberVo);
				}
				hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr.push(lotteryNumbersVo);
			}
			hk6hSelectNumberTypeVo.status="Update_List_Status";
		}

		/**
		*生肖
		*
		*/
		__proto.tmsx=function(){
			var hk6hTmsxTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hTmsxTypeVo;
			hk6hTmsxTypeVo.zuXuanHeZhiNumbersVoArr.length=0;
			hk6hTmsxTypeVo.chooseValueArr.length=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr.length;i++){
				var lotteryNumbersVo=new NumberGamesZuXuanHeZhiNumbersVo();
				if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length > 0)
					lotteryNumbersVo.numberCount=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length;
				lotteryNumbersVo.title=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[i];
				for(var ii=0;ii < lotteryNumbersVo.numberCount;ii++){
					var lotteryNumberVo=new NumberGamesZuXuanHeZhiNumberVo();
					lotteryNumberVo.chooseBol=false;
					lotteryNumberVo.value=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i][ii];
					lotteryNumbersVo.zuXuanHeZhiVoArr.push(lotteryNumberVo);
				}
				hk6hTmsxTypeVo.zuXuanHeZhiNumbersVoArr.push(lotteryNumbersVo);
			}
			hk6hTmsxTypeVo.status="Update_List_Status";
		}

		/**
		*波色
		*
		*/
		__proto.tmbs=function(_index){
			var bSNumbersVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.numberGamesSelectBSNumbersVoArr[_index];
			bSNumbersVo.chooseValueArr.length=0;
			for(var i=0;i < this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr.length;i++){
				bSNumbersVo.title=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.oneListNameArr[i];
				for(var ii=0;ii < this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i].length;ii++){
					bSNumbersVo.numberGamesSelectBSNumberVoArr[ii].chooseBol=false;
					bSNumbersVo.numberGamesSelectBSNumberVoArr[ii].value=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.numberValueArr[i][ii];
					bSNumbersVo.numberGamesSelectBSNumberVoArr[ii].status="Update_Status";
				}
			}
		}

		/**
		*输入框
		*
		*/
		__proto.input=function(){
			var inputTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputTypeVo
			if(inputTypeVo.chooseValueArr)
				inputTypeVo.chooseValueArr.length=0;
			inputTypeVo.baseGame=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.baseGame;
			inputTypeVo.status="Reset_Status";
		}

		__proto.inputRx=function(){
			var inputTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputRxTypeVo
			if(inputTypeVo.chooseValueArr)
				inputTypeVo.chooseValueArr.length=0;
			for(var i=0;i < 5;i++){
				inputTypeVo.weiArr[i]=1;
			}
			inputTypeVo.baseGame=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.baseGame;
			inputTypeVo.status="Reset_Status";
		}

		/**
		*北京快乐8
		*
		*/
		__proto.bjkl8rx=function(){
			if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId==1){
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.kL8RXVo.maxCount=80;
			}
			else{
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.kL8RXVo.maxCount=8;
			}
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.kL8RXVo.status="Reset_Numbers_Status";
		}

		/**
		*江苏快33同号
		*
		*/
		__proto.jsk33thdx=function(){
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk33thdxVo.status="Reset_Numbers_Status";
		}

		__proto.jsk32thfx=function(){
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thfxVo.status="Reset_Numbers_Status";
		}

		__proto.jsk32thdx=function(){
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thdxVo.status="Reset_Numbers_Status";
		}

		/**
		*点选一个号码
		*
		*/
		__proto.chooseOneNumber=function(_value){
			var checkInfo;
			switch(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType){
				case "pk10Digital":
				case "digital":{
						checkInfo=this.checkDigital(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType);
						break ;
					}
				case "digitalrx":{
						checkInfo=this.checkDigitalRx();
						break ;
					}
				case "pk10DragonTiger":{
						checkInfo=this.checkPk10DragonTiger();
						break ;
					}
				case "sp_digital":{
						checkInfo=this.checkSpDigital();
						break ;
					}
				case "dragonTiger":{
						checkInfo=this.checkDragonTiger();
						break ;
					}
				case "selectBox":{
						checkInfo=this.checkSelectBox();
						break ;
					}
				case "zuXuanHeZhi":{
						checkInfo=this.checkZuXuanHeShi(_value[1].value);
						break ;
					}
				case "danTuo":{
						checkInfo=this.checkDaMa(_value);
						break ;
					}
				case "hk6hDigital":{
						checkInfo=this.checkHk6hDiagital();
						break ;
					}
				case "tmsx":{
						checkInfo=this.checkTmsx();
						break ;
					}
				case "tmbs1":{
						checkInfo=this.checkTmbs(0);
						break ;
					}
				case "tmbs2":{
						checkInfo=this.checkTmbs(1);
						break ;
					}
				case "tmbs3":{
						checkInfo=this.checkTmbs(2);
						break ;
					}
				case "tmbs4":{
						checkInfo=this.checkTmbs(3);
						break ;
					}
				case "input":{
						checkInfo=this.checkInput();
						break ;
					}
				case "inputrx":{
						checkInfo=this.checkInputRx();
						break ;
					}
				case "bjkl8rx":{
						checkInfo=this.checkBjkl8Rx();
						break ;
					}
				case "jsk33thdx":{
						checkInfo=this.checkJsK33thdx();
						break ;
					}
				case "jsk32thfx":{
						checkInfo=this.checkJsk32thfx();
						break ;
					}
				case "jsk32thdx":{
						checkInfo=this.checkJsk32thdx();
						break ;
					}
				default :{
						break ;
					}
				};
			var checkId=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId;
			var baseGame=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.baseGame;
			var count=this.lotteryBet.checkCount(baseGame,checkId,checkInfo);
			this.numberGamesUIModel.numberGamesVo.betVo.count=count;
			this.numberGamesUIModel.numberGamesVo.betVo.status="Update_Bet_Info_Status";
		}

		/**
		*检查普通选号
		*
		*/
		__proto.checkDigital=function(_type){
			var lotteryNumbersVoArr;
			if(_type=="pk10Digital"){
				lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pk10SelectNumberTypeVo.lotteryNumbersVoArr;
			}
			else{
				lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberTypeVo.lotteryNumbersVoArr;
			};
			var checkInfo=[];
			for(var i=0;i < lotteryNumbersVoArr.length;i++){
				var oneCheck=[];
				for(var ii=0;ii < lotteryNumbersVoArr[i].numberVoArr.length;ii++){
					if(lotteryNumbersVoArr[i].numberVoArr[ii].chooseBol){
						oneCheck.push(lotteryNumbersVoArr[i].numberVoArr[ii].value);
					}
				}
				checkInfo.push(oneCheck);
			}
			return checkInfo;
		}

		__proto.checkDigitalRx=function(){
			var lotteryNumbersVoArr;
			lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberRxTypeVo.lotteryNumbersVoArr;
			var checkInfo=[];
			for(var i=0;i < lotteryNumbersVoArr.length;i++){
				var oneCheck=[];
				for(var ii=0;ii < lotteryNumbersVoArr[i].numberVoArr.length;ii++){
					if(lotteryNumbersVoArr[i].numberVoArr[ii].chooseBol){
						oneCheck.push(lotteryNumbersVoArr[i].numberVoArr[ii].value);
					}
				}
				checkInfo.push(oneCheck);
			}
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberRxTypeVo.weiArr,checkInfo];
		}

		/**
		*选择的龙虎
		*@return
		*
		*/
		__proto.checkPk10DragonTiger=function(){
			var pK10DragonTigerVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pK10DragonTigerVo;
			pK10DragonTigerVo.chooseValueArr.length=0;
			for(var i=0;i < pK10DragonTigerVo.pK10OneDragonTigerVoArr.length;i++){
				var arr=[];
				if(pK10DragonTigerVo.pK10OneDragonTigerVoArr[i].value.length > 0)
					arr.push(pK10DragonTigerVo.pK10OneDragonTigerVoArr[i].value);
				pK10DragonTigerVo.chooseValueArr.push(arr);
			}
			return pK10DragonTigerVo.chooseValueArr;
		}

		/**
		*检查特殊
		*
		*/
		__proto.checkSpDigital=function(){
			var specialNumberTypesVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.specialNumberTypesVo;
			var chooseNumberBtnVoArr=specialNumberTypesVo.chooseNumberBtnVoArr;
			specialNumberTypesVo.chooseValueArr[0]=[];
			if(chooseNumberBtnVoArr[0].chooseBol){
				specialNumberTypesVo.chooseValueArr[0].push("three");
			}
			if(chooseNumberBtnVoArr[1].chooseBol){
				specialNumberTypesVo.chooseValueArr[0].push("straight");
			}
			if(chooseNumberBtnVoArr[2].chooseBol){
				specialNumberTypesVo.chooseValueArr[0].push("pair");
			}
			return specialNumberTypesVo.chooseValueArr;
		}

		/**
		*龙虎
		*@return
		*
		*/
		__proto.checkDragonTiger=function(){
			var dragonTigerTypesVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.dragonTigerTypesVo;
			dragonTigerTypesVo.chooseValueArr[0]=[];
			dragonTigerTypesVo.chooseValueArr[1]=[];
			for(var i=0;i < dragonTigerTypesVo.chooseNumberBtnVoArr.length;i++){
				if(!dragonTigerTypesVo.chooseNumberBtnVoArr[i].chooseBol)
					continue ;
				var arr
				if(i < 3){
					arr=dragonTigerTypesVo.chooseValueArr[0];
				}
				else{
					arr=dragonTigerTypesVo.chooseValueArr[1];
				}
				switch(i){
					case 0:{
							arr.push("dragon");
							break ;
						}
					case 1:{
							arr.push("tiger");
							break ;
						}
					case 2:{
							arr.push("tie");
							break ;
						}
					case 3:{
							arr.push("big");
							break ;
						}
					case 4:{
							arr.push("small");
							break ;
						}
					case 5:{
							arr.push("single");
							break ;
						}
					case 6:{
							arr.push("double");
							break ;
						}
					}
			}
			return dragonTigerTypesVo.chooseValueArr;
		}

		/**
		*大小单双
		*
		*/
		__proto.checkSelectBox=function(){
			var selectBoxTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectBoxTypeVo;
			selectBoxTypeVo.chooseValueArr.length=0;
			var i=0,ii=0;
			var name;
			if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="cqssc" || this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="fc3d"
				|| this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="bjpk10" || this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="hk6"
			|| (this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="jsk3" && this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId==12)){
				for(i=0;i < selectBoxTypeVo.boxNumbersVoArr.length;i++){
					var oneChooseArr=[];
					for(ii=0;ii < selectBoxTypeVo.boxNumbersVoArr[i].lotteryNumbersVoArr.length;ii++){
						if(!selectBoxTypeVo.boxNumbersVoArr[i].lotteryNumbersVoArr[ii].chooseBol)
							continue ;
						switch(selectBoxTypeVo.boxNumbersVoArr[i].lotteryNumbersVoArr[ii].value){
							case "大":{
									name="big";
									break ;
								}
							case "小":{
									name="small";
									break ;
								}
							case "单":{
									name="single";
									break ;
								}
							case "双":{
									name="double";
									break ;
								}
							case "小单":{
									name="small_single";
									break ;
								}
							case "小双":{
									name="small_double";
									break ;
								}
							case "大单":{
									name="big_single";
									break ;
								}
							case "大双":{
									name="big_double";
									break ;
								}
							case "特大":{
									name="s_big";
									break ;
								}
							case "特小":{
									name="s_small";
									break ;
								}
							case "特单":{
									name="s_single";
									break ;
								}
							case "特双":{
									name="s_double";
									break ;
								}
							case "特大单":{
									name="s_big_single";
									break ;
								}
							case "特小单":{
									name="s_small_single";
									break ;
								}
							case "特大双":{
									name="s_big_double";
									break ;
								}
							case "特小双":{
									name="s_small_double";
									break ;
								}
							case "特合大":{
									name="s_sum_big";
									break ;
								}
							case "特合小":{
									name="s_sum_small";
									break ;
								}
							case "特合单":{
									name="s_sum_single";
									break ;
								}
							case "特合双":{
									name="s_sum_double";
									break ;
								}
							case "特尾大":{
									name="s_tail_big";
									break ;
								}
							case "特尾小":{
									name="s_tail_small";
									break ;
								}
							}
						oneChooseArr.push(name);
					}
					selectBoxTypeVo.chooseValueArr.push(oneChooseArr);
				}
			}
			else if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="gd11x5" || this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="bjkl8"
			|| this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="jsk3"){
				for(i=0;i < selectBoxTypeVo.boxNumbersVoArr.length;i++){
					var oneChooseArr2=[];
					for(ii=0;ii < selectBoxTypeVo.boxNumbersVoArr[i].lotteryNumbersVoArr.length;ii++){
						if(!selectBoxTypeVo.boxNumbersVoArr[i].lotteryNumbersVoArr[ii].chooseBol){
							oneChooseArr2.push("0");
						}
						else{
							oneChooseArr2.push("1");
						}
					}
					selectBoxTypeVo.chooseValueArr.push(oneChooseArr2);
				}
			}
			else if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="gdklsf"){
				var oneChooseArr3=[];
				for(ii=0;ii < selectBoxTypeVo.boxNumbersVoArr[i].lotteryNumbersVoArr.length;ii++){
					if(!selectBoxTypeVo.boxNumbersVoArr[i].lotteryNumbersVoArr[ii].chooseBol)
						continue ;
					oneChooseArr3.push(selectBoxTypeVo.boxNumbersVoArr[i].lotteryNumbersVoArr[ii].value);
				}
				selectBoxTypeVo.chooseValueArr.push(oneChooseArr3);
			}
			return selectBoxTypeVo.chooseValueArr;
		}

		/**
		*组选和值
		*
		*/
		__proto.checkZuXuanHeShi=function(_value){
			var zuXuanHeZhiTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.zuXuanHeZhiTypeVo;
			if(this.numberGamesConfigModel.baoDanPlayIdArr.indexOf(Number(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId))>-1){
				for(var i=0;i < zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr.length;i++){
					var numberVo=zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i];
					if(numberVo.value==_value){
						numberVo.danBol=true;
						continue ;
					}
					if(numberVo.chooseBol){
						numberVo.chooseBol=false;
						continue ;
					}
				}
				zuXuanHeZhiTypeVo.status="Update_List_Status";
			}
			zuXuanHeZhiTypeVo.chooseValueArr.length=0;
			for(i=0;i < zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr.length;i++){
				var oneCheck=[];
				for(var ii=0;ii < zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr[i].zuXuanHeZhiVoArr.length;ii++){
					if(zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr[i].zuXuanHeZhiVoArr[ii].chooseBol){
						oneCheck.push(zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr[i].zuXuanHeZhiVoArr[ii].value);
					}
				}
				zuXuanHeZhiTypeVo.chooseValueArr.push(oneCheck);
			}
			return zuXuanHeZhiTypeVo.chooseValueArr;
		}

		/**
		*胆拖
		*@return
		*
		*/
		__proto.checkDaMa=function(_arr){
			var danTuoVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo;
			var i=0;
			if(_arr){
				var _lotteryNumber2Vo=_arr[1];
				var numberVoArr;
				if(_lotteryNumber2Vo.danBol){
					numberVoArr=danTuoVo.tuoMaNumberVoArr;
					if(_lotteryNumber2Vo.chooseBol){
						danTuoVo.selectDanIndexArr.push(_lotteryNumber2Vo.arrIndex);
					}
					else{
						for(i=0;i < danTuoVo.selectDanIndexArr.length;i++){
							if(danTuoVo.selectDanIndexArr[i]==_lotteryNumber2Vo.arrIndex){
								danTuoVo.selectDanIndexArr.splice(i,1);
								break ;
							}
						}
					}
				}
				else if(_lotteryNumber2Vo.tuoBol){
					numberVoArr=danTuoVo.danMaNumberVoArr;
					if(numberVoArr[_lotteryNumber2Vo.arrIndex]){
						for(i=0;i < danTuoVo.selectDanIndexArr.length;i++){
							if(danTuoVo.selectDanIndexArr[i]==_lotteryNumber2Vo.arrIndex){
								danTuoVo.selectDanIndexArr.splice(i,1);
								break ;
							}
						}
					}
				}
				numberVoArr[_lotteryNumber2Vo.arrIndex].chooseBol=false;
				if(danTuoVo.selectDanIndexArr.length > danTuoVo.maxDanMaCount){
					danTuoVo.danMaNumberVoArr[danTuoVo.selectDanIndexArr[0]].chooseBol=false;
					danTuoVo.selectDanIndexArr.splice(0,1);
				}
				danTuoVo.status="Update_All_Numbers_Status";
			}
			danTuoVo.chooseValueArr.length=0;
			danTuoVo.chooseValueArr[0]=[];
			var value;
			for(i=0;i < danTuoVo.danMaNumberVoArr.length;i++){
				if(danTuoVo.danMaNumberVoArr[i].chooseBol){
					if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame !="jsk3")
						value=danTuoVo.danMaNumberVoArr[i].value >=10 ? String(danTuoVo.danMaNumberVoArr[i].value):"0"+danTuoVo.danMaNumberVoArr[i].value;
					else
					value=danTuoVo.danMaNumberVoArr[i].value;
					danTuoVo.chooseValueArr[0].push(value);
				}
			}
			danTuoVo.chooseValueArr[1]=[];
			for(i=0;i < danTuoVo.tuoMaNumberVoArr.length;i++){
				if(danTuoVo.tuoMaNumberVoArr[i].chooseBol){
					if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame !="jsk3")
						value=danTuoVo.tuoMaNumberVoArr[i].value >=10 ? String(danTuoVo.tuoMaNumberVoArr[i].value):"0"+danTuoVo.tuoMaNumberVoArr[i].value;
					else
					value=danTuoVo.tuoMaNumberVoArr[i].value;
					danTuoVo.chooseValueArr[1].push(value);
				}
			}
			return danTuoVo.chooseValueArr;
		}

		/**
		*香港六合彩
		*@return
		*
		*/
		__proto.checkHk6hDiagital=function(){
			var hk6hSelectNumberTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hSelectNumberTypeVo;
			hk6hSelectNumberTypeVo.chooseValueArr.length=0;
			var chooseValueArr=[];
			if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId==11){
				chooseValueArr[0]=[];
			}
			hk6hSelectNumberTypeVo.chooseValueArr[0]=[]
			for(var i=0;i < hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr.length;i++){
				if(hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].chooseBol){
					hk6hSelectNumberTypeVo.chooseValueArr[0].push(hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].value);
					if(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId==11){
						chooseValueArr[0].push(hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].value);
					}
					else{
						chooseValueArr.push(hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].value);
					}
				}
			}
			return hk6hSelectNumberTypeVo.chooseValueArr;
		}

		/**
		*香港生肖
		*@return
		*
		*/
		__proto.checkTmsx=function(){
			var hk6hTmsxTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hTmsxTypeVo;
			hk6hTmsxTypeVo.chooseValueArr.length=0;
			var betValueObj={"鼠":"cz01","牛":"cz02","虎":"cz03","兔":"cz04",
				"龙":"cz05","蛇":"cz06","马":"cz07","羊":"cz08","猴":"cz09","鸡":"cz10","狗":"cz11","猪":"cz12"};
			hk6hTmsxTypeVo.chooseValueArr[0]=[]
			for(var i=0;i < hk6hTmsxTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr.length;i++){
				if(hk6hTmsxTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].chooseBol){
					var value=betValueObj[hk6hTmsxTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].value];
					hk6hTmsxTypeVo.chooseValueArr[0].push(value);
				}
			}
			return hk6hTmsxTypeVo.chooseValueArr;
		}

		/**
		*特码波色
		*@return
		*
		*/
		__proto.checkTmbs=function(_index){
			var bsNumbersVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.numberGamesSelectBSNumbersVoArr[_index];
			var betValueObj={
				"红波":"red","绿波":"green","蓝波":"blue",
				"红大":"red_big","红小":"red_small","绿大":"green_big","绿小":"green_small","蓝大":"blue_big","蓝小":"blue_small",
				"红单":"red_single","红双":"red_double","绿单":"green_single","绿双":"green_double","蓝单":"blue_single","蓝双":"blue_double",
				"红大单":"red_big_single","红小单":"red_small_single","红大双":"red_big_double","红小双":"red_small_double",
				"绿大单":"green_big_single","绿小单":"green_small_single","绿大双":"green_big_double","绿小双":"green_small_double",
				"蓝大单":"blue_big_single","蓝小单":"blue_small_single","蓝大双":"blue_big_double","蓝小双":"blue_small_double"
			};
			bsNumbersVo.chooseValueArr[0]=[];
			for(var i=0;i < bsNumbersVo.numberGamesSelectBSNumberVoArr.length;i++){
				if(bsNumbersVo.numberGamesSelectBSNumberVoArr[i].chooseBol){
					var value=betValueObj[bsNumbersVo.numberGamesSelectBSNumberVoArr[i].value];
					bsNumbersVo.chooseValueArr[0].push(value);
				}
			}
			return bsNumbersVo.chooseValueArr;
		}

		__proto.checkInput=function(){
			return this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputTypeVo.chooseValueArr;
		}

		__proto.checkInputRx=function(){
			return [ this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputRxTypeVo.weiArr,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputRxTypeVo.chooseValueArr]
		}

		__proto.checkBjkl8Rx=function(){
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.kL8RXVo.chooseValueArr.sort(sortNumber=function(_a,_b){
				return Number(_a)-Number(_b);
			});
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.kL8RXVo.chooseValueArr];
		}

		__proto.checkJsK33thdx=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk33thdxVo.chooseValueArr];
		}

		__proto.checkJsk32thfx=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thfxVo.chooseValueArr];
		}

		__proto.checkJsk32thdx=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thdxVo.chooseValueArr,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thdxVo.chooseValueArr2];
		}

		/**
		*重置操作按钮
		*
		*/
		__proto.resetControlBtn=function(){
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo.status="Reset_Control_Btn_Status";
		}

		NumberGamesSelectNumberCommand.UPDATE_NUMBER_GAMES_LIST_CMD="Update_Number_Games_List_Cmd";
		NumberGamesSelectNumberCommand.CHOOSE_ONE_NUMBER_CMD="Choose_One_Number_Cmd";
		NumberGamesSelectNumberCommand.RESET_CONTROL_BTN_CMD="Reset_Control_Btn_Cmd";
		return NumberGamesSelectNumberCommand;
	})(BaseCommand)


	//class game.numberGame.m.ui.bet.NumberGamesBetResultWindowMainVo extends robotLegs.vo.BaseViewVo
	var NumberGamesBetResultWindowMainVo=(function(_super){
		function NumberGamesBetResultWindowMainVo(){
			NumberGamesBetResultWindowMainVo.__super.call(this);
		}

		__class(NumberGamesBetResultWindowMainVo,'game.numberGame.m.ui.bet.NumberGamesBetResultWindowMainVo',_super);
		NumberGamesBetResultWindowMainVo.START_OPEN_STATUS="Start_Open_Status";
		return NumberGamesBetResultWindowMainVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.bet.NumberGamesBetResultWindowVo extends robotLegs.vo.BaseViewVo
	var NumberGamesBetResultWindowVo=(function(_super){
		function NumberGamesBetResultWindowVo(){
			this.betResultWindowMainVo=new NumberGamesBetResultWindowMainVo();
			NumberGamesBetResultWindowVo.__super.call(this);
		}

		__class(NumberGamesBetResultWindowVo,'game.numberGame.m.ui.bet.NumberGamesBetResultWindowVo',_super);
		NumberGamesBetResultWindowVo.OPEN_OR_CLOSE_STATUS="Open_Or_Close_Status";
		return NumberGamesBetResultWindowVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.bet.NumberGamesBetVo extends robotLegs.vo.BaseViewVo
	var NumberGamesBetVo=(function(_super){
		function NumberGamesBetVo(){
			this.count=0;
			this.onePrice=0;
			this.inputBei="1";
			this.bei=1;
			this.price=null;
			this.totalPrice=null;
			this.originalBonus=NaN;
			this.percentBonus=NaN;
			this.noPercentBonus=NaN;
			this.totalReward=NaN;
			this.chooseMoneyArr=null;
			this.chooseMoneyIndex=null;
			this.jiangJinModeCount=0;
			this.notMiaoMiaoStatus=0;
			this.betType=0;
			NumberGamesBetVo.__super.call(this);
		}

		__class(NumberGamesBetVo,'game.numberGame.m.ui.bet.NumberGamesBetVo',_super);
		NumberGamesBetVo.UPDATE_MIAO_MIAO_STATUS="UPDATE_MIAO_MIAO_STATUS";
		NumberGamesBetVo.INPUT_NUMBERS_STATUS="Input_Numbers_Status";
		NumberGamesBetVo.UPDATE_BET_MONEY_STATUS="Update_Bet_Money_Status";
		NumberGamesBetVo.UPDATE_BET_INFO_STATUS="Update_Bet_Info_Status";
		return NumberGamesBetVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.bet.NumberGamesBetWindowMainVo extends robotLegs.vo.BaseViewVo
	var NumberGamesBetWindowMainVo=(function(_super){
		function NumberGamesBetWindowMainVo(){
			this.name=null;
			this.playType=null;
			this.betValue=null;
			this.bei=null;
			this.totalPrice=null;
			this.help=null;
			NumberGamesBetWindowMainVo.__super.call(this);
		}

		__class(NumberGamesBetWindowMainVo,'game.numberGame.m.ui.bet.NumberGamesBetWindowMainVo',_super);
		NumberGamesBetWindowMainVo.DISPLAY_LOADING_STATUS="Display_Loading_Status";
		NumberGamesBetWindowMainVo.UPDATE_INFO_STATUS="Update_Info_Status";
		return NumberGamesBetWindowMainVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.bet.NumberGamesBetWindowVo extends robotLegs.vo.BaseViewVo
	var NumberGamesBetWindowVo=(function(_super){
		function NumberGamesBetWindowVo(){
			this.betWindowMainVo=new NumberGamesBetWindowMainVo();
			NumberGamesBetWindowVo.__super.call(this);
		}

		__class(NumberGamesBetWindowVo,'game.numberGame.m.ui.bet.NumberGamesBetWindowVo',_super);
		NumberGamesBetWindowVo.OPEN_OR_CLOSE_STATUS="Open_Or_Close_Status";
		return NumberGamesBetWindowVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.betHistory.NumberGamesBetHistoryMainVo extends robotLegs.vo.BaseViewVo
	var NumberGamesBetHistoryMainVo=(function(_super){
		function NumberGamesBetHistoryMainVo(){
			this.currentIndex=9;
			this.oneBetHistoryVoArr=[];
			this.getPageBolArr=[];
			NumberGamesBetHistoryMainVo.__super.call(this);
		}

		__class(NumberGamesBetHistoryMainVo,'game.numberGame.m.ui.betHistory.NumberGamesBetHistoryMainVo',_super);
		NumberGamesBetHistoryMainVo.UPDATE_BET_HISTORY_STATUS="Update_Bet_History_Status";
		return NumberGamesBetHistoryMainVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.betHistory.NumberGamesBetHistoryVo extends robotLegs.vo.BaseViewVo
	var NumberGamesBetHistoryVo=(function(_super){
		function NumberGamesBetHistoryVo(){
			this.betHistoryMainVo=new NumberGamesBetHistoryMainVo();
			NumberGamesBetHistoryVo.__super.call(this);
		}

		__class(NumberGamesBetHistoryVo,'game.numberGame.m.ui.betHistory.NumberGamesBetHistoryVo',_super);
		NumberGamesBetHistoryVo.OPEN_NUMBER_GAMES_BET_HISTORY_STATUS="Open_Number_Games_Bet_History_Cmd";
		return NumberGamesBetHistoryVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.history.GameHistoryVo extends robotLegs.vo.BaseViewVo
	var GameHistoryVo=(function(_super){
		function GameHistoryVo(){
			this.oneHistoryVoArr=[];
			GameHistoryVo.__super.call(this);
		}

		__class(GameHistoryVo,'game.numberGame.m.ui.history.GameHistoryVo',_super);
		GameHistoryVo.DISPLAY_HISTORY_STATUS="Display_History_Status";
		return GameHistoryVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.history.NumberGamesHistoryVo extends robotLegs.vo.BaseViewVo
	var NumberGamesHistoryVo=(function(_super){
		function NumberGamesHistoryVo(){
			this.baseGame=null;
			this.cQSSCGameHistoryVo=new GameHistoryVo();
			this.fc3dGameHistoryVo=new GameHistoryVo();
			this.jsk3GameHistoryVo=new GameHistoryVo();
			this.bjpk10GameHistoryVo=new GameHistoryVo();
			this.bjkl8GameHistoryVo=new GameHistoryVo();
			this.hk6hGameHistoryVo=new GameHistoryVo();
			this.klsfGameHistoryVo=new GameHistoryVo();
			NumberGamesHistoryVo.__super.call(this);
		}

		__class(NumberGamesHistoryVo,'game.numberGame.m.ui.history.NumberGamesHistoryVo',_super);
		NumberGamesHistoryVo.DISPLAY_HISTORY_STATUS="Display_History_Status";
		return NumberGamesHistoryVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.menu.game.NumberGameMenuCurrentGameVo extends robotLegs.vo.BaseViewVo
	var NumberGameMenuCurrentGameVo=(function(_super){
		function NumberGameMenuCurrentGameVo(){
			this.currentGameIdArr=null;
			this.gameMenuOneGameArr=[];
			NumberGameMenuCurrentGameVo.__super.call(this);
		}

		__class(NumberGameMenuCurrentGameVo,'game.numberGame.m.ui.menu.game.NumberGameMenuCurrentGameVo',_super);
		NumberGameMenuCurrentGameVo.UPDATE_STATUS="Update_Status";
		return NumberGameMenuCurrentGameVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.menu.game.NumberGameMenuGameVo extends robotLegs.vo.BaseViewVo
	var NumberGameMenuGameVo=(function(_super){
		function NumberGameMenuGameVo(){
			this.menuOneGameTypeVoArr=[];
			NumberGameMenuGameVo.__super.call(this);
		}

		__class(NumberGameMenuGameVo,'game.numberGame.m.ui.menu.game.NumberGameMenuGameVo',_super);
		NumberGameMenuGameVo.UPDATE_STATUS="Update_Status";
		return NumberGameMenuGameVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.menu.game.NumberGamesGameMenuMainVo extends robotLegs.vo.BaseViewVo
	var NumberGamesGameMenuMainVo=(function(_super){
		function NumberGamesGameMenuMainVo(){
			this.gameActiveInfo=null;
			this.openShuZiBolObj=null;
			this.currentGameVo=new NumberGameMenuCurrentGameVo();
			this.gameMenuGameVo=new NumberGameMenuGameVo();
			NumberGamesGameMenuMainVo.__super.call(this);
		}

		__class(NumberGamesGameMenuMainVo,'game.numberGame.m.ui.menu.game.NumberGamesGameMenuMainVo',_super);
		return NumberGamesGameMenuMainVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.menu.NumberGamesMenuVo extends robotLegs.vo.BaseViewVo
	var NumberGamesMenuVo=(function(_super){
		function NumberGamesMenuVo(){
			this.gameName=null;
			this.playTypeName=null;
			this.hideOrDisplayIndex=0;
			this.gamesGameMenuVo=new NumberGamesGameMenuMainVo();
			this.gamesPlayTypeMenuVo=new NumberGamesPlayTypeMenuVo();
			NumberGamesMenuVo.__super.call(this);
		}

		__class(NumberGamesMenuVo,'game.numberGame.m.ui.menu.NumberGamesMenuVo',_super);
		NumberGamesMenuVo.UPDATE_TITLE_STATUS="Update_Title_Status";
		NumberGamesMenuVo.CLOSE_MENU_LIST_STATUS="Close_Menu_List_Status";
		NumberGamesMenuVo.HIDE_OR_DISPLAY_PLAY_TYPE_STATUS="Hide_Or_Display_Play_Type_Status";
		return NumberGamesMenuVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.menu.playType.NumberGamesPlayTypeMenuVo extends robotLegs.vo.BaseViewVo
	var NumberGamesPlayTypeMenuVo=(function(_super){
		function NumberGamesPlayTypeMenuVo(){
			this.onePlayTypeVoArr=[];
			NumberGamesPlayTypeMenuVo.__super.call(this);
		}

		__class(NumberGamesPlayTypeMenuVo,'game.numberGame.m.ui.menu.playType.NumberGamesPlayTypeMenuVo',_super);
		NumberGamesPlayTypeMenuVo.RENDER_PLAY_TYPE_MENU_STATUS="Render_Play_Type_Menu_Status";
		return NumberGamesPlayTypeMenuVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.boxType.NumberGamesSelectBoxTypeVo extends robotLegs.vo.BaseViewVo
	var NumberGamesSelectBoxTypeVo=(function(_super){
		function NumberGamesSelectBoxTypeVo(){
			this.boxNumbersVoArr=[];
			this.chooseValueArr=[];
			NumberGamesSelectBoxTypeVo.__super.call(this);
		}

		__class(NumberGamesSelectBoxTypeVo,'game.numberGame.m.ui.number.boxType.NumberGamesSelectBoxTypeVo',_super);
		NumberGamesSelectBoxTypeVo.UPDATE_LIST_STATUS="Update_List_Status";
		return NumberGamesSelectBoxTypeVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.bs.NumberGamesSelectBSNumbersVo extends robotLegs.vo.BaseViewVo
	var NumberGamesSelectBSNumbersVo=(function(_super){
		function NumberGamesSelectBSNumbersVo(){
			this.title=null;
			this.numberGamesSelectBSNumberVoArr=[];
			this.chooseValueArr=[];
			NumberGamesSelectBSNumbersVo.__super.call(this);
			for(var i=0;i < 12;i++){
				this.numberGamesSelectBSNumberVoArr.push(new NumberGamesSelectBSNumberVo());
			}
		}

		__class(NumberGamesSelectBSNumbersVo,'game.numberGame.m.ui.number.bs.NumberGamesSelectBSNumbersVo',_super);
		return NumberGamesSelectBSNumbersVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.bs.NumberGamesSelectBSNumberVo extends robotLegs.vo.BaseViewVo
	var NumberGamesSelectBSNumberVo=(function(_super){
		function NumberGamesSelectBSNumberVo(){
			this.chooseBol=false;
			this.value=null;
			NumberGamesSelectBSNumberVo.__super.call(this);
		}

		__class(NumberGamesSelectBSNumberVo,'game.numberGame.m.ui.number.bs.NumberGamesSelectBSNumberVo',_super);
		NumberGamesSelectBSNumberVo.UPDATE_STATUS="Update_Status";
		return NumberGamesSelectBSNumberVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.danTuo.LotteryNumber2Vo extends robotLegs.vo.BaseViewVo
	var LotteryNumber2Vo=(function(_super){
		function LotteryNumber2Vo(){
			this.arrIndex=0;
			this.chooseBol=false;
			this.value=0;
			this.danBol=false;
			this.tuoBol=false;
			this.skinIndex=0;
			LotteryNumber2Vo.__super.call(this);
		}

		__class(LotteryNumber2Vo,'game.numberGame.m.ui.number.danTuo.LotteryNumber2Vo',_super);
		return LotteryNumber2Vo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.danTuo.NumberGamesDanTuoVo extends robotLegs.vo.BaseViewVo
	var NumberGamesDanTuoVo=(function(_super){
		function NumberGamesDanTuoVo(){
			this.countIndex=0;
			this.maxDanMaCount=0;
			this.danMaNumberVoArr=[];
			this.tuoMaNumberVoArr=[];
			this.chooseValueArr=[];
			this.selectDanIndexArr=[];
			NumberGamesDanTuoVo.__super.call(this);
			for(var i=0;i < 20;i++){
				this.danMaNumberVoArr.push(new LotteryNumber2Vo());
				this.danMaNumberVoArr[i].danBol=true;
				this.danMaNumberVoArr[i].value=i+1;
				this.danMaNumberVoArr[i].arrIndex=i;
				this.tuoMaNumberVoArr.push(new LotteryNumber2Vo());
				this.tuoMaNumberVoArr[i].tuoBol=true;
				this.tuoMaNumberVoArr[i].arrIndex=i;
				this.tuoMaNumberVoArr[i].value=i+1;
			}
		}

		__class(NumberGamesDanTuoVo,'game.numberGame.m.ui.number.danTuo.NumberGamesDanTuoVo',_super);
		NumberGamesDanTuoVo.UPDATE_ALL_NUMBERS_STATUS="Update_All_Numbers_Status";
		NumberGamesDanTuoVo.RESET_CONTROL_BTN_STATUS="Reset_Control_Btn_Status";
		return NumberGamesDanTuoVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.dragonTiger.NumberGamesDragonTigerTypesVo extends robotLegs.vo.BaseViewVo
	var NumberGamesDragonTigerTypesVo=(function(_super){
		function NumberGamesDragonTigerTypesVo(){
			this.chooseNumberBtnVoArr=[];
			this.chooseValueArr=[];
			NumberGamesDragonTigerTypesVo.__super.call(this);
			for(var i=0;i < 7;i++){
				this.chooseNumberBtnVoArr.push(new ChooseNumberBtnVo());
			}
		}

		__class(NumberGamesDragonTigerTypesVo,'game.numberGame.m.ui.number.dragonTiger.NumberGamesDragonTigerTypesVo',_super);
		return NumberGamesDragonTigerTypesVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.help.NumberGamesHelpVo extends robotLegs.vo.BaseViewVo
	var NumberGamesHelpVo=(function(_super){
		function NumberGamesHelpVo(){
			this.help=null;
			this.how=null;
			this.reward=null;
			this.sample=null;
			NumberGamesHelpVo.__super.call(this);
		}

		__class(NumberGamesHelpVo,'game.numberGame.m.ui.number.help.NumberGamesHelpVo',_super);
		NumberGamesHelpVo.UPDATE_STATUS="Update_Status";
		return NumberGamesHelpVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.input.SelectNumberInputTypeVo extends robotLegs.vo.BaseViewVo
	var SelectNumberInputTypeVo=(function(_super){
		function SelectNumberInputTypeVo(){
			this.baseGame=null;
			this.chooseValueArr=null;
			this.weiArr=[];
			SelectNumberInputTypeVo.__super.call(this);
		}

		__class(SelectNumberInputTypeVo,'game.numberGame.m.ui.number.input.SelectNumberInputTypeVo',_super);
		SelectNumberInputTypeVo.RESET_STATUS="Reset_Status";
		return SelectNumberInputTypeVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.k3.Jsk33thdxVo extends robotLegs.vo.BaseViewVo
	var Jsk33thdxVo=(function(_super){
		function Jsk33thdxVo(){
			this.chooseValueArr=[];
			this.chooseValueArr2=[];
			Jsk33thdxVo.__super.call(this);
		}

		__class(Jsk33thdxVo,'game.numberGame.m.ui.number.k3.Jsk33thdxVo',_super);
		Jsk33thdxVo.RESET_NUMBERS_SATUS="Reset_Numbers_Status";
		return Jsk33thdxVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.kl8rx.NumberGamesKL8RXVo extends robotLegs.vo.BaseViewVo
	var NumberGamesKL8RXVo=(function(_super){
		function NumberGamesKL8RXVo(){
			this.maxCount=0;
			this.chooseValueArr=[];
			NumberGamesKL8RXVo.__super.call(this);
		}

		__class(NumberGamesKL8RXVo,'game.numberGame.m.ui.number.kl8rx.NumberGamesKL8RXVo',_super);
		NumberGamesKL8RXVo.RESET_NUMBERS_SATUS="Reset_Numbers_Status";
		return NumberGamesKL8RXVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.LotterySelectNumberVo extends robotLegs.vo.BaseViewVo
	var LotterySelectNumberVo=(function(_super){
		function LotterySelectNumberVo(){
			this.shoppingCartCount=0;
			this.balance=NaN;
			this.chooseTypesVo=new NumberGameChooseTypesVo();
			LotterySelectNumberVo.__super.call(this);
		}

		__class(LotterySelectNumberVo,'game.numberGame.m.ui.number.LotterySelectNumberVo',_super);
		LotterySelectNumberVo.UPDATE_SHOPPING_CART_COUNT_STATUS="Update_Shopping_Cart_Count_Status";
		LotterySelectNumberVo.UPDATE_BALANCE_STATUS="Update_Balance_Status";
		return LotterySelectNumberVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.NumberGameChooseTypesVo extends robotLegs.vo.BaseViewVo
	var NumberGameChooseTypesVo=(function(_super){
		function NumberGameChooseTypesVo(){
			this.playType=null;
			this.helpVo=new NumberGamesHelpVo();
			this.selectNumberTypeVo=new NumberGamesSelectNumberTypeVo();
			this.selectNumberRxTypeVo=new NumberGamesSelectNumberTypeVo();
			this.pk10SelectNumberTypeVo=new NumberGamesSelectNumberTypeVo();
			this.pK10DragonTigerVo=new PK10DragonTigerVo();
			this.hk6hSelectNumberTypeVo=new NumberGamesZuXuanHeZhiTypeVo();
			this.hk6hTmsxTypeVo=new NumberGamesZuXuanHeZhiTypeVo();
			this.numberGamesSelectBSNumbersVoArr=[];
			this.specialNumberTypesVo=new NumberGamesSpecialNumberTypesVo();
			this.dragonTigerTypesVo=new NumberGamesDragonTigerTypesVo();
			this.selectBoxTypeVo=new NumberGamesSelectBoxTypeVo();
			this.zuXuanHeZhiTypeVo=new NumberGamesZuXuanHeZhiTypeVo();
			this.danTuoVo=new NumberGamesDanTuoVo();
			this.inputTypeVo=new SelectNumberInputTypeVo();
			this.inputRxTypeVo=new SelectNumberInputTypeVo();
			this.kL8RXVo=new NumberGamesKL8RXVo();
			this.jsk33thdxVo=new Jsk33thdxVo();
			this.jsk32thfxVo=new Jsk33thdxVo();
			this.jsk32thdxVo=new Jsk33thdxVo();
			NumberGameChooseTypesVo.__super.call(this);
			for(var i=0;i < 4;i++){
				this.numberGamesSelectBSNumbersVoArr.push(new NumberGamesSelectBSNumbersVo());
			}
		}

		__class(NumberGameChooseTypesVo,'game.numberGame.m.ui.number.NumberGameChooseTypesVo',_super);
		NumberGameChooseTypesVo.UPDATE_PLAY_TYPE_STATUS="Update_Play_Type_Status";
		return NumberGameChooseTypesVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.numbersType.NumberGamesSelectNumberTypeVo extends robotLegs.vo.BaseViewVo
	var NumberGamesSelectNumberTypeVo=(function(_super){
		function NumberGamesSelectNumberTypeVo(){
			this.lotteryNumbersVoArr=[];
			this.weiArr=[];
			this.chooseValueInfoArr=[];
			NumberGamesSelectNumberTypeVo.__super.call(this);
		}

		__class(NumberGamesSelectNumberTypeVo,'game.numberGame.m.ui.number.numbersType.NumberGamesSelectNumberTypeVo',_super);
		NumberGamesSelectNumberTypeVo.UPDATE_LIST_STATUS="Update_List_Status";
		return NumberGamesSelectNumberTypeVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.pk10DragonTiger.PK10DragonTigerVo extends robotLegs.vo.BaseViewVo
	var PK10DragonTigerVo=(function(_super){
		function PK10DragonTigerVo(){
			this.pK10OneDragonTigerVoArr=[];
			this.chooseValueArr=[];
			PK10DragonTigerVo.__super.call(this);
			for(var i=0;i < 5;i++){
				this.pK10OneDragonTigerVoArr.push(new PK10OneDragonTigerVo());
			}
		}

		__class(PK10DragonTigerVo,'game.numberGame.m.ui.number.pk10DragonTiger.PK10DragonTigerVo',_super);
		PK10DragonTigerVo.UPDATE_STATUS="Update_Status";
		return PK10DragonTigerVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.publics.ChooseNumberBtnVo extends robotLegs.vo.BaseViewVo
	var ChooseNumberBtnVo=(function(_super){
		function ChooseNumberBtnVo(){
			this.chooseBol
			ChooseNumberBtnVo.__super.call(this);
		}

		__class(ChooseNumberBtnVo,'game.numberGame.m.ui.number.publics.ChooseNumberBtnVo',_super);
		ChooseNumberBtnVo.UPDATE_STATUS="Update_Status";
		return ChooseNumberBtnVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.specialNumberType.NumberGamesSpecialNumberTypesVo extends robotLegs.vo.BaseViewVo
	var NumberGamesSpecialNumberTypesVo=(function(_super){
		function NumberGamesSpecialNumberTypesVo(){
			this.chooseNumberBtnVoArr=[];
			this.chooseValueArr=[];
			NumberGamesSpecialNumberTypesVo.__super.call(this);
			for(var i=0;i < 3;i++){
				this.chooseNumberBtnVoArr.push(new ChooseNumberBtnVo());
			}
		}

		__class(NumberGamesSpecialNumberTypesVo,'game.numberGame.m.ui.number.specialNumberType.NumberGamesSpecialNumberTypesVo',_super);
		return NumberGamesSpecialNumberTypesVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiTypeVo extends robotLegs.vo.BaseViewVo
	var NumberGamesZuXuanHeZhiTypeVo=(function(_super){
		function NumberGamesZuXuanHeZhiTypeVo(){
			this.zuXuanHeZhiNumbersVoArr=[];
			this.chooseValueArr=[];
			NumberGamesZuXuanHeZhiTypeVo.__super.call(this);
		}

		__class(NumberGamesZuXuanHeZhiTypeVo,'game.numberGame.m.ui.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiTypeVo',_super);
		NumberGamesZuXuanHeZhiTypeVo.UPDATE_LIST_STATUS="Update_List_Status";
		return NumberGamesZuXuanHeZhiTypeVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.NumberGamesVo extends robotLegs.vo.BaseViewVo
	var NumberGamesVo=(function(_super){
		function NumberGamesVo(){
			this.shuZiPanIndex=0;
			this.videoStatus=0;
			this.resultVo=new NumberGamesResultVo();
			this.selectNumberVo=new LotterySelectNumberVo();
			this.gameMenuVo=new NumberGamesMenuVo();
			this.betVo=new NumberGamesBetVo();
			this.numberKeyVo=new NumberGamesNumberKeyVo();
			this.betWindowVo=new NumberGamesBetWindowVo();
			this.betResultWindowVo=new NumberGamesBetResultWindowVo();
			this.historyVo=new NumberGamesHistoryVo();
			this.betHistoryVo=new NumberGamesBetHistoryVo();
			this.zhuiHaoWindowVo=new NumberGamesZhuiHaoWindowVo();
			this.shoppingCartVo=new ShoppingCartVo();
			this.shuZiPanVo=new ShuZiPanVo();
			NumberGamesVo.__super.call(this);
		}

		__class(NumberGamesVo,'game.numberGame.m.ui.NumberGamesVo',_super);
		NumberGamesVo.UPDATE_VIDEO_STATUS="Update_Video_Staus";
		NumberGamesVo.RMOVE_ANI_STATUS="Remove_Ani_Status";
		NumberGamesVo.UPDATE_BET_TYPE_CONTROLLER_STATUS="Update_Bet_Type_Status";
		NumberGamesVo.DISPLAY_HIDE_BET_NUMBER_KEY_STATUS="Display_Hide_Bet_Number_Key_Status";
		return NumberGamesVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.numberKey.NumberGamesNumberKeyVo extends robotLegs.vo.BaseViewVo
	var NumberGamesNumberKeyVo=(function(_super){
		function NumberGamesNumberKeyVo(){
			this.displayIndex=0;
			NumberGamesNumberKeyVo.__super.call(this);
		}

		__class(NumberGamesNumberKeyVo,'game.numberGame.m.ui.numberKey.NumberGamesNumberKeyVo',_super);
		return NumberGamesNumberKeyVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.result.NumberGamesResultVo extends robotLegs.vo.BaseViewVo
	var NumberGamesResultVo=(function(_super){
		function NumberGamesResultVo(){
			this.gameId=null;
			this.gameName=null;
			this.gameCycleId=null;
			this.time=null;
			this.lastTime=null;
			this.endTime=0;
			this.resultControlIndex=0;
			this.notMiaoMiaoStatus=0;
			this.resultNumberArr=[];
			NumberGamesResultVo.__super.call(this);
		}

		__class(NumberGamesResultVo,'game.numberGame.m.ui.result.NumberGamesResultVo',_super);
		NumberGamesResultVo.UPDATE_MIAO_MIAO_STATUS="UPDATE_MIAO_MIAO_STATUS";
		NumberGamesResultVo.UPDATE_RESULT_CONTROL_STATUS="Update_Result_Control_Status";
		NumberGamesResultVo.UPDATE_CURRENT_RESULT_STATUS="Update_Current_Result_Status";
		NumberGamesResultVo.UPDATE_HISTORY_RESULT_STATUS="Update_History_Result_Status";
		return NumberGamesResultVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.shoppingCart.ShoppingCartVo extends robotLegs.vo.BaseViewVo
	var ShoppingCartVo=(function(_super){
		function ShoppingCartVo(){
			this.leftMoney=NaN;
			this.totalTimes=0;
			this.totalPrice=NaN;
			this.deleteBol=false;
			this.displayOrHideInfo=0;
			this.betOneVo=new NumberGamesZhuiHaoBetOneVo();
			this.betOneVoArr=[];
			this.mcBetRecordDetailPanel2Vo=new McBetRecordDetailPanel2Vo();
			ShoppingCartVo.__super.call(this);
		}

		__class(ShoppingCartVo,'game.numberGame.m.ui.shoppingCart.ShoppingCartVo',_super);
		ShoppingCartVo.UPDATE_STATUS="UPDATE_STATUS";
		ShoppingCartVo.DELETE_STATUS="Delete_Status";
		ShoppingCartVo.CLOSE_SHOPPING_CART_STATUS="Close_Shopping_Cart_Status";
		ShoppingCartVo.DISPLAY_OR_HIDE_INFO_STATUS="DISPLAY_OR_HIDE_INFO_STATUS";
		return ShoppingCartVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanBetMainVo extends robotLegs.vo.BaseViewVo
	var ShuZiPanBetMainVo=(function(_super){
		function ShuZiPanBetMainVo(){
			this.totalPrice=0;
			this.oneBetVoArr=[];
			ShuZiPanBetMainVo.__super.call(this);
		}

		__class(ShuZiPanBetMainVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanBetMainVo',_super);
		ShuZiPanBetMainVo.UPDATE_STATUS="Update_Status";
		return ShuZiPanBetMainVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanBetVo extends robotLegs.vo.BaseViewVo
	var ShuZiPanBetVo=(function(_super){
		function ShuZiPanBetVo(){
			this.fanDianMax=0;
			this.chooseFanDian=0;
			this.fanDianIndex=0;
			this.betMoney=0;
			ShuZiPanBetVo.__super.call(this);
		}

		__class(ShuZiPanBetVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanBetVo',_super);
		return ShuZiPanBetVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanBetWindowVo extends robotLegs.vo.BaseViewVo
	var ShuZiPanBetWindowVo=(function(_super){
		function ShuZiPanBetWindowVo(){
			this.betMainVo=new ShuZiPanBetMainVo();
			ShuZiPanBetWindowVo.__super.call(this);
		}

		__class(ShuZiPanBetWindowVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanBetWindowVo',_super);
		return ShuZiPanBetWindowVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanMenuVo extends robotLegs.vo.BaseViewVo
	var ShuZiPanMenuVo=(function(_super){
		function ShuZiPanMenuVo(){
			this.btnVoArr=[];
			ShuZiPanMenuVo.__super.call(this);
		}

		__class(ShuZiPanMenuVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanMenuVo',_super);
		ShuZiPanMenuVo.UPDATE_STATUS="Update_Status";
		return ShuZiPanMenuVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanSelectNumbersVo extends robotLegs.vo.BaseViewVo
	var ShuZiPanSelectNumbersVo=(function(_super){
		function ShuZiPanSelectNumbersVo(){
			this.oneTypeVoArr=[];
			ShuZiPanSelectNumbersVo.__super.call(this);
		}

		__class(ShuZiPanSelectNumbersVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanSelectNumbersVo',_super);
		ShuZiPanSelectNumbersVo.UPDATE_STATUS="Update_Status";
		return ShuZiPanSelectNumbersVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.shuZiPan.ShuZiPanVo extends robotLegs.vo.BaseViewVo
	var ShuZiPanVo=(function(_super){
		function ShuZiPanVo(){
			this.currentMenuType=0;
			this.shuZiPanMenuVo=new ShuZiPanMenuVo();
			this.selectNumbersVo=new ShuZiPanSelectNumbersVo();
			this.betVo=new ShuZiPanBetVo();
			this.betWindowVo=new ShuZiPanBetWindowVo();
			ShuZiPanVo.__super.call(this);
		}

		__class(ShuZiPanVo,'game.numberGame.m.ui.shuZiPan.ShuZiPanVo',_super);
		return ShuZiPanVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.zhuiHao.McBetRecordDetailPanel2Vo extends robotLegs.vo.BaseViewVo
	var McBetRecordDetailPanel2Vo=(function(_super){
		function McBetRecordDetailPanel2Vo(){
			this.name=null;
			this.id=0;
			this.playType=null;
			this.time=null;
			this.bei=0;
			this.onePrice=0;
			this.totalPrice=NaN;
			this.numbers=null;
			this.postData=null;
			McBetRecordDetailPanel2Vo.__super.call(this);
		}

		__class(McBetRecordDetailPanel2Vo,'game.numberGame.m.ui.zhuiHao.McBetRecordDetailPanel2Vo',_super);
		McBetRecordDetailPanel2Vo.UPDATE_STATUS="UPDATE_STATUS";
		return McBetRecordDetailPanel2Vo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoBetMainVo extends robotLegs.vo.BaseViewVo
	var NumberGamesZhuiHaoBetMainVo=(function(_super){
		function NumberGamesZhuiHaoBetMainVo(){
			this.totalPrice=NaN;
			this.betOneVoArr=[];
			NumberGamesZhuiHaoBetMainVo.__super.call(this);
		}

		__class(NumberGamesZhuiHaoBetMainVo,'game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoBetMainVo',_super);
		NumberGamesZhuiHaoBetMainVo.UPDATE_STATUS="Update_Status";
		return NumberGamesZhuiHaoBetMainVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoBetWindowVo extends robotLegs.vo.BaseViewVo
	var NumberGamesZhuiHaoBetWindowVo=(function(_super){
		function NumberGamesZhuiHaoBetWindowVo(){
			this.betMainVo=new NumberGamesZhuiHaoBetMainVo();
			NumberGamesZhuiHaoBetWindowVo.__super.call(this);
		}

		__class(NumberGamesZhuiHaoBetWindowVo,'game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoBetWindowVo',_super);
		return NumberGamesZhuiHaoBetWindowVo;
	})(BaseViewVo)


	//class game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoWindowVo extends robotLegs.vo.BaseViewVo
	var NumberGamesZhuiHaoWindowVo=(function(_super){
		function NumberGamesZhuiHaoWindowVo(){
			this.gameName=null;
			this.leftTime=0;
			this.chooseTimes=0;
			this.totalBei=0;
			this.totalPrice=NaN;
			this.oneBeiTotalPrice=NaN;
			this.zhongJiangStopBol=false;
			this.orderData=null;
			this.chooseId=0;
			this.inputBei="1";
			this.betWindowVo=new NumberGamesZhuiHaoBetWindowVo();
			this.zhuiHaoOneVoArr=[];
			NumberGamesZhuiHaoWindowVo.__super.call(this);
		}

		__class(NumberGamesZhuiHaoWindowVo,'game.numberGame.m.ui.zhuiHao.NumberGamesZhuiHaoWindowVo',_super);
		NumberGamesZhuiHaoWindowVo.LOADING_STATUS="Loading_Status";
		NumberGamesZhuiHaoWindowVo.UPDATE_STATUS="Update_Status";
		NumberGamesZhuiHaoWindowVo.CHOOSE_TIME_STATUS="Choose_Time_Status";
		NumberGamesZhuiHaoWindowVo.INPUT_NUMBERS_STATUS="Input_Numbers_Status";
		NumberGamesZhuiHaoWindowVo.CLOSE_BET_WINDOW_STATUS="Close_Bet_Window_Status";
		NumberGamesZhuiHaoWindowVo.CLOSE_ZHUI_HAO_STATUS="Close_Zhui_Hao_Status";
		return NumberGamesZhuiHaoWindowVo;
	})(BaseViewVo)


	//class game.numberGame.v.bet.NumberGamesBet extends robotLegs.sprite.BaseUISprite
	var NumberGamesBet=(function(_super){
		function NumberGamesBet(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.resetBtn=null;
			this.numberGamesBetVo=null;
			this.countTxt=null;
			this.totalPriceTxt=null;
			this.beiBtn=null;
			this.priceLabel=null;
			this.totalRewardTxt=null;
			this.betBtn=null;
			this.bgBtn=null;
			this.moneyChoose_0=null;
			this.moneyChoose_1=null;
			this.moneyChoose_2=null;
			this.moneyChoose_3=null;
			this.moneyChoose_4=null;
			this.moneyChoose_5=null;
			this.moneyChoose_6=null;
			this.moneyChoose_7=null;
			this.followNumberBtn=null;
			this.nn3=null;
			this.addShoppingCartBtn=null;
			this.selectMoneyController=null;
			this.notMiaoMiaoController=null;
			this.typeController=null;
			this.jiaBtn=null;
			this.jianBtn=null;
			this.__moneyChooseArr=[];
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesBet.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesBet,'game.numberGame.v.bet.NumberGamesBet',_super);
		var __proto=NumberGamesBet.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.__moneyChooseArr.push(this.moneyChoose_0);
			this.__moneyChooseArr.push(this.moneyChoose_1);
			this.__moneyChooseArr.push(this.moneyChoose_2);
			this.__moneyChooseArr.push(this.moneyChoose_3);
			this.__moneyChooseArr.push(this.moneyChoose_4);
			this.__moneyChooseArr.push(this.moneyChoose_5);
			this.__moneyChooseArr.push(this.moneyChoose_6);
			this.__moneyChooseArr.push(this.moneyChoose_7);
			this.moneyChoose_0.onClick(this,this.chooseMoney,[0]);
			this.moneyChoose_1.onClick(this,this.chooseMoney,[1]);
			this.moneyChoose_2.onClick(this,this.chooseMoney,[2]);
			this.moneyChoose_3.onClick(this,this.chooseMoney,[3]);
			this.moneyChoose_4.onClick(this,this.chooseMoney,[4]);
			this.moneyChoose_5.onClick(this,this.chooseMoney,[5]);
			this.moneyChoose_6.onClick(this,this.chooseMoney,[6]);
			this.moneyChoose_7.onClick(this,this.chooseMoney,[7]);
			this.priceLabel.onClick(this,this.openChooseMoney);
			this.betBtn.onClick(this,this.bet);
			this.beiBtn.onClick(this,this.displayNumberKey);
			this.bgBtn.onClick(this,this.hideSelectMoney);
			this.followNumberBtn.onClick(this,this.followNumber);
			this.addShoppingCartBtn.onClick(this,this.addShoppingCart);
			this.resetBtn.onClick(this,this.reset);
			this.typeController.on("fui_state_changed",this,this.betTypeChange);
			if(this.jiaBtn){
				this.jiaBtn.onClick(this,this.changeBei,[1]);
				this.jianBtn.onClick(this,this.changeBei,[-1]);
			}
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Input_Numbers_Status",new Handler(this,this.inputBei));
			this.registerStatusCallBack("Update_Bet_Money_Status",new Handler(this,this.updateBetMoney));
			this.registerStatusCallBack("Update_Bet_Info_Status",new Handler(this,this.updateBetInfo));
			this.registerStatusCallBack("UPDATE_MIAO_MIAO_STATUS",new Handler(this,this.updateMiaoMiaoStatus));
		}

		/**
		*打开选择钱
		*
		*/
		__proto.openChooseMoney=function(){
			if(this.selectMoneyController.selectedIndex==0){
				var count=0;
				for(var ii in this.numberGamesBetVo.chooseMoneyArr){
					count++;
				}
				this.selectMoneyController.selectedIndex=count;
			}
			else{
				this.selectMoneyController.selectedIndex=0;
			}
			count=0;
			for(ii in this.numberGamesBetVo.chooseMoneyArr){
				this.__moneyChooseArr[count].text=this.numberGamesBetVo.chooseMoneyArr[ii];
				count++;
			}
		}

		// updateBetMoney();
		__proto.clearChooseMoney=function(){
			Laya.stage.off("mousedown",this,this.clearChooseMoney);
			this.selectMoneyController.selectedIndex=0;
		}

		/**
		*更新可下注的额度
		*
		*/
		__proto.updateBetMoney=function(){
			var count=0;
			for(var ii in this.numberGamesBetVo.chooseMoneyArr){
				this.__moneyChooseArr[count].text=this.numberGamesBetVo.chooseMoneyArr[ii];
				count++;
			}
			this.numberGamesBetVo.price=this.numberGamesBetVo.chooseMoneyArr[this.numberGamesBetVo.chooseMoneyIndex];
			this.updateChooseMoney();
		}

		/**
		*选择钱
		*
		*/
		__proto.chooseMoney=function(_moneyIndex){
			var price=this.__moneyChooseArr[_moneyIndex].text;
			for(var i in this.numberGamesBetVo.chooseMoneyArr){
				if(this.numberGamesBetVo.chooseMoneyArr[i]==price){
					this.numberGamesBetVo.chooseMoneyIndex=i;
					break ;
				}
			}
			this.numberGamesBetVo.price=this.numberGamesBetVo.chooseMoneyArr[this.numberGamesBetVo.chooseMoneyIndex];
			this.updateChooseMoney();
			this.mathBetMoney();
			this.selectMoneyController.selectedIndex=0;
		}

		/**
		*更新下注信息
		*
		*/
		__proto.updateBetInfo=function(){
			this.updateChooseMoney();
			this.mathBetMoney();
			this.updateTotalReward();
			this.typeController.selectedIndex=0;
			if(this.numberGamesBetVo.jiangJinModeCount==1){
				this.nn3.displayObject.mouseEnabled=false;
			}
			else{
				this.nn3.displayObject.mouseEnabled=true;
			}
		}

		/**
		*更新选择的钱
		*
		*/
		__proto.updateChooseMoney=function(){
			this.priceLabel.text=String(this.numberGamesBetVo.price);
		}

		/**
		*点击下注
		*
		*/
		__proto.bet=function(){
			this.sendNotification("Open_Close_Number_Games_Bet_Windows_Cmd");
		}

		/**
		*显示数字按键
		*
		*/
		__proto.displayNumberKey=function(){
			this.sendNotification("Hide_Iframe_Cmd");
			this.sendNotification("Display_Number_Key_Cmd",1);
		}

		/**
		*输入倍率
		*
		*/
		__proto.inputBei=function(){
			if(Number(this.numberGamesBetVo.inputBei)> 99999){
				this.numberGamesBetVo.inputBei="99999";
				this.showAlert("已达投注倍数上限。");
			}
			this.beiBtn.text=this.numberGamesBetVo.inputBei;
			if(this.beiBtn.text.length > 0){
				if(!Number(this.beiBtn.text)|| Number(this.beiBtn.text)< 0){
					this.beiBtn.text="1";
					this.numberGamesBetVo.inputBei="1";
				}
			}
			this.numberGamesBetVo.bei=Math.floor(Number(this.beiBtn.text));
			this.beiBtn.text=String(this.numberGamesBetVo.bei);
			this.mathBetMoney();
		}

		/**
		*计算下注的钱
		*
		*/
		__proto.mathBetMoney=function(){
			this.countTxt.text=String(this.numberGamesBetVo.count);
			this.beiBtn.text=String(this.numberGamesBetVo.bei);
			this.numberGamesBetVo.onePrice=NumberGamesBet.MONEY_CONFIG[this.numberGamesBetVo.price];
			var totalPrice=this.numberGamesBetVo.count *this.numberGamesBetVo.bei *this.numberGamesBetVo.onePrice;
			var pointCount=0;
			if(this.numberGamesBetVo.price.indexOf("元")>-1){
				pointCount=0;
			}
			else if(this.numberGamesBetVo.price.indexOf("角")>-1){
				pointCount=1;
			}
			else if(this.numberGamesBetVo.price.indexOf("分")>-1){
				pointCount=2;
			}
			else if(this.numberGamesBetVo.price.indexOf("厘")>-1){
				pointCount=3;
			}
			this.numberGamesBetVo.totalPrice=totalPrice.toFixed(pointCount);
			this.totalPriceTxt.text=this.numberGamesBetVo.totalPrice;
			if(isNaN(this.numberGamesBetVo.originalBonus))
				return;
			this.numberGamesBetVo.totalReward=this.numberGamesBetVo.noPercentBonus;
			this.updateTotalReward();
		}

		__proto.hideSelectMoney=function(){
			this.selectMoneyController.selectedIndex=0;
		}

		/**
		*追号
		*
		*/
		__proto.followNumber=function(){
			this.sendNotification("Display_Number_Key_Cmd",0);
			this.sendNotification("Open_Zhui_Hao_Cmd");
		}

		__proto.updateTotalReward=function(){
			var total=this.numberGamesBetVo.totalReward.toFixed(3);
			var totalArr=total.split(".");
			var totalStr=totalArr[0];
			if(totalArr[1] !="000"){
				totalStr+="."+totalArr[1];
			}
			if(total=="NaN")
				return;
			this.totalRewardTxt.text="￥"+totalStr+"元";
		}

		/**
		*添加购物篮的单号
		*
		*/
		__proto.addShoppingCart=function(){
			this.sendNotification("Add_Bet_To_Shopping_Cart_Cmd");
		}

		/**
		*重置
		*
		*/
		__proto.reset=function(){
			this.sendNotification("Clear_All_Bet_Cmd");
		}

		__proto.updateMiaoMiaoStatus=function(){
			this.notMiaoMiaoController.selectedIndex=this.numberGamesBetVo.notMiaoMiaoStatus;
		}

		/**
		*奖金或返点模式的控制
		*
		*/
		__proto.betTypeChange=function(){
			if(this.typeController.selectedIndex > 1){
				this.numberGamesBetVo.betType=this.typeController.selectedIndex==2 ? 0 :1;
			}
			else{
				this.numberGamesBetVo.betType=this.typeController.selectedIndex;
			}
			if(this.numberGamesBetVo.betType==0){
				this.numberGamesBetVo.totalReward=this.numberGamesBetVo.noPercentBonus;
			}
			else{
				this.numberGamesBetVo.totalReward=this.numberGamesBetVo.percentBonus;
			}
			this.updateTotalReward();
		}

		/**
		*改变倍率
		*
		*/
		__proto.changeBei=function(_changeValue){
			this.numberGamesBetVo.inputBei=String(Number(this.numberGamesBetVo.inputBei)+Number(_changeValue));
			this.inputBei();
		}

		__proto.clearMemory=function(){
			_super.prototype.clearMemory.call(this);
		}

		__static(NumberGamesBet,
		['MONEY_CONFIG',function(){return this.MONEY_CONFIG={
				"2元" :2,
				"2角" :0.2,
				"2分" :0.02,
				"2厘" :0.002,
				"1元" :1,
				"1角" :0.1,
				"1分" :0.01,
				"1厘" :0.001
		};}

		]);
		return NumberGamesBet;
	})(BaseUISprite)


	//class game.numberGame.v.bet.NumberGamesBetResultWindow extends robotLegs.sprite.BaseUISprite
	var NumberGamesBetResultWindow=(function(_super){
		function NumberGamesBetResultWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesBetResultWindowVo=null;
			this.numberGamesBetResultWindowMain=null;
			this.displayController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesBetResultWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesBetResultWindow,'game.numberGame.v.bet.NumberGamesBetResultWindow',_super);
		var __proto=NumberGamesBetResultWindow.prototype;
		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Open_Or_Close_Status",new Handler(this,this.openOrClose));
		}

		/**
		*打开或关闭
		*
		*/
		__proto.openOrClose=function(){
			this.numberGamesBetResultWindowVo.openAlreadyBol=!this.numberGamesBetResultWindowVo.openAlreadyBol;
			this.displayController.selectedIndex=this.numberGamesBetResultWindowVo.openAlreadyBol ? 1 :0;
		}

		return NumberGamesBetResultWindow;
	})(BaseUISprite)


	//class game.numberGame.v.bet.NumberGamesBetResultWindowMain extends robotLegs.sprite.BaseUISprite
	var NumberGamesBetResultWindowMain=(function(_super){
		function NumberGamesBetResultWindowMain(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesBetResultWindowMainVo=null;
			this.closeBtn=null;
			this.continueBtn=null;
			this.timeTxt=null;
			this.__time=0;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesBetResultWindowMain.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesBetResultWindowMain,'game.numberGame.v.bet.NumberGamesBetResultWindowMain',_super);
		var __proto=NumberGamesBetResultWindowMain.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.continueBtn.onClick(this,this.closeResult);
			this.closeBtn.onClick(this,this.closeResult);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Start_Open_Status",new Handler(this,this.startOpen));
		}

		__proto.startOpen=function(){
			this.__time=3;
			this.displayCloseTime();
			this.startTime(1000,new Handler(this,this.displayCloseTime));
		}

		/**
		*显示关闭时间
		*
		*/
		__proto.displayCloseTime=function(){
			if(this.__time==0){
				this.closeResult();
				return;
			}
			this.timeTxt.text=BaseStaticFunc.format("如果系统没有在{0}秒自动关闭,请点击确认",this.__time);
			this.__time--;
		}

		/**
		*关闭结果
		*
		*/
		__proto.closeResult=function(){
			this.stopTime();
			this.sendNotification("Open_Or_Close_Number_Games_Bet_Result_Window_Cmd");
		}

		return NumberGamesBetResultWindowMain;
	})(BaseUISprite)


	//class game.numberGame.v.bet.NumberGamesBetWindow extends robotLegs.sprite.BaseUISprite
	var NumberGamesBetWindow=(function(_super){
		function NumberGamesBetWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesBetWindowVo=null;
			this.numberGamesBetWindowMain=null;
			this.displayController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesBetWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesBetWindow,'game.numberGame.v.bet.NumberGamesBetWindow',_super);
		var __proto=NumberGamesBetWindow.prototype;
		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Open_Or_Close_Status",new Handler(this,this.openOrClose));
		}

		/**
		*打开或关闭
		*
		*/
		__proto.openOrClose=function(){
			this.numberGamesBetWindowVo.openAlreadyBol=!this.numberGamesBetWindowVo.openAlreadyBol;
			this.displayController.selectedIndex=this.numberGamesBetWindowVo.openAlreadyBol ? 1 :0;
		}

		return NumberGamesBetWindow;
	})(BaseUISprite)


	//class game.numberGame.v.bet.NumberGamesBetWindowMain extends robotLegs.sprite.BaseUISprite
	var NumberGamesBetWindowMain=(function(_super){
		function NumberGamesBetWindowMain(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesBetWindowMainVo=null;
			this.nameTxt=null;
			this.playTypeTxt=null;
			this.betValueTxt=null;
			this.beiTxt=null;
			this.totalPriceTxt=null;
			this.helpTxt=null;
			this.continueBtn=null;
			this.cancelBtn=null;
			this.closeBtn=null;
			this.loadingController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesBetWindowMain.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesBetWindowMain,'game.numberGame.v.bet.NumberGamesBetWindowMain',_super);
		var __proto=NumberGamesBetWindowMain.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.continueBtn.onClick(this,this.bet);
			this.cancelBtn.onClick(this,this.cancelBet);
			this.closeBtn.onClick(this,this.cancelBet);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Display_Loading_Status",new Handler(this,this.displayLoading));
			this.registerStatusCallBack("Update_Info_Status",new Handler(this,this._$3_update));
		}

		/**
		*显示loading
		*
		*/
		__proto.displayLoading=function(){
			this.loadingController.selectedIndex=0;
			this.updateTxt();
		}

		/**
		*更新
		*
		*/
		__proto._$3_update=function(){
			this.loadingController.selectedIndex=2;
			this.updateTxt();
		}

		/**
		*下注
		*
		*/
		__proto.bet=function(){
			this.loadingController.selectedIndex=1;
			this.updateTxt();
			this.sendNotification("Number_Games_Bet_Cmd");
		}

		__proto.updateTxt=function(){
			this.nameTxt.text=this.numberGamesBetWindowMainVo.name;
			this.playTypeTxt.text=this.numberGamesBetWindowMainVo.playType;
			this.betValueTxt.text=this.numberGamesBetWindowMainVo.betValue.length > 21 ? this.numberGamesBetWindowMainVo.betValue.substr(0,21)+"..." :this.numberGamesBetWindowMainVo.betValue;
			this.beiTxt.text=this.numberGamesBetWindowMainVo.bei;
			this.totalPriceTxt.text=String(this.numberGamesBetWindowMainVo.totalPrice);
			this.helpTxt.text=this.numberGamesBetWindowMainVo.help;
		}

		/**
		*取消
		*
		*/
		__proto.cancelBet=function(){
			this.sendNotification("Display_Iframe_Cmd");
			this.sendNotification("Open_Close_Number_Games_Bet_Windows_Cmd");
		}

		return NumberGamesBetWindowMain;
	})(BaseUISprite)


	//class game.numberGame.v.bet.zhuiHao.McBetRecordDetailPanel2 extends robotLegs.sprite.BaseUISprite
	var McBetRecordDetailPanel2=(function(_super){
		function McBetRecordDetailPanel2(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcBetRecordDetailPanel2Vo=null;
			this.btnBack=null;
			this.numberTxt=null;
			this.nameTxt=null;
			this.playTypeTxt=null;
			this.beiMoTxt=null;
			this.priceTxt=null;
			this.timeTxt=null;
			this.cancelBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McBetRecordDetailPanel2.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McBetRecordDetailPanel2,'game.numberGame.v.bet.zhuiHao.McBetRecordDetailPanel2',_super);
		var __proto=McBetRecordDetailPanel2.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.btnBack.onClick(this,this.back);
			this.cancelBtn.onClick(this,this.cancel);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("UPDATE_STATUS",new Handler(this,this.updateInfo));
		}

		__proto.updateInfo=function(){
			this.numberTxt.text=this.mcBetRecordDetailPanel2Vo.numbers;
			this.nameTxt.text=this.mcBetRecordDetailPanel2Vo.name;
			this.playTypeTxt.text=this.mcBetRecordDetailPanel2Vo.playType;
			this.beiMoTxt.text=BaseStaticFuncs.format("{0}倍({1})",this.mcBetRecordDetailPanel2Vo.bei,this.mcBetRecordDetailPanel2Vo.onePrice);
			this.priceTxt.text=String(this.mcBetRecordDetailPanel2Vo.totalPrice);
			this.timeTxt.text=this.mcBetRecordDetailPanel2Vo.time;
		}

		//取消
		__proto.cancel=function(){
			this.back();
			this.sendNotification("Delete_Shopping_Cart_Cmd",this.mcBetRecordDetailPanel2Vo.id);
		}

		__proto.back=function(){
			this.sendNotification("OPEN_OR_CLOSE_SHOPPING_CART_INF_CMD",[0]);
		}

		return McBetRecordDetailPanel2;
	})(BaseUISprite)


	//class modules.hall.c.ChatCommand extends robotLegs.command.BaseCommand
	var ChatCommand=(function(_super){
		function ChatCommand(){
			this.hallUIModel=null;
			this.gameUIBuilderBridge=null;
			this.playerInfoModel=null;
			ChatCommand.__super.call(this);
		}

		__class(ChatCommand,'modules.hall.c.ChatCommand',_super);
		var __proto=ChatCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "INIT_CHAT_Cmd":
					this.onInit();
					break ;
				case "OPEN_CHAT_Cmd":
					this.onOpen();
					break ;
				case "CLOSE_CHAT_Cmd":
					this.onClose();
					break ;
				}
		}

		__proto.onInit=function(){
			var appkey='b054014693241bcd9c20';
			var mine={
				"username":"张三",
				"id":"101",
				"status":"online",
				"sign":"这些都是测试数据，实际使用请严格按照该格式返回",
				"avatar":"http://api.laychat.net/assets/upload/1.jpg"
			};
			var friendList=[{
				"groupname":"前端"
				,"id":1
				,"list":[{
					"username":"李四"
					,"id":"99"
					,"avatar":"http://api.laychat.net/assets/upload/0.jpg"
					,"sign":"在深邃的编码世界"
					,"status":"online"
				}]
			}];
			var groupList=[{
				"groupname":"前端群"
				,"id":"11"
				,"avatar":"http://api.laychat.net/assets/upload/2.jpg"
			}];
			GameUtil.initChat(appkey,mine,friendList,groupList);
		}

		__proto.onOpen=function(){
			console.log("ChatCommand_onOpen");
			GameUtil.openOrCloseChat(true);
		}

		__proto.onClose=function(){
			console.log("ChatCommand_onClose");
			GameUtil.openOrCloseChat(false);
		}

		ChatCommand.INIT_CMD="INIT_CHAT_Cmd";
		ChatCommand.OPEN_CMD="OPEN_CHAT_Cmd";
		ChatCommand.CLOSE_CMD="CLOSE_CHAT_Cmd";
		return ChatCommand;
	})(BaseCommand)


	//class game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoBetMain extends robotLegs.sprite.BaseUISprite
	var NumberGamesZhuiHaoBetMain=(function(_super){
		function NumberGamesZhuiHaoBetMain(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesZhuiHaoBetMainVo=null;
			this.itemList=null;
			this.totalPriceTxt=null;
			this.cancelBtn=null;
			this.continueBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesZhuiHaoBetMain.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesZhuiHaoBetMain,'game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoBetMain',_super);
		var __proto=NumberGamesZhuiHaoBetMain.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.itemList.setVirtual();
			this.cancelBtn.onClick(this,this.close);
			this.continueBtn.onClick(this,this.bet);
			this.itemList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this._$3_update));
		}

		__proto._$3_update=function(){
			this.totalPriceTxt.text=this.numberGamesZhuiHaoBetMainVo.totalPrice.toFixed(3)+"元";
			this.itemList.numItems=this.numberGamesZhuiHaoBetMainVo.betOneVoArr.length;
		}

		__proto.bet=function(){
			this.sendNotification("LOTTERY_ADD_SEEK_PLAN_ORDER_CMD");
			this.close();
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneZhuiHao=obj;
			oneZhuiHao.update(this.numberGamesZhuiHaoBetMainVo.betOneVoArr[index]);
		}

		/**
		*关闭
		*
		*/
		__proto.close=function(){
			this.sendNotification("Close_Zhui_Hao_Bet_Window_Cmd");
		}

		return NumberGamesZhuiHaoBetMain;
	})(BaseUISprite)


	//class game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoBetOne extends fairygui.GButton
	var NumberGamesZhuiHaoBetOne=(function(_super){
		function NumberGamesZhuiHaoBetOne(){
			this.idTxt=null;
			this.timeTxt=null;
			this.beiTxt=null;
			this.numbersTxt=null;
			NumberGamesZhuiHaoBetOne.__super.call(this);
		}

		__class(NumberGamesZhuiHaoBetOne,'game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoBetOne',_super);
		var __proto=NumberGamesZhuiHaoBetOne.prototype;
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this.idTxt=this.getChild("idTxt");
			this.timeTxt=this.getChild("timeTxt");
			this.beiTxt=this.getChild("beiTxt");
			this.numbersTxt=this.getChild("numbersTxt");
		}

		/**
		*更新
		*@return
		*
		*/
		__proto.update=function(_betOneVo){
			this.idTxt.text=_betOneVo.id.toString();
			this.timeTxt.text=_betOneVo.time.toString();
			this.beiTxt.text=_betOneVo.bei.toString();
			while(_betOneVo.numbers.indexOf("[")>-1){
				_betOneVo.numbers=_betOneVo.numbers.replace("[","");
			}
			while(_betOneVo.numbers.indexOf("]")>-1){
				_betOneVo.numbers=_betOneVo.numbers.replace("]","");
			}
			while(_betOneVo.numbers.indexOf("\"")>-1){
				_betOneVo.numbers=_betOneVo.numbers.replace("\"","");
			}
			while(_betOneVo.numbers.indexOf("\"")>-1){
				_betOneVo.numbers=_betOneVo.numbers.replace("\"","");
			}
			this.numbersTxt.text=_betOneVo.numbers.toString();
		}

		return NumberGamesZhuiHaoBetOne;
	})(GButton)


	//class game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoBetWindow extends robotLegs.sprite.BaseUISprite
	var NumberGamesZhuiHaoBetWindow=(function(_super){
		function NumberGamesZhuiHaoBetWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesZhuiHaoBetWindowVo=null;
			this.numberGamesZhuiHaoBetMain=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesZhuiHaoBetWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesZhuiHaoBetWindow,'game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoBetWindow',_super);
		var __proto=NumberGamesZhuiHaoBetWindow.prototype;
		__proto.open=function(){
			this.view.visible=true;
		}

		__proto.close=function(){
			this.view.visible=false;
		}

		return NumberGamesZhuiHaoBetWindow;
	})(BaseUISprite)


	//class modules.hall.c.GroupCommand extends robotLegs.command.BaseCommand
	var GroupCommand=(function(_super){
		function GroupCommand(){
			this.hallUIModel=null;
			this.gameUIBuilderBridge=null;
			this.playerInfoModel=null;
			GroupCommand.__super.call(this);
		}

		__class(GroupCommand,'modules.hall.c.GroupCommand',_super);
		var __proto=GroupCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "GET_GROUP_STATISTICAL_ANALYSISR_Cmd":
					this.onGetGroupStatisticaLAnalysisr(_notificationVo.data);
					break ;
				case "GET_GROUP_STATISTICAL_ANALYSISR_COMPLETE_Cmd":
					this.onGetGroupStatisticaLAnalysisrComplete(_notificationVo.data);
					break ;
				case "GET_GROUP_GAME_RECORD_CONFIG_Cmd":
					this.onGetGameRecordConfig();
					break ;
				case "GET_BONESRANG_DATA_Cmd":
					this.onGetBonesrangData(_notificationVo.data);
					break ;
				case "GET_BONESRANG_DATA_COMPLETE_Cmd":
					this.onGetBonesrangDataComplete(_notificationVo.data);
					break ;
				case "GET_BONESRANG_DATA1_Cmd":
					this.onGetBonesrangData1(_notificationVo.data);
					break ;
				case "GET_BONESRANG_DATA1_COMPLETE_Cmd":
					this.onGetBonesrangData1Complete(_notificationVo.data);
					break ;
				case "GET_DAILY_BONESRANG_DATA1_COMPLETE_Cmd":
					this.onGetDailyBonesrangeDataComplete(_notificationVo.data);
					break ;
				case "SET_AGENT_PERCENT_Cmd":
					this.onSetAgentPercent(_notificationVo.data);
					break ;
				case "SET_AGENT_PERCENT_COMPLETE_Cmd":
					this.onSetAgentPercentComplete(_notificationVo.data);
					break ;
				case "GET_GROUPWINLOST_DATA_Cmd":
					this.onGetGroupwinlostData(_notificationVo.data);
					break ;
				case "GET_GROUPWINLOST_DATA_COMPLETE_Cmd":
					this.onGetGroupwinlostDataComplete(_notificationVo.data);
					break ;
				case "NEW_AGENT_Cmd":
					this.onNewAgent(_notificationVo.data);
					break ;
				case "NEW_AGENT_COMPLETE_Cmd":
					this.onNewAgentComplete(_notificationVo.data);
					break ;
				case "GET_GROUP_VIP_Cmd":
					this.onGetGroupVip(_notificationVo.data);
					break ;
				case "GET_GROUP_VIP_COMPLETE_Cmd":
					this.onGetGroupVipComplete(_notificationVo.data);
					break ;
				case "GET_GROUP_BET_RECORD_Cmd":
					this.onGetGroupBetRecord(_notificationVo.data);
					break ;
				case "GET_GROUP_BET_RECORD_COMPLETE_Cmd":
					this.onGetGroupBetRecordComplete(_notificationVo.data);
					break ;
				case "GET_ACCOUNT_CHANGE_DETAIL_Cmd":
					this.onGetAccountChangeDetail(_notificationVo.data);
					break ;
				case "GET_ACCOUNT_CHANGE_DETAIL_COMPLETE_Cmd":
					this.onGetAccountChangeDetailComplete(_notificationVo.data);
					break ;
				case "GET_GROUP_TRANSFER_INFO_Cmd":
					this.getGroupTransferInfo();
					break ;
				case "TRANSFER_MONEY_TO_GROUP_ACCOUNT_Cmd":
					this.transferMoneyToGroupAccount();
					break ;
				case "TRANSFER_MONEY_TO_GROUP_ACCOUNT_COMPLETE_Cmd":
					this.transferMoneyToGroupAccountComplete();
					break ;
				}
		}

		__proto.onGetGroupStatisticaLAnalysisr=function(dateArr){
			var date1;
			var date2;
			if(dateArr==null || dateArr.length==0){
				var todayArr=GameUtil.getSearchDate(0,1);
				date1=todayArr[0];
				date2=todayArr[1];
				}else{
				date1=dateArr[0];
				date2=dateArr[1];
			};
			var url=GameUtil.getGroupStatisticalAnalysisUrl(date1,date2);
			console.log("Group onGetStatisticaLAnalysisr url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_GROUP_STATISTICAL_ANALYSISR_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetGroupStatisticaLAnalysisrComplete=function(data){
			console.log("Group onGetStatisticaLAnalysisrComplete:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.groupStatisticalAnalysisVo.groupStatisticalAnalysisSearchData=new GroupStatisticalAnalysisSearchData;
			this.hallUIModel.groupStatisticalAnalysisVo.groupStatisticalAnalysisSearchData.decode(data);
			this.hallUIModel.groupStatisticalAnalysisVo.status=McStatisticalAnalysisVo.UPDATE_DATA;
		}

		__proto.onGetGameRecordConfig=function(){
			console.log("Group onGetGameRecordConfig");
			if(DataMgr.get().lotteryGameListData==null){
				this.sendNotification("SHOW_Cmd");
				this.sendNotification("GET_CONFIG1_Cmd");
				this.delayRun("GET_GROUP_GAME_RECORD_CONFIG_Cmd",100);
				}else{
				this.sendNotification("HIDE_Cmd");
				this.hallUIModel.groupGameRecordVo.status=GroupGameRecordVo.INIT_INFO;
			}
		}

		/**
		*请求奖金范围
		*/
		__proto.onGetBonesrangData=function(panelName){
			DataMgr.get().bonesRangPanelName=panelName;
			var url=GameUtil.getUserBonesRangUrl();
			console.log("onGetBonesrangData url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_BONESRANG_DATA_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetBonesrangDataComplete=function(data){
			console.log("onGetBonesrangData:",data);
			this.sendNotification("HIDE_Cmd");
			var bonesRangData=new BonesRangData();
			bonesRangData.decode(data);
			DataMgr.get().bonesRangData=bonesRangData;
			switch(DataMgr.get().bonesRangPanelName){
				case GameUtil.PANEL_GROUP_WIN_LOST:
					this.hallUIModel.groupWinLostVo.status=GroupWinLostVo.UPDATE_BONES_RANG;
					break ;
				case GameUtil.PANEL_GROUP_NEW_ACCOUNT_MANAGE:
					this.hallUIModel.groupNewAccountManagePanelVo.status=GroupNewAccountManagePanelVo.UPDATE_BONES_RANG;
					break ;
				}
		}

		/**
		*请求某个会员的奖金范围
		*/
		__proto.onGetBonesrangData1=function(proxy_id){
			var url=GameUtil.getUserBonesRang1Url(proxy_id);
			console.log("onGetBonesrangData1 url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_BONESRANG_DATA1_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetBonesrangData1Complete=function(data){
			console.log("onGetBonesrangData1Complete:",data);
			this.hallUIModel.groupVipDetailPanelVo.bonesRangData=new BonesRangData();
			if(DataMgr.get().groupVipVo.isDailyPay){
				this.hallUIModel.groupVipDetailPanelVo.bonesRangData.delayData=data;
				var url=GameUtil.getUserDaiylyBonesRang1Url(this.playerInfoModel.playerInfoVo.id);
				this.sendHttpRequest(url,"GET_DAILY_BONESRANG_DATA1_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
			}
			else{
				this.hideLoading();
				this.hallUIModel.groupVipDetailPanelVo.bonesRangData.decode(data);
				this.hallUIModel.groupVipDetailPanelVo.status=GroupVipDetailPanelVo.UPDATE_INFO;
			}
		}

		/**
		*返回日奖数据
		*@param data
		*
		*/
		__proto.onGetDailyBonesrangeDataComplete=function(data){
			this.hideLoading();
			this.hallUIModel.groupVipDetailPanelVo.bonesRangData.decode2(data);
			this.hallUIModel.groupVipDetailPanelVo.bonesRangData.decode(this.hallUIModel.groupVipDetailPanelVo.bonesRangData.delayData);
			this.hallUIModel.groupVipDetailPanelVo.status=GroupVipDetailPanelVo.UPDATE_INFO;
		}

		/**
		*设置代理返点
		*/
		__proto.onSetAgentPercent=function(obj){
			obj.id=this.playerInfoModel.playerInfoVo.id;
			var url;
			var method;
			if(this.hallUIModel.groupVipDetailPanelVo.curId==99999){
				url=GameUtil.getDailyPayUrl();
				method="put";
				obj["user_id"]=GameUtil.proxyId;
			}
			else{
				method="put";
				url=GameUtil.getNewAgentUrl();
			}
			console.log("onSetAgentPercent url:",url," data:",obj);
			this.sendNotification("SHOW_Cmd");
			var httpRequestVo=new HttpRequestVo();
			httpRequestVo.url=url;
			httpRequestVo.completeBackCmd="SET_AGENT_PERCENT_COMPLETE_Cmd";
			httpRequestVo.errorBackCmd="";
			httpRequestVo.responseType="json";
			httpRequestVo.postData=obj;
			httpRequestVo.headers=GameUtil.headers;
			httpRequestVo.method=method;
			this.sendNotification("Request_Cmd",httpRequestVo);
		}

		__proto.onSetAgentPercentComplete=function(data){
			console.log("onSetAgentPercentComplete:",data);
			this.sendNotification("HIDE_Cmd");
			if(data.status_code=="1"){
				this.hallUIModel.groupVipDetailPanelVo.status=GroupVipDetailPanelVo.SET_AGENT_PERCENT_SUCCESS;
			}
		}

		/**
		*请求团队盈亏查询
		*/
		__proto.onGetGroupwinlostData=function(arr){
			var product_id=arr[0];
			var account=arr[1];
			var bonusRang=arr[2];
			var isSelected=arr[3]==0 ? 1 :0;
			var date1=arr[4];
			var date2=arr[5];
			var current=arr[6];
			var url=GameUtil.getGroupWinLostUrl(product_id,account,bonusRang,isSelected,date1,date2,current);
			console.log("onGetGroupwinlostData url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_GROUPWINLOST_DATA_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetGroupwinlostDataComplete=function(data){
			console.log("onGetGroupwinlostDataComplete:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.groupWinLostVo.groupWinLostData=new GroupWinLostData();
			this.hallUIModel.groupWinLostVo.groupWinLostData.decode(data);
			this.hallUIModel.groupWinLostVo.status=GroupWinLostVo.UPDATE_INFO;
		}

		/**
		*新增代理
		*/
		__proto.onNewAgent=function(data){
			data.id=this.playerInfoModel.playerInfoVo.id;
			var url=GameUtil.getNewAgentUrl();
			console.log("onNewAgent url:",url,data);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"NEW_AGENT_COMPLETE_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.onNewAgentComplete=function(data){
			console.log("onNewAgentComplete:",data);
			this.sendNotification("HIDE_Cmd");
			if(data.status_code=="1"){
				this.hallUIModel.groupNewAccountManagePanelVo.status=GroupNewAccountManagePanelVo.UPDATE_INFO;
			}
		}

		/**
		*会员管理
		*/
		__proto.onGetGroupVip=function(account){
			var url=GameUtil.getGroupVipUrl(account);
			console.log("onGetGroupVip url:",url);
			this.sendNotification("SHOW_Cmd");
			if(account){
				url+="?id="+this.playerInfoModel.playerInfoVo.id+"&user_account="+account;
			}
			else{
				url+="?row=30";
			}
			this.sendHttpRequest(url,"GET_GROUP_VIP_COMPLETE_Cmd","","json","",true,GameUtil.headers);
		}

		__proto.onGetGroupVipComplete=function(data){
			console.log("onGetGroupVip:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.groupVipManagerPanelVo.decode(data);
			this.hallUIModel.groupVipManagerPanelVo.status=GroupVipManagerPanelVo.UPDATE_INFO;
		}

		/**
		*团队投注记录
		*/
		__proto.onGetGroupBetRecord=function(arr){
			var product_id=arr[0];
			var user_account=arr[1];
			var date1=arr[2];
			var date2=arr[3];
			var curPage=arr[4];
			var url=GameUtil.getGroupBetRecordUrl(this.playerInfoModel.playerInfoVo.id,product_id,user_account,date1,date2,curPage);
			console.log("onGetGroupBetRecord url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_GROUP_BET_RECORD_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetGroupBetRecordComplete=function(data){
			console.log("onGetGroupBetRecord:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.groupBetRecord2Vo.data=data;
			this.hallUIModel.groupBetRecord2Vo.status=GroupBetRecord2Vo.UPDATE_INFO;
		}

		/**
		*团队帐变记录
		*/
		__proto.onGetAccountChangeDetail=function(arr){
			var product_id=arr[0];
			var change_type=arr[1];
			var date1=arr[2];
			var date2=arr[3];
			var user_account=arr[4];
			var target_seach_range=arr[5];
			var current=arr[6];
			var url=GameUtil.getGroupAccountChangeDetailUrl(this.playerInfoModel.playerInfoVo.id,product_id,change_type,date1,date2,user_account,target_seach_range,current);
			console.log("onGetAccountChangeDetail url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_ACCOUNT_CHANGE_DETAIL_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetAccountChangeDetailComplete=function(data){
			console.log("onGetAccountChangeDetailComplete:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.groupAccountChangeDetailVo.mcAccountSearchData=new McAccountSearchData();
			this.hallUIModel.groupAccountChangeDetailVo.mcAccountSearchData.decode(data);
			this.hallUIModel.groupAccountChangeDetailVo.status=GroupAccountChangeDetailVo.UPDATE_INFO;
		}

		/**
		*获取转账信息
		*
		*/
		__proto.getGroupTransferInfo=function(){
			var groupVipVo=DataMgr.get().groupVipVo;
			this.hallUIModel.groupAccountTransferMoneyPanelVo.account=groupVipVo.user_account;
			var userBalanceData=DataMgr.get().userBalanceData;
			var userBalanceDataItem=userBalanceData.itemDic.get(DataMgr.GameType_Lottery_ID);
			this.hallUIModel.groupAccountTransferMoneyPanelVo.balance=Number(userBalanceDataItem.user_balance);
			this.hallUIModel.groupAccountTransferMoneyPanelVo.status="Update_Status";
		}

		/**
		*转账到其他账号
		*
		*/
		__proto.transferMoneyToGroupAccount=function(){
			this.showLoading();
			var url=GameUtil.GG_DOMAIN+"/USER_PROXY_TRANSFER";
			var data=new Object();
			data["id"]=this.playerInfoModel.playerInfoVo.id;
			var groupVipVo=DataMgr.get().groupVipVo;
			data["user_id"]=groupVipVo.id;
			data["transfer_amount"]=this.hallUIModel.groupAccountTransferMoneyPanelVo.money;
			data["balance_password"]=this.hallUIModel.groupAccountTransferMoneyPanelVo.password;
			this.sendHttpRequest(url,"TRANSFER_MONEY_TO_GROUP_ACCOUNT_COMPLETE_Cmd","","json",data,false,GameUtil.headers);
		}

		/**
		*转账成功
		*
		*/
		__proto.transferMoneyToGroupAccountComplete=function(){
			this.hideLoading();
			this.showAlert("转账成功");
			this.sendNotification("GET_GAME_MONEY_Cmd");
			this.hallUIModel.groupAccountTransferMoneyPanelVo.money=0;
			this.hallUIModel.groupAccountTransferMoneyPanelVo.password="";
			this.hallUIModel.groupAccountTransferMoneyPanelVo.status="Update_Status";
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_ACCOUNT_TRANSFER_MONNEY,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		GroupCommand.GET_GROUP_STATISTICAL_ANALYSISR_CMD="GET_GROUP_STATISTICAL_ANALYSISR_Cmd";
		GroupCommand.GET_GROUP_STATISTICAL_ANALYSISR_COMPLETE_CMD="GET_GROUP_STATISTICAL_ANALYSISR_COMPLETE_Cmd";
		GroupCommand.GET_GROUP_GAME_RECORD_CONFIG_CMD="GET_GROUP_GAME_RECORD_CONFIG_Cmd";
		GroupCommand.GET_BONESRANG_DATA_CMD="GET_BONESRANG_DATA_Cmd";
		GroupCommand.GET_BONESRANG_DATA_COMPLETE_CMD="GET_BONESRANG_DATA_COMPLETE_Cmd";
		GroupCommand.GET_BONESRANG_DATA1_CMD="GET_BONESRANG_DATA1_Cmd";
		GroupCommand.GET_BONESRANG_DATA1_COMPLETE_CMD="GET_BONESRANG_DATA1_COMPLETE_Cmd";
		GroupCommand.GET_DAILY_BONESRANG_DATA1_COMPLETE_CMD="GET_DAILY_BONESRANG_DATA1_COMPLETE_Cmd";
		GroupCommand.SET_AGENT_PERCENT_CMD="SET_AGENT_PERCENT_Cmd";
		GroupCommand.SET_AGENT_PERCENT_COMPLETE_CMD="SET_AGENT_PERCENT_COMPLETE_Cmd";
		GroupCommand.GET_GROUP_WINLOST_DATA_CMD="GET_GROUPWINLOST_DATA_Cmd";
		GroupCommand.GET_GROUP_WINLOST_DATA_COMPLETE_CMD="GET_GROUPWINLOST_DATA_COMPLETE_Cmd";
		GroupCommand.NEW_AGENT_CMD="NEW_AGENT_Cmd";
		GroupCommand.NEW_AGENT_COMPLETE_CMD="NEW_AGENT_COMPLETE_Cmd";
		GroupCommand.GET_GROUP_VIP_CMD="GET_GROUP_VIP_Cmd";
		GroupCommand.GET_GROUP_VIP_COMPLETE_CMD="GET_GROUP_VIP_COMPLETE_Cmd";
		GroupCommand.GET_GROUP_BET_RECORD_CMD="GET_GROUP_BET_RECORD_Cmd";
		GroupCommand.GET_GROUP_BET_RECORD_COMPLETE_CMD="GET_GROUP_BET_RECORD_COMPLETE_Cmd";
		GroupCommand.GET_ACCOUNT_CHANGE_DETAIL_CMD="GET_ACCOUNT_CHANGE_DETAIL_Cmd";
		GroupCommand.GET_ACCOUNT_CHANGE_DETAIL_COMPLETE_CMD="GET_ACCOUNT_CHANGE_DETAIL_COMPLETE_Cmd";
		GroupCommand.GET_GROUP_TRANSFER_INFO_CMD="GET_GROUP_TRANSFER_INFO_Cmd";
		GroupCommand.TRANSFER_MONEY_TO_GROUP_ACCOUNT_CMD="TRANSFER_MONEY_TO_GROUP_ACCOUNT_Cmd";
		GroupCommand.TRANSFER_MONEY_TO_GROUP_ACCOUNT_COMPLETE_CMD="TRANSFER_MONEY_TO_GROUP_ACCOUNT_COMPLETE_Cmd";
		return GroupCommand;
	})(BaseCommand)


	//class robotLegs.sprite.BaseGButton extends fairygui.GButton
	var BaseGButton=(function(_super){
		function BaseGButton(){
			this.commandMap=null;
			BaseGButton.__super.call(this);
			this.commandMap=CommandMap.getInstance();
		}

		__class(BaseGButton,'robotLegs.sprite.BaseGButton',_super);
		var __proto=BaseGButton.prototype;
		/**
		*彈窗提示
		*@param _title
		*@param _content
		*
		*/
		__proto.showAlert=function(_txt,_cmd,_btnCount,_data){
			(_cmd===void 0)&& (_cmd="");
			(_btnCount===void 0)&& (_btnCount=1);
			this.sendNotification("Show_Alert_Cmd",[_txt,_cmd,_btnCount,_data]);
		}

		/**
		*发送消息
		*@param _notificationVo
		*
		*/
		__proto.sendNotification=function(_cmd,_data){
			var notificationVo=new NotificationVo();
			notificationVo.cmd=_cmd;
			notificationVo.data=_data;
			this.commandMap.sendNotification(notificationVo);
		}

		return BaseGButton;
	})(GButton)


	//class game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoWindow extends robotLegs.sprite.BaseUISprite
	var NumberGamesZhuiHaoWindow=(function(_super){
		function NumberGamesZhuiHaoWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesZhuiHaoWindowVo=null;
			this.numberGamesZhuiHaoBetWindow=null;
			this.nameTxt=null;
			this.leftTimeTxt=null;
			this.itemList=null;
			this.countTxt=null;
			this.totalPriceTxt=null;
			this.zhongJiangStopBtn=null;
			this.clearBtn=null;
			this.betBtn=null;
			this.backBtn=null;
			this.visibleController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesZhuiHaoWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesZhuiHaoWindow,'game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoWindow',_super);
		var __proto=NumberGamesZhuiHaoWindow.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.visibleController.selectedIndex=0;
			this.itemList.setVirtual();
			this.itemList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
			this.clearBtn.onClick(this,this.clear);
			this.backBtn.onClick(this,this.back);
			this.zhongJiangStopBtn.onClick(this,this.zhongJiangStop);
			this.betBtn.onClick(this,this.bet);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Loading_Status",new Handler(this,this.loading));
			this.registerStatusCallBack("Update_Status",new Handler(this,this.update));
			this.registerStatusCallBack("Choose_Time_Status",new Handler(this,this.chooseTime));
			this.registerStatusCallBack("Input_Numbers_Status",new Handler(this,this.inputNumbers));
			this.registerStatusCallBack("Close_Bet_Window_Status",new Handler(this,this.closeBetWindow));
			this.registerStatusCallBack("Close_Zhui_Hao_Status",new Handler(this,this.back));
		}

		__proto.loading=function(){
			this.numberGamesZhuiHaoWindowVo.openAlreadyBol=true;
			this.nameTxt.text=this.numberGamesZhuiHaoWindowVo.gameName;
			this.leftTimeTxt.text="Loading...";
			this.itemList.numItems=0;
			this.countTxt.text="0";
			this.totalPriceTxt.text="0";
			this.visibleController.selectedIndex=1;
			this.view.x=-GRoot.inst.width *.5;
			Tween.to(this.view,{x:0},GameUtil.Time_Panel_Ani,Ease.cubicInOut);
		}

		/**
		*得到数据后更新列表
		*
		*/
		__proto.update=function(){
			this.visibleController.selectedIndex=1;
			this.itemList.numItems=this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr.length;
			this.stopTime();
			this.numberGamesZhuiHaoWindowVo.leftTime=Math.round((this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[0].endTime-Laya.timer.currTimer)/ 1000);
			this.updateTime();
			this.startTime(1000,new Handler(this,this.updateTime));
			this.chooseTime();
		}

		/**
		*更新时间
		*
		*/
		__proto.updateTime=function(){
			this.numberGamesZhuiHaoWindowVo.leftTime--;
			this.leftTimeTxt.text=BaseStaticFuncs.format("距{0}期截止还剩{1}",this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[0].time,BaseStaticFuncs.changeTime2(this.numberGamesZhuiHaoWindowVo.leftTime));
			this.leftTimeTxt.visible=false;
			if(this.numberGamesZhuiHaoWindowVo.leftTime <=0){
				this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr.shift();
				this.update();
			}
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneZhuiHao=obj;
			oneZhuiHao.update(this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[index]);
		}

		/**
		*选择期数
		*
		*/
		__proto.chooseTime=function(){
			this.numberGamesZhuiHaoWindowVo.chooseTimes=0;
			this.numberGamesZhuiHaoWindowVo.totalBei=0;
			this.numberGamesZhuiHaoWindowVo.totalPrice=0;
			for(var i=0;i < this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr.length;i++){
				if(this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[i].chooseBol){
					this.numberGamesZhuiHaoWindowVo.chooseTimes++;
					this.numberGamesZhuiHaoWindowVo.totalBei+=Number(this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[i].bei);
					this.numberGamesZhuiHaoWindowVo.totalPrice+=this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[i].bei *this.numberGamesZhuiHaoWindowVo.oneBeiTotalPrice;
				}
			}
			this.countTxt.text=this.numberGamesZhuiHaoWindowVo.chooseTimes.toString();
			this.totalPriceTxt.text=this.numberGamesZhuiHaoWindowVo.totalPrice.toFixed(3);
		}

		/**
		*键盘输入数字
		*
		*/
		__proto.inputNumbers=function(){
			for(var i=0;i < this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr.length;i++){
				if(this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[i].id==this.numberGamesZhuiHaoWindowVo.chooseId){
					this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[i].bei=this.numberGamesZhuiHaoWindowVo.inputBei;
					break ;
				}
			}
			this.update();
		}

		/**
		*清空
		*
		*/
		__proto.clear=function(){
			for(var i=0;i < this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr.length;i++){
				this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr[i].chooseBol=false;
			}
			this.itemList.numItems=this.numberGamesZhuiHaoWindowVo.zhuiHaoOneVoArr.length;
		}

		/**
		*中奖即停
		*
		*/
		__proto.zhongJiangStop=function(){
			this.numberGamesZhuiHaoWindowVo.zhongJiangStopBol=this.zhongJiangStopBtn.selected;
		}

		__proto.bet=function(){
			if(this.numberGamesZhuiHaoWindowVo.chooseTimes==0){
				this.showAlert("请选择追号的期数");
				return;
			}
			this.numberGamesZhuiHaoBetWindow.open();
			this.sendNotification("Open_Zhui_Hao_Bet_Window_Cmd");
		}

		/**
		*关闭下注窗口
		*
		*/
		__proto.closeBetWindow=function(){
			this.numberGamesZhuiHaoBetWindow.close();
		}

		__proto.back=function(){
			this.numberGamesZhuiHaoWindowVo.openAlreadyBol=false;
			this.sendNotification("Display_Iframe_Cmd");
			Tween.to(this.view,{x:-GRoot.inst.width},GameUtil.Time_Panel_Ani,Ease.cubicInOut,Handler.create(this,this.close));
		}

		__proto.close=function(){
			this.numberGamesZhuiHaoWindowVo.chooseId=0;
			this.numberGamesZhuiHaoWindowVo.inputBei="0";
			this.visibleController.selectedIndex=0;
		}

		return NumberGamesZhuiHaoWindow;
	})(BaseUISprite)


	//class game.numberGame.v.betHistory.NumberGamesBetHistory extends robotLegs.sprite.BaseUISprite
	var NumberGamesBetHistory=(function(_super){
		function NumberGamesBetHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesBetHistoryVo=null;
			this.numberGamesBetHistoryMain=null;
			this.backBtn=null;
			this.displayController=null;
			this.removeAni=null;
			this.openAni=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesBetHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesBetHistory,'game.numberGame.v.betHistory.NumberGamesBetHistory',_super);
		var __proto=NumberGamesBetHistory.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.backBtn.onClick(this,this.closeBetHistory);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Open_Number_Games_Bet_History_Cmd",new Handler(this,this.openBetHistory));
		}

		/**
		*打开下注历史纪录
		*
		*/
		__proto.openBetHistory=function(){
			this.displayController.selectedIndex=1;
			this.view.x=-GRoot.inst.width *.5;
			Tween.to(this.view,{x:0},GameUtil.Time_Panel_Ani,Ease.cubicInOut);
		}

		/**
		*打开完毕
		*
		*/
		__proto.open=function(){}
		/**
		*关闭下注历史纪录
		*
		*/
		__proto.closeBetHistory=function(){
			Tween.to(this.view,{x:-GRoot.inst.width},GameUtil.Time_Panel_Ani,Ease.cubicInOut,Handler.create(this,this.close));
		}

		__proto.close=function(){
			this.sendNotification("Display_Iframe_Cmd");
			this.displayController.selectedIndex=0;
			this.numberGamesBetHistoryVo.betHistoryMainVo.oneBetHistoryVoArr.length=0;
			this.numberGamesBetHistoryVo.betHistoryMainVo.currentIndex=9;
			this.numberGamesBetHistoryVo.betHistoryMainVo.getPageBolArr=[];
			this.numberGamesBetHistoryVo.betHistoryMainVo.status="Update_Bet_History_Status";
		}

		return NumberGamesBetHistory;
	})(BaseUISprite)


	//class game.numberGame.v.betHistory.NumberGamesBetHistoryMain extends robotLegs.sprite.BaseUISprite
	var NumberGamesBetHistoryMain=(function(_super){
		function NumberGamesBetHistoryMain(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesBetHistoryMainVo=null;
			this.betHistoryList=null;
			this.__mouseDownY=NaN;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesBetHistoryMain.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesBetHistoryMain,'game.numberGame.v.betHistory.NumberGamesBetHistoryMain',_super);
		var __proto=NumberGamesBetHistoryMain.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.betHistoryList.setVirtual();
			this.betHistoryList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		// this.betHistoryList.on(Event.MOUSE_DOWN,this,this.mouseDown);
		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Bet_History_Status",new Handler(this,this.updateBetHistory));
		}

		/**
		*更新下注记录
		*
		*/
		__proto.updateBetHistory=function(){
			this.betHistoryList.numItems=this.numberGamesBetHistoryMainVo.oneBetHistoryVoArr.length;
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneHistory=obj;
			oneHistory.render(this.numberGamesBetHistoryMainVo.oneBetHistoryVoArr[index]);
			if(index % 10==0){
				if(this.numberGamesBetHistoryMainVo.oneBetHistoryVoArr.length % 10==0){
					this.numberGamesBetHistoryMainVo.currentIndex=index+10;
					this.sendNotification("Get_Number_Games_Bet_Result_Cmd");
				}
			}
		}

		return NumberGamesBetHistoryMain;
	})(BaseUISprite)


	//class game.numberGame.v.betHistory.NumberGamesOneBetHistory extends fairygui.GButton
	var NumberGamesOneBetHistory=(function(_super){
		function NumberGamesOneBetHistory(){
			this.winController=null;
			this.gameNameTxt=null;
			this.playTypeTxt=null;
			this.betInfoTxt=null;
			this.betTypeTxt=null;
			this.totalPriceTxt=null;
			this.lotteryTimeTxt=null;
			this.betIdTxt=null;
			this.numberTxt=null;
			this.rewardsTxt=null;
			this.betTimeTxt=null;
			this.oneBetHistoryVo=null;
			NumberGamesOneBetHistory.__super.call(this);
		}

		__class(NumberGamesOneBetHistory,'game.numberGame.v.betHistory.NumberGamesOneBetHistory',_super);
		var __proto=NumberGamesOneBetHistory.prototype;
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this.winController=this.getController("winController");
			this.gameNameTxt=this.getChild("gameNameTxt");
			this.playTypeTxt=this.getChild("playTypeTxt");
			this.betInfoTxt=this.getChild("betInfoTxt");
			this.betTypeTxt=this.getChild("betTypeTxt");
			this.totalPriceTxt=this.getChild("totalPriceTxt");
			this.lotteryTimeTxt=this.getChild("lotteryTimeTxt");
			this.betIdTxt=this.getChild("betIdTxt");
			this.numberTxt=this.getChild("numberTxt");
			this.rewardsTxt=this.getChild("rewardsTxt");
			this.betTimeTxt=this.getChild("betTimeTxt");
		}

		__proto.render=function(_oneBetHistoryVo){
			this.oneBetHistoryVo=_oneBetHistoryVo;
			this.winController.selectedIndex=_oneBetHistoryVo.winIndex;
			this.gameNameTxt.text=_oneBetHistoryVo.gameName;
			this.playTypeTxt.text=_oneBetHistoryVo.playType;
			this.betInfoTxt.text=_oneBetHistoryVo.betInfo;
			this.betTypeTxt.text=_oneBetHistoryVo.betType;
			this.totalPriceTxt.text=_oneBetHistoryVo.totalPrice;
			this.lotteryTimeTxt.text=_oneBetHistoryVo.lotteryTime;
			this.betIdTxt.text=_oneBetHistoryVo.betId;
			this.numberTxt.text=_oneBetHistoryVo.number;
			this.rewardsTxt.text="￥"+_oneBetHistoryVo.rewards+"元";
			var date=new Date();
			date.setTime(Number(_oneBetHistoryVo.betTime)*1000);
			this.betTimeTxt.text=BaseStaticFuncs.format("{0}-{1}-{2} {3}:{4}:{5}",date.getFullYear(),date.getMonth()+1,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
		}

		return NumberGamesOneBetHistory;
	})(GButton)


	//class game.numberGame.v.history.BaseGameHistory extends robotLegs.sprite.BaseUISprite
	var BaseGameHistory=(function(_super){
		function BaseGameHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.gameHistoryVo=null;
			this.historyList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			BaseGameHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(BaseGameHistory,'game.numberGame.v.history.BaseGameHistory',_super);
		var __proto=BaseGameHistory.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.historyList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Display_History_Status",new Handler(this,this.displayHistory));
		}

		__proto.displayHistory=function(){
			this.historyList.numItems=this.gameHistoryVo.oneHistoryVoArr.length;
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){}
		return BaseGameHistory;
	})(BaseUISprite)


	//class game.numberGame.v.history.BaseOneGameHistory extends fairygui.GButton
	var BaseOneGameHistory=(function(_super){
		function BaseOneGameHistory(){
			this.oneGameHistoryVo=null;
			this.bgController=null;
			this.timeTxt=null;
			this.__numberCount=0;
			this.__numberArr=[];
			BaseOneGameHistory.__super.call(this);
		}

		__class(BaseOneGameHistory,'game.numberGame.v.history.BaseOneGameHistory',_super);
		var __proto=BaseOneGameHistory.prototype;
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this.timeTxt=this.getChild("timeTxt");
			this.bgController=this.getController("bgController");
			for(var i=0;i < this.__numberCount;i++){
				this.__numberArr.push(this.getChild("number_"+i));
			}
		}

		/**
		*重绘历史纪录
		*@param _cQSSCOneGameHistoryVo
		*
		*/
		__proto.render=function(_oneGameHistoryVo){
			this.oneGameHistoryVo=_oneGameHistoryVo;
			this.bgController.selectedIndex=Number(this.oneGameHistoryVo.colorIndex);
			this.timeTxt.text=this.oneGameHistoryVo.time;
			for(i=0;i < this.__numberArr.length;i++){
				this.__numberArr[i].visible=false;
			}
			for(var i=0;i < _oneGameHistoryVo.numberArr.length;i++){
				if(this.__numberArr[i].getController("numberController"))
					this.__numberArr[i].getController("numberController").selectedIndex=Number(_oneGameHistoryVo.numberArr[i]);
				else
				this.__numberArr[i].text=_oneGameHistoryVo.numberArr[i];
				this.__numberArr[i].visible=true;
			}
		}

		return BaseOneGameHistory;
	})(GButton)


	//class game.numberGame.v.history.NumberGamesHistory extends robotLegs.sprite.BaseUISprite
	var NumberGamesHistory=(function(_super){
		function NumberGamesHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesHistoryVo=null;
			this.bg=null;
			this.cQSSCGameHistory=null;
			this.fc3dGameHistory=null;
			this.jsk3GameHistory=null;
			this.bjpk10GameHistory=null;
			this.bjkl8GameHistory=null;
			this.hk6GameHistory=null;
			this.klsfGameHistory=null;
			this.gameController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesHistory,'game.numberGame.v.history.NumberGamesHistory',_super);
		var __proto=NumberGamesHistory.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.bg.onClick(this,this.closeHistory);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Display_History_Status",new Handler(this,this.displayHistory));
		}

		/**
		*显示
		*
		*/
		__proto.displayHistory=function(){
			this.gameController.selectedPage=this.numberGamesHistoryVo.baseGame=="gd11x5" ? "cqssc" :this.numberGamesHistoryVo.baseGame;
		}

		/**
		*关闭
		*
		*/
		__proto.closeHistory=function(){
			this.gameController.selectedIndex=0;
		}

		return NumberGamesHistory;
	})(BaseUISprite)


	//class game.numberGame.v.menu.game.NumberGameMenuCurrentGame extends robotLegs.sprite.BaseUISprite
	var NumberGameMenuCurrentGame=(function(_super){
		function NumberGameMenuCurrentGame(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGameMenuCurrentGameVo=null;
			this.gameList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGameMenuCurrentGame.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGameMenuCurrentGame,'game.numberGame.v.menu.game.NumberGameMenuCurrentGame',_super);
		var __proto=NumberGameMenuCurrentGame.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.gameList.setVirtual();
			this.gameList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.updateList));
		}

		/**
		*更新列表
		*
		*/
		__proto.updateList=function(){
			this.gameList.numItems=this.numberGameMenuCurrentGameVo.gameMenuOneGameArr.length;
			this.gameList.scrollToView(0,true);
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGame=obj;
			oneGame.update(this.numberGameMenuCurrentGameVo.gameMenuOneGameArr[index]);
		}

		return NumberGameMenuCurrentGame;
	})(BaseUISprite)


	//class game.numberGame.v.menu.game.NumberGameMenuGame extends robotLegs.sprite.BaseUISprite
	var NumberGameMenuGame=(function(_super){
		function NumberGameMenuGame(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGameMenuGameVo=null;
			this.gameList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGameMenuGame.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGameMenuGame,'game.numberGame.v.menu.game.NumberGameMenuGame',_super);
		var __proto=NumberGameMenuGame.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.gameList.setVirtual();
			this.gameList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.updateList));
		}

		/**
		*更新列表
		*
		*/
		__proto.updateList=function(){
			this.gameList.numItems=this.numberGameMenuGameVo.menuOneGameTypeVoArr.length;
			this.gameList.scrollToView(0,true);
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGameType=obj;
			oneGameType.update(this.numberGameMenuGameVo.menuOneGameTypeVoArr[index]);
		}

		return NumberGameMenuGame;
	})(BaseUISprite)


	//class game.numberGame.v.menu.game.NumberGamesGameMenuMain extends robotLegs.sprite.BaseUISprite
	var NumberGamesGameMenuMain=(function(_super){
		function NumberGamesGameMenuMain(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesGameMenuMainVo=null;
			this.backBtn=null;
			this.nameTxt=null;
			this.numberGameMenuCurrentGame=null;
			this.numberGameMenuGame=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesGameMenuMain.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesGameMenuMain,'game.numberGame.v.menu.game.NumberGamesGameMenuMain',_super);
		var __proto=NumberGamesGameMenuMain.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.backBtn.onClick(this,this.back);
		}

		__proto.back=function(){
			this.sendNotification("Hide_Menu_Cmd");
		}

		__proto.updateName=function(_gameName){
			this.nameTxt.text=_gameName;
		}

		return NumberGamesGameMenuMain;
	})(BaseUISprite)


	//class game.numberGame.v.menu.NumberGamesMenu extends robotLegs.sprite.BaseUISprite
	var NumberGamesMenu=(function(_super){
		function NumberGamesMenu(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesMenuVo=null;
			this.menuController=null;
			this.backBtn=null;
			this.gameBtn=null;
			this.playTypeBtn=null;
			this.btnInfo=null;
			this.numberGamesGameMenuMain=null;
			this.numberGamesPlayTypeMenu=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesMenu.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesMenu,'game.numberGame.v.menu.NumberGamesMenu',_super);
		var __proto=NumberGamesMenu.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.backBtn.onClick(this,this.back);
			this.gameBtn.onClick(this,this.displayMenu,[1]);
			this.playTypeBtn.onClick(this,this.displayMenu,[2]);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Title_Status",new Handler(this,this.updateTitle));
			this.registerStatusCallBack("Close_Menu_List_Status",new Handler(this,this.closeMenuList));
			this.registerStatusCallBack("Hide_Or_Display_Play_Type_Status",new Handler(this,this.hideOrDisplayPlayType));
		}

		__proto.hideOrDisplayPlayType=function(){
			this.playTypeBtn.visible=this.numberGamesMenuVo.hideOrDisplayIndex==1 ? false :true;
		}

		/**
		*更新标题
		*
		*/
		__proto.updateTitle=function(){
			this.gameBtn.text=this.numberGamesMenuVo.gameName;
			this.playTypeBtn.text=this.numberGamesMenuVo.playTypeName;
		}

		/**
		*关闭菜单
		*
		*/
		__proto.closeMenuList=function(){
			this.menuController.selectedIndex=0;
			this.gameBtn.selected=false;
			this.playTypeBtn.selected=false;
		}

		/**
		*显示游戏列表
		*
		*/
		__proto.displayMenu=function(_controlIndex){
			this.gameBtn.selected=false;
			this.playTypeBtn.selected=false;
			if(_controlIndex==this.menuController.selectedIndex){
				this.menuController.selectedIndex=0;
				return;
			}
			if(_controlIndex==1){
				this.gameBtn.selected=true;
				this.sendNotification("Update_Game_Menu_List_Cmd");
				this.numberGamesGameMenuMain.updateName(this.numberGamesMenuVo.gamesGameMenuVo.currentGameVo.gameMenuOneGameArr[0].gameName);
			}
			else if(_controlIndex==2){
				this.playTypeBtn.selected=true;
				this.sendNotification("Off_Play_Type_Menu_Cmd");
				this.sendNotification("Update_Play_Type_Menu_List_Cmd");
				this.numberGamesPlayTypeMenu.updateType(this.numberGamesMenuVo.playTypeName);
			}
			this.menuController.selectedIndex=_controlIndex;
		}

		/**
		*返回按钮
		*
		*/
		__proto.back=function(){
			this.sendNotification("Close_Video_Cmd");
			this.sendNotification("Start_Close_Number_Games_Cmd");
		}

		return NumberGamesMenu;
	})(BaseUISprite)


	//class game.numberGame.v.menu.playType.NumberGamesPlayTypeMenu extends robotLegs.sprite.BaseUISprite
	var NumberGamesPlayTypeMenu=(function(_super){
		function NumberGamesPlayTypeMenu(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesPlayTypeMenuVo=null;
			this.backBtn=null;
			this.playTypeTxt=null;
			this.typeList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesPlayTypeMenu.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesPlayTypeMenu,'game.numberGame.v.menu.playType.NumberGamesPlayTypeMenu',_super);
		var __proto=NumberGamesPlayTypeMenu.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.typeList.scrollItemToViewOnClick=false;
			this.typeList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
			this.backBtn.onClick(this,this.back);
		}

		__proto.back=function(){
			this.sendNotification("Hide_Menu_Cmd");
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Render_Play_Type_Menu_Status",new Handler(this,this.updatePlayTypeMenu));
		}

		__proto.updateType=function(_name){
			this.playTypeTxt.text=_name;
		}

		/**
		*更新列表
		*
		*/
		__proto.updatePlayTypeMenu=function(){
			this.typeList.numItems=this.numberGamesPlayTypeMenuVo.onePlayTypeVoArr.length;
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var onePlayType=obj;
			onePlayType.update(this.numberGamesPlayTypeMenuVo.onePlayTypeVoArr[index]);
		}

		return NumberGamesPlayTypeMenu;
	})(BaseUISprite)


	//class game.numberGame.v.number.boxType.NumberGamesSelectBoxType extends robotLegs.sprite.BaseUISprite
	var NumberGamesSelectBoxType=(function(_super){
		function NumberGamesSelectBoxType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesSelectBoxTypeVo=null;
			this.boxList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectBoxType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectBoxType,'game.numberGame.v.number.boxType.NumberGamesSelectBoxType',_super);
		var __proto=NumberGamesSelectBoxType.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.boxList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_List_Status",new Handler(this,this.updateList));
		}

		/**
		*更新列表
		*
		*/
		__proto.updateList=function(){
			this.boxList.numItems=this.numberGamesSelectBoxTypeVo.boxNumbersVoArr.length;
			this.boxList.scrollToView(0,true);
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneLotteryNumbers=obj;
			oneLotteryNumbers.render(this.numberGamesSelectBoxTypeVo.boxNumbersVoArr[index]);
		}

		return NumberGamesSelectBoxType;
	})(BaseUISprite)


	//class game.numberGame.v.number.bs.NumberGamesSelectBSNumber extends robotLegs.sprite.BaseUISprite
	var NumberGamesSelectBSNumber=(function(_super){
		function NumberGamesSelectBSNumber(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesSelectBSNumberVo=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectBSNumber.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectBSNumber,'game.numberGame.v.number.bs.NumberGamesSelectBSNumber',_super);
		var __proto=NumberGamesSelectBSNumber.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			(this.view).onClick(this,this.choose);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this._$3_update));
		}

		__proto._$3_update=function(){
			this.view.getController("button").selectedIndex=this.numberGamesSelectBSNumberVo.chooseBol ? 1 :0;
		}

		/**
		*选择
		*
		*/
		__proto.choose=function(){
			this.numberGamesSelectBSNumberVo.chooseBol=!this.numberGamesSelectBSNumberVo.chooseBol;
			this._$3_update();
			this.sendNotification("Choose_One_Number_Cmd");
		}

		return NumberGamesSelectBSNumber;
	})(BaseUISprite)


	//class game.numberGame.v.number.bs.NumberGamesSelectBSNumbers extends robotLegs.sprite.BaseUISprite
	var NumberGamesSelectBSNumbers=(function(_super){
		function NumberGamesSelectBSNumbers(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesSelectBSNumbersVo=null;
			this.weiTxt=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectBSNumbers.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectBSNumbers,'game.numberGame.v.number.bs.NumberGamesSelectBSNumbers',_super);
		var __proto=NumberGamesSelectBSNumbers.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.weiTxt.text=this.numberGamesSelectBSNumbersVo.title;
		}

		return NumberGamesSelectBSNumbers;
	})(BaseUISprite)


	//class game.numberGame.v.number.danTuo.NumberGamesDanTuo extends robotLegs.sprite.BaseUISprite
	var NumberGamesDanTuo=(function(_super){
		function NumberGamesDanTuo(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesDanTuoVo=null;
			this.numberList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesDanTuo.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesDanTuo,'game.numberGame.v.number.danTuo.NumberGamesDanTuo',_super);
		var __proto=NumberGamesDanTuo.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			(this.numberList.getChildAt(0)).init(this.numberGamesDanTuoVo);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_All_Numbers_Status",new Handler(this,this.updateAllNumbers));
			this.registerStatusCallBack("Reset_Control_Btn_Status",new Handler(this,this.resetControlBtn));
		}

		/**
		*更新所有的数字
		*
		*/
		__proto.updateAllNumbers=function(){
			(this.numberList.getChildAt(0)).updateAllNumbers();
		}

		/**
		*重置控制按钮
		*
		*/
		__proto.resetControlBtn=function(){
			(this.numberList.getChildAt(0)).resetControlBtn();
		}

		return NumberGamesDanTuo;
	})(BaseUISprite)


	//class game.numberGame.v.number.dragonTiger.NumberGamesDragonTigerTypes extends robotLegs.sprite.BaseUISprite
	var NumberGamesDragonTigerTypes=(function(_super){
		function NumberGamesDragonTigerTypes(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesDragonTigerTypesVo=null;
			this.comp$ChooseNumberBtn$0=null;
			this.comp$ChooseNumberBtn$1=null;
			this.comp$ChooseNumberBtn$2=null;
			this.comp$ChooseNumberBtn$3=null;
			this.comp$ChooseNumberBtn$4=null;
			this.comp$ChooseNumberBtn$5=null;
			this.comp$ChooseNumberBtn$6=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesDragonTigerTypes.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesDragonTigerTypes,'game.numberGame.v.number.dragonTiger.NumberGamesDragonTigerTypes',_super);
		var __proto=NumberGamesDragonTigerTypes.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.comp$ChooseNumberBtn$0.bindViewVo(this.numberGamesDragonTigerTypesVo.chooseNumberBtnVoArr[0]);
			this.comp$ChooseNumberBtn$1.bindViewVo(this.numberGamesDragonTigerTypesVo.chooseNumberBtnVoArr[1]);
			this.comp$ChooseNumberBtn$2.bindViewVo(this.numberGamesDragonTigerTypesVo.chooseNumberBtnVoArr[2]);
			this.comp$ChooseNumberBtn$3.bindViewVo(this.numberGamesDragonTigerTypesVo.chooseNumberBtnVoArr[3]);
			this.comp$ChooseNumberBtn$4.bindViewVo(this.numberGamesDragonTigerTypesVo.chooseNumberBtnVoArr[4]);
			this.comp$ChooseNumberBtn$5.bindViewVo(this.numberGamesDragonTigerTypesVo.chooseNumberBtnVoArr[5]);
			this.comp$ChooseNumberBtn$6.bindViewVo(this.numberGamesDragonTigerTypesVo.chooseNumberBtnVoArr[6]);
		}

		return NumberGamesDragonTigerTypes;
	})(BaseUISprite)


	//class game.numberGame.v.number.help.NumberGamesHelp extends robotLegs.sprite.BaseUISprite
	var NumberGamesHelp=(function(_super){
		function NumberGamesHelp(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesHelpVo=null;
			this.helpTxt=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesHelp.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesHelp,'game.numberGame.v.number.help.NumberGamesHelp',_super);
		var __proto=NumberGamesHelp.prototype;
		__proto.initStatusCallBack=function(){
			this.registerStatusCallBack("Update_Status",new Handler(this,this._$3_update));
		}

		/**
		*更新
		*
		*/
		__proto._$3_update=function(){
			this.helpTxt.text=this.numberGamesHelpVo.help+"\n\n投注方案："+this.numberGamesHelpVo.sample+"\n\n开奖号码："+this.numberGamesHelpVo.reward
		}

		return NumberGamesHelp;
	})(BaseUISprite)


	//class game.numberGame.v.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiType extends robotLegs.sprite.BaseUISprite
	var NumberGamesZuXuanHeZhiType=(function(_super){
		function NumberGamesZuXuanHeZhiType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesZuXuanHeZhiTypeVo=null;
			this.numberList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesZuXuanHeZhiType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesZuXuanHeZhiType,'game.numberGame.v.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiType',_super);
		var __proto=NumberGamesZuXuanHeZhiType.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.numberList.scrollItemToViewOnClick=false;
			this.numberList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_List_Status",new Handler(this,this.updateList));
		}

		/**
		*更新列表
		*
		*/
		__proto.updateList=function(){
			this.numberList.numItems=this.numberGamesZuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr.length;
			this.numberList.scrollToView(0,true);
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneLotteryNumbers=obj;
			this.numberGamesZuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr[index].resetBol=true;
			oneLotteryNumbers.render(this.numberGamesZuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr[index]);
		}

		return NumberGamesZuXuanHeZhiType;
	})(BaseUISprite)


	//class game.numberGame.v.number.input.SelectNumberInputType extends robotLegs.sprite.BaseUISprite
	var SelectNumberInputType=(function(_super){
		function SelectNumberInputType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.selectNumberInputTypeVo=null;
			this.inputText=null;
			this.clearBtn=null;
			this.tipTxt=null;
			this.wei_0=null;
			this.wei_1=null;
			this.wei_2=null;
			this.wei_3=null;
			this.wei_4=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SelectNumberInputType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SelectNumberInputType,'game.numberGame.v.number.input.SelectNumberInputType',_super);
		var __proto=SelectNumberInputType.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.clearBtn.onClick(this,this.clearInputText);
			this.inputText.on("input",this,this.inputNumbers);
			if(this.wei_0){
				this.wei_0.onClick(this,this.chooseWei,[0]);
				this.wei_1.onClick(this,this.chooseWei,[1]);
				this.wei_2.onClick(this,this.chooseWei,[2]);
				this.wei_3.onClick(this,this.chooseWei,[3]);
				this.wei_4.onClick(this,this.chooseWei,[4]);
			}
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Reset_Status",new Handler(this,this.reset));
		}

		__proto.reset=function(){
			this.wei_0.getController("button").selectedIndex=0;
			this.wei_1.getController("button").selectedIndex=0;
			this.wei_2.getController("button").selectedIndex=0;
			this.wei_3.getController("button").selectedIndex=0;
			this.wei_4.getController("button").selectedIndex=0;
			this.clearInputText();
			switch(this.selectNumberInputTypeVo.baseGame){
				case "cqssc":
				case "fc3d":
					this.tipTxt.text="注单间请使用[,] [ ]或[;]隔开。";
					break ;
				case "gd11x5":
				case "bjpk10":
					this.tipTxt.text="号码间请使用空白隔开，注单间请使用[,]或[;]隔开。";
					break ;
				}
		}

		__proto.clearInputText=function(){
			this.inputText.text="";
		}

		__proto.chooseWei=function(_index){
			this.selectNumberInputTypeVo.weiArr[_index]=this.selectNumberInputTypeVo.weiArr[_index]==0 ? 1 :0;
			if(!this.selectNumberInputTypeVo.chooseValueArr)
				return;
			this.sendNotification("Choose_One_Number_Cmd");
		}

		/**
		*输入文本
		*
		*/
		__proto.inputNumbers=function(){
			var text=this.inputText.text;
			var baseGame=this.selectNumberInputTypeVo.baseGame;
			var lotteryBet=Injector.getInstance().getSingleton(LotteryBet);
			var numberGamesPlayerModel=Injector.getInstance().getSingleton(NumberGamesPlayerModel);
			var isSort=numberGamesPlayerModel.currentSecoundPlayTypeVo.setSort;
			var chooseValueArr=getInputArr(text,baseGame,isSort);
			var checkId=numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId;
			var count=lotteryBet.checkCount(baseGame,checkId,chooseValueArr);
			var checkArr=[];
			if(count > 1){
				var checkObj=new Object();
				for(var i=0;i < chooseValueArr.length;i++){
					var key=JSON.stringify(chooseValueArr[i]);
					if(!checkObj[key])
						checkObj[key]=true;
				}
				for(key in checkObj){
					var valueArr=JSON.parse(key);
					checkArr.push(valueArr);
				}
				this.selectNumberInputTypeVo.chooseValueArr=checkArr;
			}
			else{
				this.selectNumberInputTypeVo.chooseValueArr=chooseValueArr;
			}
			if(this.selectNumberInputTypeVo.baseGame=="gd11x5" || this.selectNumberInputTypeVo.baseGame=="bjpk10"){
				for(i=0;i < this.selectNumberInputTypeVo.chooseValueArr.length;i++){
					for(var ii=0;ii < this.selectNumberInputTypeVo.chooseValueArr[i].length;ii++){
						if(this.selectNumberInputTypeVo.chooseValueArr[i][ii].length==1){
							this.selectNumberInputTypeVo.chooseValueArr[i][ii]="0"+this.selectNumberInputTypeVo.chooseValueArr[i][ii];
						}
					}
				}
			}
			this.sendNotification("Choose_One_Number_Cmd");
		}

		return SelectNumberInputType;
	})(BaseUISprite)


	//class game.numberGame.v.number.k3.NumberGamesK33THDX extends robotLegs.sprite.BaseUISprite
	var NumberGamesK33THDX=(function(_super){
		function NumberGamesK33THDX(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.jsk33thdxVo=null;
			this.btn0=null;
			this.btn1=null;
			this.btn2=null;
			this.btn3=null;
			this.btn4=null;
			this.btn5=null;
			this.__btnArr=[];
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesK33THDX.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesK33THDX,'game.numberGame.v.number.k3.NumberGamesK33THDX',_super);
		var __proto=NumberGamesK33THDX.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			for(var i=0;i < 6;i++){
				this.__btnArr.push(this["btn"+i]);
				this.__btnArr[i]["state"]=i+1;
				this.__btnArr[i].on("fui_state_changed",this,this.stateChange);
			}
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Reset_Numbers_Status",new Handler(this,this.reset));
		}

		__proto.reset=function(){
			for(var i=0;i < this.__btnArr.length;i++){
				this.__btnArr[i].selected=false;
			}
		}

		__proto.stateChange=function(){
			this.jsk33thdxVo.chooseValueArr.length=0;
			for(var i=0;i < 6;i++){
				if(this.__btnArr[i].selected)
					this.jsk33thdxVo.chooseValueArr.push(this.__btnArr[i]["state"]);
			}
			this.sendNotification("Choose_One_Number_Cmd");
		}

		return NumberGamesK33THDX;
	})(BaseUISprite)


	//class game.numberGame.v.number.kl8rx.NumberGamesKL8RX extends robotLegs.sprite.BaseUISprite
	var NumberGamesKL8RX=(function(_super){
		function NumberGamesKL8RX(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesKL8RXVo=null;
			this.numberList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesKL8RX.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesKL8RX,'game.numberGame.v.number.kl8rx.NumberGamesKL8RX',_super);
		var __proto=NumberGamesKL8RX.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.numberList.scrollItemToViewOnClick=false;
			this.numberList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Reset_Numbers_Status",new Handler(this,this.resetNumbers));
		}

		__proto.resetNumbers=function(){
			this.numberList.numItems=1;
		}

		__proto.renderListItem=function(index,obj){
			var numbers=obj;
			numbers.update(this.numberGamesKL8RXVo.chooseValueArr,this.numberGamesKL8RXVo.maxCount);
		}

		return NumberGamesKL8RX;
	})(BaseUISprite)


	//class game.numberGame.v.number.LotterySelectNumber extends robotLegs.sprite.BaseUISprite
	var LotterySelectNumber=(function(_super){
		function LotterySelectNumber(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.lotterySelectNumberVo=null;
			this.balanceTxt=null;
			this.shoppingCartCountTxt=null;
			this.shoppingCartBtn=null;
			this.numberGameChooseTypes=null;
			this.chooseController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			LotterySelectNumber.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(LotterySelectNumber,'game.numberGame.v.number.LotterySelectNumber',_super);
		var __proto=LotterySelectNumber.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.shoppingCartCountTxt.visible=false;
			this.shoppingCartBtn.onClick(this,this.openShoppingCart);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Shopping_Cart_Count_Status",new Handler(this,this.updateShoppingCartCount));
			this.registerStatusCallBack("Update_Balance_Status",new Handler(this,this.updateBalance));
		}

		/**
		*更新购物篮的数量
		*
		*/
		__proto.updateShoppingCartCount=function(){
			if(this.lotterySelectNumberVo.shoppingCartCount==0){
				this.shoppingCartCountTxt.visible=false;
			}
			else{
				this.shoppingCartCountTxt.visible=true;
				this.shoppingCartCountTxt.text=this.lotterySelectNumberVo.shoppingCartCount.toString();
			}
		}

		/**
		*更新余额
		*
		*/
		__proto.updateBalance=function(){
			this.balanceTxt.text=this.lotterySelectNumberVo.balance.toFixed(3);
		}

		/**
		*打开购物车
		*
		*/
		__proto.openShoppingCart=function(){
			this.sendNotification("Open_Shopping_Cart_Cmd");
		}

		return LotterySelectNumber;
	})(BaseUISprite)


	//class game.numberGame.v.number.NumberGameChooseTypes extends robotLegs.sprite.BaseUISprite
	var NumberGameChooseTypes=(function(_super){
		function NumberGameChooseTypes(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGameChooseTypesVo=null;
			this.helpBtn=null;
			this.numberGamesHelp=null;
			this.helpController=null;
			this.playTypeController=null;
			this.numberGamesSelectNumberType=null;
			this.numberGamesSelectNumberRXType=null;
			this.numberGamesSpecialNumberTypes=null;
			this.numberGamesDragonTigerTypes=null;
			this.numberGamesSelectBoxType=null;
			this.numberGamesZuXuanHeZhiType=null;
			this.pK10NumberGamesSelectNumberType=null;
			this.pK10DragonTiger=null;
			this.numberGamesDanTuo=null;
			this.hk6hSelectNumberType=null;
			this.numberGamesSelectSXType=null;
			this.numberGamesSelectBSNumbers1=null;
			this.numberGamesSelectBSNumbers2=null;
			this.numberGamesSelectBSNumbers3=null;
			this.numberGamesSelectBSNumbers4=null;
			this.numberGamesKL8RX=null;
			this.selectNumberInputType=null;
			this.selectNumberInputRXType=null;
			this.numberGamesK33THDX=null;
			this.numberGamesK32THFX=null;
			this.numberGamesK32THDX=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGameChooseTypes.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGameChooseTypes,'game.numberGame.v.number.NumberGameChooseTypes',_super);
		var __proto=NumberGameChooseTypes.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.helpBtn.onClick(this,this.clickHelp);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Play_Type_Status",new Handler(this,this.updatePlayType));
		}

		/**
		*更新玩法
		*
		*/
		__proto.updatePlayType=function(){
			this.playTypeController.selectedPage=this.numberGameChooseTypesVo.playType;
		}

		/**
		*点击帮助
		*
		*/
		__proto.clickHelp=function(){
			this.helpController.selectedIndex=1;
			this.helpBtn.offClick(this,this.clickHelp);
			Laya.stage.on("mousedown",this,this.closeHelp);
		}

		/**
		*关闭帮助
		*
		*/
		__proto.closeHelp=function(){
			Laya.stage.off("mousedown",this,this.closeHelp);
			this.helpController.selectedIndex=0;
			Laya.timer.frameOnce(15,this,this.delayEvent);
		}

		__proto.delayEvent=function(){
			this.helpBtn.onClick(this,this.clickHelp);
		}

		return NumberGameChooseTypes;
	})(BaseUISprite)


	//class game.numberGame.v.number.numbersType.LotteryNumber2 extends robotLegs.sprite.BaseUISprite
	var LotteryNumber2=(function(_super){
		function LotteryNumber2(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.lotteryNumber2Vo=null;
			this.numberController=null;
			this.skinController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			LotteryNumber2.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(LotteryNumber2,'game.numberGame.v.number.numbersType.LotteryNumber2',_super);
		var __proto=LotteryNumber2.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.view.onClick(this,this.clickThisNumber);
		}

		/**
		*设置是否选择了数字
		*
		*/
		__proto.setSelectNumber=function(){
			var changeBol=(this.view).selected !=this.lotteryNumber2Vo.chooseBol ? true :false;
			(this.view).selected=this.lotteryNumber2Vo.chooseBol;
			this.skinController.selectedIndex=this.lotteryNumber2Vo.skinIndex;
			return changeBol;
		}

		/**
		*点击数字
		*
		*/
		__proto.clickThisNumber=function(){
			this.lotteryNumber2Vo.chooseBol=!this.lotteryNumber2Vo.chooseBol;
			this.sendNotification("Choose_One_Number_Cmd",[this.numberController.selectedIndex,this.lotteryNumber2Vo]);
			this.sendNotification("Reset_Control_Btn_Cmd");
		}

		return LotteryNumber2;
	})(BaseUISprite)


	//class modules.hall.m.CommonPageComponentVo extends robotLegs.vo.BaseViewVo
	var CommonPageComponentVo=(function(_super){
		function CommonPageComponentVo(){
			this.titleNames=[];
			this.isFullRow=true;
			this.titleWidths=[];
			this.leftSpace=0;
			this.rightSpace=0;
			this.titleFontSize=18;
			this.titleFontColor="#FFFFFF";
			this.contentFontSize=18;
			this.contentFontColor="#8B9198";
			this.contentItemDefaultHeight=50;
			this.currentCountFontSize=18;
			this.currentCountFontColor="#8B9198";
			this.allCountFontSize=18;
			this.allCountFontColor="#8B9198";
			this.contentValues=[];
			this.Title_Height=50;
			this.No_Data_Content_Height=80;
			this.Content_TO_Tab_Height=10;
			this.Tab_Height=80;
			this.isShowCurrentPageCount=false;
			this.currentPageCountValues=[];
			this.isShowAllPageCount=false;
			this.allPageCountValues=[];
			this.curPage=1;
			this.totalPage=1;
			this.pageCount=5;
			this.handler=null;
			CommonPageComponentVo.__super.call(this);
		}

		__class(CommonPageComponentVo,'modules.hall.m.CommonPageComponentVo',_super);
		CommonPageComponentVo.INIT_INFO="INIT_INFO";
		CommonPageComponentVo.UPDATE_INFO="UPDATE_INFO";
		return CommonPageComponentVo;
	})(BaseViewVo)


	//class modules.hall.m.CommonTypeListVo extends robotLegs.vo.BaseViewVo
	var CommonTypeListVo=(function(_super){
		function CommonTypeListVo(){
			this.title="";
			this.dataArr=[];
			this.idArr=[];
			this.selectIndex=0;
			this.selectId=0;
			this.handler=null;
			CommonTypeListVo.__super.call(this);
		}

		__class(CommonTypeListVo,'modules.hall.m.CommonTypeListVo',_super);
		var __proto=CommonTypeListVo.prototype;
		__proto.run=function(){
			if(this.handler!=null)this.handler.run();
		}

		CommonTypeListVo.INIT_INFO="INIT_INFO";
		return CommonTypeListVo;
	})(BaseViewVo)


	//class modules.hall.m.DailyEventWindowMainVo extends robotLegs.vo.BaseViewVo
	var DailyEventWindowMainVo=(function(_super){
		function DailyEventWindowMainVo(){
			this.activityId=0;
			this.currentActivity=0;
			this.totalActivity=0;
			this.startTime=null;
			this.endTime=null;
			this.claimRewardIndex=0;
			this.oneDailyEventVoArr=[];
			this.claimStatusArr=[];
			this.rewardArr=[];
			this.activityValueArr=[];
			DailyEventWindowMainVo.__super.call(this);
		}

		__class(DailyEventWindowMainVo,'modules.hall.m.DailyEventWindowMainVo',_super);
		DailyEventWindowMainVo.UPDATE_DAILY_EVENT_STATUS="Update_Daily_Event_Status";
		return DailyEventWindowMainVo;
	})(BaseViewVo)


	//class game.numberGame.v.number.numbersType.NumberGamesSelectNumberType extends robotLegs.sprite.BaseUISprite
	var NumberGamesSelectNumberType=(function(_super){
		function NumberGamesSelectNumberType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesSelectNumberTypeVo=null;
			this.numberList=null;
			this.wei_0=null;
			this.wei_1=null;
			this.wei_2=null;
			this.wei_3=null;
			this.wei_4=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectNumberType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectNumberType,'game.numberGame.v.number.numbersType.NumberGamesSelectNumberType',_super);
		var __proto=NumberGamesSelectNumberType.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.numberList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
			if(this.wei_0){
				this.wei_0.onClick(this,this.chooseWei,[0]);
				this.wei_1.onClick(this,this.chooseWei,[1]);
				this.wei_2.onClick(this,this.chooseWei,[2]);
				this.wei_3.onClick(this,this.chooseWei,[3]);
				this.wei_4.onClick(this,this.chooseWei,[4]);
			}
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_List_Status",new Handler(this,this.updateList));
		}

		/**
		*更新列表
		*
		*/
		__proto.updateList=function(){
			this.wei_0.getController("button").selectedIndex=0;
			this.wei_1.getController("button").selectedIndex=0;
			this.wei_2.getController("button").selectedIndex=0;
			this.wei_3.getController("button").selectedIndex=0;
			this.wei_4.getController("button").selectedIndex=0;
			this.numberList.numItems=this.numberGamesSelectNumberTypeVo.lotteryNumbersVoArr.length;
			this.numberList.scrollToView(0,true);
		}

		__proto.chooseWei=function(_index){
			this.numberGamesSelectNumberTypeVo.weiArr[_index]=this.numberGamesSelectNumberTypeVo.weiArr[_index]==0 ? 1 :0;
			this.sendNotification("Choose_One_Number_Cmd");
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneLotteryNumbers=obj;
			this.numberGamesSelectNumberTypeVo.lotteryNumbersVoArr[index].resetBol=true;
			oneLotteryNumbers.render(this.numberGamesSelectNumberTypeVo.lotteryNumbersVoArr[index]);
		}

		return NumberGamesSelectNumberType;
	})(BaseUISprite)


	//class game.numberGame.v.number.pk10.dragonTiger.PK10DragonTiger extends robotLegs.sprite.BaseUISprite
	var PK10DragonTiger=(function(_super){
		function PK10DragonTiger(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.pK10DragonTigerVo=null;
			this.numberList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			PK10DragonTiger.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(PK10DragonTiger,'game.numberGame.v.number.pk10.dragonTiger.PK10DragonTiger',_super);
		var __proto=PK10DragonTiger.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.numberList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this._$3_update));
		}

		__proto._$3_update=function(){
			this.numberList.numItems=this.pK10DragonTigerVo.pK10OneDragonTigerVoArr.length;
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneLotteryNumbers=obj;
			oneLotteryNumbers.update(this.pK10DragonTigerVo.pK10OneDragonTigerVoArr[index]);
		}

		return PK10DragonTiger;
	})(BaseUISprite)


	//class modules.hall.m.DailyEventWindowVo extends robotLegs.vo.BaseViewVo
	var DailyEventWindowVo=(function(_super){
		function DailyEventWindowVo(){
			this.eventIndex=0;
			this.oneDailyTypeInfoVoArr=[];
			this.dailyEventWindowMainVo=new DailyEventWindowMainVo();
			DailyEventWindowVo.__super.call(this);
		}

		__class(DailyEventWindowVo,'modules.hall.m.DailyEventWindowVo',_super);
		return DailyEventWindowVo;
	})(BaseViewVo)


	//class modules.hall.m.FmQrCodeVo extends robotLegs.vo.BaseViewVo
	var FmQrCodeVo=(function(_super){
		function FmQrCodeVo(){
			this.title=null;
			this.base64=null;
			FmQrCodeVo.__super.call(this);
		}

		__class(FmQrCodeVo,'modules.hall.m.FmQrCodeVo',_super);
		return FmQrCodeVo;
	})(BaseViewVo)


	//class modules.hall.m.FmTopUpMoneyRechargeModeCComponentVo extends robotLegs.vo.BaseViewVo
	var FmTopUpMoneyRechargeModeCComponentVo=(function(_super){
		function FmTopUpMoneyRechargeModeCComponentVo(){
			this.bank_name=null;
			this.bank_owner=null;
			this.bank_account=null;
			this.bank_branch=null;
			this.payBankOwner=null;
			this.payTime=null;
			this.payBankName=null;
			FmTopUpMoneyRechargeModeCComponentVo.__super.call(this);
		}

		__class(FmTopUpMoneyRechargeModeCComponentVo,'modules.hall.m.FmTopUpMoneyRechargeModeCComponentVo',_super);
		FmTopUpMoneyRechargeModeCComponentVo.UPDATE_STATUS="Update_Status";
		return FmTopUpMoneyRechargeModeCComponentVo;
	})(BaseViewVo)


	//class game.numberGame.v.number.publics.ChooseNumberBtn extends robotLegs.sprite.BaseUISprite
	var ChooseNumberBtn=(function(_super){
		function ChooseNumberBtn(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.chooseNumberBtnVo=null;
			this.btnController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ChooseNumberBtn.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ChooseNumberBtn,'game.numberGame.v.number.publics.ChooseNumberBtn',_super);
		var __proto=ChooseNumberBtn.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.view.onClick(this,this.clickThisNumber);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this._$3_update));
		}

		/**
		*更新
		*
		*/
		__proto._$3_update=function(){
			this.btnController.selectedIndex=this.chooseNumberBtnVo.chooseBol ? 1 :0;
		}

		/**
		*点击数字
		*
		*/
		__proto.clickThisNumber=function(){
			this.chooseNumberBtnVo.chooseBol=!this.chooseNumberBtnVo.chooseBol;
			this.btnController.selectedIndex=this.chooseNumberBtnVo.chooseBol ? 1 :0;
			this.sendNotification("Choose_One_Number_Cmd");
		}

		return ChooseNumberBtn;
	})(BaseUISprite)


	//class modules.hall.m.FmTopUpMoneyRechargeModeDComponentVo extends robotLegs.vo.BaseViewVo
	var FmTopUpMoneyRechargeModeDComponentVo=(function(_super){
		function FmTopUpMoneyRechargeModeDComponentVo(){
			this.base64=null;
			this.pay_number_last4=null;
			FmTopUpMoneyRechargeModeDComponentVo.__super.call(this);
		}

		__class(FmTopUpMoneyRechargeModeDComponentVo,'modules.hall.m.FmTopUpMoneyRechargeModeDComponentVo',_super);
		FmTopUpMoneyRechargeModeDComponentVo.UPDATE_STATUS="Update_Status";
		return FmTopUpMoneyRechargeModeDComponentVo;
	})(BaseViewVo)


	//class game.numberGame.v.number.specialNumberTypes.NumberGamesSpecialNumberTypes extends robotLegs.sprite.BaseUISprite
	var NumberGamesSpecialNumberTypes=(function(_super){
		function NumberGamesSpecialNumberTypes(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesSpecialNumberTypesVo=null;
			this.comp$ChooseNumberBtn$0=null;
			this.comp$ChooseNumberBtn$1=null;
			this.comp$ChooseNumberBtn$2=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSpecialNumberTypes.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSpecialNumberTypes,'game.numberGame.v.number.specialNumberTypes.NumberGamesSpecialNumberTypes',_super);
		var __proto=NumberGamesSpecialNumberTypes.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.comp$ChooseNumberBtn$0.bindViewVo(this.numberGamesSpecialNumberTypesVo.chooseNumberBtnVoArr[0]);
			this.comp$ChooseNumberBtn$1.bindViewVo(this.numberGamesSpecialNumberTypesVo.chooseNumberBtnVoArr[1]);
			this.comp$ChooseNumberBtn$2.bindViewVo(this.numberGamesSpecialNumberTypesVo.chooseNumberBtnVoArr[2]);
		}

		return NumberGamesSpecialNumberTypes;
	})(BaseUISprite)


	//class modules.hall.m.FmTopUpMoneyRechargeModeEComponentVo extends robotLegs.vo.BaseViewVo
	var FmTopUpMoneyRechargeModeEComponentVo=(function(_super){
		function FmTopUpMoneyRechargeModeEComponentVo(){
			this.bank_name=null;
			this.bank_owner=null;
			this.bank_account=null;
			this.bank_branch=null;
			this.payBankOwner=null;
			this.payTime=null;
			this.payBankName=null;
			this.code=null;
			FmTopUpMoneyRechargeModeEComponentVo.__super.call(this);
		}

		__class(FmTopUpMoneyRechargeModeEComponentVo,'modules.hall.m.FmTopUpMoneyRechargeModeEComponentVo',_super);
		FmTopUpMoneyRechargeModeEComponentVo.UPDATE_STATUS="Update_Status";
		FmTopUpMoneyRechargeModeEComponentVo.UPDATE_CODE_STATUS="Update_Code_Status";
		return FmTopUpMoneyRechargeModeEComponentVo;
	})(BaseViewVo)


	//class modules.hall.m.GroupAccountChangeDetailVo extends robotLegs.vo.BaseViewVo
	var GroupAccountChangeDetailVo=(function(_super){
		function GroupAccountChangeDetailVo(){
			this.mcAccountSearchData=null;
			GroupAccountChangeDetailVo.__super.call(this);
		}

		__class(GroupAccountChangeDetailVo,'modules.hall.m.GroupAccountChangeDetailVo',_super);
		GroupAccountChangeDetailVo.INIT_INFO="INIT_INFO";
		GroupAccountChangeDetailVo.UPDATE_INFO="UPDATE_INFO";
		return GroupAccountChangeDetailVo;
	})(BaseViewVo)


	//class game.numberGame.v.NumberGames extends robotLegs.sprite.BaseUISprite
	var NumberGames=(function(_super){
		function NumberGames(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesVo=null;
			this.numberGamesResult=null;
			this.numberGamesMenu=null;
			this.lotterySelectNumber=null;
			this.numberGamesBet=null;
			this.numberGamesBetWindow=null;
			this.numberGamesBetResultWindow=null;
			this.numberGamesHistory=null;
			this.numberGamesBetHistory=null;
			this.numberGamesNumberKey=null;
			this.numberKeyController=null;
			this.numberGamesZhuiHaoWindow=null;
			this.shoppingCart=null;
			this.shuZiPan=null;
			this.removeAni=null;
			this.shuZiPanController=null;
			this.betHistoryBtn=null;
			this.videoController=null;
			this.video=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGames.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGames,'game.numberGame.v.NumberGames',_super);
		var __proto=NumberGames.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.shuZiPanController.on("fui_state_changed",this,this.changeShuZiPan);
			this.betHistoryBtn.onClick(this,this.openBetHistory);
			this.startTime(60000,new Handler(this,this.oneMinuteUpdateBalance));
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Remove_Ani_Status",new Handler(this,this.playRemoveAni));
			this.registerStatusCallBack("Display_Hide_Bet_Number_Key_Status",new Handler(this,this.displayHideBetNumberKey));
			this.registerStatusCallBack("Update_Bet_Type_Status",new Handler(this,this.updateBetType));
			this.registerStatusCallBack("Update_Video_Staus",new Handler(this,this.updateVideo));
		}

		/**
		*更新视频
		*
		*/
		__proto.updateVideo=function(){
			if(this.videoController.selectedIndex==this.numberGamesVo.videoStatus)
				return;
			this.videoController.selectedIndex=this.numberGamesVo.videoStatus;
			if(this.numberGamesVo.videoStatus==1){
				var rect=new Rectangle(this.video.x,this.video.y,this.video.width,this.video.height);
				var mainUrl=window.location.href;
				if(mainUrl.indexOf("index.html")){
					mainUrl=mainUrl.split("index.html")[0];
				}
				if(mainUrl.indexOf("?")){
					mainUrl=mainUrl.split("?")[0];
				}
				this.sendNotification("Open_Iframe_Cmd",[mainUrl+"4.html",null,rect]);
			}
			else{
				this.sendNotification("Close_Iframe_Cmd");
			}
		}

		__proto.changeShuZiPan=function(){
			this.sendNotification("Change_Shu_Zi_Pan_Cmd",this.shuZiPanController.selectedIndex);
		}

		/**
		*打开下注的历史纪录
		*
		*/
		__proto.openBetHistory=function(){
			this.sendNotification("Get_Number_Games_Bet_Result_Cmd");
		}

		__proto.playRemoveAni=function(){
			Tween.to(this.view,{x:GRoot.inst.width},GameUtil.Time_Panel_Ani,Ease.cubicInOut,Handler.create(this,this.completeRemoveAni));
		}

		/**
		*完成移除动画
		*
		*/
		__proto.completeRemoveAni=function(){
			this.sendNotification("Close_Game_Cmd",PlayerInfoModel.Panel_Lottery);
		}

		/**
		*显示或隐藏数字键盘
		*
		*/
		__proto.displayHideBetNumberKey=function(){
			this.numberKeyController.selectedIndex=this.numberGamesVo.numberKeyVo.displayIndex;
		}

		/**
		*更新下注类型
		*
		*/
		__proto.updateBetType=function(){
			this.shuZiPanController.selectedIndex=this.numberGamesVo.shuZiPanIndex;
		}

		/**
		*一分钟更新一次金额
		*
		*/
		__proto.oneMinuteUpdateBalance=function(){
			this.sendNotification("One_Minutes_Update_Balance_Cmd");
		}

		return NumberGames;
	})(BaseUISprite)


	//class modules.hall.m.GroupAccountTransferMoneyPanelVo extends robotLegs.vo.BaseViewVo
	var GroupAccountTransferMoneyPanelVo=(function(_super){
		function GroupAccountTransferMoneyPanelVo(){
			this.account=null;
			this.balance=NaN;
			this.money=NaN;
			this.password=null;
			GroupAccountTransferMoneyPanelVo.__super.call(this);
		}

		__class(GroupAccountTransferMoneyPanelVo,'modules.hall.m.GroupAccountTransferMoneyPanelVo',_super);
		GroupAccountTransferMoneyPanelVo.UPDATE_STATUS="Update_Status";
		return GroupAccountTransferMoneyPanelVo;
	})(BaseViewVo)


	//class game.numberGame.v.numberKey.NumberGamesNumberKey extends robotLegs.sprite.BaseUISprite
	var NumberGamesNumberKey=(function(_super){
		function NumberGamesNumberKey(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesNumberKeyVo=null;
			this.key_0=null;
			this.key_1=null;
			this.key_2=null;
			this.key_3=null;
			this.key_4=null;
			this.key_5=null;
			this.key_6=null;
			this.key_7=null;
			this.key_8=null;
			this.key_9=null;
			this.key_10=null;
			this.key_11=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesNumberKey.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesNumberKey,'game.numberGame.v.numberKey.NumberGamesNumberKey',_super);
		var __proto=NumberGamesNumberKey.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.key_0.onClick(this,this.clickKey,["1"]);
			this.key_1.onClick(this,this.clickKey,["2"]);
			this.key_2.onClick(this,this.clickKey,["3"]);
			this.key_3.onClick(this,this.clickKey,["4"]);
			this.key_4.onClick(this,this.clickKey,["5"]);
			this.key_5.onClick(this,this.clickKey,["6"]);
			this.key_6.onClick(this,this.clickKey,["7"]);
			this.key_7.onClick(this,this.clickKey,["8"]);
			this.key_8.onClick(this,this.clickKey,["9"]);
			this.key_9.onClick(this,this.clickKey,["0"]);
			this.key_10.onClick(this,this.clickKey,["10"]);
			this.key_11.onClick(this,this.clickKey,["11"]);
		}

		/**
		*点击按钮
		*
		*/
		__proto.clickKey=function(_keyValue){
			if(_keyValue=="10"){
				this.sendNotification("Display_Number_Key_Cmd",0);
			}
			else if(_keyValue=="11"){
				this.sendNotification("Delete_Number_Cmd");
			}
			else{
				this.sendNotification("Input_Numbers_Cmd",_keyValue);
			}
		}

		return NumberGamesNumberKey;
	})(BaseUISprite)


	//class modules.hall.m.GroupBetRecord2Vo extends robotLegs.vo.BaseViewVo
	var GroupBetRecord2Vo=(function(_super){
		function GroupBetRecord2Vo(){
			this.data=null;
			GroupBetRecord2Vo.__super.call(this);
		}

		__class(GroupBetRecord2Vo,'modules.hall.m.GroupBetRecord2Vo',_super);
		var __proto=GroupBetRecord2Vo.prototype;
		__proto.getDataList=function(){
			return this.data.data_list;;
		}

		GroupBetRecord2Vo.UPDATE_INFO="UPDATE_INFO";
		return GroupBetRecord2Vo;
	})(BaseViewVo)


	//class game.numberGame.v.result.NumberGamesResult extends robotLegs.sprite.BaseUISprite
	var NumberGamesResult=(function(_super){
		function NumberGamesResult(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.numberGamesResultVo=null;
			this.timeLabel=null;
			this.endTimeLabel=null;
			this.lastTimeLabel=null;
			this.iconLoader=null;
			this.number_0=null;
			this.number_1=null;
			this.number_2=null;
			this.number_3=null;
			this.number_4=null;
			this.pk10Result_0=null;
			this.pk10Result_1=null;
			this.pk10Result_2=null;
			this.pk10Result_3=null;
			this.pk10Result_4=null;
			this.pk10Result_5=null;
			this.pk10Result_6=null;
			this.pk10Result_7=null;
			this.pk10Result_8=null;
			this.pk10Result_9=null;
			this.pk10FullResult_0=null;
			this.pk10FullResult_1=null;
			this.pk10FullResult_2=null;
			this.pk10FullResult_3=null;
			this.pk10FullResult_4=null;
			this.pk10FullResult_5=null;
			this.pk10FullResult_6=null;
			this.pk10FullResult_7=null;
			this.pk10FullResult_8=null;
			this.pk10FullResult_9=null;
			this.hkResult_0=null;
			this.hkResult_1=null;
			this.hkResult_2=null;
			this.hkResult_3=null;
			this.hkResult_4=null;
			this.hkResult_5=null;
			this.hkResult_6=null;
			this.bjkl8Result_0=null;
			this.bjkl8Result_1=null;
			this.bjkl8Result_2=null;
			this.bjkl8Result_3=null;
			this.bjkl8Result_4=null;
			this.bjkl8Result_5=null;
			this.bjkl8Result_6=null;
			this.bjkl8FullResult_0=null;
			this.bjkl8FullResult_1=null;
			this.bjkl8FullResult_2=null;
			this.bjkl8FullResult_3=null;
			this.bjkl8FullResult_4=null;
			this.bjkl8FullResult_5=null;
			this.bjkl8FullResult_6=null;
			this.bjkl8FullResult_7=null;
			this.bjkl8FullResult_8=null;
			this.bjkl8FullResult_9=null;
			this.bjkl8FullResult_10=null;
			this.bjkl8FullResult_11=null;
			this.bjkl8FullResult_12=null;
			this.bjkl8FullResult_13=null;
			this.bjkl8FullResult_14=null;
			this.bjkl8FullResult_15=null;
			this.bjkl8FullResult_16=null;
			this.bjkl8FullResult_17=null;
			this.bjkl8FullResult_18=null;
			this.bjkl8FullResult_19=null;
			this.klsfResult_0=null;
			this.klsfResult_1=null;
			this.klsfResult_2=null;
			this.klsfResult_3=null;
			this.klsfResult_4=null;
			this.klsfResult_5=null;
			this.klsfResult_6=null;
			this.klsfResult_7=null;
			this.historyBtn=null;
			this.resultController=null;
			this.notMiaoMiaoController=null;
			this.__numberArr=[];
			this.__hkNumberArr=[];
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesResult.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesResult,'game.numberGame.v.result.NumberGamesResult',_super);
		var __proto=NumberGamesResult.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.iconLoader=this.view.getChild("iconLoader");
			this.__numberArr.push(this.number_0);
			this.__numberArr.push(this.number_1);
			this.__numberArr.push(this.number_2);
			this.__numberArr.push(this.number_3);
			this.__numberArr.push(this.number_4);
			this.__hkNumberArr.push(this.hkResult_0);
			this.__hkNumberArr.push(this.hkResult_1);
			this.__hkNumberArr.push(this.hkResult_2);
			this.__hkNumberArr.push(this.hkResult_3);
			this.__hkNumberArr.push(this.hkResult_4);
			this.__hkNumberArr.push(this.hkResult_5);
			this.__hkNumberArr.push(this.hkResult_6);
			for(var i=0;i < this.__numberArr.length;i++){
				this.__numberArr[i].text="?";
			}
			this.endTimeLabel=this.timeLabel.getChild("endTimeLabel");
			this.historyBtn.onClick(this,this.openHistory);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Result_Control_Status",new Handler(this,this.updateResultControl));
			this.registerStatusCallBack("Update_Current_Result_Status",new Handler(this,this.updateCurrentResult));
			this.registerStatusCallBack("Update_History_Result_Status",new Handler(this,this.updateHisotryResult));
			this.registerStatusCallBack("UPDATE_MIAO_MIAO_STATUS",new Handler(this,this.updateMiaoMiaoStatus));
		}

		/**
		*更新结果的样式
		*
		*/
		__proto.updateResultControl=function(){
			this.resultController.selectedIndex=this.numberGamesResultVo.resultControlIndex;
			this.iconLoader.setScale(1.3,1.3);
			this.iconLoader.url=GameUtil.Res_Lottery_Path+"ic_"+this.numberGamesResultVo.gameName+"@2x.png";
		}

		/**
		*更新结果
		*
		*/
		__proto.updateCurrentResult=function(){
			this.timeLabel.text=this.numberGamesResultVo.time;
			this.mathTime();
			this.stopTime();
			this.startTime(1000,new Handler(this,this.updateTime));
		}

		/**
		*更新开奖时间
		*
		*/
		__proto.updateTime=function(){
			var leftTime=this.numberGamesResultVo.endTime-Math.floor(Laya.timer.currTimer / 1000);
			if(leftTime < 0)
				leftTime=0;
			if(leftTime==0){
				this.sendNotification("Get_Number_Games_Current_Result_Cmd");
				return;
			}
			this.mathTime();
		}

		/**
		*计算时间
		*
		*/
		__proto.mathTime=function(){
			var leftTime=this.numberGamesResultVo.endTime-Math.floor(Laya.timer.currTimer / 1000);
			if(leftTime < 0)
				leftTime=0;
			this.endTimeLabel.text=BaseStaticFuncs.changeTime2(leftTime);
		}

		/**
		*更新历史记录
		*
		*/
		__proto.updateHisotryResult=function(){
			this.lastTimeLabel.text=this.numberGamesResultVo.lastTime;
			if(this.numberGamesResultVo.resultControlIndex==2){
				for(i=0;i < 10;i++){
					(this["pk10Result_"+i]).getController("numberController").selectedIndex=Number(this.numberGamesResultVo.resultNumberArr[i]);
				}
				for(i=0;i < 10;i++){
					(this["pk10FullResult_"+i]).getController("numberController").selectedIndex=Number(this.numberGamesResultVo.resultNumberArr[i]);
				}
			}
			else if(this.numberGamesResultVo.resultControlIndex==3){
				for(i=0;i < this.numberGamesResultVo.resultNumberArr.length;i++){
					if(this.numberGamesResultVo.resultNumberArr[i]=="?")
						this.numberGamesResultVo.resultNumberArr[i]=0;
					this.__hkNumberArr[i].getController("numberController").selectedIndex=Number(this.numberGamesResultVo.resultNumberArr[i]);
				}
			}
			else if(this.numberGamesResultVo.resultControlIndex==4){
				for(i=0;i < 7;i++){
					this["bjkl8Result_"+i].text=String(this.numberGamesResultVo.resultNumberArr[i])=="undefined" ? "?" :String(this.numberGamesResultVo.resultNumberArr[i]);
				}
				for(i=0;i < 20;i++){
					this["bjkl8FullResult_"+i].text=String(this.numberGamesResultVo.resultNumberArr[i])=="undefined" ? "?" :String(this.numberGamesResultVo.resultNumberArr[i]);
				}
			}
			else if(this.numberGamesResultVo.resultControlIndex==6){
				for(i=0;i < 8;i++){
					if(i < this.numberGamesResultVo.resultNumberArr.length){
						(this["klsfResult_"+i]).visible=true;
						(this["klsfResult_"+i]).text=this.numberGamesResultVo.resultNumberArr[i];
					}
					else{
						(this["klsfResult_"+i]).visible=false;
					}
				}
			}
			else{
				for(var i=0;i < this.numberGamesResultVo.resultNumberArr.length;i++){
					if(this.numberGamesResultVo.resultNumberArr[i]==28){
						this.__numberArr[i].text="?";
					}
					else if(this.__numberArr[i]){
						this.__numberArr[i].text=String(this.numberGamesResultVo.resultNumberArr[i]);
					}
				}
			}
			if(this.numberGamesResultVo.resultControlIndex==1){
				if(Number(this.numberGamesResultVo.resultNumberArr[3])==28){
					this.__numberArr[3].text="?";
				}
				else{
					this.__numberArr[3].text=Number(this.numberGamesResultVo.resultNumberArr[0])+Number(this.numberGamesResultVo.resultNumberArr[1])+Number(this.numberGamesResultVo.resultNumberArr[2])
				}
			}
		}

		/**
		*打开近十期的历史记录
		*
		*/
		__proto.openHistory=function(){
			this.sendNotification("Display_Number_Games_History_Cmd");
		}

		__proto.updateMiaoMiaoStatus=function(){
			this.notMiaoMiaoController.selectedIndex=this.numberGamesResultVo.notMiaoMiaoStatus;
		}

		return NumberGamesResult;
	})(BaseUISprite)


	//class modules.hall.m.GroupGameRecordVo extends robotLegs.vo.BaseViewVo
	var GroupGameRecordVo=(function(_super){
		function GroupGameRecordVo(){
			GroupGameRecordVo.__super.call(this);
		}

		__class(GroupGameRecordVo,'modules.hall.m.GroupGameRecordVo',_super);
		GroupGameRecordVo.INIT_INFO="INIT_INFO";
		GroupGameRecordVo.UPDATE_INFO="UPDATE_INFO";
		return GroupGameRecordVo;
	})(BaseViewVo)


	//class game.numberGame.v.shoppingCart.ShoppingCart extends robotLegs.sprite.BaseUISprite
	var ShoppingCart=(function(_super){
		function ShoppingCart(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.shoppingCartVo=null;
			this.backBtn=null;
			this.betList=null;
			this.moneyTxt=null;
			this.zhuCountTxt=null;
			this.totalPriceTxt=null;
			this.clearBtn=null;
			this.betBtn=null;
			this.mcBetRecordDetailPanel2=null;
			this.visibleController=null;
			this.oneShoppingCartInfoController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ShoppingCart.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ShoppingCart,'game.numberGame.v.shoppingCart.ShoppingCart',_super);
		var __proto=ShoppingCart.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.visibleController.selectedIndex=0;
			this.betList.setVirtual();
			this.backBtn.onClick(this,this.closeShoppingCart);
			this.clearBtn.onClick(this,this.clear);
			this.betBtn.onClick(this,this.bet);
			this.betList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("UPDATE_STATUS",new Handler(this,this._$3_update));
			this.registerStatusCallBack("Delete_Status",new Handler(this,this.deleteUpdate));
			this.registerStatusCallBack("Close_Shopping_Cart_Status",new Handler(this,this.closeShoppingCart));
			this.registerStatusCallBack("DISPLAY_OR_HIDE_INFO_STATUS",new Handler(this,this.displayOrHideInfo))
		}

		__proto.deleteUpdate=function(){
			this._$3_update(false);
		}

		__proto._$3_update=function(_bol){
			(_bol===void 0)&& (_bol=true);
			this.betList.numItems=this.shoppingCartVo.betOneVoArr.length;
			if(_bol){
				this.shoppingCartVo.openAlreadyBol=true;
				this.visibleController.selectedIndex=1;
				this.view.x=-GRoot.inst.width *.5;
				Tween.to(this.view,{x:0},GameUtil.Time_Panel_Ani,Ease.cubicInOut);
			}
			this.totalPriceTxt.text="￥"+this.shoppingCartVo.totalPrice.toString();
			this.zhuCountTxt.text=this.shoppingCartVo.totalTimes.toString();
			this.moneyTxt.text=this.shoppingCartVo.leftMoney.toFixed(2);
		}

		/**
		*立即下注
		*
		*/
		__proto.bet=function(){
			this.sendNotification("Shopping_Bet_Cmd");
		}

		__proto.clear=function(){
			this.shoppingCartVo.betOneVoArr.length=0;
			this._$3_update(false);
			this.sendNotification("Update_Shopping_Cart_Count_Cmd");
			this.sendNotification("Delete_Shopping_Cart_Cmd");
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var shoppingCartOneBet=obj;
			shoppingCartOneBet.update(this.shoppingCartVo.betOneVoArr[index]);
		}

		__proto.closeShoppingCart=function(){
			this.shoppingCartVo.openAlreadyBol=false;
			this.sendNotification("Display_Iframe_Cmd");
			Tween.to(this.view,{x:-GRoot.inst.width},GameUtil.Time_Panel_Ani,Ease.cubicInOut,Handler.create(this,this.close));
		}

		__proto.displayOrHideInfo=function(){
			this.oneShoppingCartInfoController.selectedIndex=this.shoppingCartVo.displayOrHideInfo;
		}

		__proto.close=function(){
			this.visibleController.selectedIndex=0;
		}

		return ShoppingCart;
	})(BaseUISprite)


	//class modules.hall.m.GroupManageVo extends robotLegs.vo.BaseViewVo
	var GroupManageVo=(function(_super){
		// public var groupArr:Array;
		function GroupManageVo(){
			GroupManageVo.__super.call(this);
		}

		__class(GroupManageVo,'modules.hall.m.GroupManageVo',_super);
		GroupManageVo.UPDATE_INFO="UPDATE_INFO";
		return GroupManageVo;
	})(BaseViewVo)


	//class modules.hall.m.GroupNewAccountManagePanelVo extends robotLegs.vo.BaseViewVo
	var GroupNewAccountManagePanelVo=(function(_super){
		function GroupNewAccountManagePanelVo(){
			this.selectIndexArr=null;
			this.groupWinLostData=null;
			GroupNewAccountManagePanelVo.__super.call(this);
		}

		__class(GroupNewAccountManagePanelVo,'modules.hall.m.GroupNewAccountManagePanelVo',_super);
		var __proto=GroupNewAccountManagePanelVo.prototype;
		__proto.initSelectIndex=function(len){
			this.selectIndexArr=[];
			for (var i=0;i < len;i++){
				this.selectIndexArr.push(0);
			}
		}

		GroupNewAccountManagePanelVo.INIT_INFO="INIT_INFO";
		GroupNewAccountManagePanelVo.UPDATE_INFO="UPDATE_INFO";
		GroupNewAccountManagePanelVo.UPDATE_BONES_RANG="UPDATE_BONES_RANG";
		return GroupNewAccountManagePanelVo;
	})(BaseViewVo)


	//class game.numberGame.v.shuZiPan.bet.ShuZiPanBet extends robotLegs.sprite.BaseUISprite
	var ShuZiPanBet=(function(_super){
		function ShuZiPanBet(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.shuZiPanBetVo=null;
			this.deleteBtn=null;
			this.fandianTxt=null;
			this.moneyTxt=null;
			this.betBtn=null;
			this.fanDianController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ShuZiPanBet.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ShuZiPanBet,'game.numberGame.v.shuZiPan.bet.ShuZiPanBet',_super);
		var __proto=ShuZiPanBet.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			if(DataMgr.get().loginState()< DataMgr.LoginState_Account){
				this.fanDianController.selectedIndex=2;
			}
			this.fanDianController.on("fui_state_changed",this,this.fanDianChange);
			this.moneyTxt.on("input",this,this.moneyChange);
			this.deleteBtn.onClick(this,this.deleteBet);
			this.betBtn.onClick(this,this.openBetWindow);
		}

		/**
		*返点金额改变
		*
		*/
		__proto.fanDianChange=function(){
			if(this.fanDianController.selectedIndex==0){
				this.shuZiPanBetVo.chooseFanDian=0;
			}
			else{
				this.shuZiPanBetVo.chooseFanDian=this.shuZiPanBetVo.fanDianMax;
			}
			this.shuZiPanBetVo.fanDianIndex=this.fanDianController.selectedIndex;
			this.fandianTxt.text=BaseStaticFuncs.format("返点：{0}%",this.shuZiPanBetVo.chooseFanDian);
			this.sendNotification("Change_Fan_Dian_Cmd");
		}

		__proto.moneyChange=function(){
			if(Number(this.moneyTxt.text)> 99999){
				this.moneyTxt.text="99999";
				this.showAlert("已达投注倍数上限。");
			}
		}

		/**
		*删除下注
		*
		*/
		__proto.deleteBet=function(){
			this.sendNotification("Clear_Shu_Zi_Pan_Bet_Cmd");
		}

		/**
		*打开下注窗口
		*
		*/
		__proto.openBetWindow=function(){
			if(Number(this.moneyTxt.text)==0){
				this.showAlert("请输入下注金额");
				return;
			}
			this.shuZiPanBetVo.betMoney=Number(this.moneyTxt.text);
			this.sendNotification("Open_Shu_Zi_Pan_Bet_Window_Cmd");
		}

		return ShuZiPanBet;
	})(BaseUISprite)


	//class game.numberGame.v.shuZiPan.bet.ShuZiPanBetMain extends robotLegs.sprite.BaseUISprite
	var ShuZiPanBetMain=(function(_super){
		function ShuZiPanBetMain(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.shuZiPanBetMainVo=null;
			this.betList=null;
			this.betTotalMoneyTxt=null;
			this.betBtn=null;
			this.closeBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ShuZiPanBetMain.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ShuZiPanBetMain,'game.numberGame.v.shuZiPan.bet.ShuZiPanBetMain',_super);
		var __proto=ShuZiPanBetMain.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.betBtn.onClick(this,this.bet);
			this.closeBtn.onClick(this,this.closeBetWindow);
			this.betList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.displayList));
		}

		__proto.displayList=function(){
			this.betTotalMoneyTxt.text="￥"+String(this.shuZiPanBetMainVo.totalPrice);
			this.betList.numItems=this.shuZiPanBetMainVo.oneBetVoArr.length;
		}

		__proto.renderListItem=function(index,obj){
			(obj).update(this.shuZiPanBetMainVo.oneBetVoArr[index]);
		}

		/**
		*下注
		*
		*/
		__proto.bet=function(){
			this.sendNotification("Shu_Zi_Pan_Bet_Cmd");
		}

		/**
		*关闭下注窗口
		*
		*/
		__proto.closeBetWindow=function(){
			this.sendNotification("Display_Iframe_Cmd");
			this.sendNotification("Close_Shu_Zi_Pan_Bet_Window_Cmd");
		}

		return ShuZiPanBetMain;
	})(BaseUISprite)


	//class modules.hall.m.GroupStatisticalAnalysisVo extends robotLegs.vo.BaseViewVo
	var GroupStatisticalAnalysisVo=(function(_super){
		function GroupStatisticalAnalysisVo(){
			this.groupStatisticalAnalysisArr=null;
			this.groupUserAnalysisArr=null;
			this.groupStatisticalAnalysisSearchData=null;
			GroupStatisticalAnalysisVo.__super.call(this);
		}

		__class(GroupStatisticalAnalysisVo,'modules.hall.m.GroupStatisticalAnalysisVo',_super);
		GroupStatisticalAnalysisVo.INIT_DATA="INIT_DATA";
		GroupStatisticalAnalysisVo.UPDATE_DATA="UPDATE_DATA";
		return GroupStatisticalAnalysisVo;
	})(BaseViewVo)


	//class game.numberGame.v.shuZiPan.bet.ShuZiPanBetWindow extends robotLegs.sprite.BaseUISprite
	var ShuZiPanBetWindow=(function(_super){
		function ShuZiPanBetWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.shuZiPanBetWindowVo=null;
			this.shuZiPanBetMain=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ShuZiPanBetWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ShuZiPanBetWindow,'game.numberGame.v.shuZiPan.bet.ShuZiPanBetWindow',_super);
		return ShuZiPanBetWindow;
	})(BaseUISprite)


	//class modules.hall.m.GroupVipDetailPanelVo extends robotLegs.vo.BaseViewVo
	var GroupVipDetailPanelVo=(function(_super){
		function GroupVipDetailPanelVo(){
			this.bonesRangData=null;
			this.curItemIndex=0;
			this.curId=null;
			this.curValue=null;
			this.listIndex=0;
			GroupVipDetailPanelVo.__super.call(this);
		}

		__class(GroupVipDetailPanelVo,'modules.hall.m.GroupVipDetailPanelVo',_super);
		GroupVipDetailPanelVo.INIT_INFO="INIT_INFO";
		GroupVipDetailPanelVo.UPDATE_INFO="UPDATE_INFO";
		GroupVipDetailPanelVo.SET_AGENT_PERCENT_SUCCESS="SET_AGENT_PERCENT_SUCCESS";
		return GroupVipDetailPanelVo;
	})(BaseViewVo)


	//class modules.hall.m.GroupVipManagerPanelVo extends robotLegs.vo.BaseViewVo
	var GroupVipManagerPanelVo=(function(_super){
		function GroupVipManagerPanelVo(){
			this.items=null;
			this.is_dailyPay=false;
			this.user_balance_total=null;
			this.user_team_balance_total=null;
			GroupVipManagerPanelVo.__super.call(this);
		}

		__class(GroupVipManagerPanelVo,'modules.hall.m.GroupVipManagerPanelVo',_super);
		var __proto=GroupVipManagerPanelVo.prototype;
		__proto.decode=function(obj){
			this.user_balance_total=obj.user_balance_total;
			this.user_team_balance_total=obj.user_team_balance_total;
			this.is_dailyPay=obj.is_dailypay
			this.items=[];
			var itemArr=obj.data;
			for (var i=0;i < itemArr.length;i++){
				var item=new GroupVipVo();
				item.decode(itemArr[i]);
				this.items.push(item);
			}
		}

		GroupVipManagerPanelVo.INIT_INFO="INIT_INFO";
		GroupVipManagerPanelVo.UPDATE_INFO="UPDATE_INFO";
		return GroupVipManagerPanelVo;
	})(BaseViewVo)


	//class modules.hall.m.GroupWinLostVo extends robotLegs.vo.BaseViewVo
	var GroupWinLostVo=(function(_super){
		function GroupWinLostVo(){
			this.groupWinLostData=null;
			GroupWinLostVo.__super.call(this);
		}

		__class(GroupWinLostVo,'modules.hall.m.GroupWinLostVo',_super);
		GroupWinLostVo.INIT_INFO="INIT_INFO";
		GroupWinLostVo.UPDATE_INFO="UPDATE_INFO";
		GroupWinLostVo.UPDATE_BONES_RANG="UPDATE_BONES_RANG";
		return GroupWinLostVo;
	})(BaseViewVo)


	//class game.numberGame.v.shuZiPan.menu.ShuZiPanMenu extends robotLegs.sprite.BaseUISprite
	var ShuZiPanMenu=(function(_super){
		function ShuZiPanMenu(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.shuZiPanMenuVo=null;
			this.menuList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ShuZiPanMenu.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ShuZiPanMenu,'game.numberGame.v.shuZiPan.menu.ShuZiPanMenu',_super);
		var __proto=ShuZiPanMenu.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.menuList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.updateMenu));
		}

		__proto.updateMenu=function(){
			this.menuList.numItems=this.shuZiPanMenuVo.btnVoArr.length;
		}

		/**
		*更新
		*@param index
		*@param obj
		*
		*/
		__proto.renderListItem=function(index,obj){
			(obj).update(this.shuZiPanMenuVo.btnVoArr[index]);
		}

		return ShuZiPanMenu;
	})(BaseUISprite)


	//class modules.hall.m.HallBoardcastComponentVo extends robotLegs.vo.BaseViewVo
	var HallBoardcastComponentVo=(function(_super){
		function HallBoardcastComponentVo(){
			this.textComponentVo=new HallBoardcastTextComponentVo();
			this.boardcastWindowVo=new HallBoardcastWindowVo();
			HallBoardcastComponentVo.__super.call(this);
		}

		__class(HallBoardcastComponentVo,'modules.hall.m.HallBoardcastComponentVo',_super);
		return HallBoardcastComponentVo;
	})(BaseViewVo)


	//class modules.hall.m.HallBoardcastMainVo extends robotLegs.vo.BaseViewVo
	var HallBoardcastMainVo=(function(_super){
		function HallBoardcastMainVo(){
			this.currentIndex=0;
			this.boardcastTextVoArr=[];
			HallBoardcastMainVo.__super.call(this);
		}

		__class(HallBoardcastMainVo,'modules.hall.m.HallBoardcastMainVo',_super);
		return HallBoardcastMainVo;
	})(BaseViewVo)


	//class modules.hall.m.HallBoardcastTextComponentVo extends robotLegs.vo.BaseViewVo
	var HallBoardcastTextComponentVo=(function(_super){
		function HallBoardcastTextComponentVo(){
			this.currentTxtIndex=-1;
			this.boardcastTextVoArr=[];
			HallBoardcastTextComponentVo.__super.call(this);
		}

		__class(HallBoardcastTextComponentVo,'modules.hall.m.HallBoardcastTextComponentVo',_super);
		HallBoardcastTextComponentVo.UPDATE_TEXT_STATUS="UPDATE_TEXT_STATUS";
		return HallBoardcastTextComponentVo;
	})(BaseViewVo)


	//class modules.hall.m.HallBoardcastWindowVo extends robotLegs.vo.BaseViewVo
	var HallBoardcastWindowVo=(function(_super){
		function HallBoardcastWindowVo(){
			this.boardcastMainVo=new HallBoardcastMainVo();
			HallBoardcastWindowVo.__super.call(this);
		}

		__class(HallBoardcastWindowVo,'modules.hall.m.HallBoardcastWindowVo',_super);
		return HallBoardcastWindowVo;
	})(BaseViewVo)


	//class modules.hall.m.HallBottomComponentVo extends robotLegs.vo.BaseViewVo
	var HallBottomComponentVo=(function(_super){
		function HallBottomComponentVo(){
			HallBottomComponentVo.__super.call(this);
		}

		__class(HallBottomComponentVo,'modules.hall.m.HallBottomComponentVo',_super);
		return HallBottomComponentVo;
	})(BaseViewVo)


	//class modules.hall.m.HallEventVo extends robotLegs.vo.BaseViewVo
	var HallEventVo=(function(_super){
		function HallEventVo(){
			this.bigBannerUrl=null;
			this.chooseId=0;
			this.oneHallEventVoArr=[];
			HallEventVo.__super.call(this);
		}

		__class(HallEventVo,'modules.hall.m.HallEventVo',_super);
		HallEventVo.UPDATE_STATUS="Update_Status";
		HallEventVo.DISPLAY_BIG_BANNER_STATUS="DISPLAY_BIG_BANNER_STATUS";
		return HallEventVo;
	})(BaseViewVo)


	//class modules.hall.m.HallSignEventVo extends robotLegs.vo.BaseViewVo
	var HallSignEventVo=(function(_super){
		function HallSignEventVo(){
			this.claimId=0;
			this.oneDaySignVoArr=[];
			HallSignEventVo.__super.call(this);
		}

		__class(HallSignEventVo,'modules.hall.m.HallSignEventVo',_super);
		HallSignEventVo.UPDATE_STATUS="Update_Status";
		return HallSignEventVo;
	})(BaseViewVo)


	//class modules.hall.m.HallVo extends robotLegs.vo.BaseViewVo
	var HallVo=(function(_super){
		function HallVo(){
			this.customerUrl=null;
			this.curPage=-1;
			this.updatePage=0;
			this.gameUrl=null;
			this.otherGameName=null;
			this.hotGameListData=null;
			this.pokerGameListData=null;
			this.lotteryGameListData=null;
			this.updateWindowsVo=new UpdateWindowsVo();
			this.hotItems=[];
			this.hallBottomComponentVo=new HallBottomComponentVo();
			this.boardcastComponentVo=new HallBoardcastComponentVo();
			this.groupManageVo=new GroupManageVo();
			this.otherWebSiteVo=new OtherWebSiteVo();
			this.bannerUrlArr=[];
			HallVo.__super.call(this);
		}

		__class(HallVo,'modules.hall.m.HallVo',_super);
		HallVo.Update_List="Update_List";
		HallVo.OPEN_POKERGAME="OPEN_POKERGAME";
		HallVo.Update_MyFavorite="Update_MyFavorite";
		HallVo.Update_HallLottery="Update_HallLottery";
		HallVo.LOGIN_SUCCESS="LOGIN_SUCCESS";
		HallVo.GOT_BANNER="GOT_BANNER";
		HallVo.UPDATE_OTHER_GAME_STATUS="UPDATE_OTHER_GAME_STATUS";
		return HallVo;
	})(BaseViewVo)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanSelectNumbers extends robotLegs.sprite.BaseUISprite
	var ShuZiPanSelectNumbers=(function(_super){
		function ShuZiPanSelectNumbers(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.shuZiPanSelectNumbersVo=null;
			this.numberList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ShuZiPanSelectNumbers.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ShuZiPanSelectNumbers,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanSelectNumbers',_super);
		var __proto=ShuZiPanSelectNumbers.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.numberList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.updateList));
		}

		__proto.updateList=function(){
			this.numberList.numItems=this.shuZiPanSelectNumbersVo.oneTypeVoArr.length;
			this.numberList.scrollToView(0);
		}

		/**
		*更新
		*@param index
		*@param obj
		*
		*/
		__proto.renderListItem=function(index,obj){
			(obj).update(this.shuZiPanSelectNumbersVo.oneTypeVoArr[index]);
		}

		return ShuZiPanSelectNumbers;
	})(BaseUISprite)


	//class game.numberGame.v.shuZiPan.ShuZiPan extends robotLegs.sprite.BaseUISprite
	var ShuZiPan=(function(_super){
		function ShuZiPan(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.shuZiPanVo=null;
			this.shuZiPanSelectNumbers=null;
			this.shuZiPanMenu=null;
			this.shuZiPanBet=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ShuZiPan.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ShuZiPan,'game.numberGame.v.shuZiPan.ShuZiPan',_super);
		return ShuZiPan;
	})(BaseUISprite)


	//class modules.hall.m.McAccountChangeDetailVo extends robotLegs.vo.BaseViewVo
	var McAccountChangeDetailVo=(function(_super){
		function McAccountChangeDetailVo(){
			this.mcAccountSearchData=null;
			McAccountChangeDetailVo.__super.call(this);
		}

		__class(McAccountChangeDetailVo,'modules.hall.m.McAccountChangeDetailVo',_super);
		McAccountChangeDetailVo.INIT_INFO="INIT_INFO";
		McAccountChangeDetailVo.UPDATE_INFO="UPDATE_INFO";
		return McAccountChangeDetailVo;
	})(BaseViewVo)


	//class modules.hall.m.McBetRecord2Vo extends robotLegs.vo.BaseViewVo
	var McBetRecord2Vo=(function(_super){
		function McBetRecord2Vo(){
			this.data=null;
			this.cancelId=0;
			this.curPage=0;
			this.totalPage=0;
			McBetRecord2Vo.__super.call(this);
		}

		__class(McBetRecord2Vo,'modules.hall.m.McBetRecord2Vo',_super);
		var __proto=McBetRecord2Vo.prototype;
		__proto.getDataList=function(){
			return this.data.data_list;;
		}

		McBetRecord2Vo.UPDATE_INFO="UPDATE_INFO";
		return McBetRecord2Vo;
	})(BaseViewVo)


	//class modules.hall.m.McBetRecordVo extends robotLegs.vo.BaseViewVo
	var McBetRecordVo=(function(_super){
		function McBetRecordVo(){
			McBetRecordVo.__super.call(this);
		}

		__class(McBetRecordVo,'modules.hall.m.McBetRecordVo',_super);
		return McBetRecordVo;
	})(BaseViewVo)


	//class modules.hall.m.McBonusOverviewVo extends robotLegs.vo.BaseViewVo
	var McBonusOverviewVo=(function(_super){
		function McBonusOverviewVo(){
			this.mineStatisticsDataDic=new Dictionary();
			McBonusOverviewVo.__super.call(this);
		}

		__class(McBonusOverviewVo,'modules.hall.m.McBonusOverviewVo',_super);
		McBonusOverviewVo.INIT_INFO="INIT_INFO";
		McBonusOverviewVo.UPDATE_INFO="UPDATE_INFO";
		return McBonusOverviewVo;
	})(BaseViewVo)


	//class modules.hall.m.McGameRecordVo extends robotLegs.vo.BaseViewVo
	var McGameRecordVo=(function(_super){
		function McGameRecordVo(){
			McGameRecordVo.__super.call(this);
		}

		__class(McGameRecordVo,'modules.hall.m.McGameRecordVo',_super);
		McGameRecordVo.INIT_INFO="INIT_INFO";
		McGameRecordVo.UPDATE_INFO="UPDATE_INFO";
		return McGameRecordVo;
	})(BaseViewVo)


	//class modules.hall.m.McStatisticalAnalysisVo extends robotLegs.vo.BaseViewVo
	var McStatisticalAnalysisVo=(function(_super){
		function McStatisticalAnalysisVo(){
			this.mineCenterStatisticalAnalysisArr=null;
			this.mineCenterTodayData=null;
			McStatisticalAnalysisVo.__super.call(this);
		}

		__class(McStatisticalAnalysisVo,'modules.hall.m.McStatisticalAnalysisVo',_super);
		McStatisticalAnalysisVo.UPDATE_DATA="UPDATE_DATA";
		return McStatisticalAnalysisVo;
	})(BaseViewVo)


	//class modules.hall.m.McWinLostVo extends robotLegs.vo.BaseViewVo
	var McWinLostVo=(function(_super){
		function McWinLostVo(){
			this.account=null;
			this.account_loader=null;
			this.mineWinLostData=null;
			McWinLostVo.__super.call(this);
		}

		__class(McWinLostVo,'modules.hall.m.McWinLostVo',_super);
		McWinLostVo.INIT_INFO="INIT_INFO";
		McWinLostVo.UPDATE_INFO="UPDATE_INFO";
		return McWinLostVo;
	})(BaseViewVo)


	//class modules.hall.m.MineCenterPanelVo extends robotLegs.vo.BaseViewVo
	var MineCenterPanelVo=(function(_super){
		function MineCenterPanelVo(){
			this.mineCenterGridArr=null;
			this.mineCenterArr=null;
			this.groupManageArr=null;
			this.groupArr=null;
			this.mineCenterTodayData=null;
			this.user_account=null;
			this.user_balance=NaN;
			MineCenterPanelVo.__super.call(this);
		}

		__class(MineCenterPanelVo,'modules.hall.m.MineCenterPanelVo',_super);
		MineCenterPanelVo.UPDATE_MINECENTER_INFO="UPDATE_MINECENTER_INFO_Status";
		MineCenterPanelVo.UPDATE_DATA="UPDATE_DATA";
		return MineCenterPanelVo;
	})(BaseViewVo)


	//class modules.hall.m.MineManagePanelVo extends robotLegs.vo.BaseViewVo
	var MineManagePanelVo=(function(_super){
		function MineManagePanelVo(){
			this.mineManageArr=null;
			this.user_account=null;
			this.user_balance=NaN;
			this.user_email=null;
			this.user_nickname=null;
			this.color=0;
			MineManagePanelVo.__super.call(this);
		}

		__class(MineManagePanelVo,'modules.hall.m.MineManagePanelVo',_super);
		MineManagePanelVo.UPDATE_INFO="UPDATE_INFO_Status";
		return MineManagePanelVo;
	})(BaseViewVo)


	//class modules.hall.m.MineVo extends robotLegs.vo.BaseViewVo
	var MineVo=(function(_super){
		function MineVo(){
			this.mineCenterGridArr=null;
			this.mineCenterArr=null;
			this.groupManageArr=null;
			this.groupArr=null;
			this.customerUrl="";
			this.proxyBol=false;
			this.initBol=false;
			this.gotOtherWebBol=false;
			this.mineCenterTodayData=null;
			MineVo.__super.call(this);
		}

		__class(MineVo,'modules.hall.m.MineVo',_super);
		MineVo.INIT_INFO="INIT_INFO";
		MineVo.UPDATE_INFO="UPDATE_INFO";
		MineVo.OPEN_CUSTOMER_STATUS="Open_Customer_Status";
		return MineVo;
	})(BaseViewVo)


	//class modules.hall.m.NewPlayerEventsVo extends robotLegs.vo.BaseViewVo
	var NewPlayerEventsVo=(function(_super){
		function NewPlayerEventsVo(){
			this.stepIndex=0;
			this.ctrl=0;
			this.name="";
			this.wechat="";
			this.mobileCountryCode='';
			this.mobileNumber="";
			this.code="";
			NewPlayerEventsVo.__super.call(this);
		}

		__class(NewPlayerEventsVo,'modules.hall.m.NewPlayerEventsVo',_super);
		NewPlayerEventsVo.UPDATE_STEP_STATUS="Update_Step_Status";
		return NewPlayerEventsVo;
	})(BaseViewVo)


	//class modules.hall.m.otherWebsite.OtherWebSiteOneTypeVo extends robotLegs.vo.BaseViewVo
	var OtherWebSiteOneTypeVo=(function(_super){
		function OtherWebSiteOneTypeVo(){
			this.gameTypeItemArr=[];
			OtherWebSiteOneTypeVo.__super.call(this);
		}

		__class(OtherWebSiteOneTypeVo,'modules.hall.m.otherWebsite.OtherWebSiteOneTypeVo',_super);
		return OtherWebSiteOneTypeVo;
	})(BaseViewVo)


	//class modules.hall.m.otherWebsite.OtherWebSiteVo extends robotLegs.vo.BaseViewVo
	var OtherWebSiteVo=(function(_super){
		function OtherWebSiteVo(){
			this.zhenRenCpIdArr=[102];
			this.zhenRenSxIdArr=[2,5,104];
			this.qpIdArr=[4];
			this.dianZiYyIdArr=[3];
			this.tiYuIdArr=[6,107,110];
			this.dianZiJjIdArr=[108,112];
			this.reMenIdArr=[];
			this.zhenRenCpTypeVo=new OtherWebSiteOneTypeVo();
			this.zhenRenSxTypeVo=new OtherWebSiteOneTypeVo();
			this.qpTypeVo=new OtherWebSiteOneTypeVo();
			this.dianZiYyTypeVo=new OtherWebSiteOneTypeVo();
			this.tiYuTypeVo=new OtherWebSiteOneTypeVo();
			this.dianZiJjTypeVo=new OtherWebSiteOneTypeVo();
			this.reMenTypeVo=new OtherWebSiteOneTypeVo();
			OtherWebSiteVo.__super.call(this);
		}

		__class(OtherWebSiteVo,'modules.hall.m.otherWebsite.OtherWebSiteVo',_super);
		OtherWebSiteVo.UPDATE_OTHER_WEBSITE_STATUS="Update_Other_Website_Status";
		return OtherWebSiteVo;
	})(BaseViewVo)


	//class modules.hall.m.SettingModifyPasswordPanelVo extends robotLegs.vo.BaseViewVo
	var SettingModifyPasswordPanelVo=(function(_super){
		function SettingModifyPasswordPanelVo(){
			this.newPassword=null;
			SettingModifyPasswordPanelVo.__super.call(this);
		}

		__class(SettingModifyPasswordPanelVo,'modules.hall.m.SettingModifyPasswordPanelVo',_super);
		SettingModifyPasswordPanelVo.INIT_INFO="INIT_INFO";
		SettingModifyPasswordPanelVo.UPDATE_INFO="UPDATE_INFO";
		return SettingModifyPasswordPanelVo;
	})(BaseViewVo)


	//class modules.hall.m.SysSetFavoritePanelGameListVo extends robotLegs.vo.BaseViewVo
	var SysSetFavoritePanelGameListVo=(function(_super){
		function SysSetFavoritePanelGameListVo(){
			SysSetFavoritePanelGameListVo.__super.call(this);
		}

		__class(SysSetFavoritePanelGameListVo,'modules.hall.m.SysSetFavoritePanelGameListVo',_super);
		SysSetFavoritePanelGameListVo.UPDATE_INFO="UPDATE_INFO";
		return SysSetFavoritePanelGameListVo;
	})(BaseViewVo)


	//class modules.hall.m.UpdateWindowsVo extends robotLegs.vo.BaseViewVo
	var UpdateWindowsVo=(function(_super){
		function UpdateWindowsVo(){
			this.info=null;
			this.displayUpdateInfoBol=false;
			UpdateWindowsVo.__super.call(this);
		}

		__class(UpdateWindowsVo,'modules.hall.m.UpdateWindowsVo',_super);
		UpdateWindowsVo.UPDATE_STATUS="UPDATE_STATUS";
		return UpdateWindowsVo;
	})(BaseViewVo)


	//class modules.hall.v.CommonTypeListPanel extends robotLegs.sprite.BaseUISprite
	var CommonTypeListPanel=(function(_super){
		function CommonTypeListPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonTopComponent=null;
			this.gTypeList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonTypeListPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonTypeListPanel,'modules.hall.v.CommonTypeListPanel',_super);
		var __proto=CommonTypeListPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.intiData();
			this.commonTopComponent.setTitle("");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.gTypeList.itemRenderer=Handler.create(this,this.gTypeListRenderer,null,false);
			this.gTypeList.on("fui_click_item",this,this.gTypeListClick);
			this.registerStatusCallBack(CommonTypeListVo.INIT_INFO,new Handler(this,this.onInitInfo));
		}

		__proto.intiData=function(){
			this.commonTopComponent.setTitle("");
			this.gTypeList.numItems=0;
		}

		__proto.onInitInfo=function(){
			console.log("CommonTypeListPanel onInitInfo");
			var commonTypeListVo=DataMgr.get().commonTypeListVo;
			this.commonTopComponent.setTitle(commonTypeListVo.title);
			this.gTypeList.numItems=commonTypeListVo.dataArr.length;
			this.gTypeList.selectedIndex=commonTypeListVo.selectIndex;
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.onInitInfo();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.gTypeListRenderer=function(index,gobj){
			var item=gobj;
			item.setName(DataMgr.get().commonTypeListVo.dataArr[index]);
			item.setId(DataMgr.get().commonTypeListVo.idArr[index]);
		}

		__proto.gTypeListClick=function(item,evt){
			this.onBackClick();
			var itemIndex=this.gTypeList.getChildIndex(item);
			DataMgr.get().commonTypeListVo.selectIndex=itemIndex;
			DataMgr.get().commonTypeListVo.selectId=item.selectId;
			DataMgr.get().commonTypeListVo.run();
		}

		return CommonTypeListPanel;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonDateSearchComponent extends robotLegs.sprite.BaseUISprite
	var CommonDateSearchComponent=(function(_super){
		function CommonDateSearchComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btnDate1=null;
			this.btnDate2=null;
			this.btnSearch=null;
			this.__dateBtnArr=[];
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonDateSearchComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonDateSearchComponent,'modules.hall.v.component.CommonDateSearchComponent',_super);
		var __proto=CommonDateSearchComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			var t=new TextInput();
			var t2=new TextInput();
			t.align="center";
			t.valign="middle";
			t.fontSize=this.btnDate1.titleFontSize;
			t.color=this.btnDate1.titleColor;
			t.type="date";
			t2.align="center";
			t2.valign="middle";
			t2.fontSize=this.btnDate2.titleFontSize;
			t2.color=this.btnDate2.titleColor;
			t2.type="date";
			this.view.displayObject.addChild(t);
			this.view.displayObject.addChild(t2);
			this.__dateBtnArr.push(t);
			this.__dateBtnArr.push(t2);
			this.btnDate1.visible=this.btnDate2.visible=false;
			this.onSizeChanged();
			this.view.on("fui_size_changed",this,this.onSizeChanged);
			this.btnSearch.onClick(this,this.onSearchClick);
		}

		__proto.onSizeChanged=function(){
			console.log("onSizeChanged");
			this.__dateBtnArr[0].width=this.btnDate1.width;
			this.__dateBtnArr[0].height=this.btnDate1.height;
			this.__dateBtnArr[0].x=this.btnDate1.x;
			this.__dateBtnArr[0].y=this.btnDate1.y-5;
			this.__dateBtnArr[1].width=this.btnDate2.width;
			this.__dateBtnArr[1].height=this.btnDate2.height;
			this.__dateBtnArr[1].x=this.btnDate2.x;
			this.__dateBtnArr[1].y=this.btnDate2.y-5;
		}

		__proto.initToday=function(){
			var dateArr=GameUtil.getSearchDate(0,1);
			this.__dateBtnArr[0].text=dateArr[0];
			this.__dateBtnArr[1].text=dateArr[1];
			console.log("initToday ",dateArr[0]," ~ ",dateArr[1])
		}

		__proto.setDate=function(date1,date2){
			this.__dateBtnArr[0].text=date1;
			this.__dateBtnArr[1].text=date2;
		}

		__proto.getDate=function(){
			return [this.__dateBtnArr[0].text+" 04:00:00",this.__dateBtnArr[1].text+" 04:00:00"];
		}

		__proto.onSearchClick=function(){
			var date1=StringTool.trim(this.__dateBtnArr[0].text);
			var date2=StringTool.trim(this.__dateBtnArr[1].text);
			if(date1=="" || date2==""){
				console.log("验证失败!!!!!!!!1");
				return;
			};
			var result=GameUtil.compareDate1(date1,date2);
			if(result !=1){
				console.log("验证失败!!!!!!!! result="+date1+","+date2);
				return;
			}
			this.event(CommonDateSearchComponent.CLICK_SEARCH);
		}

		CommonDateSearchComponent.CLICK_SEARCH="CLICK_SEARCH";
		return CommonDateSearchComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonGrid8Component extends robotLegs.sprite.BaseUISprite
	var CommonGrid8Component=(function(_super){
		function CommonGrid8Component(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txt=null;
			this.btnSearch=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonGrid8Component.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonGrid8Component,'modules.hall.v.component.CommonGrid8Component',_super);
		var __proto=CommonGrid8Component.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.clear=function(){
			this.txt.text="";
		}

		__proto.getText=function(){
			return StringTool.trim(this.txt.text);
		}

		__proto.setPrompt=function(str){
			this.txt.asTextInput.promptText=str;
		}

		__proto.setRestrict=function(str){
			this.txt.asTextInput.restrict=str;
		}

		__proto.setMaxLen=function(len){
			this.txt.asTextInput.maxLength=len;
		}

		return CommonGrid8Component;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonGridOneComponent extends robotLegs.sprite.BaseUISprite
	var CommonGridOneComponent=(function(_super){
		function CommonGridOneComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.glist=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonGridOneComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonGridOneComponent,'modules.hall.v.component.CommonGridOneComponent',_super);
		var __proto=CommonGridOneComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return CommonGridOneComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonLst1Component extends robotLegs.sprite.BaseUISprite
	var CommonLst1Component=(function(_super){
		function CommonLst1Component(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.searchController=null;
			this.commonGrid8Component=null;
			this.commonLst1SearchTabComponent=null;
			this.gList=null;
			this.list2Controller=null;
			this.n9=null;
			this.commonLst1TabLstComponent=null;
			this.curIndexArr=null;
			this.titleArr=null;
			this.dataArr=null;
			this.curSearchTabIndex=0;
			this._chooseHanlder=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonLst1Component.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonLst1Component,'modules.hall.v.component.CommonLst1Component',_super);
		var __proto=CommonLst1Component.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonLst1SearchTabComponent.btn0.onClick(this,this.onSearchTabClick,[0]);
			this.commonLst1SearchTabComponent.btn1.onClick(this,this.onSearchTabClick,[1]);
			this.commonLst1SearchTabComponent.btn2.onClick(this,this.onSearchTabClick,[2]);
			this.commonLst1SearchTabComponent.btn3.onClick(this,this.onSearchTabClick,[3]);
			this.commonLst1SearchTabComponent.btn4.onClick(this,this.onSearchTabClick,[4]);
			this.commonLst1TabLstComponent.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.commonLst1TabLstComponent.gList.on("fui_click_item",this,this.gListClick);
			this.commonLst1TabLstComponent.btnColse.onClick(this,this.onTabLstCloseClick);
			this.n9.onClick(this,this.onTabLstCloseClick);
		}

		__proto.setSearchCompontentVisible=function(flag){
			this.searchController.selectedIndex=flag ? 1 :0;
		}

		__proto.updateTabsWidth=function(arr){
			this.commonLst1SearchTabComponent.updateTabsWidth(arr);
		}

		/**
		*@param arr 对应-默认显示的索引
		*@param arr2 对应-列表
		*@param arr3 对应-标题
		*/
		__proto.setTabs=function(arr,arr2,arr3){
			this.curIndexArr=arr;
			this.dataArr=arr2;
			this.titleArr=arr3;
			this.updateTabs();
		}

		__proto.updateTabs=function(){
			var tabNames=[];
			for (var i=0;i < this.dataArr.length;i++){
				tabNames.push(this.dataArr[i][this.curIndexArr[i]]);
			}
			this.commonLst1SearchTabComponent.setTabs(tabNames);
		}

		__proto.onSearchTabClick=function(tabIndex){
			this.curSearchTabIndex=tabIndex;
			this.list2Controller.selectedIndex=1;
			var listNames=this.dataArr[tabIndex];
			var viewHeight=this.commonLst1TabLstComponent.gList.y+listNames.length *50;
			if(viewHeight > this.view.height)viewHeight=this.view.height;
			this.commonLst1TabLstComponent.view.height=viewHeight;
			this.commonLst1TabLstComponent.txt.text=this.titleArr[tabIndex];
			this.commonLst1TabLstComponent.gList.numItems=listNames.length;
			this.commonLst1TabLstComponent.view.y=this.view.height;
			var showY=this.view.height-this.commonLst1TabLstComponent.view.height;
			if(showY < 0)showY=0;
			Tween.to(this.commonLst1TabLstComponent.view,{y:showY},200);
		}

		__proto.gListRenderer=function(index,gobj){
			var selectIndex=this.curSearchTabIndex;
			var listNames=this.dataArr[selectIndex];
			var item=gobj;
			item.setTxt(listNames[index]);
		}

		__proto.gListClick=function(item,evt){
			var itemIndex=this.commonLst1TabLstComponent.gList.getChildIndex(item);
			this.curIndexArr[this.curSearchTabIndex]=itemIndex;
			this.list2Controller.selectedIndex=0;
			this.commonLst1TabLstComponent.view.y=GRoot.inst.height;
			this.updateTabs();
			if(this._chooseHanlder!=null)this._chooseHanlder.run();
		}

		__proto.onTabLstCloseClick=function(){
			if(this.list2Controller.selectedIndex==1)
				this.list2Controller.selectedIndex=0;
		}

		__proto.setPrompt=function(str){
			this.commonGrid8Component.txt.asTextInput.promptText=str;
		}

		__proto.setRestrict=function(str){
			this.commonGrid8Component.txt.asTextInput.restrict=str;
		}

		__proto.getSelectIndexArr=function(){
			return this.curIndexArr;
		}

		/**
		*设置选择回调函数
		*@param value
		*/
		__getset(0,__proto,'chooseHanlder',null,function(value){
			this._chooseHanlder=value;
		});

		return CommonLst1Component;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonLst1SearchTabComponent extends robotLegs.sprite.BaseUISprite
	var CommonLst1SearchTabComponent=(function(_super){
		function CommonLst1SearchTabComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btn0=null;
			this.btn1=null;
			this.btn2=null;
			this.btn3=null;
			this.btn4=null;
			this.tabController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonLst1SearchTabComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonLst1SearchTabComponent,'modules.hall.v.component.CommonLst1SearchTabComponent',_super);
		var __proto=CommonLst1SearchTabComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.updateTabsWidth=function(arr){
			this.tabController.selectedIndex=arr.length;
			for (var i=0;i < arr.length;i++){
				this["btn"+i].width=Math.floor(GRoot.inst.width *arr[i]);
			}
		}

		__proto.setTabs=function(arr){
			for (var i=0;i < arr.length;i++){
				this["btn"+i].title=arr[i];
			}
		}

		return CommonLst1SearchTabComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonLst1TabLstComponent extends robotLegs.sprite.BaseUISprite
	var CommonLst1TabLstComponent=(function(_super){
		function CommonLst1TabLstComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txt=null;
			this.gList=null;
			this.btnColse=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonLst1TabLstComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonLst1TabLstComponent,'modules.hall.v.component.CommonLst1TabLstComponent',_super);
		var __proto=CommonLst1TabLstComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return CommonLst1TabLstComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmDrawMoneyCenterPanelVo extends robotLegs.vo.BaseViewVo
	var FmDrawMoneyCenterPanelVo=(function(_super){
		function FmDrawMoneyCenterPanelVo(){
			this.account=null;
			this.money=NaN;
			this.total_bet_balance_percent=null;
			this.withDrawMin=null;
			this.withDrawMax=null;
			this.withDrawTime=null;
			this.withDrawCurrentCount=null;
			this.withDrawTotalCount=null;
			this.withDrawTotalDayPrice=null;
			FmDrawMoneyCenterPanelVo.__super.call(this);
		}

		__class(FmDrawMoneyCenterPanelVo,'modules.hall.v.fundmanage.FmDrawMoneyCenterPanelVo',_super);
		FmDrawMoneyCenterPanelVo.INIT_INFO="INIT_INFO";
		FmDrawMoneyCenterPanelVo.UPDATE_STATUS="Update_Status";
		return FmDrawMoneyCenterPanelVo;
	})(BaseViewVo)


	//class modules.hall.v.component.CommonPageComponent extends robotLegs.sprite.BaseUISprite
	var CommonPageComponent=(function(_super){
		function CommonPageComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonPageComponentVo=null;
			this.commonPageContentComponent=null;
			this.commonPageTabComponent=null;
			this.stateController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonPageComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonPageComponent,'modules.hall.v.component.CommonPageComponent',_super);
		var __proto=CommonPageComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonPageComponentVo=new CommonPageComponentVo();
			this.commonPageTabComponent.btnLeft.onClick(this,this.onPageTabClick,[-1]);
			this.commonPageTabComponent.btnRight.onClick(this,this.onPageTabClick,[1]);
			this.commonPageTabComponent.btnFirst.onClick(this,this.onPageTabClick2,[0]);
			this.commonPageTabComponent.btnLast.onClick(this,this.onPageTabClick2,[1]);
		}

		/**
		*设置标题
		*/
		__proto.setAllTitleName=function(arr){
			this.commonPageComponentVo.titleNames=arr;
		}

		/**
		*@param arr
		*@param isFullRow 宽度小于舞台宽度时，是否自动扩充单元个的宽度以至于填满单元格
		*@param leftSpace
		*@param rightSpace
		*/
		__proto.setAllTitleWidth=function(arr,isFullRow,leftSpace,rightSpace){
			(leftSpace===void 0)&& (leftSpace=0);
			(rightSpace===void 0)&& (rightSpace=0);
			if(isFullRow){
				var _sw=GRoot.inst.width;
				var _titleW=leftSpace;
				var i=0;
				for (i=0;i < arr.length;i++){
					_titleW+=arr[i];
				}
				_titleW+=rightSpace;
				var _titleNewW=leftSpace;
				if(_titleW < _sw){
					for (i=0;i < arr.length;i++){
						arr[i]=Math.floor(arr[i]/_titleW*_sw);
						_titleNewW+=arr[i];
					}
					_titleNewW+=rightSpace;
					if(_titleNewW < _sw){
						var diffHalf=Math.floor((_sw-_titleNewW)*.5);
						leftSpace+=diffHalf;
						rightSpace+=diffHalf;
					}
				}
			}
			this.commonPageComponentVo.titleWidths=arr;
			this.commonPageComponentVo.isFullRow=isFullRow;
			this.commonPageComponentVo.leftSpace=leftSpace;
			this.commonPageComponentVo.rightSpace=rightSpace;
		}

		__proto.setTitleStyle=function(fontSize,fontColor){
			this.commonPageComponentVo.titleFontSize=fontSize;
			this.commonPageComponentVo.titleFontColor=fontColor;
		}

		__proto.setContentStyle=function(fontSize,fontColor){
			this.commonPageComponentVo.contentFontSize=fontSize;
			this.commonPageComponentVo.contentFontColor=fontColor;
		}

		/**
		*是否显示本页 统计项
		*/
		__proto.setIsShowCurrentPageCount=function(flag){
			this.commonPageComponentVo.isShowCurrentPageCount=flag;
		}

		/**
		*是否显示所有页 统计项
		*/
		__proto.setIsShowAllPageCount=function(flag){
			this.commonPageComponentVo.isShowAllPageCount=flag;
		}

		__proto.setPageButtonHandler=function(handler){
			this.commonPageComponentVo.handler=handler;
		}

		__proto.initPageComponent=function(){
			this.commonPageContentComponent.initData(this.commonPageComponentVo);
			this.commonPageTabComponent.updateData(this.commonPageComponentVo.curPage,this.commonPageComponentVo.totalPage);
			this.view.height=this.commonPageContentComponent.view.height+this.commonPageComponentVo.Content_TO_Tab_Height+this.commonPageComponentVo.Tab_Height;
		}

		__proto.setContentValues=function(arr,arr1,arr2){
			this.commonPageComponentVo.contentValues=arr;
			this.commonPageComponentVo.currentPageCountValues=arr1;
			this.commonPageComponentVo.allPageCountValues=arr2;
			this.stateController.selectedIndex=(arr.length==0 ? 1 :2);
			this.commonPageContentComponent.updataData();
			this.view.height=this.commonPageContentComponent.view.height+this.commonPageComponentVo.Content_TO_Tab_Height+this.commonPageComponentVo.Tab_Height;
		}

		__proto.setPageTabContent=function(curPage,totalPage){
			this.commonPageComponentVo.curPage=curPage;
			this.commonPageComponentVo.totalPage=totalPage;
			this.commonPageTabComponent.updateData(this.commonPageComponentVo.curPage,this.commonPageComponentVo.totalPage);
		}

		__proto.onPageTabClick=function(value){
			var curPage=this.commonPageComponentVo.curPage;
			var totalPage=this.commonPageComponentVo.totalPage;
			this.commonPageComponentVo.curPage+=value;
			if(this.commonPageComponentVo.curPage<1){
				this.commonPageComponentVo.curPage=1;
				return;
			}
			if(this.commonPageComponentVo.curPage>this.commonPageComponentVo.totalPage){
				this.commonPageComponentVo.curPage=this.commonPageComponentVo.totalPage;
				return;
			}
			this.commonPageTabComponent.updateData(this.commonPageComponentVo.curPage,this.commonPageComponentVo.totalPage);
			if(this.commonPageComponentVo.handler)this.commonPageComponentVo.handler.run();
		}

		__proto.onPageTabClick2=function(value){
			var curPage=this.commonPageComponentVo.curPage;
			var totalPage=this.commonPageComponentVo.totalPage;
			if(value==0){
				if(this.commonPageComponentVo.curPage==1){
					return;
				}
				this.commonPageComponentVo.curPage=1;
			}
			else{
				if(this.commonPageComponentVo.curPage==this.commonPageComponentVo.totalPage){
					return;
				}
				this.commonPageComponentVo.curPage=this.commonPageComponentVo.totalPage;
			}
			this.commonPageTabComponent.updateData(this.commonPageComponentVo.curPage,this.commonPageComponentVo.totalPage);
			if(this.commonPageComponentVo.handler)this.commonPageComponentVo.handler.run();
		}

		__proto.getCurrentPage=function(){
			return this.commonPageComponentVo.curPage;
		}

		return CommonPageComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonPageContentComponent extends robotLegs.sprite.BaseUISprite
	var CommonPageContentComponent=(function(_super){
		function CommonPageContentComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonPageComponentVo=null;
			this.img_head_bg=null;
			this.gList=null;
			this.commonPageCountComponent=null;
			this.commonPageCountAllComponent=null;
			this.currentCountController=null;
			this.allCountController=null;
			this.txtArr=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonPageContentComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonPageContentComponent,'modules.hall.v.component.CommonPageContentComponent',_super);
		var __proto=CommonPageContentComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.txtArr=[];
			this.gList.itemRenderer=Handler.create(this,this.glistRenderer,null,false);
		}

		__proto.initData=function(commonPageComponentVo){
			this.commonPageComponentVo=commonPageComponentVo;
			this.createTitle();
		}

		__proto.setTitle=function(t){}
		__proto.createTitle=function(){
			console.log("createTitlecreateTitle");
			this.clearTxt();
			var i=0;
			var txt;
			var _x=this.commonPageComponentVo.leftSpace;
			for (i=0;i < this.commonPageComponentVo.titleNames.length;i++){
				txt=this.txtArr[i];
				if(txt==null){
					txt=new Label();
					this.txtArr.push(txt);
				}
				txt.fontSize=this.commonPageComponentVo.titleFontSize;
				txt.color=this.commonPageComponentVo.titleFontColor;
				txt.size(this.commonPageComponentVo.titleWidths[i],28);
				txt.text=this.commonPageComponentVo.titleNames[i];
				txt.x=_x;
				txt.y=14;
				txt.align="center";
				_x+=this.commonPageComponentVo.titleWidths[i];
				this.view.displayListContainer.addChild(txt);
			};
			var _w=_x+this.commonPageComponentVo.rightSpace;
			this.img_head_bg.width=_w;
			this.gList.setSize(_w,this.commonPageComponentVo.No_Data_Content_Height);
			this.view.height=this.gList.y+this.gList.height;
			if(this.commonPageComponentVo.isShowCurrentPageCount){
				this.commonPageCountComponent.initData(this.commonPageComponentVo);
			}
			if(this.commonPageComponentVo.isShowAllPageCount){
				this.commonPageCountAllComponent.initData(this.commonPageComponentVo);
			}
		}

		__proto.updataData=function(){
			console.log("CommonPageContentComponent updataData");
			if(this.commonPageComponentVo.contentValues.length==0){
				this.gList.numItems=0;
				this.currentCountController.selectedIndex=0;
				this.allCountController.selectedIndex=0;
				this.gList.height=this.commonPageComponentVo.No_Data_Content_Height;
				this.view.height=this.gList.y+this.gList.height;
				}else{
				var numItemCount=this.commonPageComponentVo.contentValues.length;
				this.gList.numItems=numItemCount;
				var _h=0;
				for (var i=0;i < numItemCount;i++){
					_h+=this.gList.getChildAt(i).height;
				}
				this.gList.height=_h;
				if(this.commonPageComponentVo.isShowCurrentPageCount){
					this.currentCountController.selectedIndex=1;
					this.commonPageCountComponent.updateData(this.commonPageComponentVo.currentPageCountValues);
					_h+=this.commonPageCountComponent.view.height;
				}
				if(this.commonPageComponentVo.isShowAllPageCount){
					this.allCountController.selectedIndex=1;
					this.commonPageCountAllComponent.updateData(this.commonPageComponentVo.allPageCountValues);
					_h+=this.commonPageCountAllComponent.view.height;
				}
				this.view.height=this.gList.y+_h;
			}
		}

		__proto.glistRenderer=function(index,gobj){
			var item=gobj;
			item.updateData(index,this.commonPageComponentVo);
		}

		__proto.clearTxt=function(){
			var i=0;
			var txt;
			for (i=0;i < this.txtArr.length;i++){
				txt=this.txtArr[i];
				txt.text="";
				this.view.displayListContainer.removeChild(txt);
			}
		}

		return CommonPageContentComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonPageCountAllComponent extends robotLegs.sprite.BaseUISprite
	var CommonPageCountAllComponent=(function(_super){
		function CommonPageCountAllComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonPageComponentVo=null;
			this.txtArr=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonPageCountAllComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonPageCountAllComponent,'modules.hall.v.component.CommonPageCountAllComponent',_super);
		var __proto=CommonPageCountAllComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.txtArr=[];
		}

		__proto.initData=function(commonPageComponentVo){
			this.commonPageComponentVo=commonPageComponentVo;
			this.clearTxt();
			var _x=commonPageComponentVo.leftSpace;
			for (var i=0;i < commonPageComponentVo.titleNames.length;i++){
				var txt=this.txtArr[i];
				if(txt==null){
					txt=new Label();
					this.txtArr.push(txt);
				}
				txt.fontSize=commonPageComponentVo.allCountFontSize;
				txt.color=commonPageComponentVo.allCountFontColor;
				txt.size(commonPageComponentVo.titleWidths[i],28);
				txt.text="";
				txt.x=_x;
				txt.y=14;
				txt.align="center";
				_x+=commonPageComponentVo.titleWidths[i];
				this.view.displayListContainer.addChild(txt);
			};
			var _w=_x+commonPageComponentVo.rightSpace;
			this.view.width=_w;
		}

		__proto.updateData=function(arr){
			var txt;
			for (var i=0;i < arr.length;i++){
				txt=this.txtArr[i];
				txt.text=arr[i];
				if(i > 0){
					if(this.txtArr[i-1].text.length > 0){
						if(txt.x < this.txtArr[i-1].x+this.txtArr[i-1].displayWidth+20){
							txt.x=this.txtArr[i-1].x+this.txtArr[i-1].displayWidth+20;
						}
					}
				}
			}
		}

		__proto.clearTxt=function(){
			var i=0;
			var txt;
			for (i=0;i < this.txtArr.length;i++){
				txt=this.txtArr[i];
				txt.text="";
				this.view.displayListContainer.removeChild(txt);
			}
		}

		return CommonPageCountAllComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonPageCountComponent extends robotLegs.sprite.BaseUISprite
	var CommonPageCountComponent=(function(_super){
		function CommonPageCountComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonPageComponentVo=null;
			this.txtArr=[];
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonPageCountComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonPageCountComponent,'modules.hall.v.component.CommonPageCountComponent',_super);
		var __proto=CommonPageCountComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.txtArr=[];
		}

		__proto.initData=function(commonPageComponentVo){
			this.commonPageComponentVo=commonPageComponentVo;
			this.clearTxt();
			var _x=commonPageComponentVo.leftSpace;
			for (var i=0;i < commonPageComponentVo.titleNames.length;i++){
				var txt=this.txtArr[i];
				if(txt==null){
					txt=new Label();
					this.txtArr.push(txt);
				}
				txt.fontSize=commonPageComponentVo.currentCountFontSize;
				txt.color=commonPageComponentVo.currentCountFontColor;
				txt.size(commonPageComponentVo.titleWidths[i],28);
				txt.text="";
				txt.x=_x;
				txt.y=14;
				txt.align="center";
				_x+=commonPageComponentVo.titleWidths[i];
				this.view.displayListContainer.addChild(txt);
			};
			var _w=_x+commonPageComponentVo.rightSpace;
			this.view.width=_w;
		}

		__proto.updateData=function(arr){
			var txt;
			for (var i=0;i < arr.length;i++){
				txt=this.txtArr[i];
				txt.text=arr[i];
			}
		}

		__proto.clearTxt=function(){
			var i=0;
			var txt;
			for (i=0;i < this.txtArr.length;i++){
				txt=this.txtArr[i];
				txt.text="";
				this.view.displayListContainer.removeChild(txt);
			}
		}

		return CommonPageCountComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonPageTabComponent extends robotLegs.sprite.BaseUISprite
	var CommonPageTabComponent=(function(_super){
		function CommonPageTabComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txtCurPage=null;
			this.txtTotalPage=null;
			this.btnFirst=null;
			this.btnLast=null;
			this.btnLeft=null;
			this.btnRight=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonPageTabComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonPageTabComponent,'modules.hall.v.component.CommonPageTabComponent',_super);
		var __proto=CommonPageTabComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.updateData=function(curPage,totalPage){
			this.txtCurPage.text=curPage+"";
			this.txtTotalPage.text=totalPage+"";
		}

		return CommonPageTabComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonTab1Component extends robotLegs.sprite.BaseUISprite
	var CommonTab1Component=(function(_super){
		function CommonTab1Component(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.tabBtnController=null;
			this.tabBtn1=null;
			this.tabBtn2=null;
			this.tabBtn3=null;
			this.tabBtn4=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonTab1Component.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonTab1Component,'modules.hall.v.component.CommonTab1Component',_super);
		var __proto=CommonTab1Component.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		// }
		__proto.setTabLabel=function(lb1,lb2,lb3,lb4){
			(lb1===void 0)&& (lb1="");
			(lb2===void 0)&& (lb2="");
			(lb3===void 0)&& (lb3="");
			(lb4===void 0)&& (lb4="");
			var index=0;
			if(lb1 !=""){
				index++;
			}
			if(lb2 !=""){
				index++;
			}
			if(lb3 !=""){
				index++;
			}
			if(lb4 !=""){
				index++;
			}
			this.tabBtn1.title=lb1;
			this.tabBtn2.title=lb2;
			this.tabBtn3.title=lb3;
			this.tabBtn4.title=lb4;
			this.tabBtn1.width=this.tabBtn2.width=this.tabBtn3.width=this.tabBtn4.width=Math.floor(GRoot.inst.width/index);
			this.tabBtn3.visible=(index>2);
			this.tabBtn4.visible=(index>3);
		}

		return CommonTab1Component;
	})(BaseUISprite)


	//class modules.hall.v.component.CommonTopComponent extends robotLegs.sprite.BaseUISprite
	var CommonTopComponent=(function(_super){
		function CommonTopComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btnBack=null;
			this.title=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CommonTopComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CommonTopComponent,'modules.hall.v.component.CommonTopComponent',_super);
		var __proto=CommonTopComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.title.text="";
		}

		__proto.setTitle=function(t){
			this.title.text=t;
		}

		return CommonTopComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.GroupPanel extends robotLegs.sprite.BaseUISprite
	var GroupPanel=(function(_super){
		function GroupPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupManageVo=null;
			this.commonTopComponent=null;
			this.grid05Button0=null;
			this.grid05Button1=null;
			this.grid05Button2=null;
			this.grid05Button3=null;
			this.grid05Button4=null;
			this.grid05Button5=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupPanel,'modules.hall.v.component.GroupPanel',_super);
		var __proto=GroupPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("团队中心");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			var iconConfigData=DataMgr.get().iconConfigData;
			var groupIconConfigData=iconConfigData.groupIconConfigData;
			for (var i=0;i < 6;i++){
				var grid05Button=this ["grid05Button"+i];
				grid05Button.updateData(groupIconConfigData[i],i);
				grid05Button.onClick(this,this.onComponentClick,[i]);
			}
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onComponentClick=function(index){
			switch(index){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_NEW_ACCOUNT_MANAGE,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_VIP_MANAGE,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 2:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_STATISTICAL_ANALYSIS,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 3:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_BET_RECORD2,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 4:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_WIN_LOST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 5:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		return GroupPanel;
	})(BaseUISprite)


	//class modules.hall.v.component.HallBoardcastComponent extends robotLegs.sprite.BaseUISprite
	var HallBoardcastComponent=(function(_super){
		function HallBoardcastComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.hallBoardcastComponentVo=null;
			this.hallBoardcastTextComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallBoardcastComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallBoardcastComponent,'modules.hall.v.component.HallBoardcastComponent',_super);
		var __proto=HallBoardcastComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return HallBoardcastComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.HallBoardcastMain extends robotLegs.sprite.BaseUISprite
	var HallBoardcastMain=(function(_super){
		function HallBoardcastMain(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.hallBoardcastMainVo=null;
			this.titleTxt=null;
			this.newsLabel=null;
			this.timeTxt=null;
			this.lastBtn=null;
			this.nextBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallBoardcastMain.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallBoardcastMain,'modules.hall.v.component.HallBoardcastMain',_super);
		var __proto=HallBoardcastMain.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.lastBtn.enabled=false;
			this.nextBtn.enabled=false;
			this.lastBtn.onClick(this,this.turnPage,[-1]);
			this.nextBtn.onClick(this,this.turnPage,[1]);
			this.displayContent();
		}

		__proto.turnPage=function(_turn){
			this.hallBoardcastMainVo.currentIndex+=_turn;
			this.displayContent();
		}

		__proto.displayContent=function(){
			if(this.hallBoardcastMainVo.boardcastTextVoArr.length > 1){
				if(this.hallBoardcastMainVo.currentIndex==0){
					this.lastBtn.enabled=false;
				}
				else{
					this.lastBtn.enabled=true;
				}
				if(this.hallBoardcastMainVo.currentIndex==this.hallBoardcastMainVo.boardcastTextVoArr.length-1){
					this.nextBtn.enabled=false;
				}
				else{
					this.nextBtn.enabled=true;
				}
			};
			var boardcastTextVo=this.hallBoardcastMainVo.boardcastTextVoArr[this.hallBoardcastMainVo.currentIndex];
			this.titleTxt.text=boardcastTextVo.news_title;
			while(boardcastTextVo.news_info.indexOf("</p>")>-1){
				boardcastTextVo.news_info=boardcastTextVo.news_info.replace("</p>","\r\n");
			}
			while(boardcastTextVo.news_info.indexOf("<br>")>-1){
				boardcastTextVo.news_info=boardcastTextVo.news_info.replace("<br>","\r\n");
			}
			while(boardcastTextVo.news_info.indexOf("&nbsp;")>-1){
				boardcastTextVo.news_info=boardcastTextVo.news_info.replace("&nbsp;"," ");
			}
			boardcastTextVo.news_info=boardcastTextVo.news_info.replace(/<[^>]+>/gim,"");
			this.newsLabel.text=boardcastTextVo.news_info;
			this.timeTxt.text="";
			this.timeTxt.text=boardcastTextVo.time;
		}

		return HallBoardcastMain;
	})(BaseUISprite)


	//class modules.hall.v.component.HallBoardcastTextComponent extends robotLegs.sprite.BaseUISprite
	var HallBoardcastTextComponent=(function(_super){
		function HallBoardcastTextComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.hallBoardcastTextComponentVo=null;
			this.txt=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallBoardcastTextComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallBoardcastTextComponent,'modules.hall.v.component.HallBoardcastTextComponent',_super);
		var __proto=HallBoardcastTextComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.view.onClick(this,this.openBoardCastWindow);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("UPDATE_TEXT_STATUS",new Handler(this,this.updateTxt));
		}

		__proto.openBoardCastWindow=function(){
			if(this.hallBoardcastTextComponentVo.boardcastTextVoArr.length==0)
				return;
			this.sendNotification("Open_Gong_Gao_Window_Cmd",this.hallBoardcastTextComponentVo.currentTxtIndex)
		}

		/**
		*更新
		*
		*/
		__proto.updateTxt=function(){
			this.runRollText();
			Laya.timer.loop(20,this,this.startRoll);
		}

		__proto.runRollText=function(){
			this.hallBoardcastTextComponentVo.currentTxtIndex++;
			if(this.hallBoardcastTextComponentVo.currentTxtIndex==this.hallBoardcastTextComponentVo.boardcastTextVoArr.length){
				this.hallBoardcastTextComponentVo.currentTxtIndex=0;
			}
			this.txt.text=this.hallBoardcastTextComponentVo.boardcastTextVoArr[this.hallBoardcastTextComponentVo.currentTxtIndex].news_title+"          ";
			this.txt.x=this.view.width;
		}

		__proto.startRoll=function(){
			this.txt.x--;
			if(this.txt.x <-this.txt.width){
				this.txt.x=this.view.width;
				this.runRollText();
			}
		}

		__proto.stopRoll=function(){
			Laya.timer.clear(this,this.startRoll);
		}

		return HallBoardcastTextComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.HallBoardcastWindow extends robotLegs.sprite.BaseUISprite
	var HallBoardcastWindow=(function(_super){
		function HallBoardcastWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.hallBoardcastWindowVo=null;
			this.hallBoardcastMain=null;
			this.closeBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallBoardcastWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallBoardcastWindow,'modules.hall.v.component.HallBoardcastWindow',_super);
		var __proto=HallBoardcastWindow.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.closeBtn.onClick(this,this.closeWindow);
		}

		__proto.closeWindow=function(){
			this.hallBoardcastWindowVo.status="Remove_Status";
		}

		return HallBoardcastWindow;
	})(BaseUISprite)


	//class modules.hall.v.component.HallBottomComponent extends robotLegs.sprite.BaseUISprite
	var HallBottomComponent=(function(_super){
		function HallBottomComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.hallBottomComponentVo=null;
			this.btnGame=null;
			this.btnLive=null;
			this.btnChat=null;
			this.btnActive=null;
			this.btnManage=null;
			this.btnLiving=null;
			this.btnWeiTou=null;
			this.btnController=null;
			this.platformController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallBottomComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallBottomComponent,'modules.hall.v.component.HallBottomComponent',_super);
		var __proto=HallBottomComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return HallBottomComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.HallBtnTabComponent extends robotLegs.sprite.BaseUISprite
	var HallBtnTabComponent=(function(_super){
		function HallBtnTabComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btnHot=null;
			this.btnLottery=null;
			this.btnPoker=null;
			this.btnGames=null;
			this.btnLive=null;
			this.btnController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallBtnTabComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallBtnTabComponent,'modules.hall.v.component.HallBtnTabComponent',_super);
		var __proto=HallBtnTabComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return HallBtnTabComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRecordPanelVo extends robotLegs.vo.BaseViewVo
	var FmTopUpMoneyRecordPanelVo=(function(_super){
		function FmTopUpMoneyRecordPanelVo(){
			this.data=null;
			FmTopUpMoneyRecordPanelVo.__super.call(this);
		}

		__class(FmTopUpMoneyRecordPanelVo,'modules.hall.v.fundmanage.FmTopUpMoneyRecordPanelVo',_super);
		FmTopUpMoneyRecordPanelVo.INIT_INFO="INIT_INFO";
		FmTopUpMoneyRecordPanelVo.UPDATE_INFO="UPDATE_INFO";
		return FmTopUpMoneyRecordPanelVo;
	})(BaseViewVo)


	//class modules.hall.v.component.HallTabComponent extends robotLegs.sprite.BaseUISprite
	var HallTabComponent=(function(_super){
		function HallTabComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.tabBtnController=null;
			this.tabvisibleController=null;
			this.tabBtn1=null;
			this.tabBtn2=null;
			this.tabBtn3=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallTabComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallTabComponent,'modules.hall.v.component.HallTabComponent',_super);
		var __proto=HallTabComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.toShow=function(){
			this.tabvisibleController.selectedIndex=1;
		}

		__proto.toHide=function(){
			this.tabvisibleController.selectedIndex=0;
		}

		__proto.setTabLabel=function(lb1,lb2,lb3){
			(lb1===void 0)&& (lb1="");
			(lb2===void 0)&& (lb2="");
			(lb3===void 0)&& (lb3="");
			var index=0;
			if(lb1 !=""){
				this.tabBtn1.title=lb1;
				index++;
			}
			if(lb2 !=""){
				this.tabBtn2.title=lb2;
				index++;
			}
			if(lb3 !=""){
				this.tabBtn3.title=lb3;
				index++;
			}
			this.tabBtn1.width=this.tabBtn2.width=this.tabBtn3.width=GRoot.inst.width/index;
			this.tabBtn2.x=this.tabBtn1.x+this.tabBtn1.width;
			this.tabBtn3.x=this.tabBtn2.x+this.tabBtn2.width;
			this.tabBtn3.visible=(index==3);
		}

		return HallTabComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyVo extends robotLegs.vo.BaseViewVo
	var FmTopUpMoneyVo=(function(_super){
		function FmTopUpMoneyVo(){
			this.rechargePipeData=null;
			this.topupObj=null;
			this.cur_product_id=null;
			this.cur_money=null;
			this.topUpButtonRect=new Rectangle();
			FmTopUpMoneyVo.__super.call(this);
		}

		__class(FmTopUpMoneyVo,'modules.hall.v.fundmanage.FmTopUpMoneyVo',_super);
		FmTopUpMoneyVo.UPDATE_MONEY="UPDATE_MONEY";
		FmTopUpMoneyVo.UPDATE_RECHARGE_PIPE="UPDATE_RECHARGE_PIPE";
		FmTopUpMoneyVo.TOPUP_PROCESS="TOPUP_PROCESS";
		FmTopUpMoneyVo.UPDATE_HEIGHT_STATUS="UPDATE_HEIGHT_STATUS";
		return FmTopUpMoneyVo;
	})(BaseViewVo)


	//class modules.hall.v.component.HallTopComponent extends robotLegs.sprite.BaseUISprite
	var HallTopComponent=(function(_super){
		function HallTopComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallTopComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallTopComponent,'modules.hall.v.component.HallTopComponent',_super);
		var __proto=HallTopComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return HallTopComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpRecordPanelVo extends robotLegs.vo.BaseViewVo
	var FmTopUpRecordPanelVo=(function(_super){
		function FmTopUpRecordPanelVo(){
			this.data=null;
			this.searchIndex=0;
			FmTopUpRecordPanelVo.__super.call(this);
		}

		__class(FmTopUpRecordPanelVo,'modules.hall.v.fundmanage.FmTopUpRecordPanelVo',_super);
		FmTopUpRecordPanelVo.INIT_INFO="INIT_INFO";
		FmTopUpRecordPanelVo.UPDATE_INFO="UPDATE_INFO";
		return FmTopUpRecordPanelVo;
	})(BaseViewVo)


	//class modules.hall.v.fundmanage.FmTransferAccountsPanelVo extends robotLegs.vo.BaseViewVo
	var FmTransferAccountsPanelVo=(function(_super){
		function FmTransferAccountsPanelVo(){
			FmTransferAccountsPanelVo.__super.call(this);
		}

		__class(FmTransferAccountsPanelVo,'modules.hall.v.fundmanage.FmTransferAccountsPanelVo',_super);
		FmTransferAccountsPanelVo.INIT_INFO="INIT_INFO";
		FmTransferAccountsPanelVo.UPDATE_INFO="UPDATE_INFO";
		return FmTransferAccountsPanelVo;
	})(BaseViewVo)


	//class modules.hall.v.component.MineTabContent1Component extends robotLegs.sprite.BaseUISprite
	var MineTabContent1Component=(function(_super){
		function MineTabContent1Component(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btn0=null;
			this.btn1=null;
			this.btn2=null;
			this.commonGrid5Component0=null;
			this.commonGrid5Component1=null;
			this.commonGrid5Component2=null;
			this.commonGrid5Component3=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			MineTabContent1Component.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(MineTabContent1Component,'modules.hall.v.component.MineTabContent1Component',_super);
		var __proto=MineTabContent1Component.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			var dataMgr=DataMgr.get();
			var iconConfigData=dataMgr.iconConfigData;
			this.btn0.onClick(this,this.onClick,[0]);
			this.btn1.onClick(this,this.onClick,[1]);
			this.btn2.onClick(this,this.onClick,[2]);
			this.commonGrid5Component0.updateData(iconConfigData.getIcon1Vo(0),0);
			this.commonGrid5Component1.updateData(iconConfigData.getIcon1Vo(1),1);
			this.commonGrid5Component2.updateData(iconConfigData.getIcon1Vo(2),2);
			this.commonGrid5Component3.updateData(iconConfigData.getIcon1Vo(3),3);
			this.commonGrid5Component0.onClick(this,this.onComponentClick,[0]);
			this.commonGrid5Component1.onClick(this,this.onComponentClick,[1]);
			this.commonGrid5Component2.onClick(this,this.onComponentClick,[2]);
			this.commonGrid5Component3.onClick(this,this.onComponentClick,[3]);
		}

		__proto.onClick=function(btnType){
			switch(btnType){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_BET_RECORD_2,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_WIN_LOST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 2:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		__proto.onComponentClick=function(componentType){
			switch(componentType){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 2:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_MY_BANK_CARD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 3:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_MODIFY_PASSWORD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		return MineTabContent1Component;
	})(BaseUISprite)


	//class modules.hall.v.component.MineTabContent2Component extends robotLegs.sprite.BaseUISprite
	var MineTabContent2Component=(function(_super){
		function MineTabContent2Component(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btn0=null;
			this.btn1=null;
			this.btn2=null;
			this.commonGrid5Component0=null;
			this.commonGrid5Component1=null;
			this.commonGrid5Component2=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			MineTabContent2Component.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(MineTabContent2Component,'modules.hall.v.component.MineTabContent2Component',_super);
		var __proto=MineTabContent2Component.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			var dataMgr=DataMgr.get();
			var iconConfigData=dataMgr.iconConfigData;
			this.btn0.onClick(this,this.onClick,[0]);
			this.btn1.onClick(this,this.onClick,[1]);
			this.btn2.onClick(this,this.onClick,[2]);
			this.commonGrid5Component0.updateData(iconConfigData.getIcon1Vo(4),0);
			this.commonGrid5Component1.updateData(iconConfigData.getIcon1Vo(5),1);
			this.commonGrid5Component2.updateData(iconConfigData.getIcon1Vo(6),2);
			this.commonGrid5Component0.onClick(this,this.onComponentClick,[0]);
			this.commonGrid5Component1.onClick(this,this.onComponentClick,[1]);
			this.commonGrid5Component2.onClick(this,this.onComponentClick,[2]);
		}

		__proto.onClick=function(btnType){
			switch(btnType){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_NEW_ACCOUNT_MANAGE,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_VIP_MANAGE,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 2:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_STATISTICAL_ANALYSIS,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		__proto.onComponentClick=function(componentType){
			switch(componentType){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_BET_RECORD2,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 2:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_WIN_LOST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		return MineTabContent2Component;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmValidPwdPanelVo extends robotLegs.vo.BaseViewVo
	var FmValidPwdPanelVo=(function(_super){
		function FmValidPwdPanelVo(){
			this.account=null;
			this.money=NaN;
			FmValidPwdPanelVo.__super.call(this);
		}

		__class(FmValidPwdPanelVo,'modules.hall.v.fundmanage.FmValidPwdPanelVo',_super);
		FmValidPwdPanelVo.VALID_INFO="VALID_INFO";
		return FmValidPwdPanelVo;
	})(BaseViewVo)


	//class modules.hall.v.component.ZoomPicker.ZoomPickerComponent extends robotLegs.sprite.BaseUISprite
	var ZoomPickerComponent=(function(_super){
		function ZoomPickerComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txtTitle=null;
			this.btnCancel=null;
			this.btnOk=null;
			this.gList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ZoomPickerComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ZoomPickerComponent,'modules.hall.v.component.ZoomPicker.ZoomPickerComponent',_super);
		var __proto=ZoomPickerComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.playInAni=function(){
			this.view.y=GRoot.inst.height;
			Tween.to(this.view,{y:GRoot.inst.height-this.view.height},GameUtil.Time_Panel_Ani,Ease.cubicInOut);
		}

		__proto.playOutAni=function(){
			Tween.to(this.view,{y:GRoot.inst.height},GameUtil.Time_Panel_Ani,Ease.cubicInOut);
		}

		return ZoomPickerComponent;
	})(BaseUISprite)


	//class modules.hall.v.component.ZoomPicker.ZoomPickerPanel extends robotLegs.sprite.BaseUISprite
	var ZoomPickerPanel=(function(_super){
		function ZoomPickerPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.zoomPickerComponent=null;
			this.dataArr=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			ZoomPickerPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(ZoomPickerPanel,'modules.hall.v.component.ZoomPicker.ZoomPickerPanel',_super);
		var __proto=ZoomPickerPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.zoomPickerComponent.btnCancel.onClick(this,this.onBackClick,[0]);
			this.zoomPickerComponent.btnOk.onClick(this,this.onBackClick,[1]);
			this.zoomPickerComponent.gList.setVirtual();
			this.zoomPickerComponent.gList.itemRenderer=Handler.create(this,this.itemOfListRenderer,null,false);
			this.zoomPickerComponent.gList.on("fui_scroll",this,this.doSpecialEffect);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.zoomPickerComponent.playInAni();
			var dataMgr=DataMgr.get();
			var zoomPickerVo=dataMgr.zoomPickerVo;
			this.zoomPickerComponent.txtTitle.text=zoomPickerVo.title;
			this.dataArr=["","",""];
			this.dataArr=this.dataArr.concat(zoomPickerVo.dataArr);
			this.dataArr=this.dataArr.concat(["","",""]);
			this.zoomPickerComponent.gList.numItems=this.dataArr.length;
			this.zoomPickerComponent.gList.scrollToView(zoomPickerVo.selectIndex);
		}

		__proto.onBackClick=function(btnType){
			var dataMgr=DataMgr.get();
			var zoomPickerVo=dataMgr.zoomPickerVo;
			if(btnType==1){
				console.log("getFirstChildInView:",this.zoomPickerComponent.gList.getFirstChildInView());
				zoomPickerVo.selectIndex=this.zoomPickerComponent.gList.getFirstChildInView();
			}
			this.zoomPickerComponent.playOutAni();
			this.sendNotification("CLOSE_PANEL_2_Cmd",GameUtil.PANEL_ZOOM_PICKER);
			zoomPickerVo.run();
		}

		__proto.onUpdateInfo=function(){}
		__proto.onDoClick=function(){}
		__proto.doSpecialEffect=function(){
			var midX=this.zoomPickerComponent.gList.scrollPane.posY+this.zoomPickerComponent.gList.viewHeight / 2;
			var cnt=this.zoomPickerComponent.gList.numChildren;
			for (var i=0;i < cnt;i++){
				var item=this.zoomPickerComponent.gList.getChildAt(i);
				var dist=Math.abs(midX-item.y-item.height / 2);
				if (dist > item.height){
					var listHalfHeight=this.zoomPickerComponent.gList.viewHeight / 2;
					var itemMidY=item.y+item.height / 2;
					var distTemp=Math.min(Math.abs(midX-itemMidY),listHalfHeight);
					var skewXTemp=distTemp / listHalfHeight *1;
					skewXTemp=Math.max(0.5,skewXTemp);
					item.setTextScale(skewXTemp,skewXTemp);
				}
				else{
					var ss=1+(1-dist / item.height)*0.3;
					item.setTextScale(ss,ss);
				}
			}
		}

		// trace("doSpecialEffect distTemp:",distTemp," item.skewX:",item.skewX);
		__proto.itemOfListRenderer=function(index,gobj){
			var item=gobj;
			item.updateData(this.dataArr[index]);
		}

		return ZoomPickerPanel;
	})(BaseUISprite)


	//class modules.hall.v.events.daily.DailyEventWindow extends robotLegs.sprite.BaseUISprite
	var DailyEventWindow=(function(_super){
		function DailyEventWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.dailyEventWindowVo=null;
			this.dailyEventWindowMain=null;
			this.nextBtn=null;
			this.lastBtn=null;
			this.closeBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			DailyEventWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(DailyEventWindow,'modules.hall.v.events.daily.DailyEventWindow',_super);
		var __proto=DailyEventWindow.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.lastBtn.visible=false;
			if(this.dailyEventWindowVo.oneDailyTypeInfoVoArr.length==1){
				this.nextBtn.visible=false;
			}
			this.nextBtn.onClick(this,this.nextDailyEvent);
			this.lastBtn.onClick(this,this.lastDailyEvent);
			this.closeBtn.onClick(this,this.close);
		}

		/**
		*上一个每日任务
		*
		*/
		__proto.lastDailyEvent=function(){
			this.dailyEventWindowVo.eventIndex--;
			if(this.dailyEventWindowVo.eventIndex==0){
				this.lastBtn.visible=false;
			}
			this.nextBtn.visible=true;
		}

		/**
		*下一个每日任务
		*
		*/
		__proto.nextDailyEvent=function(){
			this.dailyEventWindowVo.eventIndex++;
			if(this.dailyEventWindowVo.eventIndex==this.dailyEventWindowVo.oneDailyTypeInfoVoArr.length-1){
				this.nextBtn.visible=false;
			}
			this.lastBtn.visible=true;
		}

		/**
		*关闭
		*
		*/
		__proto.close=function(){
			this.sendNotification("Close_Daily_Event_Cmd");
		}

		return DailyEventWindow;
	})(BaseUISprite)


	//class modules.hall.v.events.daily.DailyEventWindowMain extends robotLegs.sprite.BaseUISprite
	var DailyEventWindowMain=(function(_super){
		function DailyEventWindowMain(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.dailyEventWindowMainVo=null;
			this.totalActivityTxt=null;
			this.getReward_0=null;
			this.getReward_1=null;
			this.getReward_2=null;
			this.getReward_3=null;
			this.getReward_4=null;
			this.activityBar=null;
			this.eventList=null;
			this.activityValueTxt_0=null;
			this.activityValueTxt_1=null;
			this.activityValueTxt_2=null;
			this.activityValueTxt_3=null;
			this.activityValueTxt_4=null;
			this.rewardTxt_0=null;
			this.rewardTxt_1=null;
			this.rewardTxt_2=null;
			this.rewardTxt_3=null;
			this.rewardTxt_4=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			DailyEventWindowMain.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(DailyEventWindowMain,'modules.hall.v.events.daily.DailyEventWindowMain',_super);
		var __proto=DailyEventWindowMain.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.eventList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Daily_Event_Status",new Handler(this,this.updateDailyEvent));
		}

		__proto.updateDailyEvent=function(){
			this.eventList.numItems=this.dailyEventWindowMainVo.oneDailyEventVoArr.length;
			for(var i=0;i < this.dailyEventWindowMainVo.claimStatusArr.length;i++){
				var status=this.dailyEventWindowMainVo.claimStatusArr[i];
				(this["getReward_"+i]).getController("getRewardController").selectedIndex=status;
				(this["getReward_"+i]).onClick(this,this.getReward,[this.dailyEventWindowMainVo.claimStatusArr[i],i]);
				this["rewardTxt_"+i].text="￥"+this.dailyEventWindowMainVo.rewardArr[i];
				this["activityValueTxt_"+i].test=this.dailyEventWindowMainVo.activityValueArr[i];
			}
			this.totalActivityTxt.text=BaseStaticFuncs.format("{0}/{1}",this.dailyEventWindowMainVo.currentActivity,this.dailyEventWindowMainVo.totalActivity);
			this.activityBar.value=Math.round((this.dailyEventWindowMainVo.currentActivity / this.dailyEventWindowMainVo.totalActivity)*100);
		}

		/**
		*领取奖励
		*@param _status
		*
		*/
		__proto.getReward=function(_status,_rewardIndex){
			if(_status !=1)
				return;
			this.dailyEventWindowMainVo.claimRewardIndex=_rewardIndex;
			this.sendNotification("Claim_Daily_Reward_Cmd");
		}

		/**
		*更新
		*@param index
		*@param obj
		*
		*/
		__proto.renderListItem=function(index,obj){
			(obj).update(this.dailyEventWindowMainVo.oneDailyEventVoArr[index]);
		}

		return DailyEventWindowMain;
	})(BaseUISprite)


	//class modules.hall.v.events.hall.HallEvent extends robotLegs.sprite.BaseUISprite
	var HallEvent=(function(_super){
		function HallEvent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.hallEventVo=null;
			this.eventList=null;
			this.closeBtn=null;
			this.backBtn=null;
			this.oneAllController=null;
			this.imgContainer=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallEvent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallEvent,'modules.hall.v.events.hall.HallEvent',_super);
		var __proto=HallEvent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.eventList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
			this.closeBtn.onClick(this,this.close);
			this.backBtn.onClick(this,this.back);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.updateEvent));
			this.registerStatusCallBack("DISPLAY_BIG_BANNER_STATUS",new Handler(this,this.displayBigBanner));
		}

		/**
		*更新活动
		*
		*/
		__proto.updateEvent=function(){
			this.eventList.numItems=this.hallEventVo.oneHallEventVoArr.length;
		}

		__proto.displayBigBanner=function(){
			var imgLoader=this.imgContainer.getChild("imgLoader");
			imgLoader.url=this.hallEventVo.bigBannerUrl;
			if(this.hallEventVo.chooseId==22){
				imgLoader.height=1327;
			}
			else if(this.hallEventVo.chooseId==23){
				imgLoader.height=1780;
			}
			else if(this.hallEventVo.chooseId==24){
				imgLoader.height=1323;
			}
			this.oneAllController.selectedIndex=1;
		}

		__proto.back=function(){
			this.oneAllController.selectedIndex=0;
		}

		/**
		*更新
		*@param index
		*@param obj
		*
		*/
		__proto.renderListItem=function(index,obj){
			(obj).update(this.hallEventVo.oneHallEventVoArr[index]);
		}

		__proto.close=function(){
			this.hallEventVo.status="Remove_Status";
		}

		return HallEvent;
	})(BaseUISprite)


	//class modules.hall.v.events.newPlayerEvents.NewPlayerEvents extends robotLegs.sprite.BaseUISprite
	var NewPlayerEvents=(function(_super){
		function NewPlayerEvents(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.newPlayerEventsVo=null;
			this.newPlayerEventController=null;
			this.nameTxt=null;
			this.wechatTxt=null;
			this.countryCodeTxt=null;
			this.phoneNumberTxt=null;
			this.mobileCodeTxt=null;
			this.codeBtn=null;
			this.nextStep1Btn=null;
			this.nextStep2Btn=null;
			this.nextStep3Btn=null;
			this.closeBtn=null;
			this.__time=0;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NewPlayerEvents.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NewPlayerEvents,'modules.hall.v.events.newPlayerEvents.NewPlayerEvents',_super);
		var __proto=NewPlayerEvents.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.newPlayerEventController.selectedIndex=this.newPlayerEventsVo.stepIndex;
			this.nextStep1Btn.displayObject.mouseEnabled=false;
			this.nextStep2Btn.displayObject.mouseEnabled=false;
			this.nextStep3Btn.displayObject.mouseEnabled=false;
			this.nextStep1Btn.onClick(this,this.sendToServer,["name"]);
			this.nextStep2Btn.onClick(this,this.sendToServer,["wechat"]);
			this.nextStep3Btn.onClick(this,this.sendToServer,["checkCode"]);
			this.codeBtn.onClick(this,this.sendToServer,["code"]);
			this.closeBtn.onClick(this,this.close);
			this.nameTxt.displayObject.on("input",this,this.inputName);
			this.wechatTxt.displayObject.on("input",this,this.inputWechat);
			this.phoneNumberTxt.displayObject.on("input",this,this.inputNumberCode);
			this.mobileCodeTxt.displayObject.on("input",this,this.inputNumberCode);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Step_Status",new Handler(this,this.updateStep));
		}

		__proto.inputName=function(e){
			if(this.nameTxt.text.length > 1){
				this.nextStep1Btn.getController("clickController").selectedIndex=1;
				this.nextStep1Btn.displayObject.mouseEnabled=true;
			}
			else{
				this.nextStep1Btn.getController("clickController").selectedIndex=0;
				this.nextStep1Btn.displayObject.mouseEnabled=false;
			}
		}

		__proto.inputWechat=function(e){
			if(this.wechatTxt.text.length > 1){
				this.nextStep2Btn.getController("clickController").selectedIndex=1;
				this.nextStep2Btn.displayObject.mouseEnabled=true;
			}
			else{
				this.nextStep2Btn.getController("clickController").selectedIndex=0;
				this.nextStep2Btn.displayObject.mouseEnabled=false;
			}
		}

		__proto.inputNumberCode=function(e){
			if(this.phoneNumberTxt.text.length !=11 || this.mobileCodeTxt.text.length !=4){
				this.nextStep3Btn.getController("clickController").selectedIndex=0;
				this.nextStep3Btn.displayObject.mouseEnabled=false;
			}
			else{
				this.nextStep3Btn.getController("clickController").selectedIndex=1;
				this.nextStep3Btn.displayObject.mouseEnabled=true;
			}
		}

		__proto.sendToServer=function(_stepName){
			switch(_stepName){
				case "name":{
						this.newPlayerEventsVo.name=this.nameTxt.text;
						this.sendNotification("Send_Name_Cmd");
						break ;
					}
				case "wechat":{
						this.newPlayerEventsVo.wechat=this.wechatTxt.text;
						this.sendNotification("Send_Wechat_Cmd");
						break ;
					}
				case "code":{
						if(this.codeBtn.getController("getController").selectedIndex==1)
							return;
						this.newPlayerEventsVo.mobileCountryCode=this.countryCodeTxt.text;
						this.newPlayerEventsVo.mobileNumber=this.phoneNumberTxt.text;
						this.sendNotification("Get_Check_Code_Cmd");
						this.startCodeTime();
						break ;
					}
				case "checkCode":{
						this.newPlayerEventsVo.mobileCountryCode=this.countryCodeTxt.text;
						this.newPlayerEventsVo.mobileNumber=this.phoneNumberTxt.text;
						this.newPlayerEventsVo.code=this.mobileCodeTxt.text;
						this.sendNotification("Check_Code_Cmd");
						break ;
					}
				case "claim":{
						this.sendNotification("Claim_Rewards_Cmd");
						break ;
					}
				}
		}

		/**
		*开始计时
		*
		*/
		__proto.startCodeTime=function(){
			this.__time=61;
			this.codeBtn.getController("getController").selectedIndex=1;
			this.displayTime();
			this.startTime(1000,new Handler(this,this.displayTime));
		}

		__proto.displayTime=function(){
			this.__time--;
			if(this.__time < 0){
				this.codeBtn.getController("getController").selectedIndex=0;
				this.stopTime();
			}
			else{
				this.codeBtn.getChild("leftTimeTxt").text=this.__time+"秒后重新发送";
			}
		}

		__proto.updateStep=function(){
			this.newPlayerEventController.selectedIndex=this.newPlayerEventsVo.stepIndex;
		}

		__proto.close=function(){
			this.newPlayerEventsVo.status="Remove_Status";
		}

		return NewPlayerEvents;
	})(BaseUISprite)


	//class modules.hall.v.events.sign.HallSignEvent extends robotLegs.sprite.BaseUISprite
	var HallSignEvent=(function(_super){
		function HallSignEvent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.hallSignEventVo=null;
			this.signList=null;
			this.closeBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallSignEvent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallSignEvent,'modules.hall.v.events.sign.HallSignEvent',_super);
		var __proto=HallSignEvent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.signList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
			this.closeBtn.onClick(this,this.closeSignEvent);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.updateEvent));
		}

		/**
		*更新活动
		*
		*/
		__proto.updateEvent=function(){
			this.signList.numItems=this.hallSignEventVo.oneDaySignVoArr.length;
		}

		/**
		*更新
		*@param index
		*@param obj
		*
		*/
		__proto.renderListItem=function(index,obj){
			(obj).update(this.hallSignEventVo.oneDaySignVoArr[index]);
		}

		__proto.closeSignEvent=function(){
			this.hallSignEventVo.status="Remove_Status";
		}

		return HallSignEvent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmDrawMoneyCenterPanel extends robotLegs.sprite.BaseUISprite
	var FmDrawMoneyCenterPanel=(function(_super){
		function FmDrawMoneyCenterPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmDrawMoneyCenterPanelVo=null;
			this.commonTopComponent=null;
			this.commonGrid2Component0=null;
			this.commonGrid7Component1=null;
			this.commonGrid2Component1=null;
			this.commonGrid3Component1=null;
			this.commonGrid3Component2=null;
			this.btnDo=null;
			this.txtAllCount=null;
			this.txtDrawCount=null;
			this.txtM=null;
			this.serviceTimeTxt=null;
			this.minMaxTxt=null;
			this.fmTransferAccountsInfoTxt=null;
			this.btnSearch=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmDrawMoneyCenterPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmDrawMoneyCenterPanel,'modules.hall.v.fundmanage.FmDrawMoneyCenterPanel',_super);
		var __proto=FmDrawMoneyCenterPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("提款中心");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonGrid2Component0.setTitle("产品类型");
			this.commonGrid7Component1.setTitle("用户余额");
			this.commonGrid2Component1.setTitle("收款银行卡");
			this.commonGrid3Component1.setTitle("提款金额");
			this.commonGrid3Component2.setTitle("资金密码");
			this.commonGrid3Component1.setPrompt("请确提款金额");
			this.commonGrid3Component1.setRestrict("0-9.");
			this.commonGrid3Component2.setPrompt("资金密码长度为8-16字符");
			this.commonGrid3Component2.setRestrict(GameUtil.Restrict_account);
			this.commonGrid3Component2.setMaxLen(GameUtil.PWD_BANK_MAX);
			this.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.commonGrid2Component1.onClick(this,this.chooseTypeListClick,[1]);
			this.btnDo.onClick(this,this.onDoClick);
			this.registerStatusCallBack(FmDrawMoneyCenterPanelVo.INIT_INFO,new Handler(this,this.onInitInfo));
			this.registerStatusCallBack(FmDrawMoneyCenterPanelVo.UPDATE_STATUS,new Handler(this,this.updateInfo));
			this.minMaxTxt.text=BaseStaticFuncs.format("单笔最低提领金额：{0}，最高：{1}",this.fmDrawMoneyCenterPanelVo.withDrawMin,this.fmDrawMoneyCenterPanelVo.withDrawMax);
			this.serviceTimeTxt.text=this.fmDrawMoneyCenterPanelVo.withDrawTime;
			this.btnSearch.onClick(this,this.onSearchClick);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.commonGrid2Component0.index=0;
			this.commonGrid2Component1.index=0;
		}

		// sendNotification(SystemCenterCommand.GET_MY_BANK_CARD_CMD,GameUtil.PANEL_FM_DRAW_MONEY_CENTER);
		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_FM_DRAW_MONEY_CENTER,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
		}

		__proto.updateInfo=function(){
			this.txtAllCount.text=this.fmDrawMoneyCenterPanelVo.withDrawTotalCount;
			this.txtM.text=this.fmDrawMoneyCenterPanelVo.withDrawTotalDayPrice;
			this.txtDrawCount.text=this.fmDrawMoneyCenterPanelVo.withDrawCurrentCount;
			this.fmTransferAccountsInfoTxt.text=BaseStaticFuncs.format("1. {0}\r\n"+
			"2. 提现同账号每日累积提领上限总金额为 {1} 元整，提领次数上限为 {2} 次。 \r\n"+
			"3. 提现需进行充值金额满{3}%的投注，若未满足消费流水将无法成功提现。(例：充值100元需投注{4}元才能进行提现)\r\n"+
			"4. 银行卡请务必正确填写开户银行和银行卡号码、持卡人姓名。 \r\n"+
			"5. 新设定好的银行卡，需要于设定完成的4小时后才可以进行提现申请。\r\n"+
			"6. 当您提现申请完成后，系统作业时间约3-5分钟，故请您前往充提进度以完成出款后，再至您的银行账户进行查看。",
			this.fmDrawMoneyCenterPanelVo.withDrawTime,this.fmDrawMoneyCenterPanelVo.withDrawTotalDayPrice,this.fmDrawMoneyCenterPanelVo.withDrawTotalCount,
			this.fmDrawMoneyCenterPanelVo.total_bet_balance_percent,this.fmDrawMoneyCenterPanelVo.total_bet_balance_percent);
		}

		__proto.onUpdateChooseInfo=function(){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var userBalanceData=dataMgr.userBalanceData;
			var userBankAccountData=dataMgr.userBankAccountData;
			if(userBalanceData==null || userBankAccountData==null){
				return;
			}
			if(userBankAccountData.items.length==0){
				if(userBankAccountData.checkBol){
					userBankAccountData.checkBol=false;
					this.sendNotification("SHOW_PROMPT_TEXT_Cmd","你还未绑定银行卡，请先绑定银行卡");
					this.onBackClick();
					return;
				}
			};
			var tabName;
			var gid=userBalanceData.itemDic.keys[this.commonGrid2Component0.index];
			tabName=gameTypeConfigData.getItem(gid).cn;
			this.commonGrid2Component0.setName(tabName);
			var userBalanceDataItem=userBalanceData.itemDic.get(gid);
			if(userBalanceDataItem.user_balance_display=="尚未开通"){
				this.commonGrid7Component1.setName(userBalanceDataItem.user_balance_display);
			}
			else
			this.commonGrid7Component1.setName(userBalanceDataItem.user_balance_display+"元");
			var userBankAccountDataItem=dataMgr.userBankAccountData.items[this.commonGrid2Component1.index];
			if(!userBankAccountDataItem)
				return;
			tabName=userBankAccountDataItem.bank_name+"(尾号"+userBankAccountDataItem.bank_account.replace(/\*/g,"")+")";
			this.commonGrid2Component1.setName(tabName);
		}

		__proto.onDoClick=function(){
			var dataMgr=DataMgr.get();
			var userBalanceData=dataMgr.userBalanceData;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var gid=userBalanceData.itemDic.keys[this.commonGrid2Component0.index];
			var tabName=gameTypeConfigData.getItem(gid).cn;
			var userBalanceDataItem=userBalanceData.itemDic.get(gid);
			if(userBalanceDataItem.user_balance_display=="尚未开通"){
				this.showAlert(BaseStaticFuncs.format("尚未开通{0}, 是否开通？",tabName),"Open_Fund_Cmd",2,gid);
				return;
			};
			var monenyStr=StringTool.trim(this.commonGrid3Component1.getName());
			if(monenyStr==""){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填写提款金额");
				return;
			};
			var moneny=parseFloat(monenyStr);
			if(moneny < Number(this.fmDrawMoneyCenterPanelVo.withDrawMin)|| moneny > Number(this.fmDrawMoneyCenterPanelVo.withDrawMax)){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd",BaseStaticFuncs.format("提款金额范围为{0}元~{1}元",this.fmDrawMoneyCenterPanelVo.withDrawMin,this.fmDrawMoneyCenterPanelVo.withDrawMax));
				return;
			};
			var pwd=StringTool.trim(this.commonGrid3Component2.getName());
			if(pwd.length < GameUtil.PWD_BANK_MIN){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","资金密码长度为"+GameUtil.PWD_BANK_MIN+"个字符！");
				return;
			};
			var data=new Object();
			var userBankAccountDataItem=dataMgr.userBankAccountData.items[this.commonGrid2Component1.index];
			data.bank_id=userBankAccountDataItem.id;
			data.withdraw_amount=moneny;
			data.balance_password=pwd;
			data.product_id=userBalanceData.itemDic.keys[this.commonGrid2Component0.index];
			this.sendNotification("DRAW_MONEY_Cmd",data);
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick");
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var userBalanceData=dataMgr.userBalanceData;
			var userBankAccountData=dataMgr.userBankAccountData;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < userBalanceData.itemDic.keys.length;i++){
						var gid=userBalanceData.itemDic.keys[i];
						tempArr.push(gameTypeConfigData.getItem(gid).cn);
					}
					commonTypeListVo.title="选择"+this.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=this.commonGrid2Component0.index;
					break ;
				case 1:
					for (i=0;i < userBankAccountData.items.length;i++){
						var userBankAccountDataItem=userBankAccountData.items[i];
						tempArr.push(userBankAccountDataItem.bank_name+"(尾号"+userBankAccountDataItem.bank_account.replace(/\*/g,"")+")");
					}
					commonTypeListVo.title="选择"+this.commonGrid2Component1.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=this.commonGrid2Component1.index;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[tabType]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_DRAW_MONEY_CENTER,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			switch(type){
				case 0:
					this.commonGrid2Component0.index=commonTypeListVo.selectIndex;
					break ;
				case 1:
					this.commonGrid2Component1.index=commonTypeListVo.selectIndex;
					break ;
				}
			this.onUpdateChooseInfo();
		}

		__proto.onSearchClick=function(){
			this.sendNotification("UPDATE_TOPUP_RECORD_TYPE_Cmd",2);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.PANEL_ANI_TO_LEFT));
		}

		return FmDrawMoneyCenterPanel;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmQrCode extends robotLegs.sprite.BaseUISprite
	var FmQrCode=(function(_super){
		function FmQrCode(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmQrCodeVo=null;
			this.__img=null;
			this.titleTxt=null;
			this.codeComp=null;
			this.closeBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmQrCode.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
			this.__img=new Image();
			this.view.displayObject.addChild(this.__img);
			this.__img.on("loaded",this,this.complete);
			this.__img.skin=this.fmQrCodeVo.base64;
			this.titleTxt.text=this.fmQrCodeVo.title;
			this.closeBtn.onClick(this,this.close);
		}

		__class(FmQrCode,'modules.hall.v.fundmanage.FmQrCode',_super);
		var __proto=FmQrCode.prototype;
		__proto.complete=function(){
			this.__img.x=this.codeComp.x+(this.codeComp.width-this.__img.width)/ 2;
			this.__img.y=this.codeComp.y+(this.codeComp.height-this.__img.height)/ 2;
		}

		__proto.close=function(){
			this.__img.parent.removeChild(this.__img);
			this.__img.dispose();
			this.__img=null;
			this.fmQrCodeVo.status="Remove_Status";
		}

		return FmQrCode;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmQuestionCenterPanel extends robotLegs.sprite.BaseUISprite
	var FmQuestionCenterPanel=(function(_super){
		function FmQuestionCenterPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonTopComponent=null;
			this.gList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmQuestionCenterPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmQuestionCenterPanel,'modules.hall.v.fundmanage.FmQuestionCenterPanel',_super);
		var __proto=FmQuestionCenterPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("帮助中心");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
			var questionData=DataMgr.get().questionData;
			this.gList.numItems=questionData.titles.length;
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_FM_QUESTION_CENTER,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.gListRenderer=function(index,gobj){
			var questionData=DataMgr.get().questionData;
			var item=gobj;
			item.updateData(questionData.titles[index]);
		}

		__proto.gListClick=function(item,evt){}
		return FmQuestionCenterPanel;
	})(BaseUISprite)


	//class modules.loading.c.DataLoadingCommand extends robotLegs.command.BaseCommand
	var DataLoadingCommand=(function(_super){
		function DataLoadingCommand(){
			this.gameUIBuilderBridge=null;
			DataLoadingCommand.__super.call(this);
		}

		__class(DataLoadingCommand,'modules.loading.c.DataLoadingCommand',_super);
		var __proto=DataLoadingCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "BUILD_DATALOADING_Cmd":
					this.buildComponent();
					break ;
				case "CLOSE_DATALOADING_Cmd":
					this.closeComponent();
					break ;
				case "SHOW_Cmd":
					this.showPanel()
					break ;
				case "HIDE_Cmd":
					this.hidePanel()
					break ;
				}
		}

		__proto.buildComponent=function(){
			this.addPackage(GameUtil.Res_Loading_Package);
			this.viewClassMap.map(DataLoading);
		}

		// gameUIBuilderBridge.openPage(GameUtil.Res_Loading_Package,DataLoading);
		__proto.closeComponent=function(){
			this.viewClassMap.off(DataLoading);
			this.removePackage(GameUtil.Res_Loading_Package);
		}

		__proto.showPanel=function(){
			this.gameUIBuilderBridge.showPage(GameUtil.PANEL_DATALOADING,StageUIModel.Layer_Top);
		}

		__proto.hidePanel=function(){
			this.gameUIBuilderBridge.hidePage(GameUtil.PANEL_DATALOADING);
		}

		DataLoadingCommand.BUILD_DATALOADING_CMD="BUILD_DATALOADING_Cmd";
		DataLoadingCommand.CLOSE_DATALOADING_CMD="CLOSE_DATALOADING_Cmd";
		DataLoadingCommand.SHOW_CMD="SHOW_Cmd";
		DataLoadingCommand.HIDE_CMD="HIDE_Cmd";
		return DataLoadingCommand;
	})(BaseCommand)


	//class modules.hall.v.fundmanage.FmQuestionDetailPanel extends robotLegs.sprite.BaseUISprite
	var FmQuestionDetailPanel=(function(_super){
		function FmQuestionDetailPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonTopComponent=null;
			this.comp0$FmQuestionTitleComponent=null;
			this.comp1$FmQuestionTitleComponent=null;
			this.comp0$FmQuestionTitle2Component=null;
			this.comp1$FmQuestionTitle2Component=null;
			this.comp2$FmQuestionTitle2Component=null;
			this.comp3$FmQuestionTitle2Component=null;
			this.comp4$FmQuestionTitle2Component=null;
			this.comp5$FmQuestionTitle2Component=null;
			this.comp6$FmQuestionTitle2Component=null;
			this.comp7$FmQuestionTitle2Component=null;
			this.comp8$FmQuestionTitle2Component=null;
			this.comp9$FmQuestionTitle2Component=null;
			this.comp0$FmQuestionTextComponent=null;
			this.comp1$FmQuestionTextComponent=null;
			this.comp2$FmQuestionTextComponent=null;
			this.comp3$FmQuestionTextComponent=null;
			this.comp4$FmQuestionTextComponent=null;
			this.comp5$FmQuestionTextComponent=null;
			this.comp6$FmQuestionTextComponent=null;
			this.comp7$FmQuestionTextComponent=null;
			this.comp8$FmQuestionTextComponent=null;
			this.comp9$FmQuestionTextComponent=null;
			this.comp10$FmQuestionTextComponent=null;
			this.comp11$FmQuestionTextComponent=null;
			this.comp12$FmQuestionTextComponent=null;
			this.comp13$FmQuestionTextComponent=null;
			this.comp14$FmQuestionTextComponent=null;
			this.comp0$FmQuestionImageComponent=null;
			this.comp1$FmQuestionImageComponent=null;
			this.comp2$FmQuestionImageComponent=null;
			this.comp3$FmQuestionImageComponent=null;
			this.comp4$FmQuestionImageComponent=null;
			this.comp5$FmQuestionImageComponent=null;
			this.comp6$FmQuestionImageComponent=null;
			this.comp7$FmQuestionImageComponent=null;
			this.comp8$FmQuestionImageComponent=null;
			this.comp9$FmQuestionImageComponent=null;
			this.comp10$FmQuestionImageComponent=null;
			this.comp11$FmQuestionImageComponent=null;
			this.comp12$FmQuestionImageComponent=null;
			this.comp13$FmQuestionImageComponent=null;
			this.comp14$FmQuestionImageComponent=null;
			this.comp15$FmQuestionImageComponent=null;
			this.comp16$FmQuestionImageComponent=null;
			this.comp17$FmQuestionImageComponent=null;
			this.comp18$FmQuestionImageComponent=null;
			this.comp19$FmQuestionImageComponent=null;
			this.comp20$FmQuestionImageComponent=null;
			this.comp21$FmQuestionImageComponent=null;
			this.comp22$FmQuestionImageComponent=null;
			this.comp23$FmQuestionImageComponent=null;
			this.comp24$FmQuestionImageComponent=null;
			this.comp25$FmQuestionImageComponent=null;
			this.comp26$FmQuestionImageComponent=null;
			this.comp27$FmQuestionImageComponent=null;
			this.comp28$FmQuestionImageComponent=null;
			this.comp29$FmQuestionImageComponent=null;
			this.comp30$FmQuestionImageComponent=null;
			this.comp31$FmQuestionImageComponent=null;
			this.comp32$FmQuestionImageComponent=null;
			this.comp33$FmQuestionImageComponent=null;
			this.comp34$FmQuestionImageComponent=null;
			this.comp35$FmQuestionImageComponent=null;
			this.comp36$FmQuestionImageComponent=null;
			this.comp37$FmQuestionImageComponent=null;
			this.comp38$FmQuestionImageComponent=null;
			this.comp39$FmQuestionImageComponent=null;
			this.comp40$FmQuestionImageComponent=null;
			this.comp41$FmQuestionImageComponent=null;
			this.comp42$FmQuestionImageComponent=null;
			this.comp43$FmQuestionImageComponent=null;
			this.comp44$FmQuestionImageComponent=null;
			this.comp45$FmQuestionImageComponent=null;
			this.comp46$FmQuestionImageComponent=null;
			this.comp47$FmQuestionImageComponent=null;
			this.comp48$FmQuestionImageComponent=null;
			this.comp49$FmQuestionImageComponent=null;
			this.comp50$FmQuestionImageComponent=null;
			this.comp51$FmQuestionImageComponent=null;
			this.comp52$FmQuestionImageComponent=null;
			this.comp53$FmQuestionImageComponent=null;
			this.comp54$FmQuestionImageComponent=null;
			this.comp55$FmQuestionImageComponent=null;
			this.comp56$FmQuestionImageComponent=null;
			this.comp57$FmQuestionImageComponent=null;
			this.comp58$FmQuestionImageComponent=null;
			this.comp59$FmQuestionImageComponent=null;
			this.comp2$FmQuestionTitleComponent=null;
			this.__all=[];
			this.titles=[];
			this.title2s=[];
			this.texts=[];
			this.images=[];
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmQuestionDetailPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmQuestionDetailPanel,'modules.hall.v.fundmanage.FmQuestionDetailPanel',_super);
		var __proto=FmQuestionDetailPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.comp2$FmQuestionTitleComponent.txt.text="";
			this.comp2$FmQuestionTitleComponent.visible=true;
			var i=0;
			for (i=0;i < 2;i++){
				this.titles.push(this["comp"+i+"$FmQuestionTitleComponent"]);
				this.__all.push(this["comp"+i+"$FmQuestionTitleComponent"]);
			}
			for (i=0;i < 10;i++){
				this.title2s.push(this["comp"+i+"$FmQuestionTitle2Component"])
				this.__all.push(this["comp"+i+"$FmQuestionTitle2Component"]);
			}
			for (i=0;i < 15;i++){
				this.texts.push(this["comp"+i+"$FmQuestionTextComponent"])
				this.__all.push(this["comp"+i+"$FmQuestionTextComponent"]);
			}
			for (i=0;i < 60;i++){
				this.images.push(this["comp"+i+"$FmQuestionImageComponent"])
				this.__all.push(this["comp"+i+"$FmQuestionImageComponent"]);
			}
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			var questionId=DataMgr.get().questionId;
			var questionData=DataMgr.get().questionData;
			var content=questionData.getContentParentById(questionId);
			this.commonTopComponent.setTitle(questionData.getTitleSecondById(content.parentId).title);
			this.hideAll();
			var contents=content.content;
			var h=102;
			var titleIndex=0;
			var title2Index=0;
			var textIndex=0;
			var imageIndex=0;
			this.view._scrollPane.setContentSize(this.view.width,this.view.height);
			for (var i=0;i < contents.length;i++){
				switch(contents[i].type){
					case "title1":;
						var fmQuestionTitleComponent=this.titles [titleIndex];
						fmQuestionTitleComponent.txt.text=contents[i].content;
						fmQuestionTitleComponent.view.y=h;
						fmQuestionTitleComponent.visible=true;
						h+=fmQuestionTitleComponent.view.height;
						titleIndex++;
						break ;
					case "title2":;
						var fmQuestionTitle2Component=this.title2s [title2Index];
						fmQuestionTitle2Component.txt.text=contents[i].content;
						fmQuestionTitle2Component.view.y=h;
						fmQuestionTitle2Component.visible=true;
						h+=fmQuestionTitle2Component.view.height;
						title2Index++;
						break ;
					case "text":;
						var fmQuestionTextComponent=this.texts [textIndex];
						fmQuestionTextComponent.txt.text=contents[i].content;
						fmQuestionTextComponent.view.y=h;
						fmQuestionTextComponent.visible=true;
						h=fmQuestionTextComponent.view.y+fmQuestionTextComponent.view.height;
						textIndex++;
						break ;
					case "image":;
						var fmQuestionImageComponent=this.images [imageIndex];
						var fileName=contents[i].content;
						var fileArgs=fileName.substring(0,fileName.lastIndexOf(".")).split("_");
						fmQuestionImageComponent.img.url=GameUtil.Res_Help_Path+fileName;
						fmQuestionImageComponent.img.setSize(parseInt(fileArgs[fileArgs.length-2]),parseInt(fileArgs[fileArgs.length-1]));
						fmQuestionImageComponent.view.y=h;
						fmQuestionImageComponent.visible=true;
						h=fmQuestionImageComponent.view.y+fmQuestionImageComponent.view.height+10;
						imageIndex++;
						break ;
					}
			}
			this.comp2$FmQuestionTitleComponent.view.y=h;
		}

		__proto.onBackClick=function(){
			for(var i=0;i < this.__all.length;i++){
				this.__all[i].view.y=0;
			}
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_FM_QUESTION_DETAIL,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.hideAll=function(){
			var i=0;
			var comp;
			for (i=0;i < this.titles.length;i++){
				comp=this.titles[i];
				comp.visible=false;
			}
			for (i=0;i < this.title2s.length;i++){
				comp=this.title2s[i];
				comp.visible=false;
			}
			for (i=0;i < this.texts.length;i++){
				comp=this.texts[i];
				comp.visible=false;
			}
			for (i=0;i < this.images.length;i++){
				comp=this.images[i];
				comp.visible=false;
			}
		}

		return FmQuestionDetailPanel;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmQuestionImageComponent extends robotLegs.sprite.BaseUISprite
	var FmQuestionImageComponent=(function(_super){
		function FmQuestionImageComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.img=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmQuestionImageComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmQuestionImageComponent,'modules.hall.v.fundmanage.FmQuestionImageComponent',_super);
		var __proto=FmQuestionImageComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return FmQuestionImageComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmQuestionTextComponent extends robotLegs.sprite.BaseUISprite
	var FmQuestionTextComponent=(function(_super){
		function FmQuestionTextComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txt=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmQuestionTextComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmQuestionTextComponent,'modules.hall.v.fundmanage.FmQuestionTextComponent',_super);
		var __proto=FmQuestionTextComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return FmQuestionTextComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmQuestionTitle2Component extends robotLegs.sprite.BaseUISprite
	var FmQuestionTitle2Component=(function(_super){
		function FmQuestionTitle2Component(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txt=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmQuestionTitle2Component.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmQuestionTitle2Component,'modules.hall.v.fundmanage.FmQuestionTitle2Component',_super);
		var __proto=FmQuestionTitle2Component.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return FmQuestionTitle2Component;
	})(BaseUISprite)


	//class modules.login.c.LoginCommand extends robotLegs.command.BaseCommand
	var LoginCommand=(function(_super){
		function LoginCommand(){
			this.loginUIModel=null;
			this.publicModel=null;
			this.playerInfoModel=null;
			this.contextMain=null;
			this.gameUIBuilderBridge=null;
			LoginCommand.__super.call(this);
		}

		__class(LoginCommand,'modules.login.c.LoginCommand',_super);
		var __proto=LoginCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Close_Login_Cmd":
					this.closeLogin();
					break ;
				case "Build_Login_Cmd":
					this.buildLogin();
					break ;
				case "Login_Cmd":
					this.login();
					break ;
				case "Login_Complete_Cmd":
					this.loginComplete(_notificationVo.data);
					break ;
				case "Login_Error_Cmd":
					this.loginError(_notificationVo.data);
					break ;
				case "REGISTER_TRYPLAY_Cmd":
					this.registerTryPlay(_notificationVo.data);
					break ;
				case "REGISTER_TRYPLAY_COMPLETE_Cmd":
					this.registerTryPlayComplete(_notificationVo.data);
					break ;
				case "REGISTER_TRYPLAY_ERROR_Cmd":
					this.registerTryPlayError(_notificationVo.data);
					break ;
				case "REGISTER_PLAY_Cmd":
					this.registerPlay(_notificationVo.data);
					break ;
				case "REGISTER_PLAY_COMPLETE_Cmd":
					this.registerPlayComplete(_notificationVo.data);
					break ;
				case "REGISTER_PLAY_ERROR_Cmd":
					this.registerPlayError(_notificationVo.data);
					break ;
				}
		}

		/**
		*建造数字彩票游戏
		*
		*/
		__proto.buildLogin=function(){
			this.addPackage(GameUtil.Res_Login_Package);
			this.viewClassMap.map(LoginPanel,this.loginUIModel.loginVo);
			this.viewClassMap.map(LoginInputComponent,this.loginUIModel.loginVo.loginInputVo);
			this.viewClassMap.map(LoginOtherComponent);
			this.viewClassMap.map(LoginValidComponent);
			this.viewClassMap.map(RegisterComponent);
			this.viewClassMap.map(RegisterInputComponent);
			this.viewClassMap.map(TryPlayComponent);
			this.viewClassMap.map(TryPlayInputComponent);
			this.playerInfoModel.localInfo=new LocalInfo();
			if(this.playerInfoModel.localInfo.loginAccount !=""){
				this.loginUIModel.loginVo.loginInputVo.loginAccount=this.playerInfoModel.localInfo.loginAccount;
				this.loginUIModel.loginVo.loginInputVo.loginPassword=this.playerInfoModel.localInfo.loginPassword;
			}
			this.gameUIBuilderBridge.openPage(GameUtil.Res_Login_Package,LoginPanel);
		}

		__proto.closeLogin=function(){
			console.log("closeLogin");
			this.viewClassMap.off(LoginPanel);
			this.viewClassMap.off(LoginInputComponent);
			this.viewClassMap.off(LoginOtherComponent);
			this.viewClassMap.off(LoginValidComponent);
			this.viewClassMap.off(RegisterComponent);
			this.viewClassMap.off(RegisterInputComponent);
			this.viewClassMap.off(TryPlayComponent);
			this.viewClassMap.off(TryPlayInputComponent);
			this.loginUIModel.loginVo.status="Remove_Status";
			this.removePackage(GameUtil.Res_Login_Package);
		}

		__proto.login=function(){
			this.sendNotification("SHOW_Cmd");
			var data=new Object();
			data.timestamp=Math.floor(Laya.timer.currTimer/1000);
			data.app_key=GameUtil.app_key;
			data.user_account=this.loginUIModel.loginVo.loginInputVo.loginAccount;
			data.user_password=this.loginUIModel.loginVo.loginInputVo.loginPassword;
			var signatureKey=data.app_key+data.user_account+data.timestamp+GameUtil.app_secret;
			data.signature=GameUtil.getSignature(signatureKey);
			var url=GameUtil.getLoginUrl();
			this.sendHttpRequest(url,"Login_Complete_Cmd","Login_Error_Cmd","json",data,false);
		}

		__proto.loginComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("loginComplete data:",data);
			this.playerInfoModel.playerInfoVo.decode(data);
			DataMgr.get().playerInfoData=this.playerInfoModel.playerInfoVo;
			this.playerInfoModel.localInfo.setUid(this.playerInfoModel.playerInfoVo.user_id+"");
			this.playerInfoModel.localInfo.loginAccount=this.loginUIModel.loginVo.loginInputVo.loginAccount;
			this.playerInfoModel.localInfo.loginPassword=this.loginUIModel.loginVo.loginInputVo.loginPassword;
			var signatureCode=GameUtil.app_key+":"+this.playerInfoModel.playerInfoVo.user_account+":"+this.playerInfoModel.playerInfoVo.token;
			var signatureCode64=Base64Tool.encodeStr2(signatureCode);
			console.log("signatureCode:",signatureCode," signatureCode64:",signatureCode64);
			GameUtil.headers=[GameUtil.http_header_key,signatureCode64];
			this.sendNotification("Close_Game_Cmd",PlayerInfoModel.Panel_Login);
			this.sendNotification("Open_Game_Cmd",PlayerInfoModel.Panel_Hall);
		}

		__proto.loginError=function(data){
			console.log("loginError data:",data);
		}

		__proto.registerTryPlay=function(account){
			var url=GameUtil.getRegisterTry();
			var data=new Object();
			data.is_beta=1;
			data.user_account=account;
			console.log("registerTryPlay data:",data);
			this.sendHttpRequest(url,"REGISTER_TRYPLAY_COMPLETE_Cmd","REGISTER_TRYPLAY_ERROR_Cmd","json",data,false);
		}

		__proto.registerTryPlayComplete=function(data){
			console.log("registerTryPlayComplete data:",data);
			this.loginUIModel.loginVo.registerData.decode(data);
			this.loginUIModel.loginVo.registerData.status_msg=this.publicModel.errorCodeData.getMsg(this.loginUIModel.loginVo.registerData.status_code);
			this.loginUIModel.loginVo.status=LoginVo.RegisterTry_Complete;
		}

		__proto.registerTryPlayError=function(data){
			console.log("registerTryPlayError data:",data);
		}

		__proto.registerPlay=function(args){
			var url=GameUtil.getRegisterTry();
			var data=new Object();
			data.is_beta=0;
			data.user_account=args[0];
			data.user_password=args[1];
			data.rep_user_password=args[1];
			data.promo_code="";
			console.log("registerPlay data:",data);
			this.sendHttpRequest(url,"REGISTER_PLAY_COMPLETE_Cmd","REGISTER_PLAY_ERROR_Cmd","json",data,false,GameUtil.headers);
		}

		__proto.registerPlayComplete=function(data){
			console.log("registerPlayComplete data:",data);
			this.loginUIModel.loginVo.registerData.decode(data);
			this.loginUIModel.loginVo.registerData.status_msg=this.publicModel.errorCodeData.getMsg(this.loginUIModel.loginVo.registerData.status_code);
			this.loginUIModel.loginVo.status=LoginVo.Register_Complete;
		}

		__proto.registerPlayError=function(data){
			console.log("registerPlayError data:",data);
		}

		LoginCommand.CLOSE_CMD="Close_Login_Cmd";
		LoginCommand.BUILD_LOGIN_CMD="Build_Login_Cmd";
		LoginCommand.LOGIN_CMD="Login_Cmd";
		LoginCommand.LOGIN_COMPLETE_CMD="Login_Complete_Cmd";
		LoginCommand.LOGIN_ERROR_CMD="Login_Error_Cmd";
		LoginCommand.REGISTER_TRYPLAY_CMD="REGISTER_TRYPLAY_Cmd";
		LoginCommand.REGISTER_TRYPLAY_COMPLETE_CMD="REGISTER_TRYPLAY_COMPLETE_Cmd";
		LoginCommand.REGISTER_TRYPLAY_ERROR_CMD="REGISTER_TRYPLAY_ERROR_Cmd";
		LoginCommand.REGISTER_PLAY_CMD="REGISTER_PLAY_Cmd";
		LoginCommand.REGISTER_PLAY_COMPLETE_CMD="REGISTER_PLAY_COMPLETE_Cmd";
		LoginCommand.REGISTER_PLAY_ERROR_CMD="REGISTER_PLAY_ERROR_Cmd";
		return LoginCommand;
	})(BaseCommand)


	//class modules.hall.v.fundmanage.FmQuestionTitleComponent extends robotLegs.sprite.BaseUISprite
	var FmQuestionTitleComponent=(function(_super){
		function FmQuestionTitleComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txt=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmQuestionTitleComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmQuestionTitleComponent,'modules.hall.v.fundmanage.FmQuestionTitleComponent',_super);
		var __proto=FmQuestionTitleComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return FmQuestionTitleComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyInfoComponent extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyInfoComponent=(function(_super){
		function FmTopUpMoneyInfoComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyInfoComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyInfoComponent,'modules.hall.v.fundmanage.FmTopUpMoneyInfoComponent',_super);
		var __proto=FmTopUpMoneyInfoComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return FmTopUpMoneyInfoComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyPanel extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyPanel=(function(_super){
		function FmTopUpMoneyPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmTopUpMoneyVo=null;
			this.commonTopComponent=null;
			this.btnHelp=null;
			this.commonGrid2Component0=null;
			this.fmTopUpMoneyRechargeModeComponent=null;
			this.commonGrid7Component0=null;
			this.gRechargePipeList=null;
			this.commonGrid3Component0=null;
			this.btnTpOut=null;
			this.btnHelpTxt=null;
			this.btnSearch=null;
			this.fmTopUpMoneyInfoComponent=null;
			this.infoController=null;
			this.topNoticeTxt=null;
			this.bottomNoticeTxt=null;
			this.__min=NaN;
			this.__max=NaN;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyPanel,'modules.hall.v.fundmanage.FmTopUpMoneyPanel',_super);
		var __proto=FmTopUpMoneyPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("充值");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.btnHelp.onClick(this,this.onHelpClick);
			this.commonGrid2Component0.setTitle("产品类型");
			this.commonGrid3Component0.setTitle("充值区间");
			this.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.gRechargePipeList.itemRenderer=Handler.create(this,this.gRechargePipeListRenderer,null,false);
			this.gRechargePipeList.on("fui_click_item",this,this.gRechargePipeListClick);
			this.btnTpOut.onClick(this,this.onTpOutClick);
			this.btnSearch.onClick(this,this.onSearchClick);
			this.btnHelpTxt.onClick(this,this.onHelpTxtClick);
			this.view.onClick(this,this.onViewClick);
			this.registerStatusCallBack(FmTopUpMoneyVo.UPDATE_MONEY,new Handler(this,this.onUpdateMoney));
			this.registerStatusCallBack(FmTopUpMoneyVo.UPDATE_RECHARGE_PIPE,new Handler(this,this.onUpdateRechargePipe));
			this.registerStatusCallBack(FmTopUpMoneyVo.TOPUP_PROCESS,new Handler(this,this.onTopupProcesS));
			this.registerStatusCallBack(FmTopUpMoneyVo.UPDATE_HEIGHT_STATUS,new Handler(this,this.updateEHeight));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			DataMgr.get().curGameType=0;
			this.onInitInfo();
			if(this.fmTopUpMoneyVo.rechargePipeData==null){
				this.sendNotification("GET_TOP_UP_RECHARGE_PIPE_Cmd");
				return;
			}
			this.onUpdateRechargePipe();
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			tabName=gameTypeConfigData.items[dataMgr.curGameType].cn;
			this.commonGrid2Component0.setName(tabName);
			this.commonGrid7Component0.setTitle(tabName+"余额:",180);
			this.commonGrid7Component0.setName("");
			this.sendNotification("GET_GAME_MONEY_Cmd",GameUtil.PANEL_FM_TOPUP_MONEY);
		}

		__proto.onUpdateMoney=function(){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var userBalanceData=dataMgr.userBalanceData;
			var id=gameTypeConfigData.items[dataMgr.curGameType].id;
			var userBalanceDataItem=userBalanceData.itemDic.get(id);
			if(userBalanceDataItem.user_balance_display=="尚未开通")
				this.commonGrid7Component0.setName(userBalanceDataItem.user_balance_display);
			else
			this.commonGrid7Component0.setName(userBalanceDataItem.user_balance_display+"元");
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onHelpClick=function(){
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_QUESTION_CENTER,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick");
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bankConfigData=dataMgr.bankConfigData;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < gameTypeConfigData.items.length;i++){
						tempArr.push(gameTypeConfigData.items[i].cn);
					}
					commonTypeListVo.title="选择产品种类";
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curGameType;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[tabType]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			switch(type){
				case 0:
					dataMgr.curGameType=commonTypeListVo.selectIndex;
					break ;
				}
			this.onUpdateChooseInfo();
		}

		__proto.onUpdateRechargePipe=function(){
			var listCount=this.fmTopUpMoneyVo.rechargePipeData.itemDic.keys.length;
			this.gRechargePipeList.numItems=listCount;
			this.gRechargePipeList.selectedIndex=0;
			var item=this.gRechargePipeList.getChildAt(this.gRechargePipeList.selectedIndex);
			this.gRechargePipeListClick(item,null);
		}

		__proto.gRechargePipeListRenderer=function(index,gobj){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var rechargePipeDataItem=this.fmTopUpMoneyVo.rechargePipeData.itemDic.values[index];
			var item=gobj;
			item.updateData(rechargePipeDataItem.display_name);
		}

		__proto.gRechargePipeListClick=function(item,evt){
			this.sendNotification("Remove_Form_Cmd");
			var index=this.gRechargePipeList.getChildIndex(item);
			var rechargePipeDataItem=this.fmTopUpMoneyVo.rechargePipeData.itemDic.values[index];
			for(var i=0;i < this.gRechargePipeList.numItems;i++){
				(this.gRechargePipeList.getChildAt(i)).select(false);
			}
			(this.gRechargePipeList.getChildAt(index)).select(true);
			this.fmTopUpMoneyRechargeModeComponent.updateData(rechargePipeDataItem);
			this.__min=rechargePipeDataItem.min_amount;
			this.__max=rechargePipeDataItem.max_amount;
			if(this.fmTopUpMoneyRechargeModeComponent.modeController.selectedIndex==4){
				this.commonGrid3Component0.setTitle("充值金额：");
				this.commonGrid3Component0.setPrompt(BaseStaticFuncs.format("充值区间：{0}元~{1}元",this.__min,this.__max));
			}
			else{
				this.commonGrid3Component0.setTitle("充值区间：");
				this.commonGrid3Component0.setPrompt(BaseStaticFuncs.format("{0}元~{1}元",this.__min,this.__max));
			}
			this.topNoticeTxt.text=rechargePipeDataItem.topNotice;
			this.bottomNoticeTxt.text=rechargePipeDataItem.bottomNotice;
		}

		__proto.onTpOutClick=function(){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var userBalanceData=dataMgr.userBalanceData;
			var id=gameTypeConfigData.items[dataMgr.curGameType].id;
			var tabName=gameTypeConfigData.getItem(id).cn;
			var userBalanceDataItem=userBalanceData.itemDic.get(id);
			if(userBalanceDataItem.user_balance_display=="尚未开通"){
				this.showAlert(BaseStaticFuncs.format("尚未开通{0}, 是否开通？",tabName),"Open_Fund_Cmd",2,id);
				return;
			};
			var topUpMoneyStr=StringTool.trim(this.commonGrid3Component0.getName());
			if(topUpMoneyStr==""){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填写充值金额！");
				return;
			};
			var topUpMoney=parseFloat(topUpMoneyStr);
			if(topUpMoney < this.__min || topUpMoney > this.__max){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd",BaseStaticFuncs.format("充值金额范围为{0}元~{1}元",this.__min,this.__max));
				return;
			};
			var removeHandle=new Handler(this,this.removeForm);
			setRemoveFormDivHandle(removeHandle);
			var index=this.gRechargePipeList.selectedIndex;
			var rechargePipeDataItem=this.fmTopUpMoneyVo.rechargePipeData.itemDic.values[index];
			if(!rechargePipeDataItem){
				this.showAlert("请选择银行");
				return;
			};
			var data=new Object();
			data.recharge_product=gameTypeConfigData.items[dataMgr.curGameType].id;
			data.gateway_code=rechargePipeDataItem.gateway_code;
			if(rechargePipeDataItem.bank_value.length > 0)
				data.bank_id=rechargePipeDataItem.bank_value[this.fmTopUpMoneyRechargeModeComponent.getSelectIndex(rechargePipeDataItem)];
			data.recharge_amount=topUpMoney;
			data.title=rechargePipeDataItem.display_name;
			if(this.fmTopUpMoneyRechargeModeComponent.modeController.selectedIndex==4){
				data.pay_number_last4=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeDComponent.fmTopUpMoneyRechargeModeDComponentVo.pay_number_last4;
			}
			else if(this.fmTopUpMoneyRechargeModeComponent.modeController.selectedIndex==3){
				data.bank_name=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeCComponent.fmTopUpMoneyRechargeModeCComponentVo.bank_name;
				data.bank_owner=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeCComponent.fmTopUpMoneyRechargeModeCComponentVo.bank_owner;
				data.bank_account=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeCComponent.fmTopUpMoneyRechargeModeCComponentVo.bank_account;
				data.bank_branch=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeCComponent.fmTopUpMoneyRechargeModeCComponentVo.bank_branch;
				data.pay_bank_owner=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeCComponent.fmTopUpMoneyRechargeModeCComponentVo.payBankOwner;
				data.pay_time=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeCComponent.fmTopUpMoneyRechargeModeCComponentVo.payTime;
				data.pay_bank_account=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeCComponent.fmTopUpMoneyRechargeModeCComponentVo.payBankName;
			}
			else if(this.fmTopUpMoneyRechargeModeComponent.modeController.selectedIndex==5){
				data.bank_name=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeEComponent.fmTopUpMoneyRechargeModeEComponentVo.bank_name;
				data.bank_owner=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeEComponent.fmTopUpMoneyRechargeModeEComponentVo.bank_owner;
				data.bank_account=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeEComponent.fmTopUpMoneyRechargeModeEComponentVo.bank_account;
				data.bank_branch=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeEComponent.fmTopUpMoneyRechargeModeEComponentVo.bank_branch;
				data.pay_bank_owner=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeEComponent.fmTopUpMoneyRechargeModeEComponentVo.payBankOwner;
				data.pay_bank_account=this.fmTopUpMoneyRechargeModeComponent.fmTopUpMoneyRechargeModeEComponent.fmTopUpMoneyRechargeModeEComponentVo.payBankName;
			}
			this.fmTopUpMoneyVo.topUpButtonRect.x=this.btnTpOut.x;
			this.fmTopUpMoneyVo.topUpButtonRect.y=this.btnTpOut.y;
			this.fmTopUpMoneyVo.topUpButtonRect.width=this.btnTpOut.width;
			this.fmTopUpMoneyVo.topUpButtonRect.height=this.btnTpOut.height;
			this.sendNotification("TOPUP_Cmd",data);
		}

		__proto.removeForm=function(){
			this.sendNotification("Remove_Form_Cmd");
		}

		__proto.onTopupProcesS=function(){
			GameUtil.topupHandler(this.fmTopUpMoneyVo.topupObj.data.msg);
		}

		__proto.onClosePokerGame=function(){
			console.log("onClosePokerGame this:",this);
			this.sendNotification("Close_Iframe_Cmd");
		}

		__proto.onSearchClick=function(){
			this.sendNotification("UPDATE_TOPUP_RECORD_TYPE_Cmd",0);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onHelpTxtClick=function(evt){
			this.infoController.selectedIndex=(this.infoController.selectedIndex==0)? 1 :0;
			evt.stopPropagation();
		}

		__proto.onViewClick=function(){
			this.infoController.selectedIndex=0;
		}

		__proto.updateEHeight=function(){
			this.fmTopUpMoneyRechargeModeComponent.updateEHeight();
		}

		__proto.clearMemory=function(){
			setRemoveFormDivHandle(null);
			_super.prototype.clearMemory.call(this);
		}

		return FmTopUpMoneyPanel;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeAComponent extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyRechargeModeAComponent=(function(_super){
		function FmTopUpMoneyRechargeModeAComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.gList=null;
			this._banks=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyRechargeModeAComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyRechargeModeAComponent,'modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeAComponent',_super);
		var __proto=FmTopUpMoneyRechargeModeAComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
		}

		__proto.updateInfo=function(banks){
			this._banks=banks;
			this.gList.numItems=banks.length;
			this.gList.selectedIndex=0;
		}

		__proto.gListRenderer=function(index,gobj){
			var dataMgr=DataMgr.get();
			var bankListConfigData=dataMgr.bankListConfigData;
			var bankId=this._banks[index];
			var listIndex=bankListConfigData.itemDic.get(bankId);
			var item=gobj;
			item.updateData(bankListConfigData.items[listIndex].bank_name);
		}

		__proto.gListClick=function(item,evt){}
		return FmTopUpMoneyRechargeModeAComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeBComponent extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyRechargeModeBComponent=(function(_super){
		function FmTopUpMoneyRechargeModeBComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.img_icon=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyRechargeModeBComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyRechargeModeBComponent,'modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeBComponent',_super);
		var __proto=FmTopUpMoneyRechargeModeBComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.showIcon=function(name,w,h){
			this.img_icon.setSize(w,h);
			this.img_icon.url=GameUtil.Res_TopUp_Path+"ic_"+name+".png";
		}

		return FmTopUpMoneyRechargeModeBComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeCComponent extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyRechargeModeCComponent=(function(_super){
		function FmTopUpMoneyRechargeModeCComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmTopUpMoneyRechargeModeCComponentVo=null;
			this.grid01Button0=null;
			this.grid01Button1=null;
			this.grid01Button2=null;
			this.grid01Button3=null;
			this.commonGrid3Component0=null;
			this.commonGrid3Component1=null;
			this.commonGrid3Component2=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyRechargeModeCComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyRechargeModeCComponent,'modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeCComponent',_super);
		var __proto=FmTopUpMoneyRechargeModeCComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonGrid3Component0.setTitle("入款人姓名：",200);
			this.commonGrid3Component1.setTitle("入款的时间：",200);
			this.commonGrid3Component2.setTitle("入款方银行名称：",200);
			this.commonGrid3Component0.setPrompt("请务必填写您转帐的用户姓名");
			this.commonGrid3Component1.setPrompt("(2018/xx/xx xx:xx)");
			this.commonGrid3Component2.setPrompt("请务必填写您转帐的银行名称");
			this.commonGrid3Component0.txtName.on("input",this,this.inputBankOwner);
			this.commonGrid3Component1.txtName.on("input",this,this.inputTime);
			this.commonGrid3Component2.txtName.on("input",this,this.inputBankName);
			this.commonGrid3Component0.setMaxLen(10);
			this.commonGrid3Component0.setRestrict(GameUtil.Restrict_zh);
			this.commonGrid3Component1.setRestrict("");
			this.commonGrid3Component2.setRestrict(GameUtil.Restrict_zh);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this._$3_update));
		}

		__proto._$3_update=function(){
			this.grid01Button0.setText(this.fmTopUpMoneyRechargeModeCComponentVo.bank_name);
			this.grid01Button1.setText(this.fmTopUpMoneyRechargeModeCComponentVo.bank_owner);
			this.grid01Button2.setText(this.fmTopUpMoneyRechargeModeCComponentVo.bank_account);
			this.grid01Button3.setText(this.fmTopUpMoneyRechargeModeCComponentVo.bank_branch);
		}

		/**
		*填写转账用户名
		*
		*/
		__proto.inputBankOwner=function(){
			this.fmTopUpMoneyRechargeModeCComponentVo.payBankOwner=this.commonGrid3Component0.txtName.text;
		}

		/**
		*填写转账时间
		*
		*/
		__proto.inputTime=function(){
			this.fmTopUpMoneyRechargeModeCComponentVo.payTime=this.commonGrid3Component1.txtName.text;
		}

		/**
		*填写银行名称
		*
		*/
		__proto.inputBankName=function(){
			this.fmTopUpMoneyRechargeModeCComponentVo.payBankName=this.commonGrid3Component2.txtName.text;
		}

		return FmTopUpMoneyRechargeModeCComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeComponent extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyRechargeModeComponent=(function(_super){
		function FmTopUpMoneyRechargeModeComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.modeController=null;
			this.fmTopUpMoneyRechargeModeAComponent=null;
			this.fmTopUpMoneyRechargeModeBComponent=null;
			this.fmTopUpMoneyRechargeModeCComponent=null;
			this.fmTopUpMoneyRechargeModeDComponent=null;
			this.fmTopUpMoneyRechargeModeEComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyRechargeModeComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyRechargeModeComponent,'modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeComponent',_super);
		var __proto=FmTopUpMoneyRechargeModeComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.updateData=function(rechargePipeDataItem){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			if(rechargePipeDataItem.show_mode=="1"){
				this.modeController.selectedIndex=1;
				this.view.height=this.fmTopUpMoneyRechargeModeAComponent.view.height;
				this.fmTopUpMoneyRechargeModeAComponent.updateInfo(rechargePipeDataItem.bank_value);
				return;
			}
			switch(rechargePipeDataItem.id){
				case "143":
				case "159":
				case "159":
				case "59":
					this.modeController.selectedIndex=1;
					this.view.height=this.fmTopUpMoneyRechargeModeAComponent.view.height;
					this.fmTopUpMoneyRechargeModeAComponent.updateInfo(rechargePipeDataItem.bank_value);
					break ;
				case "28":
					this.modeController.selectedIndex=2;
					this.view.height=this.fmTopUpMoneyRechargeModeBComponent.view.height;
					this.fmTopUpMoneyRechargeModeBComponent.showIcon("支付宝",158,61);
					break ;
				case "53":
					this.modeController.selectedIndex=2;
					this.view.height=this.fmTopUpMoneyRechargeModeBComponent.view.height;
					this.fmTopUpMoneyRechargeModeBComponent.showIcon("QQ",78,90);
					break ;
				case "40":
					this.modeController.selectedIndex=3;
					this.view.height=this.fmTopUpMoneyRechargeModeCComponent.view.height;
					break ;
				case "44":
					this.modeController.selectedIndex=4;
					this.view.height=this.fmTopUpMoneyRechargeModeDComponent.view.height;
					var fmTopUpMoneyRechargeModeDComponentVo=this.fmTopUpMoneyRechargeModeDComponent.fmTopUpMoneyRechargeModeDComponentVo;
					fmTopUpMoneyRechargeModeDComponentVo.base64=rechargePipeDataItem.qrcode_img;
					fmTopUpMoneyRechargeModeDComponentVo.status="Update_Status";
					break ;
				default :
					this.modeController.selectedIndex=0;
					this.view.height=0;
					break ;
				}
			switch(rechargePipeDataItem.base_merchant){
				case "OfflineMultiQrcode":
					this.modeController.selectedIndex=4;
					this.view.height=this.fmTopUpMoneyRechargeModeDComponent.view.height;
					var fmTopUpMoneyRechargeModeDComponentVo=this.fmTopUpMoneyRechargeModeDComponent.fmTopUpMoneyRechargeModeDComponentVo;
					fmTopUpMoneyRechargeModeDComponentVo.base64=rechargePipeDataItem.qrcode_img;
					fmTopUpMoneyRechargeModeDComponentVo.status="Update_Status";
					break ;
				case "OfflineBank":
					this.modeController.selectedIndex=3;
					this.view.height=this.fmTopUpMoneyRechargeModeCComponent.view.height;
					var fmTopUpMoneyRechargeModeCComponentVo=this.fmTopUpMoneyRechargeModeCComponent.fmTopUpMoneyRechargeModeCComponentVo;
					fmTopUpMoneyRechargeModeCComponentVo.bank_owner=rechargePipeDataItem.bank_owner;
					fmTopUpMoneyRechargeModeCComponentVo.bank_account=rechargePipeDataItem.bank_account;
					fmTopUpMoneyRechargeModeCComponentVo.bank_branch=rechargePipeDataItem.bank_branch;
					fmTopUpMoneyRechargeModeCComponentVo.bank_name=rechargePipeDataItem.bank_name;
					fmTopUpMoneyRechargeModeCComponentVo.status="Update_Status";
					break ;
				case "OfflineBankV2":
				case "TonglueyunOffline":
					this.modeController.selectedIndex=5;
					var fmTopUpMoneyRechargeModeEComponentVo=this.fmTopUpMoneyRechargeModeEComponent.fmTopUpMoneyRechargeModeEComponentVo;
					fmTopUpMoneyRechargeModeEComponentVo.bank_owner=rechargePipeDataItem.bank_owner;
					fmTopUpMoneyRechargeModeEComponentVo.bank_account=rechargePipeDataItem.bank_account;
					fmTopUpMoneyRechargeModeEComponentVo.bank_branch=rechargePipeDataItem.bank_branch;
					fmTopUpMoneyRechargeModeEComponentVo.bank_name=rechargePipeDataItem.bank_name;
					fmTopUpMoneyRechargeModeEComponentVo.status="Update_Status";
					this.view.height=this.fmTopUpMoneyRechargeModeEComponent.view.height;
					break ;
				}
		}

		__proto.updateEHeight=function(){
			this.view.height=this.fmTopUpMoneyRechargeModeEComponent.view.height;
		}

		__proto.getSelectIndex=function(rechargePipeDataItem){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			switch(rechargePipeDataItem.id){
				case "27":
				case "59":
					return this.fmTopUpMoneyRechargeModeAComponent.gList.selectedIndex;
				default :
					return 0;
				}
		}

		return FmTopUpMoneyRechargeModeComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeDComponent extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyRechargeModeDComponent=(function(_super){
		function FmTopUpMoneyRechargeModeDComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmTopUpMoneyRechargeModeDComponentVo=null;
			this.commonGrid3Component0=null;
			this.codeComp=null;
			this.__img=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyRechargeModeDComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyRechargeModeDComponent,'modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeDComponent',_super);
		var __proto=FmTopUpMoneyRechargeModeDComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonGrid3Component0.txtName.on("input",this,this.inputCode);
			this.commonGrid3Component0.setMaxLen(4);
			this.commonGrid3Component0.setRestrict(GameUtil.Restrict_number);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.updateInfo));
		}

		__proto.updateInfo=function(){
			this.removeImg();
			this.__img=new Image();
			this.view.displayObject.addChild(this.__img);
			this.__img.on("loaded",this,this.complete);
			this.__img.skin=this.fmTopUpMoneyRechargeModeDComponentVo.base64;
			this.commonGrid3Component0.setPrompt("交易详情内的订单号或交易单号");
		}

		__proto.complete=function(){
			this.__img.x=this.codeComp.x+(this.codeComp.width-this.__img.width)/ 2;
			this.__img.y=this.codeComp.y+(this.codeComp.height-this.__img.height)/ 2;
		}

		__proto.removeImg=function(){
			if(!this.__img)
				return;
			this.__img.parent.removeChild(this.__img);
			this.__img.dispose();
			this.__img=null;
		}

		__proto.inputCode=function(){
			this.fmTopUpMoneyRechargeModeDComponentVo.pay_number_last4=this.commonGrid3Component0.txtName.text;
		}

		__proto.clearMemory=function(){
			this.removeImg();
			_super.prototype.clearMemory.call(this);
		}

		return FmTopUpMoneyRechargeModeDComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeEComponent extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyRechargeModeEComponent=(function(_super){
		function FmTopUpMoneyRechargeModeEComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmTopUpMoneyRechargeModeEComponentVo=null;
			this.grid01Button0=null;
			this.grid01Button1=null;
			this.grid01Button2=null;
			this.commonGrid3Component0=null;
			this.commonGrid3Component1=null;
			this.resultController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyRechargeModeEComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyRechargeModeEComponent,'modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeEComponent',_super);
		var __proto=FmTopUpMoneyRechargeModeEComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonGrid3Component0.setTitle("入款人姓名：",200);
			this.commonGrid3Component0.setPrompt("请务必填写您转帐的用户姓名");
			this.commonGrid3Component0.txtName.on("input",this,this.inputBankOwner);
			this.commonGrid3Component0.setMaxLen(10);
			this.commonGrid3Component0.setRestrict(GameUtil.Restrict_zh);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this._$3_update));
			this.registerStatusCallBack("Update_Code_Status",new Handler(this,this.updateCode));
		}

		__proto._$3_update=function(){
			this.grid01Button0.setText(this.fmTopUpMoneyRechargeModeEComponentVo.bank_name);
			this.grid01Button1.setText(this.fmTopUpMoneyRechargeModeEComponentVo.bank_owner);
			this.grid01Button2.setText(this.fmTopUpMoneyRechargeModeEComponentVo.bank_account);
			this.commonGrid3Component1.txtName.text=this.fmTopUpMoneyRechargeModeEComponentVo.bank_branch;
			this.resultController.selectedIndex=0;
		}

		__proto.updateCode=function(){
			this.resultController.selectedIndex=1;
			this.commonGrid3Component1.txtName.text=this.fmTopUpMoneyRechargeModeEComponentVo.code;
		}

		/**
		*填写转账用户名
		*
		*/
		__proto.inputBankOwner=function(){
			this.fmTopUpMoneyRechargeModeEComponentVo.payBankOwner=this.commonGrid3Component0.txtName.text;
		}

		return FmTopUpMoneyRechargeModeEComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRecordPanel extends robotLegs.sprite.BaseUISprite
	var FmTopUpMoneyRecordPanel=(function(_super){
		function FmTopUpMoneyRecordPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmTopUpMoneyRecordPanelVo=null;
			this.commonTopComponent=null;
			this.commonLst1Component=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpMoneyRecordPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpMoneyRecordPanel,'modules.hall.v.fundmanage.FmTopUpMoneyRecordPanel',_super);
		var __proto=FmTopUpMoneyRecordPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("充值记录");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			var dataMgr=DataMgr.get();
			this.commonLst1Component.updateTabsWidth([0.33,0.33,0.33]);
			var datas=[dataMgr.tabProcessStateData,dataMgr.tabTransferData,dataMgr.tabTimeData]
			this.commonLst1Component.setTabs([0,0,0],datas,["请选择订单状态","请选择转账方式","请选择时间"]);
			this.registerStatusCallBack(FmTopUpMoneyRecordPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_FM_TOPUP_MONEY_RECORD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		__proto.onSearch=function(){}
		return FmTopUpMoneyRecordPanel;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTopUpRecordPanel extends robotLegs.sprite.BaseUISprite
	var FmTopUpRecordPanel=(function(_super){
		function FmTopUpRecordPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmTopUpRecordPanelVo=null;
			this.commonTopComponent=null;
			this.commonGrid2Component0=null;
			this.commonDateSearchComponent=null;
			this.hallTabComponent=null;
			this.gList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTopUpRecordPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTopUpRecordPanel,'modules.hall.v.fundmanage.FmTopUpRecordPanel',_super);
		var __proto=FmTopUpRecordPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("充值进度");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonGrid2Component0.setTitle("进度查询");
			this.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.commonDateSearchComponent.btnSearch.onClick(this,this.onSearchClick);
			this.hallTabComponent.tabBtnController.on("fui_state_changed",this,this.onTabStateChange);
			this.hallTabComponent.setTabLabel("今日","昨日","最近七天");
			this.hallTabComponent.toShow();
			this.hallTabComponent.tabBtnController.setSelectedIndex(0);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.itemProvider=Handler.create(this,this.gListProvider,null,false);
			this.registerStatusCallBack(FmTopUpRecordPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.commonGrid2Component0.index=this.fmTopUpRecordPanelVo.searchIndex;
			this.onInitInfo();
			this.onSearch();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
			this.commonDateSearchComponent.initToday();
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			var jinduData=dataMgr.jinduData;
			tabName=jinduData[this.commonGrid2Component0.index];
			this.commonGrid2Component0.setName(tabName);
			this.commonTopComponent.setTitle(tabName);
		}

		__proto.onUpdateInfo=function(){
			var dataMgr=DataMgr.get();
			var dataArr=[];
			if(this.commonGrid2Component0.index==0){
				dataArr=this.fmTopUpRecordPanelVo.data.recharge_data
				}else if(this.commonGrid2Component0.index==1){
				dataArr=this.fmTopUpRecordPanelVo.data.data;
				}else{
				dataArr=this.fmTopUpRecordPanelVo.data.withdraw_data;
			}
			this.gList.numItems=0;
			this.gList.numItems=dataArr.length;
		}

		__proto.gListProvider=function(){
			if(this.commonGrid2Component0.index==0){
				return "ui://"+GameUtil.Res_Hall_Package+"/FmTopUpRecordItem";
				}else if(this.commonGrid2Component0.index==1){
				return "ui://"+GameUtil.Res_Hall_Package+"/FmTransferRecordItem";
				}else{
				return "ui://"+GameUtil.Res_Hall_Package+"/FmWithdrawRecordItem";
			}
		}

		__proto.gListRenderer=function(index,gobj){
			var dataArr=[];
			if(this.commonGrid2Component0.index==0){
				dataArr=this.fmTopUpRecordPanelVo.data.recharge_data;
				var fmTopUpRecordItem=gobj;
				fmTopUpRecordItem.updateData(dataArr[index]);
				}else if(this.commonGrid2Component0.index==1){
				dataArr=this.fmTopUpRecordPanelVo.data.data;
				var fmTransferRecordItem=gobj;
				fmTransferRecordItem.updateData(dataArr[index]);
				}else{
				dataArr=this.fmTopUpRecordPanelVo.data.withdraw_data;
				var fmWithdrawRecordItem=gobj;
				fmWithdrawRecordItem.updateData(dataArr[index]);
			}
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick");
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var jinduData=dataMgr.jinduData;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < jinduData.length;i++){
						tempArr.push(jinduData[i]);
					}
					commonTypeListVo.title="选择进度查询";
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=this.commonGrid2Component0.index;
					break ;
				}
			this.onUpdateChooseInfo();
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[tabType]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.PANEL_ANI_TO_LEFT,false));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			switch(type){
				case 0:
					this.commonGrid2Component0.index=commonTypeListVo.selectIndex;
					break ;
				}
			this.onUpdateChooseInfo();
		}

		__proto.onSearchClick=function(){
			this.onSearch();
		}

		__proto.onSearch=function(){
			var dataMgr=DataMgr.get();
			var searchId=this.commonGrid2Component0.index;
			var dateArr=this.commonDateSearchComponent.getDate();
			this.sendNotification("GET_TOPUP_RECORD_Cmd",[searchId,dateArr[0],dateArr[1]]);
		}

		__proto.onTabStateChange=function(){
			var selectIindex=this.hallTabComponent.tabBtnController.selectedIndex;
			var dataArr;
			if(selectIindex==0){
				dataArr=GameUtil.getSearchDate(0,1);
			}
			else if(selectIindex==1){
				dataArr=GameUtil.getSearchDate(-1,0);
			}
			else{
				dataArr=GameUtil.getSearchDate(-6,1);
			}
			this.commonDateSearchComponent.setDate(dataArr[0],dataArr[1]);
		}

		return FmTopUpRecordPanel;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTransferAccountsInfoComponent extends robotLegs.sprite.BaseUISprite
	var FmTransferAccountsInfoComponent=(function(_super){
		function FmTransferAccountsInfoComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTransferAccountsInfoComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTransferAccountsInfoComponent,'modules.hall.v.fundmanage.FmTransferAccountsInfoComponent',_super);
		var __proto=FmTransferAccountsInfoComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return FmTransferAccountsInfoComponent;
	})(BaseUISprite)


	//class modules.hall.v.fundmanage.FmTransferAccountsPanel extends robotLegs.sprite.BaseUISprite
	var FmTransferAccountsPanel=(function(_super){
		function FmTransferAccountsPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmTransferAccountsPanelVo=null;
			this.commonTopComponent=null;
			this.btnHelp=null;
			this.commonGrid2Component0=null;
			this.commonGrid2Component1=null;
			this.txtTransfer0=null;
			this.txtTransfer1=null;
			this.commonGrid3Component=null;
			this.btnTpOut=null;
			this.btnHelpTxt=null;
			this.btnSearch=null;
			this.fmTransferAccountsInfoComponent=null;
			this.infoController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmTransferAccountsPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmTransferAccountsPanel,'modules.hall.v.fundmanage.FmTransferAccountsPanel',_super);
		var __proto=FmTransferAccountsPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("转账");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.btnHelp.onClick(this,this.onHelpClick);
			this.commonGrid2Component0.setTitle("转 出");
			this.commonGrid2Component1.setTitle("转 入");
			this.commonGrid3Component.setTitle("转账金额");
			this.commonGrid3Component.setPrompt("请输入转账金额");
			this.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.commonGrid2Component1.onClick(this,this.chooseTypeListClick,[1]);
			this.btnTpOut.onClick(this,this.onTpOutClick);
			this.btnSearch.onClick(this,this.onSearchClick);
			this.btnHelpTxt.onClick(this,this.onHelpTxtClick);
			this.view.onClick(this,this.onViewClick);
			this.registerStatusCallBack(FmTransferAccountsPanelVo.INIT_INFO,new Handler(this,this.onInitInfo));
			this.registerStatusCallBack(FmTransferAccountsPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.initselect();
			this.sendNotification("GET_GAME_MONEY_Cmd",GameUtil.PANEL_FM_TRANSFER_ACCOUNTS);
		}

		__proto.initselect=function(){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			this.commonGrid2Component0.selectId=gameTypeConfigData.itemDic.keys[0];
			this.commonGrid2Component1.selectId=gameTypeConfigData.itemDic.keys[1];
			this.commonGrid2Component0.index=0;
			this.commonGrid2Component1.index=1;
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			var userBalanceData=dataMgr.userBalanceData;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var id=0;
			var gid=0;
			var userBalanceDataItem;
			var commonTypeListVo=dataMgr.commonTypeListVo;
			userBalanceDataItem=userBalanceData.itemDic.get(String(this.commonGrid2Component0.selectId));
			gid=gameTypeConfigData.itemDic.get(this.commonGrid2Component0.selectId);
			tabName=gameTypeConfigData.items[gid].cn;
			this.commonGrid2Component0.setName(tabName);
			if(userBalanceDataItem.user_balance_display=="尚未开通")
				this.txtTransfer0.text=userBalanceDataItem.user_balance_display;
			else
			this.txtTransfer0.text=userBalanceDataItem.user_balance_display;
			userBalanceDataItem=userBalanceData.itemDic.get(String(this.commonGrid2Component1.selectId));
			gid=gameTypeConfigData.itemDic.get(this.commonGrid2Component1.selectId);
			tabName=gameTypeConfigData.items[gid].cn;
			this.commonGrid2Component1.setName(tabName);
			if(userBalanceDataItem.user_balance_display=="尚未开通")
				this.txtTransfer1.text=userBalanceDataItem.user_balance_display;
			else
			this.txtTransfer1.text=userBalanceDataItem.user_balance_display;
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_FM_TRANSFER_ACCOUNTS,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onHelpClick=function(){
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_QUESTION_CENTER,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_TRANSFER_ACCOUNTS,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick");
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bankConfigData=dataMgr.bankConfigData;
			var tempArr=[];
			var idArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < gameTypeConfigData.itemDic.keys.length;i++){
						var gid=gameTypeConfigData.itemDic.keys[i];
						var index=gameTypeConfigData.itemDic.get(gid);
						tempArr.push(gameTypeConfigData.items[index].cn);
						idArr.push(gameTypeConfigData.items[index].id);
					}
					commonTypeListVo.title="选择"+this.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.idArr=idArr;
					commonTypeListVo.selectIndex=this.commonGrid2Component0.index;
					break ;
				case 1:
					for (i=0;i < gameTypeConfigData.itemDic.keys.length;i++){
						gid=gameTypeConfigData.itemDic.keys[i];
						index=gameTypeConfigData.itemDic.get(gid);
						tempArr.push(gameTypeConfigData.items[index].cn);
						idArr.push(gameTypeConfigData.items[index].id);
					}
					commonTypeListVo.title="选择"+this.commonGrid2Component1.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.idArr=idArr;
					commonTypeListVo.selectIndex=this.commonGrid2Component1.index;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[tabType]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_TRANSFER_ACCOUNTS,GameUtil.PANEL_ANI_TO_LEFT,false));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			switch(type){
				case 0:
					this.commonGrid2Component0.index=commonTypeListVo.selectIndex;
					this.commonGrid2Component0.selectId=commonTypeListVo.selectId;
					break ;
				case 1:
					this.commonGrid2Component1.index=commonTypeListVo.selectIndex;
					this.commonGrid2Component1.selectId=commonTypeListVo.selectId;
					break ;
				}
			this.onUpdateChooseInfo();
		}

		__proto.onTpOutClick=function(){
			var dataMgr=DataMgr.get();
			var userBalanceData=dataMgr.userBalanceData;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var gid=userBalanceData.itemDic.keys[this.commonGrid2Component0.index];
			var tabName=gameTypeConfigData.getItem(gid).cn;
			var userBalanceDataItem=userBalanceData.itemDic.get(gid);
			if(userBalanceDataItem.user_balance_display=="尚未开通"){
				this.showAlert(BaseStaticFuncs.format("尚未开通{0}, 是否开通？",tabName),"Open_Fund_Cmd",2,gid);
				return;
			}
			gid=userBalanceData.itemDic.keys[this.commonGrid2Component1.index];
			tabName=gameTypeConfigData.getItem(gid).cn;
			userBalanceDataItem=userBalanceData.itemDic.get(gid);
			if(userBalanceDataItem.user_balance_display=="尚未开通"){
				this.showAlert(BaseStaticFuncs.format("尚未开通{0}, 是否开通？",tabName),"Open_Fund_Cmd",2,gid);
				return;
			}
			if(this.commonGrid2Component0.index==this.commonGrid2Component1.index){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","转出资金与转入资金位置不得相同");
				return;
			};
			var moneyStr=StringTool.trim(this.commonGrid3Component.getName());
			if(moneyStr=="" || parseFloat(moneyStr)==0){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请输入转账金额");
				return;
			}
			if(Number(this.txtTransfer0.text)< parseFloat(moneyStr)){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","金额不足");
				return;
			};
			var data=new Object();
			data.product_id_from=userBalanceData.itemDic.keys[this.commonGrid2Component0.index];
			data.product_id_to=userBalanceData.itemDic.keys[this.commonGrid2Component1.index];
			data.product_transfer_amount=parseFloat(moneyStr);
			this.sendNotification("TRANSFER_ACCOUNTS_Cmd",data);
		}

		__proto.onSearchClick=function(){
			this.sendNotification("UPDATE_TOPUP_RECORD_TYPE_Cmd",1);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_TRANSFER_ACCOUNTS,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onUpdateInfo=function(){
			this.sendNotification("SHOW_PROMPT_TEXT_Cmd","恭喜您，转账成功！");
			this.sendNotification("GET_GAME_MONEY_Cmd",GameUtil.PANEL_FM_TRANSFER_ACCOUNTS);
		}

		__proto.onHelpTxtClick=function(evt){
			this.infoController.selectedIndex=(this.infoController.selectedIndex==0)? 1 :0;
			evt.stopPropagation();
		}

		__proto.onViewClick=function(){
			this.infoController.selectedIndex=0;
		}

		return FmTransferAccountsPanel;
	})(BaseUISprite)


	//class publics.c.AlertCommand extends robotLegs.command.BaseCommand
	var AlertCommand=(function(_super){
		function AlertCommand(){
			this.publicModel=null;
			this.gameUIBuilderBridge=null;
			AlertCommand.__super.call(this);
		}

		__class(AlertCommand,'publics.c.AlertCommand',_super);
		var __proto=AlertCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Show_Alert_Cmd":{
						this._$3_showAlert(_notificationVo.data)
						break ;
					}
				case "Close_Alert_Cmd":{
						this.closeAlert(_notificationVo.data);
						break ;
					}
				case "Show_Tips_Cmd":{
						this.showTips(_notificationVo.data);
						break ;
					}
				}
		}

		/**
		*显示弹窗
		*
		*/
		__proto._$3_showAlert=function(_alertInfoArr){
			var alertWindowVo=new AlertWindowVo();
			alertWindowVo.rotateControllerIndex=AlertCommand.rotateControllerIndex;
			alertWindowVo.alertVo.txt=_alertInfoArr[0];
			alertWindowVo.alertVo.callBackCmd=_alertInfoArr[1];
			alertWindowVo.alertVo.btnCount=_alertInfoArr[2];
			alertWindowVo.alertVo.data=_alertInfoArr[3];
			this.gameUIBuilderBridge.showAlert(alertWindowVo);
			this.sendNotification("Hide_Iframe_Cmd");
		}

		/**
		*关闭弹窗
		*@param _areaIndex
		*
		*/
		__proto.closeAlert=function(_areaIndex){
			this.gameUIBuilderBridge.closeAlert(_areaIndex);
			this.sendNotification("Display_Iframe_Cmd");
		}

		/**
		*显示tips
		*@param _info
		*
		*/
		__proto.showTips=function(_info){
			this.gameUIBuilderBridge.showPromptText(_info[0],_info[1],_info[2]);
		}

		AlertCommand.rotateControllerIndex=0;
		return AlertCommand;
	})(BaseCommand)


	//class publics.c.IframeCommand extends robotLegs.command.BaseCommand
	var IframeCommand=(function(_super){
		function IframeCommand(){
			this.numberGamesUIModel=null;
			this.publicModel=null;
			IframeCommand.__super.call(this);
		}

		__class(IframeCommand,'publics.c.IframeCommand',_super);
		var __proto=IframeCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Open_Iframe_Cmd":{
						this.openIframe(_notificationVo.data);
						break ;
					}
				case "Hide_Iframe_Cmd":{
						this.hideDisplayIframe("none");
						break ;
					}
				case "Display_Iframe_Cmd":{
						if(this.numberGamesUIModel){
							if(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.openAlreadyBol || this.numberGamesUIModel.numberGamesVo.shoppingCartVo.openAlreadyBol){
								return;
							}
						}
						if(this.publicModel.alertWindowVoArr.length==0){
							this.hideDisplayIframe("");
						}
						break ;
					}
				case "Close_Iframe_Cmd":{
						this.closeIframe();
						break ;
					}
				case "Create_Form_Cmd":{
						this.createForm(_notificationVo.data[0],_notificationVo.data[1],_notificationVo.data[2]);
						break ;
					}
				case "Remove_Form_Cmd":{
						this.removeForm();
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*打开iframe
		*
		*/
		__proto.openIframe=function(_data){
			this.showLoading();
			var url=_data[0];
			var bi=Browser.clientHeight / GRoot.inst.height;
			var width=NaN;
			var height=NaN;
			var top=NaN;
			var left=NaN;
			if(_data[2]){
				var rect=_data[2];
				width=rect.width *bi;
				height=rect.height *bi;
				top=rect.y *bi;
				left=rect.x *bi;
			}
			else{
				width=100;
				height=100;
				top=70 *bi;
				left=0;
			};
			var mainDiv=Browser.window.document.getElementsByName('iframediv')[0];
			mainDiv.hidden=false;
			mainDiv["style"]["zIndex"]=999;
			mainDiv["style"]["width"]=String(width)+"px";
			mainDiv["style"]["height"]=String(height)+"px";
			var iframe=Browser.window.document.createElement('iframe');
			iframe.setAttribute('src',url);
			iframe.name="iframe";
			iframe.id="iframeId";
			iframe["style"]["top"]=top+"px";
			iframe["style"]["left"]=left+"px";
			iframe["style"]["background-color"]="white";
			if(_data[2]){
				iframe["style"]["width"]=String(width)+"px";
				iframe["style"]["height"]=String(height)+"px";
			}
			else{
				iframe["style"]["width"]="100%";
				iframe["style"]["height"]="100%";
			}
			iframe["style"]["position"]="absolute";
			iframe.setAttribute('scrolling',"no");
			iframe.setAttribute('frameborder',"0");
			mainDiv.appendChild(iframe);
			initIframe(iframe);
			if(_data[1]){
				this.createCloseBtn(_data[1]);
			}
			changeDirection();
		}

		__proto.createCloseBtn=function(_handle){
			var bi=Browser.clientHeight / GRoot.inst.height;
			var closeBtn=Browser.window.document.createElement('closeBtn');
			closeBtn.name="closeBtn";
			closeBtn.id="closeBtnId";
			closeBtn.innerHTML=BaseStaticFuncs.format("<img src='res/images/btn_close.png' onclick=\"callBackHandleFunc()\" style='width:100%;height:100%;'/>","");
			var mainDiv=Browser.window.document.getElementsByName("closeDiv")[0];
			mainDiv.style["zIndex"]="auto";
			mainDiv.style["position"]="absolute";
			mainDiv.hidden=false;
			closeBtn.style.width=54 *bi+"px";
			closeBtn.style.height=54 *bi+"px";
			closeBtn.style["position"]="fixed";
			closeBtn.style["opacity"]=100;{
			}
			closeBtn.style.top=10 *bi+"px";
			setCallBackFunc(_handle);
			mainDiv.appendChild(closeBtn);
		}

		__proto.hideDisplayIframe=function(_display){
			var mainDiv=Browser.window.document.getElementsByName('iframediv')[0];
			if(mainDiv)
				mainDiv.style["display"]=_display;
		}

		/**
		*关闭iframe
		*
		*/
		__proto.closeIframe=function(){
			this.hideLoading();
			var iframe=Browser.window.document.getElementsByName('iframe')[0];
			if(iframe){
				var div=Browser.window.document.getElementsByName('iframediv')[0];
				div.hidden=true;
				iframe.parentNode.removeChild(iframe);
			};
			var closeDiv=Browser.window.document.getElementsByName('closeDiv')[0];
			if(closeDiv){
				while (closeDiv.hasChildNodes()){
					closeDiv.removeChild(closeDiv.lastChild);
				}
			}
		}

		__proto.createForm=function(_url,_paraArr,_rect){
			this.removeForm();
			var bi=Browser.clientHeight / GRoot.inst.height;
			var url=_url;
			var mainDiv=Browser.window.document.getElementsByName('formdiv')[0];
			var div=Browser.window.document.createElement('div');
			mainDiv.appendChild(div);
			Browser.window[""]
			setPostUrlData(_url,_paraArr);
			div.innerHTML=BaseStaticFuncs.format("<a name='#' onclick='PostUrl()' style='display:block;width:100%;height:100%;' href='#' target='_self'></a>");
			div.style.width=_rect.width *bi+"px";
			div.style.height=_rect.height *bi+"px";
			div.style.background="#ffffff";
			div.style["zIndex"]=200000;
			div.style["position"]="absolute";
			div.style["opacity"]=0;
			div.style.left=Number(_rect.x)*bi+"px";
			div.style.top=Number(_rect.y)*bi+"px";
		}

		// var handle=new Handler(this,_callback);
		__proto.removeForm=function(){
			var mainDiv=Browser.window.document.getElementsByName('formdiv')[0];
			while (mainDiv.hasChildNodes()){
				mainDiv.removeChild(mainDiv.lastChild);
			}
		}

		IframeCommand.OPEN_IFRAME_CMD="Open_Iframe_Cmd";
		IframeCommand.HIDE_IFRAME_CMD="Hide_Iframe_Cmd";
		IframeCommand.DISPLAY_IFRAME_CMD="Display_Iframe_Cmd";
		IframeCommand.ClOSE_IFRAME_CMD="Close_Iframe_Cmd";
		IframeCommand.CREATE_FORM_CMD="Create_Form_Cmd";
		IframeCommand.REMOVE_FORM_CMD="Remove_Form_Cmd";
		return IframeCommand;
	})(BaseCommand)


	//class modules.hall.v.fundmanage.FmValidPwdPanel extends robotLegs.sprite.BaseUISprite
	var FmValidPwdPanel=(function(_super){
		function FmValidPwdPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.fmValidPwdPanelVo=null;
			this.commonTopComponent=null;
			this.txtName=null;
			this.btnDo=null;
			this.txtError=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			FmValidPwdPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(FmValidPwdPanel,'modules.hall.v.fundmanage.FmValidPwdPanel',_super);
		var __proto=FmValidPwdPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("提款中心");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.btnDo.onClick(this,this.onDoClick);
			this.registerStatusCallBack(FmValidPwdPanelVo.VALID_INFO,new Handler(this,this.onValidInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.txtName.text="";
			this.showError("");
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_FM_VALID_PWD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onValidInfo=function(){
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_DRAW_MONEY_CENTER,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_VALID_PWD,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onUpdateInfo=function(){}
		__proto.onDoClick=function(){
			var pwd=StringTool.trim(this.txtName.text);;
			if(pwd.length < GameUtil.PWD_LEN_MIN){
				this.showError("提款密码长度为"+GameUtil.PWD_LEN_MIN+"个字符！");
				return;
			}
			this.sendNotification("VALID_PWD_Cmd",pwd);
		}

		__proto.showError=function(msg){
			this.txtError.text=msg;
		}

		return FmValidPwdPanel;
	})(BaseUISprite)


	//class publics.c.OpenAndColseGameCommand extends robotLegs.command.BaseCommand
	var OpenAndColseGameCommand=(function(_super){
		function OpenAndColseGameCommand(){
			this.contextMain=null;
			this.playerInfoModel=null;
			this.stageUIModel=null;
			OpenAndColseGameCommand.__super.call(this);
		}

		__class(OpenAndColseGameCommand,'publics.c.OpenAndColseGameCommand',_super);
		var __proto=OpenAndColseGameCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Open_Game_Cmd":{
						this.openGame(_notificationVo.data);
						break ;
					}
				case "Close_Game_Cmd":{
						this.closeGame(_notificationVo.data);
						break ;
					}
				}
		}

		/**
		*打开游戏
		*
		*/
		__proto.openGame=function(gameName){
			this.playerInfoModel.currentGameName=gameName;
			var gamePluginClass=this.findGamePlugin();
			this.contextMain.configure(gamePluginClass).start();
		}

		/**
		*关闭游戏
		*
		*/
		__proto.closeGame=function(gameName){
			this.playerInfoModel.currentGameName=gameName;
			var gamePluginClass=this.findGamePlugin();
			this.contextMain.close(gamePluginClass);
		}

		/**
		*根据游戏名找到相关游戏的plugin
		*@return
		*
		*/
		__proto.findGamePlugin=function(){
			var pluginClass;
			switch(this.playerInfoModel.currentGameName){
				case PlayerInfoModel.Panel_Login:
					pluginClass=LoginPlugin;
					break ;
				case PlayerInfoModel.Panel_Hall:
					pluginClass=HallPlugin;
					break ;
				case PlayerInfoModel.Panel_Lottery:
					pluginClass=NumberGamesPlugin;
					break ;
				}
			return pluginClass;
		}

		OpenAndColseGameCommand.OPEN_GAME_CMD="Open_Game_Cmd";
		OpenAndColseGameCommand.CLOSE_GAME_CMD="Close_Game_Cmd";
		return OpenAndColseGameCommand;
	})(BaseCommand)


	//class modules.hall.v.groupcenter.GroupAccountChangeDetailPanel extends robotLegs.sprite.BaseUISprite
	var GroupAccountChangeDetailPanel=(function(_super){
		function GroupAccountChangeDetailPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupAccountChangeDetailVo=null;
			this.commonTopComponent=null;
			this.groupAccountChangeDetailScrollComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupAccountChangeDetailPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupAccountChangeDetailPanel,'modules.hall.v.groupcenter.GroupAccountChangeDetailPanel',_super);
		var __proto=GroupAccountChangeDetailPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("团队帐变明细");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.sView.commonDateSearchComponent.btnSearch.onClick(this,this.onSearchClick);
			this.sView.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.sView.commonGrid2Component1.onClick(this,this.chooseTypeListClick,[1]);
			this.sView.commonGrid2Component2.onClick(this,this.chooseTypeListClick,[2]);
			this.sView.commonGrid2Component0.setTitle("产品类型");
			this.sView.commonGrid2Component1.setTitle("账变类型");
			this.sView.commonGrid2Component2.setTitle("范围");
			this.sView.commonGrid3Component.setTitle("用户名");
			this.registerStatusCallBack(GroupAccountChangeDetailVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
			this.sView.commonPageComponent.setAllTitleName(["产品类型","用户名","账变编号","账变类型","账变时间","账变加款","账变扣款","账变前金额","账变后金额"]);
			this.sView.commonPageComponent.setAllTitleWidth([120,100,150,90,200,100,100,110,110],true);
			this.sView.commonPageComponent.setIsShowCurrentPageCount(true);
			this.sView.commonPageComponent.setIsShowAllPageCount(true);
			this.sView.commonPageComponent.initPageComponent();
			this.sView.commonPageComponent.setPageButtonHandler(new Handler(this,this.onSearchClick));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			var dataMgr=DataMgr.get();
			this.onInitInfo();
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
			this.sView.commonDateSearchComponent.initToday();
		}

		__proto.onUpdateInfo=function(){
			var data=this.groupAccountChangeDetailVo.mcAccountSearchData
			console.log("GroupAccountChangeDetailPanel onUpdateInfo :",data);
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var balanceChangeTypeConfigData=dataMgr.balanceChangeTypeConfigData;
			var item;
			var contentValues=[];
			for (var i=0;i < data.items.length;i++){
				item=data.items[i];
				var change_balance_add="";
				var change_balance_minus="";
				if(item.change_balance > 0)
					change_balance_add=item.change_balance_display;
				else
				change_balance_minus=item.change_balance_display;
				var product_name=gameTypeConfigData.getItem(item.product_id).cn;
				var change_type_name=balanceChangeTypeConfigData.getItem(item.change_type).text;
				contentValues.push([
				product_name,item.user_account,"下注单："+item.change_item_id,change_type_name,item.create_time,
				change_balance_add,change_balance_minus,item.change_before_display,item.change_after_display]);
			};
			var currentCountValues=["","","","","本页小计",data.page_sum_add_balance_display,data.page_sum_sub_balance_display,"",""];
			var allCountValues=["","","","","全页总计",data.add_balance_display,data.sub_balance_display,"",""];
			this.sView.commonPageComponent.setContentValues(contentValues,currentCountValues,allCountValues);
			this.sView.commonPageComponent.setPageTabContent(parseInt(data.current),parseInt(data.pages));
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			tabName=dataMgr.gameTypeConfigData.items[dataMgr.curGameType].cn;
			this.sView.commonGrid2Component0.setName(tabName);
			tabName=dataMgr.curAccountChangeType==0 ? "全部" :dataMgr.balanceChangeTypeConfigData.items[dataMgr.curAccountChangeType-1].text;
			this.sView.commonGrid2Component1.setName(tabName);
			tabName=dataMgr.langConfigData.lang_target_seach_range.values[dataMgr.curTargetSeachRange];
			this.sView.commonGrid2Component2.setName(tabName);
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick");
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var balanceChangeTypeConfigData=dataMgr.balanceChangeTypeConfigData;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < gameTypeConfigData.items.length;i++){
						tempArr.push(gameTypeConfigData.items[i].cn);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curGameType;
					break ;
				case 1:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < balanceChangeTypeConfigData.items.length;i++){
						tempArr.push(balanceChangeTypeConfigData.items[i].text);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component1.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curAccountChangeType;
					break ;
				case 2:
					for (i=0;i < dataMgr.langConfigData.lang_target_seach_range.values.length;i++){
						tempArr.push(dataMgr.langConfigData.lang_target_seach_range.values[i]);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component2.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curTargetSeachRange;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[tabType]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			if(type==0){
				dataMgr.curGameType=commonTypeListVo.selectIndex;
				}else if(type==1){
				dataMgr.curAccountChangeType=commonTypeListVo.selectIndex;
				}else if(type==2){
				dataMgr.curTargetSeachRange=commonTypeListVo.selectIndex;
			}
			this.onUpdateChooseInfo();
			this.onSearch();
		}

		__proto.onSearchClick=function(){
			this.onSearch();
		}

		__proto.onSearch=function(){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var balanceChangeTypeConfigData=dataMgr.balanceChangeTypeConfigData;
			var langConfigData=dataMgr.langConfigData;
			var product_id=gameTypeConfigData.items[dataMgr.curGameType].id;
			var change_type=dataMgr.curAccountChangeType==0 ? null :balanceChangeTypeConfigData.items[dataMgr.curAccountChangeType-1].id;
			var dateArr=this.sView.commonDateSearchComponent.getDate();
			var user_account=StringTool.trim(this.sView.commonGrid3Component.getName());
			var target_seach_range=langConfigData.lang_target_seach_range.keys[dataMgr.curTargetSeachRange];
			var current=this.sView.commonPageComponent.getCurrentPage();
			this.sendNotification("GET_ACCOUNT_CHANGE_DETAIL_Cmd",[product_id,change_type,dateArr[0],dateArr[1],user_account,target_seach_range,current]);
		}

		// onSearch();
		__getset(0,__proto,'sView',function(){
			return this.groupAccountChangeDetailScrollComponent;
		});

		return GroupAccountChangeDetailPanel;
	})(BaseUISprite)


	//class robotLegs.command.HttpRequestCommand extends robotLegs.command.BaseCommand
	var HttpRequestCommand=(function(_super){
		function HttpRequestCommand(){
			this.__httpRequest=null;
			this.__httpRequestVo=null;
			HttpRequestCommand.__super.call(this);
		}

		__class(HttpRequestCommand,'robotLegs.command.HttpRequestCommand',_super);
		var __proto=HttpRequestCommand.prototype;
		/**
		*执行
		*@param _notificationVo
		*
		*/
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Request_Cmd":{
						this.__httpRequestVo=_notificationVo.data;
						this.sendRequest();
						break ;
					}
				default :{
						break ;
					}
				}
		}

		__proto.sendRequest=function(){
			this.__httpRequest=new HttpRequest();
			this.__httpRequest.once("progress",this,this.onHttpRequestProgress);
			this.__httpRequest.once("error",this,this.onHttpRequestError);
			this.__httpRequest.once("complete",this,this.onHttpRequestComplete);
			this.__httpRequest.send(this.__httpRequestVo.url,JSON.stringify(this.__httpRequestVo.postData),this.__httpRequestVo.method,this.__httpRequestVo.responseType,this.__httpRequestVo.headers);
		}

		/**
		*请求的进度
		*@param e
		*
		*/
		__proto.onHttpRequestProgress=function(e){
			if(this.__httpRequestVo.progressBackCmd.length==0)
				return;
			this.sendNotification(this.__httpRequestVo.progressBackCmd,e);
		}

		/**
		*请求报错
		*@param e
		*
		*/
		__proto.onHttpRequestError=function(e){
			this.hideLoading();
			this.showAlert("http錯誤："+e);
			if(this.__httpRequestVo.errorBackCmd.length==0)
				return;
			this.sendNotification(this.__httpRequestVo.errorBackCmd,e);
			this.newClearMemory();
		}

		/**
		*请求结果
		*@param e
		*
		*/
		__proto.onHttpRequestComplete=function(e){
			if(this.__httpRequestVo.completeBackCmd.length==0)
				return;
			this.sendNotification(this.__httpRequestVo.completeBackCmd,e);
			this.newClearMemory();
		}

		/**
		*重写清除内存的方法，必须在服务端返回后再清除内存
		*
		*/
		__proto.clearMemory=function(){}
		/**
		*清理内存
		*
		*/
		__proto.newClearMemory=function(){
			this.__httpRequest=null;
			this.__httpRequestVo=null;
			this.__notificationVo=null;
			_super.prototype.clearMemory.call(this);
		}

		HttpRequestCommand.REQUEST_CMD="Request_Cmd";
		return HttpRequestCommand;
	})(BaseCommand)


	//class modules.hall.v.systemcenter.SysBindingBankCardPanelVo extends robotLegs.vo.BaseViewVo
	var SysBindingBankCardPanelVo=(function(_super){
		function SysBindingBankCardPanelVo(){
			SysBindingBankCardPanelVo.__super.call(this);
		}

		__class(SysBindingBankCardPanelVo,'modules.hall.v.systemcenter.SysBindingBankCardPanelVo',_super);
		SysBindingBankCardPanelVo.INIT_INFO="INIT_INFO";
		SysBindingBankCardPanelVo.UPDATE_INFO="UPDATE_INFO";
		SysBindingBankCardPanelVo.DONE_SUCCESS="DONE_SUCCESS";
		return SysBindingBankCardPanelVo;
	})(BaseViewVo)


	//class publics.c.VoiceCommand extends robotLegs.command.BaseCommand
	var VoiceCommand=(function(_super){
		function VoiceCommand(){
			this.publicModel=null;
			this.gameUIBuilderBridge=null;
			VoiceCommand.__super.call(this);
		}

		__class(VoiceCommand,'publics.c.VoiceCommand',_super);
		var __proto=VoiceCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Show_Voice_Cmd":{
						this.showVoice()
						break ;
					}
				case "Close_Voice_Cmd":{
						this.closeVoice();
						break ;
					}
				}
		}

		/**
		*显示弹窗
		*
		*/
		__proto.showVoice=function(){
			this.gameUIBuilderBridge.openWindow("Voice",VoiceWindow);
		}

		/**
		*关闭弹窗
		*@param _areaIndex
		*
		*/
		__proto.closeVoice=function(){
			this.publicModel.voiceWindowVo.status="Remove_Status";
		}

		VoiceCommand.SHOW_VOICE_CMD="Show_Voice_Cmd";
		VoiceCommand.CLOSE_VOICE_CMD="Close_Voice_Cmd";
		return VoiceCommand;
	})(BaseCommand)


	//class modules.hall.v.groupcenter.GroupAccountChangeDetailScrollComponent extends robotLegs.sprite.BaseUISprite
	var GroupAccountChangeDetailScrollComponent=(function(_super){
		function GroupAccountChangeDetailScrollComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonGrid2Component0=null;
			this.commonGrid2Component1=null;
			this.commonGrid2Component2=null;
			this.commonGrid3Component=null;
			this.commonDateSearchComponent=null;
			this.commonPageComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupAccountChangeDetailScrollComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupAccountChangeDetailScrollComponent,'modules.hall.v.groupcenter.GroupAccountChangeDetailScrollComponent',_super);
		var __proto=GroupAccountChangeDetailScrollComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return GroupAccountChangeDetailScrollComponent;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupAccountTransferMoneyPanel extends robotLegs.sprite.BaseUISprite
	var GroupAccountTransferMoneyPanel=(function(_super){
		function GroupAccountTransferMoneyPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupAccountTransferMoneyPanelVo=null;
			this.commonTopComponent=null;
			this.commonGrid7Component0=null;
			this.commonGrid7Component1=null;
			this.commonGrid3Component0=null;
			this.commonGrid6Component0=null;
			this.btnDo=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupAccountTransferMoneyPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupAccountTransferMoneyPanel,'modules.hall.v.groupcenter.GroupAccountTransferMoneyPanel',_super);
		var __proto=GroupAccountTransferMoneyPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonGrid7Component0.title="下级账号：";
			this.commonGrid7Component1.title="你的余额：";
			this.commonGrid3Component0.title="金额：";
			this.commonGrid6Component0.setTitle("资金密码：");
			this.commonGrid3Component0.setPrompt("加款区间 100元-30000元");
			this.commonGrid3Component0.setRestrict("0-9.");
			this.commonGrid6Component0.setPrompt("请输入您的资金密码");
			this.btnDo.onClick(this,this.transfer);
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Status",new Handler(this,this.updateUI));
			this.sendNotification("GET_GROUP_TRANSFER_INFO_Cmd");
		}

		__proto.updateUI=function(){
			this.commonGrid7Component0.setName(this.groupAccountTransferMoneyPanelVo.account);
			this.commonGrid7Component1.setName(String(this.groupAccountTransferMoneyPanelVo.balance));
		}

		/**
		*确定转账
		*
		*/
		__proto.transfer=function(){
			this.groupAccountTransferMoneyPanelVo.money=Number(this.commonGrid3Component0.getName());
			this.groupAccountTransferMoneyPanelVo.password=this.commonGrid6Component0.getName();
			if(this.groupAccountTransferMoneyPanelVo.money > this.groupAccountTransferMoneyPanelVo.balance){
				this.showAlert("您的余额不足");
				return;
			}
			if(this.groupAccountTransferMoneyPanelVo.money < 100 || this.groupAccountTransferMoneyPanelVo.money > 30000){
				this.showAlert("加款区间 100元-30000元");
				return;
			}
			this.sendNotification("TRANSFER_MONEY_TO_GROUP_ACCOUNT_Cmd");
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_ACCOUNT_TRANSFER_MONNEY,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		return GroupAccountTransferMoneyPanel;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupBetRecord2Panel extends robotLegs.sprite.BaseUISprite
	var GroupBetRecord2Panel=(function(_super){
		function GroupBetRecord2Panel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupBetRecord2Vo=null;
			this.commonTopComponent=null;
			this.commonGrid2Component0=null;
			this.commonGrid3Component0=null;
			this.commonDateSearchComponent=null;
			this.commonPageComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupBetRecord2Panel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupBetRecord2Panel,'modules.hall.v.groupcenter.GroupBetRecord2Panel',_super);
		var __proto=GroupBetRecord2Panel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("团队投注记录");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonDateSearchComponent.btnSearch.onClick(this,this.onSearchClick);
			this.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.commonGrid2Component0.setTitle("彩种");
			this.commonGrid3Component0.setTitle("用户名");
			this.commonPageComponent.setAllTitleName(["用户名","注单编号","种类","注单模式","彩种玩法","期号","	投注时间","投注内容","倍数","注数","投注金额","中奖金额","注单状态"]);
			this.commonPageComponent.setAllTitleWidth([90,90,90,90,140,140,200,200,110,110,110,110,110],true);
			this.commonPageComponent.setIsShowCurrentPageCount(true);
			this.commonPageComponent.setIsShowAllPageCount(true);
			this.commonPageComponent.initPageComponent();
			this.commonPageComponent.setPageButtonHandler(new Handler(this,this.onSearchClick));
			this.registerStatusCallBack(GroupBetRecord2Vo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			var dataMgr=DataMgr.get();
			dataMgr.curLettoryType=0;
			if(dataMgr.userAccountOfLottery !=""){
				this.commonGrid3Component0.setName(dataMgr.userAccountOfLottery);
				dataMgr.userAccountOfLottery="";
			}
			this.onInitInfo();
			this.onSearch();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_BET_RECORD2,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
			this.commonDateSearchComponent.initToday();
		}

		__proto.onUpdateInfo=function(){
			console.log("GroupBetRecord2Panel onUpdateInfo");
			var dataMgr=DataMgr.get();
			var lotteryGameTypeConfigData=dataMgr.lotteryGameTypeConfigData;
			var langConfigData=dataMgr.langConfigData;
			var dataList=this.groupBetRecord2Vo.getDataList();
			var item;
			var contentValues=[];
			for (var i=0;i < dataList.length;i++){
				item=dataList[i];
				var order_name=langConfigData.lang_order_type.get(item.order_type);
				var bet_mode_name=langConfigData.lang_bet_percent_type.get(item.bet_mode);
				var bet_multiple=langConfigData.lang_bet_mode.get(item.bet_multiple);
				var order_status_name=langConfigData.lang_order_status.get(item.order_status);
				contentValues.push([
				item.user_account,item.id,order_name,bet_mode_name,item.game_value+"\n"+item.game_type_name,
				item.game_cycle_value,item.create_time,GameUtil.changeName(JSON.stringify(item.bet_info)),bet_multiple,item.bet_count,
				item.bet_balance_display,item.result_balance_display,order_status_name]);
			};
			var currentCountValues=["","","","","","","","","","本页小计",this.groupBetRecord2Vo.data.data_page_sum.total_bet_balance_display,this.groupBetRecord2Vo.data.data_page_sum.total_win_balance_display,""];
			var allCountValues=["","","","","","","","","","全页总计",this.groupBetRecord2Vo.data.data_tatal_sum.total_bet_balance_display,this.groupBetRecord2Vo.data.data_tatal_sum.total_win_balance_display,""];
			this.commonPageComponent.setContentValues(contentValues,currentCountValues,allCountValues);
			this.commonPageComponent.setPageTabContent(parseInt(this.groupBetRecord2Vo.data.page.current),parseInt(this.groupBetRecord2Vo.data.page.pages));
		}

		__proto.onUpdateChooseInfo=function(){
			var dataMgr=DataMgr.get();
			var lotteryGameTypeConfigData=dataMgr.lotteryGameTypeConfigData;
			var tabName;
			tabName=dataMgr.curLettoryType==0 ? "所有彩种" :lotteryGameTypeConfigData.openItems[dataMgr.curLettoryType-1].game_value;
			this.commonGrid2Component0.setName(tabName);
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick");
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var lotteryGameTypeConfigData=dataMgr.lotteryGameTypeConfigData;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					tempArr.push("所有彩种");
					for (i=0;i < lotteryGameTypeConfigData.openItems.length;i++){
						tempArr.push(lotteryGameTypeConfigData.openItems[i].game_value);
					}
					commonTypeListVo.title="选择"+this.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curLettoryType;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[tabType]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP_BET_RECORD2,GameUtil.PANEL_ANI_TO_LEFT,false));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			if(type==0){
				dataMgr.curLettoryType=commonTypeListVo.selectIndex;
			}
			this.onUpdateChooseInfo();
			this.onSearch();
		}

		__proto.onSearch=function(){
			var dataMgr=DataMgr.get();
			var lotteryGameTypeConfigData=dataMgr.lotteryGameTypeConfigData;
			var product_id=dataMgr.curLettoryType==0 ? null :lotteryGameTypeConfigData.openItems[dataMgr.curLettoryType-1].id;
			var user_account=StringTool.trim(this.commonGrid3Component0.getName());
			var dateArr=this.commonDateSearchComponent.getDate();
			var curPage=this.commonPageComponent.getCurrentPage();
			this.sendNotification("GET_GROUP_BET_RECORD_Cmd",[product_id,user_account,dateArr[0],dateArr[1],curPage]);
		}

		__proto.onSearchClick=function(){
			this.onSearch();
		}

		return GroupBetRecord2Panel;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupBetRecordPanel extends robotLegs.sprite.BaseUISprite
	var GroupBetRecordPanel=(function(_super){
		function GroupBetRecordPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcBetRecordVo=null;
			this.commonTopComponent=null;
			this.commonLst1Component=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupBetRecordPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupBetRecordPanel,'modules.hall.v.groupcenter.GroupBetRecordPanel',_super);
		var __proto=GroupBetRecordPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("团队投注记录");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonLst1Component.setSearchCompontentVisible(true);
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var datas=[];
			var tempArr=[];
			var i=0;
			for (i=0;i < gameTypeConfigData.items.length;i++){
				tempArr.push(gameTypeConfigData.items[i].cn);
			}
			datas.push(tempArr);
			datas.push(dataMgr.tabTimeData);
			datas.push(dataMgr.tabOrderStateData);
			this.commonLst1Component.updateTabsWidth([0.33,0.33,0.33]);
			this.commonLst1Component.setTabs([0,0,0,0],datas,["请选彩票种类","请选择时间","请选择订单状态"]);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_BET_RECORD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		return GroupBetRecordPanel;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupGameRecordPanel extends robotLegs.sprite.BaseUISprite
	var GroupGameRecordPanel=(function(_super){
		function GroupGameRecordPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupGameRecordVo=null;
			this.commonTopComponent=null;
			this.groupGameRecordScrollComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupGameRecordPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupGameRecordPanel,'modules.hall.v.groupcenter.GroupGameRecordPanel',_super);
		var __proto=GroupGameRecordPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("团队游戏记录");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.sView.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.sView.commonGrid2Component1.onClick(this,this.chooseTypeListClick,[1]);
			this.sView.commonGrid2Component2.onClick(this,this.chooseTypeListClick,[2]);
			this.sView.commonGrid2Component3.onClick(this,this.chooseTypeListClick,[3]);
			this.sView.commonGrid2Component4.onClick(this,this.chooseTypeListClick,[4]);
			this.sView.commonGrid2Component5.onClick(this,this.chooseTypeListClick,[5]);
			this.sView.commonGrid2Component0.setTitle("游戏种类");
			this.sView.commonGrid2Component1.setTitle("注单种类");
			this.sView.commonGrid2Component2.setTitle("彩种");
			this.sView.commonGrid2Component3.setTitle("注单模式");
			this.sView.commonGrid2Component4.setTitle("范围");
			this.sView.commonGrid2Component5.setTitle("注单状态");
			this.sView.commonGrid3Component.setTitle("用户名");
			this.registerStatusCallBack(GroupGameRecordVo.INIT_INFO,new Handler(this,this.onInitInfo));
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
			this.sView.commonDateSearchComponent.initToday();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_GAME_RECORD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			this.sView.vController.selectedIndex=dataMgr.curGameType==0 ? 0 :1;
			if(dataMgr.curGameType==0){
				this.sView.commonPageComponent.setAllTitleName(["用户名","注单编号","种类","注单模式","彩种玩法","期号","投注时间","投注内容","倍数","注数","投注金额","中奖金额","注单状态"]);
				this.sView.commonPageComponent.setAllTitleWidth([64,90,50,90,90,50,90,90,50,50,90,90,90],true);
				this.sView.commonPageComponent.setIsShowCurrentPageCount(true);
				this.sView.commonPageComponent.setIsShowAllPageCount(true);
				this.sView.commonPageComponent.initPageComponent();
				var tempContentValues=[
				["1","1","1\n1\n1","1","1","1","1","1","1","1","1","1","1"],
				["2","2","2\n3\n1\n1","2","2","2","2","2","2","2","2","2","2"],
				["3","3","3\n3\n1\n1\n1","3","3","3","3","3","3","3","3","3","3"],
				["4","4","4\n4\n1\n1\n1\n1","4","4","4","4","4","4","4","4","4","4"],
				["10","10","10\n10\n1\n1\n1\n1\n1\n1\n1\n1","10","10","10","10","10","10","10","10","10","10"]];
				var tempCurrentCountValues=["","","","","","","","","","本页小计","188","0",""];
				var tempAllCountValues=["","","","","","","","","","全页总计","372","34",""];
				this.sView.commonPageComponent.setContentValues(tempContentValues,tempCurrentCountValues,tempAllCountValues);
				}else{
				this.sView.commonPageComponent.setAllTitleName(["用户名","注单编号","投注时间","投注金额","派奖","盈亏","返水状态"]);
				this.sView.commonPageComponent.setAllTitleWidth([64,90,90,90,50,50,90],true);
				this.sView.commonPageComponent.setIsShowCurrentPageCount(true);
				this.sView.commonPageComponent.setIsShowAllPageCount(true);
				this.sView.commonPageComponent.initPageComponent();
				var tempContentValues1=[
				["1","1","1","1","1","1","1"],
				["2","2","2","2","2","2","2"],
				["3","3","3","3","3","3","3"],
				["4","4","4","4","4","4","4"],
				["10","10","10","10","10","10","10"]];
				var tempCurrentCountValues1=["","","","本页小计","188","0",""];
				var tempAllCountValues1=["","","","全页总计","372","34",""];
				this.sView.commonPageComponent.setContentValues(tempContentValues1,tempCurrentCountValues1,tempAllCountValues1);
			}
			tabName=dataMgr.gameTypeConfigData.items[dataMgr.curGameType].cn;
			this.sView.commonGrid2Component0.setName(tabName);
			tabName=dataMgr.curOrderType==0 ? dataMgr.ALL_TXT :dataMgr.langConfigData.lang_order_type.values[dataMgr.curOrderType];
			this.sView.commonGrid2Component1.setName(tabName);
			tabName=dataMgr.curLettoryType==0 ? dataMgr.ALL_TXT :dataMgr.lotteryGameListData.ggList[dataMgr.curLettoryType].game_value;
			this.sView.commonGrid2Component2.setName(tabName);
			tabName=dataMgr.curZhuDanMoShi==0 ? dataMgr.ALL_TXT :dataMgr.langConfigData.lang_bet_percent_type.values[dataMgr.curZhuDanMoShi];
			this.sView.commonGrid2Component3.setName(tabName);
			tabName=dataMgr.langConfigData.lang_target_seach_range.values[dataMgr.curTargetSeachRange];
			this.sView.commonGrid2Component4.setName(tabName);
			tabName=dataMgr.curZhuDanZhuangTai==0 ? dataMgr.ALL_TXT :dataMgr.zhuDanZhuangTaiConfigData[dataMgr.curZhuDanZhuangTai];
			this.sView.commonGrid2Component5.setName(tabName);
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick");
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var langConfigData=dataMgr.langConfigData;
			var lotteryGameListData=dataMgr.lotteryGameListData;
			var zhuDanZhuangTaiConfigData=dataMgr.zhuDanZhuangTaiConfigData;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < gameTypeConfigData.items.length;i++){
						tempArr.push(gameTypeConfigData.items[i].cn);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curGameType;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[0]);
					break ;
				case 1:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < langConfigData.lang_order_type.values.length;i++){
						tempArr.push(langConfigData.lang_order_type.values[i]);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component1.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curOrderType;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[1]);
					break ;
				case 2:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < lotteryGameListData.ggList.length;i++){
						tempArr.push(lotteryGameListData.ggList[i].game_value);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component2.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curLettoryType;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[2]);
					break ;
				case 3:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < langConfigData.lang_bet_percent_type.values.length;i++){
						tempArr.push(langConfigData.lang_bet_percent_type.values[i]);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component3.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curZhuDanMoShi;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[3]);
					break ;
				case 4:
					for (i=0;i < dataMgr.langConfigData.lang_target_seach_range.values.length;i++){
						tempArr.push(dataMgr.langConfigData.lang_target_seach_range.values[i]);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component4.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curTargetSeachRange;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[4]);
					break ;
				case 5:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < zhuDanZhuangTaiConfigData.length;i++){
						tempArr.push(zhuDanZhuangTaiConfigData[i]);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component5.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curZhuDanZhuangTai;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[5]);
					break ;
				}
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP_GAME_RECORD,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=DataMgr.get().commonTypeListVo;
			if(type==0){
				dataMgr.curGameType=commonTypeListVo.selectIndex;
				}else if(type==1){
				dataMgr.curOrderType=commonTypeListVo.selectIndex;
				}else if(type==2){
				dataMgr.curLettoryType=commonTypeListVo.selectIndex;
				}else if(type==3){
				dataMgr.curZhuDanMoShi=commonTypeListVo.selectIndex;
				}else if(type==4){
				dataMgr.curTargetSeachRange=commonTypeListVo.selectIndex;
				}else if(type==5){
				dataMgr.curZhuDanZhuangTai=commonTypeListVo.selectIndex;
			}
			this.onUpdateChooseInfo();
		}

		__getset(0,__proto,'sView',function(){
			return this.groupGameRecordScrollComponent;
		});

		return GroupGameRecordPanel;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupGameRecordScrollComponent extends robotLegs.sprite.BaseUISprite
	var GroupGameRecordScrollComponent=(function(_super){
		function GroupGameRecordScrollComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonGrid2Component0=null;
			this.commonGrid2Component1=null;
			this.commonGrid2Component2=null;
			this.commonGrid2Component3=null;
			this.commonGrid3Component=null;
			this.commonGrid2Component4=null;
			this.commonGrid2Component5=null;
			this.vController=null;
			this.commonDateSearchComponent=null;
			this.commonPageComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupGameRecordScrollComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupGameRecordScrollComponent,'modules.hall.v.groupcenter.GroupGameRecordScrollComponent',_super);
		var __proto=GroupGameRecordScrollComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return GroupGameRecordScrollComponent;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupIncomePanel extends robotLegs.sprite.BaseUISprite
	var GroupIncomePanel=(function(_super){
		function GroupIncomePanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcBetRecordVo=null;
			this.commonTopComponent=null;
			this.commonLst1Component=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupIncomePanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupIncomePanel,'modules.hall.v.groupcenter.GroupIncomePanel',_super);
		var __proto=GroupIncomePanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("团队收入");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonLst1Component.setSearchCompontentVisible(true);
			this.commonLst1Component.setPrompt("请输入下级账号");
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var datas=[];
			datas.push(dataMgr.tabStatisticsAccountData);
			datas.push(dataMgr.tabTimeData);
			datas.push(dataMgr.tabChooseAccountData);
			this.commonLst1Component.updateTabsWidth([0.33,0.33,0.33]);
			this.commonLst1Component.setTabs([0,0,0,0],datas,["请选统计类型","请选择统计时间","请选择账号"]);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_INCOME,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		return GroupIncomePanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysMyBankCardPanelVo extends robotLegs.vo.BaseViewVo
	var SysMyBankCardPanelVo=(function(_super){
		function SysMyBankCardPanelVo(){
			SysMyBankCardPanelVo.__super.call(this);
		}

		__class(SysMyBankCardPanelVo,'modules.hall.v.systemcenter.SysMyBankCardPanelVo',_super);
		SysMyBankCardPanelVo.INIT_INFO="INIT_INFO";
		SysMyBankCardPanelVo.UPDATE_INFO="UPDATE_INFO";
		return SysMyBankCardPanelVo;
	})(BaseViewVo)


	//class modules.hall.v.groupcenter.GroupNewAccountManagePanel extends robotLegs.sprite.BaseUISprite
	var GroupNewAccountManagePanel=(function(_super){
		function GroupNewAccountManagePanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupNewAccountManagePanelVo=null;
			this.commonTopComponent=null;
			this.btnRadio0=null;
			this.btnRadio1=null;
			this.radioController=null;
			this.commonGrid3Component0=null;
			this.commonGrid3Component1=null;
			this.commonGrid6Component0=null;
			this.commonGrid6Component1=null;
			this.gList=null;
			this.btnGo=null;
			this.platformController=null;
			this.__index=0;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupNewAccountManagePanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupNewAccountManagePanel,'modules.hall.v.groupcenter.GroupNewAccountManagePanel',_super);
		var __proto=GroupNewAccountManagePanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("开户管理");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonGrid3Component0.setTitle("用户名：");
			this.commonGrid3Component0.setPrompt("由字母或数字组成的4-16个字符");
			this.commonGrid3Component0.setMaxLen(16);
			this.commonGrid3Component0.setNameWidth(400);
			this.commonGrid3Component0.setRestrict(GameUtil.Restrict_account);
			this.commonGrid3Component1.setTitle("用户昵称：");
			this.commonGrid3Component1.setPrompt("由2-6个字符");
			this.commonGrid3Component1.setMaxLen(6);
			this.commonGrid3Component1.setNameWidth(400);
			this.commonGrid3Component1.setRestrict(GameUtil.Restrict_zh+GameUtil.Restrict_account);
			this.commonGrid6Component0.setTitle("密码：");
			this.commonGrid6Component0.setPrompt("由字母和数字组成的8-16个字符");
			this.commonGrid6Component0.setMaxLen(16);
			this.commonGrid6Component0.setNameWidth(400);
			this.commonGrid6Component0.setRestrict(GameUtil.Restrict_account);
			this.commonGrid6Component1.setTitle("确认密码：");
			this.commonGrid6Component1.setPrompt("由字母和数字组成的8-16个字符");
			this.commonGrid6Component1.setMaxLen(16);
			this.commonGrid6Component1.setNameWidth(400);
			this.commonGrid6Component1.setRestrict(GameUtil.Restrict_account);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
			this.btnGo.onClick(this,this.onGoClick);
			this.registerStatusCallBack(GroupNewAccountManagePanelVo.UPDATE_BONES_RANG,new Handler(this,this.onUpdateBonesRang));
			this.registerStatusCallBack(GroupNewAccountManagePanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		// platformController.selectedPage=UITypeConfig.UI_TYPE;
		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.radioController.selectedIndex=0;
			var dataMgr=DataMgr.get();
			if(dataMgr.bonesRangData==null){
				this.sendNotification("GET_BONESRANG_DATA_Cmd",GameUtil.PANEL_GROUP_NEW_ACCOUNT_MANAGE);
				}else{
				this.onUpdateBonesRang();
			}
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_NEW_ACCOUNT_MANAGE,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateBonesRang=function(){
			var dataMgr=DataMgr.get();
			var bonesRangData=dataMgr.gameTypeConfigData;
			var numCount=bonesRangData.activeItemDic.keys.length;
			this.groupNewAccountManagePanelVo.initSelectIndex(numCount);
			this.__index=0;
			this.gList.numItems=numCount;
		}

		__proto.gListRenderer=function(index,gobj){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bonesRangData=dataMgr.bonesRangData;
			var id;
			var nName;
			while(true){
				id=bonesRangData.itemDic.keys[this.__index];
				if(!id)
					break ;
				this.__index++;
				var gameTypeItem=gameTypeConfigData.getActiveItem(id);
				if(!gameTypeItem){
					continue ;
				}
				nName=gameTypeItem.cn;
				break ;
			};
			var items=bonesRangData.itemDic.get(id);
			var curItemSelectIndex=this.groupNewAccountManagePanelVo.selectIndexArr[index];
			var nValue=items[ curItemSelectIndex].getShowText();
			var item=gobj;
			item.updateData(nName,nValue);
		}

		__proto.gListClick=function(item,evt){
			var index=this.gList.getChildIndex(item);
			var dataMgr=DataMgr.get();
			var bonesRangData=dataMgr.bonesRangData;
			var zoomPickerVo=dataMgr.zoomPickerVo;
			var id=bonesRangData.itemDic.keys[index];
			var items=bonesRangData.itemDic.get(id);
			var curItemSelectIndex=this.groupNewAccountManagePanelVo.selectIndexArr[index];
			var tempArr=[];
			var i=0;
			for (i=0;i < items.length;i++){
				tempArr.push(items[i].getShowText());
			}
			zoomPickerVo.title="选择资金范围";
			zoomPickerVo.dataArr=tempArr;
			zoomPickerVo.selectIndex=curItemSelectIndex;
			zoomPickerVo.handler=Handler.create(this,this.onSelectedTxtHandler,[index,item]);
			this.sendNotification("OPEN_PANEL_2_Cmd",GameUtil.PANEL_ZOOM_PICKER);
		}

		__proto.onSelectedTxtHandler=function(index,gobj){
			var dataMgr=DataMgr.get();
			var zoomPickerVo=dataMgr.zoomPickerVo;
			this.groupNewAccountManagePanelVo.selectIndexArr[index]=zoomPickerVo.selectIndex;
			this.__index=index;
			this.gListRenderer(index,gobj);
		}

		__proto.onGoClick=function(){
			var user_account=StringTool.trim(this.commonGrid3Component0.getName());
			var user_password=StringTool.trim(this.commonGrid6Component0.getName());
			var rep_user_password=StringTool.trim(this.commonGrid6Component1.getName());
			var user_nickname=StringTool.trim(this.commonGrid3Component1.getName());
			if(user_account==""){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填用户名");
				return;
			}
			if(user_account.length < GameUtil.ACCOUNT_LEN_MIN){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","用户名最低输入"+GameUtil.ACCOUNT_LEN_MIN+"个字符！");
				return;
			}
			if(user_password==""){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填密码");
				return;
			}
			if(user_password.length < GameUtil.PWD_LEN_MIN){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","密码最低输入"+GameUtil.PWD_LEN_MIN+"个字符！");
				return;
			}
			if(user_password !=rep_user_password){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","两次密码输入不一致");
				return;
			}
			if(user_nickname==""){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填昵称");
				return;
			}
			if(user_nickname.length < GameUtil.NICKNAME_MIN){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","昵称最低输入"+GameUtil.NICKNAME_MIN+"个汉字！");
				return;
			};
			var data=new Object();
			data.is_proxy=this.radioController.selectedIndex==0 ? "1" :"0";
			data.user_nickname=user_nickname;
			data.user_account=user_account;
			data.user_password=user_password;
			data.rep_user_password=rep_user_password;
			var dataMgr=DataMgr.get();
			var bonesRangData=dataMgr.bonesRangData;
			for (var i=0;i < this.groupNewAccountManagePanelVo.selectIndexArr.length;i++){
				var id=bonesRangData.itemDic.keys[i];
				var items=bonesRangData.itemDic.get(id);
				var curItemSelectIndex=this.groupNewAccountManagePanelVo.selectIndexArr[i];
				data[id]=items[curItemSelectIndex].value+"";
			}
			this.sendNotification("NEW_AGENT_Cmd",data);
		}

		__proto.onUpdateInfo=function(){
			this.sendNotification("SHOW_PROMPT_TEXT_Cmd","恭喜您开户成功！");
			this.commonGrid3Component0.setName("");
			this.commonGrid3Component1.setName("");
			this.commonGrid6Component0.setName("");
			this.commonGrid6Component1.setName("");
			this.onBackClick();
		}

		return GroupNewAccountManagePanel;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupStatisticalAnalysisPanel extends robotLegs.sprite.BaseUISprite
	var GroupStatisticalAnalysisPanel=(function(_super){
		function GroupStatisticalAnalysisPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupStatisticalAnalysisVo=null;
			this.commonTopComponent=null;
			this.groupStatisticalAnalysisScrollComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupStatisticalAnalysisPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupStatisticalAnalysisPanel,'modules.hall.v.groupcenter.GroupStatisticalAnalysisPanel',_super);
		var __proto=GroupStatisticalAnalysisPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("团队统计分析");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.groupStatisticalAnalysisScrollComponent.commonDateSearchComponent.initToday();
			this.groupStatisticalAnalysisScrollComponent.commonDateSearchComponent.btnSearch.onClick(this,this.onSearchClick);
			this.groupStatisticalAnalysisScrollComponent.hallTabComponent.tabBtnController.on("fui_state_changed",this,this.onTabStateChange);
			this.groupStatisticalAnalysisScrollComponent.hallTabComponent.setTabLabel("今日","昨日","最近七天");
			this.groupStatisticalAnalysisScrollComponent.hallTabComponent.toShow();
			this.groupStatisticalAnalysisScrollComponent.hallTabComponent.tabBtnController.setSelectedIndex(0);
			this.groupStatisticalAnalysisScrollComponent.commonTab1Component.tabBtnController.on("fui_state_changed",this,this.onCommonTab1StateChange);
			this.groupStatisticalAnalysisScrollComponent.commonTab1Component.setTabLabel("团队统计","用户统计");
			this.groupStatisticalAnalysisScrollComponent.commonTab1Component.tabBtnController.setSelectedIndex(0);
			this.groupStatisticalAnalysisScrollComponent.commonGridOneComponent.glist.itemRenderer=Handler.create(this,this.itemOfGridOneListRenderer,null,false);
			this.registerStatusCallBack(GroupStatisticalAnalysisVo.UPDATE_DATA,new Handler(this,this.onUpdateData));
			this.onCommonTab1StateChange();
			var chartGraph=this.groupStatisticalAnalysisScrollComponent.chartGraph;
			console.log("chartGraph:",chartGraph.x,this.groupStatisticalAnalysisScrollComponent.chartGraph.y,chartGraph.width,chartGraph.height,chartGraph.scaleX,chartGraph.scaleY);
			console.log("Browser 物理宽高:",Browser.width,Browser.height);
			console.log("浏览器窗口可视宽度：",Browser.clientWidth,Browser.clientHeight);
			console.log("设备像素比 pixelRatio:",Browser.pixelRatio);
			console.log("Laya.stage宽高:",Laya.stage.width,Laya.stage.height);
			console.log("GRoot.inst宽高:",GRoot.inst.width,GRoot.inst.height);
			var top=(chartGraph.y+this.commonTopComponent.view.height)/ GRoot.inst.height *Browser.clientHeight;
			var height=Math.floor(chartGraph.height / GRoot.inst.height *Browser.clientHeight);
			var data={
				type:'line',
				data:{
					labels:["start","05-08","05-14","05-16"],
					datasets:[{
						label:"团队充值",
						data:["0",0,0,0],
						backgroundColor:"rgba(233, 4, 4,0.4)",
						borderColor:"rgba(233, 4, 4,1)",
						pointBorderColor:"rgba(233, 4, 4,1)",
						pointHoverBackgroundColor:"rgba(233, 4, 4,1)"
						},{
						label:"团队提现",
						data:["0",0,0,0],
						backgroundColor:"rgba(233, 182, 4,0.4)",
						borderColor:"rgba(233, 182, 4,1)",
						pointBorderColor:"rgba(233, 182, 4,1)",
						pointHoverBackgroundColor:"rgba(233, 182, 4,1)"
						},{
						label:"团队促销",
						data:["0",2,0,0],
						backgroundColor:"rgba(209, 78, 174,0.4)",
						borderColor:"rgba(209, 78, 174,1)",
						pointBorderColor:"rgba(209, 78, 174,1)",
						pointHoverBackgroundColor:"rgba(209, 78, 174,1)"
						},{
						label:"团队佣金",
						data:["0",0,0,0],
						backgroundColor:"rgba(70, 99, 166,0.4)",
						borderColor:"rgba(70, 99, 166,1)",
						pointBorderColor:"rgba(70, 99, 166,1)",
						pointHoverBackgroundColor:"rgba(70, 99, 166,1)"
						},{
						label:"实际销量",
						data:["0",0,0.2,0.002],
						backgroundColor:"rgba(70, 166, 92,0.4)",
						borderColor:"rgba(70, 166, 92,1)",
						pointBorderColor:"rgba(70, 166, 92,1)",
						pointHoverBackgroundColor:"rgba(70, 166, 92,1)"
						},{
						label:"团队派奖",
						data:["0",0,0,0],
						backgroundColor:"rgba(25, 149, 236,0.4)",
						borderColor:"rgba(25, 149, 236,1)",
						pointBorderColor:"rgba(25, 149, 236,1)",
						pointHoverBackgroundColor:"rgba(25, 149, 236,1)"
						},{
						label:"返点",
						data:["0",0,0,0],
						backgroundColor:"rgba(236, 119, 25,0.4)",
						borderColor:"rgba(236, 119, 25,1)",
						pointBorderColor:"rgba(236, 119, 25,1)",
						pointHoverBackgroundColor:"rgba(236, 119, 25,1)"
						},{
						label:"自身返点",
						data:["0",0,0,0],
						backgroundColor:"rgba(70, 200, 25,0.4)",
						borderColor:"rgba(70, 200, 25,1)",
						pointBorderColor:"rgba(70, 200, 25,1)",
						pointHoverBackgroundColor:"rgba(70, 200, 25,1)"
						},{
						label:"团队盈亏",
						data:["0",2,-0.2,-0.002],
						backgroundColor:"rgba(70, 200, 25,0.4)",
						borderColor:"rgba(70, 200, 25,1)",
						pointBorderColor:"rgba(70, 200, 25,1)",
						pointHoverBackgroundColor:"rgba(70, 200, 25,1)"
					}]
				},
				options:{
					scales:{
						yAxes:[{
							ticks:{
								beginAtZero:true
							}
						}]
					}
				}
			};
			ChartUtil.initChart(0,top,Browser.clientWidth,height,data);
			this.groupStatisticalAnalysisScrollComponent.view.on("fui_scroll",this,this.onScroll);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			Laya.timer.once(GameUtil.Time_Panel_Ani,this,this.aniPlayComplete);
		}

		__proto.aniPlayComplete=function(){
			ChartUtil.showChart();
			this.onSearch();
		}

		__proto.onScroll=function(e){
			var posy=this.groupStatisticalAnalysisScrollComponent.view._container.y;
			var top=(this.groupStatisticalAnalysisScrollComponent.chartGraph.y+this.commonTopComponent.view.height+posy)/ GRoot.inst.height *Browser.clientHeight;
			ChartUtil.updatePos(0,top);
		}

		__proto.onSearchClick=function(){
			this.onSearch();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_STATISTICAL_ANALYSIS,GameUtil.PANEL_ANI_TO_RIGHT));
			ChartUtil.hideChart();
		}

		__proto.onTabStateChange=function(){
			var selectIindex=this.groupStatisticalAnalysisScrollComponent.hallTabComponent.tabBtnController.selectedIndex;
			var dataArr;
			if(selectIindex==0){
				dataArr=GameUtil.getSearchDate(0,1);
			}
			else if(selectIindex==1){
				dataArr=GameUtil.getSearchDate(-1,0);
			}
			else{
				dataArr=GameUtil.getSearchDate(-6,1);
			}
			this.groupStatisticalAnalysisScrollComponent.commonDateSearchComponent.setDate(dataArr[0],dataArr[1]);
		}

		__proto.onCommonTab1StateChange=function(){
			var selectIindex=this.groupStatisticalAnalysisScrollComponent.commonTab1Component.tabBtnController.selectedIndex;
			var count=0;
			switch(selectIindex){
				case 0:
					count=this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr.length;
					this.groupStatisticalAnalysisScrollComponent.commonGridOneComponent.view.height=Math.ceil(count/2)*GameUtil.CommonGridOneComponentHeight;
					this.groupStatisticalAnalysisScrollComponent.commonGridOneComponent.glist.numItems=count;
					break ;
				case 1:
					count=this.groupStatisticalAnalysisVo.groupUserAnalysisArr.length;
					this.groupStatisticalAnalysisScrollComponent.commonGridOneComponent.view.height=Math.ceil(count/2)*GameUtil.CommonGridOneComponentHeight;
					this.groupStatisticalAnalysisScrollComponent.commonGridOneComponent.glist.numItems=count;
					break ;
				}
		}

		__proto.itemOfGridOneListRenderer=function(index,gobj){
			var selectIindex=this.groupStatisticalAnalysisScrollComponent.commonTab1Component.tabBtnController.selectedIndex;
			var item=gobj;
			switch(selectIindex){
				case 0:
					this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[index].type=0;
					item.updateData(this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[index]);
					break ;
				case 1:
					this.groupStatisticalAnalysisVo.groupUserAnalysisArr[index].type=1;
					item.updateData(this.groupStatisticalAnalysisVo.groupUserAnalysisArr[index]);
					break ;
				}
		}

		__proto.onUpdateData=function(){
			var dd=this.groupStatisticalAnalysisVo.groupStatisticalAnalysisSearchData;
			this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[0].value=dd.range_commission;
			this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[1].value=dd.range_recharge;
			this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[2].value=dd.range_withdraw;
			this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[3].value=dd.total_balance;
			this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[4].value=dd.range_bet;
			this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[5].value=dd.range_reward;
			this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[6].value=dd.range_result;
			this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr[7].value=dd.range_income;
			this.groupStatisticalAnalysisVo.groupUserAnalysisArr[0].value=dd.total_member;
			this.groupStatisticalAnalysisVo.groupUserAnalysisArr[1].value=dd.total_online;
			this.groupStatisticalAnalysisVo.groupUserAnalysisArr[2].value=dd.range_register;
			this.groupStatisticalAnalysisVo.groupUserAnalysisArr[3].value=dd.today_login;
			this.groupStatisticalAnalysisVo.groupUserAnalysisArr[4].value=dd.balance_lt_10;
			this.groupStatisticalAnalysisVo.groupUserAnalysisArr[5].value=dd.balance_gt_10;
			this.groupStatisticalAnalysisVo.groupUserAnalysisArr[6].value=dd.days_offline_30;
			this.groupStatisticalAnalysisVo.groupUserAnalysisArr[7].value=dd.days_offline_60;
			var selectIindex=this.groupStatisticalAnalysisScrollComponent.commonTab1Component.tabBtnController.selectedIndex;
			switch(selectIindex){
				case 0:
					this.groupStatisticalAnalysisScrollComponent.commonGridOneComponent.glist.numItems=this.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr.length;
					break ;
				case 1:
					this.groupStatisticalAnalysisScrollComponent.commonGridOneComponent.glist.numItems=this.groupStatisticalAnalysisVo.groupUserAnalysisArr.length;
					break ;
				}
		}

		__proto.onSearch=function(){
			this.sendNotification("GET_GROUP_STATISTICAL_ANALYSISR_Cmd",this.groupStatisticalAnalysisScrollComponent.commonDateSearchComponent.getDate());
		}

		return GroupStatisticalAnalysisPanel;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupStatisticalAnalysisScrollComponent extends robotLegs.sprite.BaseUISprite
	var GroupStatisticalAnalysisScrollComponent=(function(_super){
		function GroupStatisticalAnalysisScrollComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonDateSearchComponent=null;
			this.hallTabComponent=null;
			this.commonTab1Component=null;
			this.commonGridOneComponent=null;
			this.chartGraph=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupStatisticalAnalysisScrollComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupStatisticalAnalysisScrollComponent,'modules.hall.v.groupcenter.GroupStatisticalAnalysisScrollComponent',_super);
		var __proto=GroupStatisticalAnalysisScrollComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return GroupStatisticalAnalysisScrollComponent;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetAccountPanelVo extends robotLegs.vo.BaseViewVo
	var SysSetAccountPanelVo=(function(_super){
		function SysSetAccountPanelVo(){
			SysSetAccountPanelVo.__super.call(this);
		}

		__class(SysSetAccountPanelVo,'modules.hall.v.systemcenter.SysSetAccountPanelVo',_super);
		SysSetAccountPanelVo.INIT_INFO="INIT_INFO";
		SysSetAccountPanelVo.UPDATE_INFO="UPDATE_INFO";
		return SysSetAccountPanelVo;
	})(BaseViewVo)


	//class modules.hall.v.groupcenter.GroupVipDetailPanel extends robotLegs.sprite.BaseUISprite
	var GroupVipDetailPanel=(function(_super){
		function GroupVipDetailPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupVipDetailPanelVo=null;
			this.commonTopComponent=null;
			this.txtName=null;
			this.txtNickName=null;
			this.txtGroupBalance=null;
			this.btnRecord=null;
			this.btntransferMoney=null;
			this.gList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupVipDetailPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupVipDetailPanel,'modules.hall.v.groupcenter.GroupVipDetailPanel',_super);
		var __proto=GroupVipDetailPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("会员详细");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.btnRecord.onClick(this,this.onRecordClick);
			this.btntransferMoney.onClick(this,this.transfer);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
			this.registerStatusCallBack(GroupVipDetailPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
			this.registerStatusCallBack(GroupVipDetailPanelVo.SET_AGENT_PERCENT_SUCCESS,new Handler(this,this.onSetSuccess));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			var groupVipVo=DataMgr.get().groupVipVo;
			this.txtName.text=groupVipVo.user_account;
			this.txtNickName.text=groupVipVo.user_nickname;
			this.txtGroupBalance.text=groupVipVo.user_team_balance;
			this.onSearch();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_VIP_DETAIL,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){
			this.gList.numItems=this.groupVipDetailPanelVo.bonesRangData.itemDic.keys.length;
			var groupVipVo=DataMgr.get().groupVipVo;
			this.txtGroupBalance.text=groupVipVo.user_team_balance;
		}

		__proto.onSearch=function(){
			var groupVipVo=DataMgr.get().groupVipVo;
			this.sendNotification("GET_BONESRANG_DATA1_Cmd",groupVipVo.id);
		}

		__proto.gListRenderer=function(index,gobj){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bonesRangData=this.groupVipDetailPanelVo.bonesRangData;
			var nName;
			var id=bonesRangData.itemDic.keys[index];
			if(id==99999){
				nName="日奖契约";
			}
			else{
				nName=gameTypeConfigData.getBaoBiaoItem(id).cn;
			};
			var items=bonesRangData.itemDic.get(id);
			var item=gobj;
			item.updateData(nName,items);
		}

		__proto.gListClick=function(item,evt){
			switch(evt.target["$owner"]){
				case item.btnSave:
					if(item.getSliderValue()==0)
						return;
					var index=this.gList.getChildIndex(item);
					var bonesRangData=this.groupVipDetailPanelVo.bonesRangData;
					var id=bonesRangData.itemDic.keys[index];
					var groupVipVo=DataMgr.get().groupVipVo;
					var data=new Object();
					var value=item.getTxtValue();
					if(value.length==0)
						return;
					if(id !=99999){
						data[id]=value;
						data.proxy_id=groupVipVo.id;
					}
					else{
						data["set_dailypay"]=value;
					}
					this.groupVipDetailPanelVo.curItemIndex=index;
					this.groupVipDetailPanelVo.curId=id;
					this.groupVipDetailPanelVo.listIndex=item.getSliderValue();
					this.sendNotification("SET_AGENT_PERCENT_Cmd",data);
					break ;
				}
		}

		__proto.onSetSuccess=function(){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bonesRangData=this.groupVipDetailPanelVo.bonesRangData;
			var items=bonesRangData.itemDic.get(this.groupVipDetailPanelVo.curId);
			items=items.slice(this.groupVipDetailPanelVo.listIndex);
			bonesRangData.itemDic.set(this.groupVipDetailPanelVo.curId,items);
			var nName;
			if(this.groupVipDetailPanelVo.curId==99999){
				nName="日奖契约";
			}
			else{
				nName=gameTypeConfigData.getItem(this.groupVipDetailPanelVo.curId).cn;
			};
			var item=this.gList.getChildAt(this.groupVipDetailPanelVo.curItemIndex);
			item.updateData(nName,items);
			this.sendNotification("SHOW_PROMPT_TEXT_Cmd","设置成功！");
		}

		__proto.onRecordClick=function(){
			var dataMgr=DataMgr.get();
			var groupVipVo=DataMgr.get().groupVipVo;
			dataMgr.userAccountOfLottery=groupVipVo.user_account;
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_BET_RECORD2,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP_VIP_DETAIL,GameUtil.PANEL_ANI_TO_LEFT));
		}

		/**
		*会员转账
		*
		*/
		__proto.transfer=function(){
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_ACCOUNT_TRANSFER_MONNEY,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP_VIP_DETAIL,GameUtil.PANEL_ANI_TO_LEFT));
		}

		return GroupVipDetailPanel;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupVipManagePanel extends robotLegs.sprite.BaseUISprite
	var GroupVipManagePanel=(function(_super){
		function GroupVipManagePanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupVipManagerPanelVo=null;
			this.commonTopComponent=null;
			this.commonGrid8Component=null;
			this.gList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupVipManagePanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupVipManagePanel,'modules.hall.v.groupcenter.GroupVipManagePanel',_super);
		var __proto=GroupVipManagePanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("会员管理");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonGrid8Component.setRestrict("\u4e00-\u9fa50-9a-zA-Z");
			this.commonGrid8Component.btnSearch.onClick(this,this.onSearchClick);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
			this.registerStatusCallBack(GroupVipManagerPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.commonGrid8Component.clear();
			this.onSearch();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_VIP_MANAGE,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){
			this.gList.numItems=this.groupVipManagerPanelVo.items.length;
		}

		__proto.onSearch=function(){
			var txt=this.commonGrid8Component.getText();
			this.sendNotification("GET_GROUP_VIP_Cmd",txt);
		}

		__proto.gListRenderer=function(index,gobj){
			var item=gobj;
			item.updateData(this.groupVipManagerPanelVo.items[index]);
		}

		__proto.gListClick=function(item,evt){
			var index=this.gList.getChildIndex(item);
			var data=this.groupVipManagerPanelVo.items[index];
			data.isDailyPay=this.groupVipManagerPanelVo.is_dailyPay;
			DataMgr.get().groupVipVo=data;
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP_VIP_DETAIL,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP_VIP_MANAGE,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSearchClick=function(){
			this.onSearch();
		}

		return GroupVipManagePanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetFavoritePanelVo extends robotLegs.vo.BaseViewVo
	var SysSetFavoritePanelVo=(function(_super){
		function SysSetFavoritePanelVo(){
			this.myFavoritesTempArr=null;
			this.sysSetFavoritePanelGameListVo=new SysSetFavoritePanelGameListVo();
			SysSetFavoritePanelVo.__super.call(this);
		}

		__class(SysSetFavoritePanelVo,'modules.hall.v.systemcenter.SysSetFavoritePanelVo',_super);
		SysSetFavoritePanelVo.INIT_INFO="INIT_INFO";
		SysSetFavoritePanelVo.UPDATE_INFO="UPDATE_INFO";
		SysSetFavoritePanelVo.DONE_SUCCESS="DONE_SUCCESS";
		SysSetFavoritePanelVo.UPDATE_FAVORITE_LIST_STATUS="UPDATE_FAVORITE_LIST_STATUS";
		return SysSetFavoritePanelVo;
	})(BaseViewVo)


	//class modules.hall.v.groupcenter.GroupWinLostPanel extends robotLegs.sprite.BaseUISprite
	var GroupWinLostPanel=(function(_super){
		function GroupWinLostPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.groupWinLostVo=null;
			this.commonTopComponent=null;
			this.groupWinLostScrollComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupWinLostPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupWinLostPanel,'modules.hall.v.groupcenter.GroupWinLostPanel',_super);
		var __proto=GroupWinLostPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("团队盈亏报表");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.sView.commonGrid2Component0.setTitle("产品类型");
			this.sView.commonGrid2Component1.setTitle("奖金");
			this.sView.commonGrid3Component.setTitle("会员账号");
			this.sView.commonGrid3Component.setPrompt("输入账号查询代理的下级代理");
			this.sView.commonGrid4Component.setTitle("略过无资料玩家");
			this.sView.commonGrid2Component0.onClick(this,this.onChooseClick,[0]);
			this.sView.commonGrid2Component1.onClick(this,this.onChooseClick,[1]);
			this.sView.commonGrid4Component.btnSwitch.onClick(this,this.onSwitchClick);
			this.sView.commonDateSearchComponent.btnSearch.onClick(this,this.onSearchClick);
			this.registerStatusCallBack(GroupWinLostVo.INIT_INFO,new Handler(this,this.onInitInfo));
			this.registerStatusCallBack(GroupWinLostVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
			this.registerStatusCallBack(GroupWinLostVo.UPDATE_BONES_RANG,new Handler(this,this.onUpdateBonesRang));
			this.sView.commonPageComponent.setAllTitleName(["用戶名","奖金","个人销量","个人实际销量","个人派奖","个人返点/返水","个人自身返点","个人促销","个人佣金","个人盈亏"]);
			this.sView.commonPageComponent.setAllTitleWidth([80,80,90,130,90,170,130,90,90,90],true);
			this.sView.commonPageComponent.setIsShowCurrentPageCount(false);
			this.sView.commonPageComponent.setIsShowAllPageCount(false);
			this.sView.commonPageComponent.initPageComponent();
			this.sView.commonPageComponent.setPageButtonHandler(new Handler(this,this.onSearchClick));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			var dataMgr=DataMgr.get();
			dataMgr.curGameType=0;
			dataMgr.curBonus=0;
			if(dataMgr.bonesRangData==null){
				this.sendNotification("GET_BONESRANG_DATA_Cmd",GameUtil.PANEL_GROUP_WIN_LOST);
				return;
			}
			this.onInitInfo();
			this.onSearch();
		}

		__proto.onSearchClick=function(){
			this.onSearch();
		}

		__proto.onSwitchClick=function(){}
		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_GROUP_WIN_LOST,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateChooseInfo=function(){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bonesRangData=dataMgr.bonesRangData;
			var tabName;
			tabName=dataMgr.curGameType==0 ? dataMgr.ALL_TXT :gameTypeConfigData.items[dataMgr.curGameType-1].cn;
			this.sView.commonGrid2Component0.setName(tabName);
			tabName=dataMgr.curBonus==0 ? dataMgr.ALL_TXT :bonesRangData.lotteryList[dataMgr.curBonus-1].display;
			this.sView.commonGrid2Component1.setName(tabName);
		}

		__proto.onInitInfo=function(){
			this.sView.commonDateSearchComponent.initToday();
			this.onUpdateChooseInfo();
		}

		__proto.onUpdateBonesRang=function(){
			this.onInitInfo();
			this.onSearch();
		}

		__proto.onUpdateInfo=function(){
			var data=this.groupWinLostVo.groupWinLostData
			console.log("GroupWinLostPanel onUpdateInfo :",data);
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bonesRangData=dataMgr.bonesRangData;
			var item;
			var contentValues=[];
			for (var i=0;i < data.items.length;i++){
				item=data.items[i];
				contentValues.push([
				item.user_account,item.user_percent,item.total_bet_balance,item.total_real_bet_balance,item.total_reward_balance,
				item.total_result_balance,item.total_result_self_balance,item.total_promotion_balance,item.total_commission_balance,item.income_balance]);
			}
			this.sView.commonPageComponent.setContentValues(contentValues,null,null);
			this.sView.commonPageComponent.setPageTabContent(parseInt(data.current),parseInt(data.pages));
		}

		__proto.onChooseClick=function(type){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bonesRangData=dataMgr.bonesRangData;
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var tempArr=[];
			var i=0;
			switch(type){
				case 0:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < gameTypeConfigData.items.length;i++){
						tempArr.push(gameTypeConfigData.items[i].cn);
					}
					commonTypeListVo.title="选择游戏种类";
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curGameType;
					break ;
				case 1:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < bonesRangData.lotteryList.length;i++){
						tempArr.push(dataMgr.bonesRangData.lotteryList[i].display);
					}
					commonTypeListVo.title="选择奖金";
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curBonus;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[type]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_GROUP_WIN_LOST,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			console.log("onSelectedCommonTypeHandler1");
			var dataMgr=DataMgr.get();
			var commonTypeListVo=DataMgr.get().commonTypeListVo;
			if(type==0){
				dataMgr.curGameType=commonTypeListVo.selectIndex;
				}else if(type==1){
				dataMgr.curBonus=commonTypeListVo.selectIndex;
			}
			this.onUpdateChooseInfo();
			this.onSearch();
		}

		__proto.onSearch=function(){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var bonesRangData=dataMgr.bonesRangData;
			var product_id=dataMgr.curGameType==0 ? null :gameTypeConfigData.items[dataMgr.curGameType-1].id;
			var account=StringTool.trim(this.sView.commonGrid3Component.getName());
			var bonusRang=dataMgr.curBonus==0 ? null :bonesRangData.lotteryList[dataMgr.curBonus-1].value;
			var isSelected=this.sView.commonGrid4Component.getSelected()? 0 :1;
			var dateArr=this.sView.commonDateSearchComponent.getDate();
			var current=this.sView.commonPageComponent.getCurrentPage();
			this.sendNotification("GET_GROUPWINLOST_DATA_Cmd",[product_id,account,bonusRang,isSelected,dateArr[0],dateArr[1],current]);
		}

		__getset(0,__proto,'sView',function(){
			return this.groupWinLostScrollComponent;
		});

		return GroupWinLostPanel;
	})(BaseUISprite)


	//class modules.hall.v.groupcenter.GroupWinLostScrollComponent extends robotLegs.sprite.BaseUISprite
	var GroupWinLostScrollComponent=(function(_super){
		function GroupWinLostScrollComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonGrid2Component0=null;
			this.commonGrid2Component1=null;
			this.commonGrid3Component=null;
			this.commonGrid4Component=null;
			this.commonDateSearchComponent=null;
			this.commonPageComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			GroupWinLostScrollComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(GroupWinLostScrollComponent,'modules.hall.v.groupcenter.GroupWinLostScrollComponent',_super);
		var __proto=GroupWinLostScrollComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return GroupWinLostScrollComponent;
	})(BaseUISprite)


	//class modules.hall.v.HallPanel extends robotLegs.sprite.BaseUISprite
	var HallPanel=(function(_super){
		function HallPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.hallVo=null;
			this.customerBtn=null;
			this.loginTabComponent=null;
			this.hallTopComponent=null;
			this.hallComponent=null;
			this.hallBottomComponent=null;
			this.minePanel=null;
			this.hallLotteryComponent=null;
			this.visibleController=null;
			this.__items=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallPanel,'modules.hall.v.HallPanel',_super);
		var __proto=HallPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.sView.gameList.numItems=0;
			this.hallBottomComponent.btnGame.onClick(this,this.onBottomBtnClick,[0]);
			this.hallBottomComponent.btnLive.onClick(this,this.onBottomBtnClick,[1]);
			this.hallBottomComponent.btnActive.onClick(this,this.onBottomBtnClick,[3]);
			this.hallBottomComponent.btnManage.onClick(this,this.onBottomBtnClick,[4]);
			this.hallBottomComponent.btnLiving.onClick(this,this.onBottomBtnClick,[5]);
			this.hallBottomComponent.btnWeiTou.onClick(this,this.onBottomBtnClick,[6]);
			this.hallComponent.lastTimePlayGameComponent.keFuBtn.onClick(this,this.openCustomer);
			this.sView.btnGoSet.onClick(this,this.onGoSetClick);
			this.sView.gameList.itemRenderer=Handler.create(this,this.itemOfListRenderer,null,false);
			this.sView.gameList.on("fui_click_item",this,this.itemOfListClick);
			this.registerStatusCallBack(HallVo.OPEN_POKERGAME,new Handler(this,this.onOpenPokerGame));
			this.registerStatusCallBack(HallVo.Update_MyFavorite,new Handler(this,this.onUpdateMyFavorite));
			this.registerStatusCallBack(HallVo.Update_HallLottery,new Handler(this,this.onUpdateHallLottery));
			this.registerStatusCallBack(HallVo.LOGIN_SUCCESS,new Handler(this,this.onLoginSuccess));
			this.registerStatusCallBack(HallVo.GOT_BANNER,new Handler(this,this.gotBanner));
			this.registerStatusCallBack(HallVo.UPDATE_OTHER_GAME_STATUS,new Handler(this,this.updateOtherGameInfo));
			var hideLoadingHandle=new Handler(this,this.hideLoadingFunc);
			initHideLoadingHandle(hideLoadingHandle);
		}

		__proto.hideLoadingFunc=function(){
			this.hideLoading();
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			if(this.hallBottomComponent.btnController.selectedIndex==0){
				this.updateOtherGameInfo();
				this.onLoginSuccess();
			}
		}

		__proto.onBtnTabClick=function(type){
			var isMain=type==GameUtil.Page_Hot;
			this.hallBottomComponent.visible=isMain;
			this.hallBottomComponent.view.y=isMain ? GRoot.inst.height-this.hallBottomComponent.view.height :GRoot.inst.height;
			this.sendNotification("Page_Change_Cmd",type);
		}

		__proto.onLoginSuccess=function(){
			var loginState=DataMgr.get().loginState();
			if(loginState > DataMgr.LoginState_NoLogin){
				this.loginTabComponent.visible=false;
			}
			else{
				this.loginTabComponent.visible=true;
			}
			this.sendNotification("GET_MY_FAVORITE_Cmd");
			if(loginState==DataMgr.LoginState_NoLogin && this.hallBottomComponent.btnController.selectedIndex !=0)
				this.hallBottomComponent.btnGame.displayObject.event("click");
			this.sView.loginController.selectedIndex=loginState > DataMgr.LoginState_NoLogin ? 1 :0;
			this.hallLotteryComponent.updateLoginSuccess();
		}

		/**
		*更新第三方游戏数据
		*
		*/
		__proto.updateOtherGameInfo=function(){
			var gameTypeConfigData=DataMgr.get().gameTypeConfigData;
			this.__items=gameTypeConfigData.mobileItems.concat();
			for(var i=0;i < this.__items.length;i++){
				if(this.__items[i].id==1){
					this.__items.splice(i,1);
					break ;
				}
			}
		}

		__proto.onBottomBtnClick=function(type,evt){
			if(type !=0 && DataMgr.get().loginState()< DataMgr.LoginState_TryPlay){
				this.hallBottomComponent.btnController.setSelectedIndex(0);
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请先登陆！");
				return;
			}
			if(type==2 && DataMgr.get().loginState()< DataMgr.LoginState_Account){
				this.hallBottomComponent.btnController.setSelectedIndex(0);
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","试玩玩家没有对应的权限！");
				return;
			}
			if(type==3 && DataMgr.get().loginState()< DataMgr.LoginState_Account){
				this.hallBottomComponent.btnController.setSelectedIndex(0);
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","试玩玩家无法进行活动！");
				return;
			}
			switch(type){
				case 0:
					if(this.visibleController.selectedIndex !=0)
						this.visibleController.selectedIndex=0;
					break ;
				case 1:
					this.visibleController.selectedIndex=1;
					var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
					if(favoriteLotteryData==null){
						this.sendNotification("GET_LOTTERY_LIST_Cmd",GameUtil.PANEL_HALL);
						return;
					}
					this.onUpdateHallLottery();
					break ;
				case 2:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 3:
					this.sendNotification("Init_Hall_Event_Cmd")
					break ;
				case 4:
					this.visibleController.selectedIndex=2;
					this.sendNotification("GET_GAME_MONEY_Cmd",GameUtil.PANEL_HALL);
					break ;
				case 5:
					this.openLv();
					break ;
				case 6:
					this.showAlert("暂未开放");
					break ;
				}
		}

		/**
		*直播，直接跳到lv
		*
		*/
		__proto.openLv=function(){
			var itemIndex=0;
			for(var i=0;i < this.__items.length;i++){
				if(this.__items[i].cn.toLowerCase()=="lv"){
					itemIndex=i;
					break ;
				}
			};
			var gameTypeItem=this.__items[itemIndex];
			if(!gameTypeItem){
				this.showAlert("暂未开放");
				return;
			};
			var platformName=gameTypeItem.en.toLocaleUpperCase();
			this.sendNotification("GET_PLATFORM_ADDRESS_Cmd",platformName);
		}

		__proto.gGuanggaoListRenderer=function(index,obj){}
		// item.updateData("");
		__proto.gGuanggaoListClick=function(obj,evt){
			this.onBottomBtnClick(3);
		}

		__proto.onUpdateMyFavorite=function(){
			var count=DataMgr.get().myFavorites.length;
			this.sView.gameList.numItems=count;
			var hang=Math.floor(count / this.sView.gameList.columnCount)+1;
			if(count % this.sView.gameList.columnCount==0){
				hang--;
			}
			this.sView.gameList.height=this.sView.gameList.getChildAt(0).height *hang+
			this.sView.gameList.lineGap *(hang-1);
		}

		__proto.itemOfListRenderer=function(index,obj){
			var itemHot=obj;
			var myFavorites=DataMgr.get().myFavorites;
			itemHot.updateData(myFavorites[index]);
		}

		__proto.itemOfListClick=function(obj,evt){
			console.log("itemOfListClick item:",obj);
			if(DataMgr.get().loginState()< DataMgr.LoginState_TryPlay){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请先登陆！");
				return;
			};
			var item=obj;
			this.sendNotification("INTO_GAME_Cmd",item.gid);
		}

		__proto.onOpenPokerGame=function(){
			var top=70;
			changeDirectionBol=false;
			if(this.hallVo.otherGameName=="EBET"){
				top=0;
				changeDirectionBol=true;
			};
			var rect=new Rectangle(0,top,GRoot.inst.width,GRoot.inst.height);
			this.sendNotification("Open_Iframe_Cmd",[this.hallVo.gameUrl,new Handler(this,this.onClosePokerGame),rect]);
		}

		__proto.onClosePokerGame=function(){
			console.log("onClosePokerGame this:",this);
			this.sendNotification("Close_Iframe_Cmd");
		}

		__proto.onGoSetClick=function(){
			if(DataMgr.get().loginState()< DataMgr.LoginState_TryPlay){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请先登陆！");
				return;
			}
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_SET_FAVORITE,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onIntoLastGameClick=function(){
			if(DataMgr.get().loginState()< DataMgr.LoginState_TryPlay){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请先登陆！");
				return;
			};
			var lastGameId=DataMgr.get().lastPlayGameId;
			this.sendNotification("INTO_GAME_Cmd",lastGameId);
		}

		__proto.onUpdateHallLottery=function(){
			this.hallLotteryComponent.updateData();
		}

		/**
		*获取到Banner
		*
		*/
		__proto.gotBanner=function(){
			this.hallComponent.gotBanner(this.hallVo.bannerUrlArr)
		}

		/**
		*打开客户中心
		*
		*/
		__proto.openCustomer=function(){
			if(!this.hallVo.customerUrl){
				this.showTip("请稍等，正在读取配置数据！");
				return;
			}
			this.sendNotification("Open_Iframe_Cmd",[this.hallVo.customerUrl,new Handler(this,this.onClosePokerGame)]);
		}

		__proto.clearMemory=function(){
			removeHideLoadingHandle();
			_super.prototype.clearMemory.call(this);
		}

		__getset(0,__proto,'sView',function(){
			return this.hallComponent;
		});

		return HallPanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetPanelVo extends robotLegs.vo.BaseViewVo
	var SysSetPanelVo=(function(_super){
		function SysSetPanelVo(){
			SysSetPanelVo.__super.call(this);
		}

		__class(SysSetPanelVo,'modules.hall.v.systemcenter.SysSetPanelVo',_super);
		SysSetPanelVo.INIT_INFO="INIT_INFO";
		SysSetPanelVo.UPDATE_INFO="UPDATE_INFO";
		SysSetPanelVo.LOGIN_OUT_SUCC="LOGIN_OUT_SUCC";
		return SysSetPanelVo;
	})(BaseViewVo)


	//class modules.hall.v.main.HallComponent extends robotLegs.sprite.BaseUISprite
	var HallComponent=(function(_super){
		function HallComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.bannerList=null;
			this.hallBottomComponent=null;
			this.hallBoardcastComponent=null;
			this.lastTimePlayGameComponent=null;
			this.btnGoSet=null;
			this.gameList=null;
			this.loginController=null;
			this.otherWebSite=null;
			this.__bannerUrlArr=null;
			this.__initX=NaN;
			this.__index=1;
			this.__movePos=NaN;
			this.__initWidth=NaN;
			this.__initHeight=NaN;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallComponent,'modules.hall.v.main.HallComponent',_super);
		var __proto=HallComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.gotBanner=function(_bannerUrlArr){
			this.__bannerUrlArr=_bannerUrlArr;
			this.bannerList.setVirtualAndLoop();
			this.bannerList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
			this.bannerList.numItems=1000 *_bannerUrlArr.length;
			this.bannerList.selectedIndex=_bannerUrlArr.length *100;
			this.bannerList.on("mousedown",this,this.mouseDown);
			this.bannerList.on("mouseup",this,this.mouseUp);
			this.mathCenter();
			this.bannerList.scrollPane.posX=this.__movePos;
			this.startTime(5000,new Handler(this,this.startMoveBanner));
		}

		/**
		*鼠标放下
		*
		*/
		__proto.mouseDown=function(){
			this.stopTime();
			this.__initX=Laya.stage.mouseX;
		}

		/**
		*鼠标抬起
		*
		*/
		__proto.mouseUp=function(){
			if(Laya.stage.mouseX==this.__initX){
				if(this.bannerList.displayObject.mouseX > this.bannerList.viewWidth / 2){
					this.__index++;
				}
				else{
					this.__index--;
				}
			}
			else if(Laya.stage.mouseX > this.__initX){
				this.__index--;
			}
			else{
				this.__index++;
			}
			if(this.__index <=1)
				this.__index=1;
			this.mathCenter();
			Tween.to(this.bannerList.scrollPane,{"posX":this.__movePos},500);
			this.startTime(5000,new Handler(this,this.startMoveBanner));
		}

		/**
		*计算中心点
		*
		*/
		__proto.mathCenter=function(){
			var distance=150;
			var itemWidth=this.bannerList.getChildAt(0).width;
			this.__movePos=this.bannerList.viewWidth *this.__index;
		}

		/**
		*开始移动Banner
		*
		*/
		__proto.startMoveBanner=function(){
			this.bannerList.touchable=false;
			this.__index++;
			this.mathCenter();
			Tween.to(this.bannerList.scrollPane,{"posX":this.__movePos},500,null,Handler.create(this,this.completeMove));
		}

		/**
		*移动完毕
		*
		*/
		__proto.completeMove=function(){
			this.bannerList.touchable=true;
		}

		__proto.doSpecialEffect=function(){
			var midX=this.bannerList.scrollPane.posX+this.bannerList.viewWidth / 2;
			var cnt=this.bannerList.numChildren;
			for (var i=0;i < cnt;i++){
				var obj=this.bannerList.getChildAt(i);
				var dist=Math.abs(midX-obj.x-obj.width / 2);
				if (dist > obj.width){
					obj.setScale(1,1);
				}
				else{
					var ss=1+(1-dist / obj.width)*1;
					ss=ss > 2 ? 2 :ss;
					obj.setScale(ss,ss);
				}
			}
		}

		__proto.renderListItem=function(index,obj){
			var item=obj;
			item.width=this.bannerList.viewWidth;
			(item.getChild("imgLoader")).url=this.__bannerUrlArr[index % this.__bannerUrlArr.length];
		}

		return HallComponent;
	})(BaseUISprite)


	//class modules.hall.v.main.HallLotteryComponent extends robotLegs.sprite.BaseUISprite
	var HallLotteryComponent=(function(_super){
		function HallLotteryComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.loginTabComponent=null;
			this.gList=null;
			this.loginController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			HallLotteryComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(HallLotteryComponent,'modules.hall.v.main.HallLotteryComponent',_super);
		var __proto=HallLotteryComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
		}

		__proto.updateData=function(){
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			if(favoriteLotteryData==null)return;
			this.gList.numItems=favoriteLotteryData.itemDic.keys.length;
		}

		__proto.updateLoginSuccess=function(){
			var loginState=DataMgr.get().loginState();
			this.loginController.selectedIndex=loginState > DataMgr.LoginState_NoLogin ? 1 :0;
			this.gList.height=this.view.height-this.gList.y;
		}

		__proto.gListRenderer=function(index,obj){
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			var id=favoriteLotteryData.itemDic.keys[index];
			var favoriteLotteryItem=favoriteLotteryData.itemDic.get(id);
			var item=obj;
			item.updateData(id,favoriteLotteryItem,index);
		}

		__proto.gListClick=function(obj,evt){
			var item=obj;
			item.showHideHandler();
			this.gList.addSelection(item._index,true);
		}

		return HallLotteryComponent;
	})(BaseUISprite)


	//class modules.hall.v.main.LastTimePlayGameComponent extends robotLegs.sprite.BaseUISprite
	var LastTimePlayGameComponent=(function(_super){
		function LastTimePlayGameComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btn1=null;
			this.chongZhiBtn=null;
			this.tiXianBtn=null;
			this.huoDongBtn=null;
			this.keFuBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			LastTimePlayGameComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(LastTimePlayGameComponent,'modules.hall.v.main.LastTimePlayGameComponent',_super);
		var __proto=LastTimePlayGameComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.chongZhiBtn.onClick(this,this.chongZhi);
			this.tiXianBtn.onClick(this,this.tiXian);
			this.huoDongBtn.onClick(this,this.huoDong);
		}

		/**
		*充值
		*
		*/
		__proto.chongZhi=function(){
			if(DataMgr.get().loginState()< DataMgr.LoginState_TryPlay){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请先登陆！");
				return;
			}
			if(DataMgr.get().loginState()< DataMgr.LoginState_Account){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","试玩玩家没有对应的权限！");
				return;
			}
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
		}

		/**
		*提现
		*
		*/
		__proto.tiXian=function(){
			if(DataMgr.get().loginState()< DataMgr.LoginState_TryPlay){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请先登陆！");
				return;
			}
			if(DataMgr.get().loginState()< DataMgr.LoginState_Account){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","试玩玩家没有对应的权限！");
				return;
			}
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_DRAW_MONEY_CENTER,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
		}

		/**
		*活动
		*
		*/
		__proto.huoDong=function(){
			if(DataMgr.get().loginState()< DataMgr.LoginState_TryPlay){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请先登陆！");
				return;
			}
			if(DataMgr.get().loginState()< DataMgr.LoginState_Account){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","试玩玩家没有对应的权限！");
				return;
			}
			this.sendNotification("Init_Hall_Event_Cmd");
		}

		return LastTimePlayGameComponent;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetVoicePanelVo extends robotLegs.vo.BaseViewVo
	var SysSetVoicePanelVo=(function(_super){
		function SysSetVoicePanelVo(){
			this.closeVoice=null;
			SysSetVoicePanelVo.__super.call(this);
		}

		__class(SysSetVoicePanelVo,'modules.hall.v.systemcenter.SysSetVoicePanelVo',_super);
		return SysSetVoicePanelVo;
	})(BaseViewVo)


	//class modules.hall.v.main.LoginTabComponent extends robotLegs.sprite.BaseUISprite
	var LoginTabComponent=(function(_super){
		function LoginTabComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btn1=null;
			this.btn3=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			LoginTabComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(LoginTabComponent,'modules.hall.v.main.LoginTabComponent',_super);
		var __proto=LoginTabComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.btn1.onClick(this,this.openLoginWindow);
			this.btn3.onClick(this,this.testAccount);
		}

		/**
		*打开登录窗口
		*
		*/
		__proto.openLoginWindow=function(){
			this.sendNotification("Open_Login_Window_Cmd");
		}

		/**
		*打开注册窗口
		*
		*/
		__proto.openRegisteredWindow=function(){
			this.sendNotification("Open_Register_Window_Cmd");
		}

		/**
		*添加测试账号
		*
		*/
		__proto.testAccount=function(){
			this.sendNotification("Registered_Test_Account_Cmd");
		}

		return LoginTabComponent;
	})(BaseUISprite)


	//class modules.hall.v.main.otherWebsite.OtherWebSite extends robotLegs.sprite.BaseUISprite
	var OtherWebSite=(function(_super){
		function OtherWebSite(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.otherWebSiteVo=null;
			this.comp$otherWebSiteOneType$0=null;
			this.comp$otherWebSiteOneType$1=null;
			this.comp$otherWebSiteOneType$2=null;
			this.comp$otherWebSiteOneType$3=null;
			this.comp$otherWebSiteOneType$4=null;
			this.comp$otherWebSiteOneType$5=null;
			this.comp$otherWebSiteOneType$6=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			OtherWebSite.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(OtherWebSite,'modules.hall.v.main.otherWebsite.OtherWebSite',_super);
		var __proto=OtherWebSite.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.comp$otherWebSiteOneType$0.bindViewVo(this.otherWebSiteVo.zhenRenCpTypeVo);
			this.comp$otherWebSiteOneType$1.bindViewVo(this.otherWebSiteVo.zhenRenSxTypeVo);
			this.comp$otherWebSiteOneType$2.bindViewVo(this.otherWebSiteVo.qpTypeVo);
			this.comp$otherWebSiteOneType$3.bindViewVo(this.otherWebSiteVo.dianZiYyTypeVo);
			this.comp$otherWebSiteOneType$4.bindViewVo(this.otherWebSiteVo.tiYuTypeVo);
			this.comp$otherWebSiteOneType$5.bindViewVo(this.otherWebSiteVo.dianZiJjTypeVo);
			this.comp$otherWebSiteOneType$6.bindViewVo(this.otherWebSiteVo.reMenTypeVo);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Other_Website_Status",new Handler(this,this.mathMobileItemsType));
		}

		/**
		*解析类型
		*
		*/
		__proto.mathMobileItemsType=function(){
			var gameTypeConfigData=DataMgr.get().gameTypeConfigData;
			gameTypeConfigData.mobileItems.concat();
			this.otherWebSiteVo.zhenRenCpTypeVo.gameTypeItemArr.length=0;
			this.otherWebSiteVo.zhenRenSxTypeVo.gameTypeItemArr.length=0;
			this.otherWebSiteVo.qpTypeVo.gameTypeItemArr.length=0;
			this.otherWebSiteVo.dianZiYyTypeVo.gameTypeItemArr.length=0;
			this.otherWebSiteVo.tiYuTypeVo.gameTypeItemArr.length=0;
			this.otherWebSiteVo.dianZiJjTypeVo.gameTypeItemArr.length=0;
			this.otherWebSiteVo.reMenTypeVo.gameTypeItemArr.length=0;
			for(var i=0;i < gameTypeConfigData.mobileItems.length;i++){
				if(this.otherWebSiteVo.dianZiJjIdArr.indexOf(Number(gameTypeConfigData.mobileItems[i].id))>-1){
					this.otherWebSiteVo.dianZiJjTypeVo.gameTypeItemArr.push(gameTypeConfigData.mobileItems[i]);
				}
				if(this.otherWebSiteVo.tiYuIdArr.indexOf(Number(gameTypeConfigData.mobileItems[i].id))>-1){
					this.otherWebSiteVo.tiYuTypeVo.gameTypeItemArr.push(gameTypeConfigData.mobileItems[i]);
				}
				if(this.otherWebSiteVo.dianZiYyIdArr.indexOf(Number(gameTypeConfigData.mobileItems[i].id))>-1){
					this.otherWebSiteVo.dianZiYyTypeVo.gameTypeItemArr.push(gameTypeConfigData.mobileItems[i]);
				}
				if(this.otherWebSiteVo.qpIdArr.indexOf(Number(gameTypeConfigData.mobileItems[i].id))>-1){
					this.otherWebSiteVo.qpTypeVo.gameTypeItemArr.push(gameTypeConfigData.mobileItems[i]);
				}
				if(this.otherWebSiteVo.zhenRenSxIdArr.indexOf(Number(gameTypeConfigData.mobileItems[i].id))>-1){
					this.otherWebSiteVo.zhenRenSxTypeVo.gameTypeItemArr.push(gameTypeConfigData.mobileItems[i]);
				}
				if(this.otherWebSiteVo.zhenRenCpIdArr.indexOf(Number(gameTypeConfigData.mobileItems[i].id))>-1){
					gameTypeConfigData.mobileItems[i].fullBol=true;
					this.otherWebSiteVo.zhenRenCpTypeVo.gameTypeItemArr.push(gameTypeConfigData.mobileItems[i]);
				}
				if(this.otherWebSiteVo.reMenIdArr.indexOf(Number(gameTypeConfigData.mobileItems[i].id))>-1){
					gameTypeConfigData.mobileItems[i].fullBol=true;
					this.otherWebSiteVo.reMenTypeVo.gameTypeItemArr.push(gameTypeConfigData.mobileItems[i]);
				}
			}
			if(this.check("bbin2",this.otherWebSiteVo.zhenRenSxTypeVo.gameTypeItemArr)){
				var gameTypeItem1=new GameTypeItem();
				gameTypeItem1.id=-1;
				gameTypeItem1.cn="bbin2";
				this.otherWebSiteVo.zhenRenSxTypeVo.gameTypeItemArr.push(gameTypeItem1);
			}
			if(this.check("YuLeba",this.otherWebSiteVo.dianZiYyTypeVo.gameTypeItemArr)){
				var gameTypeItem2=new GameTypeItem();
				gameTypeItem2.id=-1;
				gameTypeItem2.cn="YuLeba";
				this.otherWebSiteVo.dianZiYyTypeVo.gameTypeItemArr.push(gameTypeItem2);
			}
			if(this.check("BBIN",this.otherWebSiteVo.tiYuTypeVo.gameTypeItemArr)){
				var gameTypeItem3=new GameTypeItem();
				gameTypeItem3.id=-1;
				gameTypeItem3.cn="BBIN";
				this.otherWebSiteVo.tiYuTypeVo.gameTypeItemArr.push(gameTypeItem3);
			}
			if(this.check("WM体育",this.otherWebSiteVo.tiYuTypeVo.gameTypeItemArr)){
				var gameTypeItem4=new GameTypeItem();
				gameTypeItem4.id=-1;
				gameTypeItem4.cn="WM体育";
				this.otherWebSiteVo.tiYuTypeVo.gameTypeItemArr.push(gameTypeItem4);
			}
			if(this.check("AVIA",this.otherWebSiteVo.dianZiJjTypeVo.gameTypeItemArr)){
				var gameTypeItem5=new GameTypeItem();
				gameTypeItem5.id=-1;
				gameTypeItem5.cn="AVIA";
				this.otherWebSiteVo.dianZiJjTypeVo.gameTypeItemArr.push(gameTypeItem5);
			}
			if(this.check("active",this.otherWebSiteVo.reMenTypeVo.gameTypeItemArr)){
				var gameTypeItem6=new GameTypeItem();
				gameTypeItem6.id=-1;
				gameTypeItem6.cn="active";
				this.otherWebSiteVo.reMenTypeVo.gameTypeItemArr.push(gameTypeItem6);
			}
			if(this.check("GG棋牌",this.otherWebSiteVo.qpTypeVo.gameTypeItemArr)){
				var gameTypeItem7=new GameTypeItem();
				gameTypeItem7.id=-1;
				gameTypeItem7.cn="GG棋牌";
				this.otherWebSiteVo.qpTypeVo.gameTypeItemArr.push(gameTypeItem7);
			}
			if(this.check("棋乐游",this.otherWebSiteVo.qpTypeVo.gameTypeItemArr)){
				var gameTypeItem8=new GameTypeItem();
				gameTypeItem8.id=-1;
				gameTypeItem8.cn="棋乐游";
				this.otherWebSiteVo.qpTypeVo.gameTypeItemArr.push(gameTypeItem8);
			}
			if(this.check("开元棋牌",this.otherWebSiteVo.qpTypeVo.gameTypeItemArr)){
				var gameTypeItem9=new GameTypeItem();
				gameTypeItem9.id=-1;
				gameTypeItem9.cn="开元棋牌";
				this.otherWebSiteVo.qpTypeVo.gameTypeItemArr.push(gameTypeItem9);
			}
			this.comp$otherWebSiteOneType$0.updateList();
			this.comp$otherWebSiteOneType$1.updateList();
			this.comp$otherWebSiteOneType$2.updateList();
			this.comp$otherWebSiteOneType$3.updateList();
			this.comp$otherWebSiteOneType$4.updateList();
			this.comp$otherWebSiteOneType$5.updateList();
			this.comp$otherWebSiteOneType$6.updateList();
		}

		__proto.check=function(_name,_gameTypeItemArr){
			var checkBol=true;
			for(var i=0;i < _gameTypeItemArr.length;i++){
				if(_gameTypeItemArr[i].cn==_name){
					checkBol=false;
				}
			}
			return checkBol;
		}

		return OtherWebSite;
	})(BaseUISprite)


	//class modules.loading.m.LoadingVo extends robotLegs.vo.BaseViewVo
	var LoadingVo=(function(_super){
		function LoadingVo(){
			this.progress=0;
			LoadingVo.__super.call(this);
		}

		__class(LoadingVo,'modules.loading.m.LoadingVo',_super);
		LoadingVo.UPDATE_PROGRESS_STATUS="Update_Progress_Status";
		return LoadingVo;
	})(BaseViewVo)


	//class modules.hall.v.main.otherWebsite.OtherWebSiteOneType extends robotLegs.sprite.BaseUISprite
	var OtherWebSiteOneType=(function(_super){
		function OtherWebSiteOneType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.otherWebSiteOneTypeVo=null;
			this.itemList=null;
			this.haveNotController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			OtherWebSiteOneType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(OtherWebSiteOneType,'modules.hall.v.main.otherWebsite.OtherWebSiteOneType',_super);
		var __proto=OtherWebSiteOneType.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.itemList.itemRenderer=Handler.create(this,this.renderListItem,null,false);
		}

		/**
		*更新表单
		*
		*/
		__proto.updateList=function(){
			this.itemList.numItems=this.otherWebSiteOneTypeVo.gameTypeItemArr.length;
			if(this.otherWebSiteOneTypeVo.gameTypeItemArr.length==0){
				this.haveNotController.selectedIndex=1;
			}
			else{
				this.haveNotController.selectedIndex=0;
				var hang=Math.floor(this.otherWebSiteOneTypeVo.gameTypeItemArr.length / this.itemList.columnCount)+1;
				if(this.otherWebSiteOneTypeVo.gameTypeItemArr.length % this.itemList.columnCount==0){
					hang--;
				}
				this.itemList.height=this.itemList.getChildAt(0).height *hang+
				this.itemList.lineGap *(hang-1);
			}
		}

		/**
		*渲染
		*@param index
		*@param obj
		*
		*/
		__proto.renderListItem=function(index,obj){
			if(this.otherWebSiteOneTypeVo.gameTypeItemArr[index].fullBol)
				obj.width=this.itemList.width;
			(obj).update(this.otherWebSiteOneTypeVo.gameTypeItemArr[index]);
		}

		return OtherWebSiteOneType;
	})(BaseUISprite)


	//class modules.hall.v.main.UpdateWindows extends robotLegs.sprite.BaseUISprite
	var UpdateWindows=(function(_super){
		function UpdateWindows(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.updateWindowsVo=null;
			this.newsLabel=null;
			this.closeBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			UpdateWindows.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(UpdateWindows,'modules.hall.v.main.UpdateWindows',_super);
		var __proto=UpdateWindows.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			while(this.updateWindowsVo.info.indexOf("<br>")>-1){
				this.updateWindowsVo.info=this.updateWindowsVo.info.replace("<br>","\r\n");
			}
			this.newsLabel.text=this.updateWindowsVo.info;
			this.closeBtn.onClick(this,this.closeWindow);
		}

		__proto.closeWindow=function(){
			this.updateWindowsVo.status="Remove_Status";
		}

		return UpdateWindows;
	})(BaseUISprite)


	//class modules.loading.m.OpenAppPageVo extends robotLegs.vo.BaseViewVo
	var OpenAppPageVo=(function(_super){
		function OpenAppPageVo(){
			OpenAppPageVo.__super.call(this);
		}

		__class(OpenAppPageVo,'modules.loading.m.OpenAppPageVo',_super);
		return OpenAppPageVo;
	})(BaseViewVo)


	//class modules.hall.v.minecenter.McAccountChangeDetailPanel extends robotLegs.sprite.BaseUISprite
	var McAccountChangeDetailPanel=(function(_super){
		function McAccountChangeDetailPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcAccountChangeDetailVo=null;
			this.commonTopComponent=null;
			this.mcAccountChangeDetailScrollComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McAccountChangeDetailPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McAccountChangeDetailPanel,'modules.hall.v.minecenter.McAccountChangeDetailPanel',_super);
		var __proto=McAccountChangeDetailPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("个人帐变明细");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.sView.commonDateSearchComponent.btnSearch.onClick(this,this.onSearchClick);
			this.sView.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.sView.commonGrid2Component1.onClick(this,this.chooseTypeListClick,[1]);
			this.sView.commonGrid2Component0.setTitle("产品类型");
			this.sView.commonGrid2Component1.setTitle("账变类型");
			this.registerStatusCallBack(McAccountChangeDetailVo.INIT_INFO,new Handler(this,this.onInitInfo));
			this.registerStatusCallBack(McAccountChangeDetailVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
			this.sView.commonPageComponent.setAllTitleName(["产品类型","账变编号","账变类型","账变时间","账变加款","账变扣款","账变前金额","账变后金额"]);
			this.sView.commonPageComponent.setAllTitleWidth([120,150,110,180,90,90,110,110],true);
			this.sView.commonPageComponent.setIsShowCurrentPageCount(true);
			this.sView.commonPageComponent.setIsShowAllPageCount(true);
			this.sView.commonPageComponent.setPageButtonHandler(new Handler(this,this.onPageButtonClick));
			this.sView.commonPageComponent.initPageComponent();
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			var dataMgr=DataMgr.get();
			dataMgr.curGameType=0;
			dataMgr.curAccountChangeType=0;
			this.onInitInfo();
			this.onSearch();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var balanceChangeTypeConfigData=dataMgr.balanceChangeTypeConfigData;
			tabName=gameTypeConfigData.items[dataMgr.curGameType].cn;
			this.sView.commonGrid2Component0.setName(tabName);
			tabName=dataMgr.curAccountChangeType==0 ? dataMgr.ALL_TXT :balanceChangeTypeConfigData.items[dataMgr.curAccountChangeType-1].text;
			this.sView.commonGrid2Component1.setName(tabName);
		}

		__proto.onSearch=function(){
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var balanceChangeTypeConfigData=dataMgr.balanceChangeTypeConfigData;
			var product_id=gameTypeConfigData.items[dataMgr.curGameType].id;
			var change_type=dataMgr.curAccountChangeType==0 ? null :balanceChangeTypeConfigData.items[dataMgr.curAccountChangeType-1].id;
			var dateArr=this.sView.commonDateSearchComponent.getDate();
			var curPage=this.sView.commonPageComponent.getCurrentPage();
			this.sendNotification("GET_Mc_ACCOUNT_CHANGE_TYPE_SEARCH_Cmd",[product_id,change_type,dateArr[0],dateArr[1],curPage]);
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
			this.sView.commonDateSearchComponent.initToday();
		}

		__proto.onUpdateInfo=function(){
			var data=this.mcAccountChangeDetailVo.mcAccountSearchData
			console.log("McAccountChangeDetailPanel onUpdateInfo :",data);
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var configFileData=dataMgr.configFileData;
			var item;
			var contentValues=[];
			for (var i=0;i < data.items.length;i++){
				item=data.items[i];
				var change_balance_add="";
				var change_balance_minus="";
				if(item.change_balance > 0)
					change_balance_add=item.change_balance_display;
				else
				change_balance_minus=item.change_balance_display;
				var product_name=gameTypeConfigData.getItem(item.product_id).cn;
				var change_type_name=configFileData.typeObj[item.change_type];
				contentValues.push([
				product_name,"下注单："+item.change_item_id,change_type_name,item.create_time,change_balance_add,
				change_balance_minus,item.change_before_display,item.change_after_display]);
			};
			var currentCountValues=["","","","本页小计",data.page_sum_add_balance_display,data.page_sum_sub_balance_display,"",""];
			var allCountValues=["","","","全页总计",data.add_balance_display,data.sub_balance_display,"",""];
			this.sView.commonPageComponent.setContentValues(contentValues,currentCountValues,allCountValues);
			this.sView.commonPageComponent.setPageTabContent(parseInt(data.current),parseInt(data.pages));
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick1");
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var balanceChangeTypeConfigData=dataMgr.balanceChangeTypeConfigData;
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < gameTypeConfigData.items.length;i++){
						tempArr.push(gameTypeConfigData.items[i].cn);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curGameType;
					break ;
				case 1:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < balanceChangeTypeConfigData.items.length;i++){
						tempArr.push(balanceChangeTypeConfigData.items[i].text);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component1.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curAccountChangeType;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[tabType]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_TO_LEFT,false));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			if(type==0){
				if(dataMgr.curGameType==commonTypeListVo.selectIndex)return;
				dataMgr.curGameType=commonTypeListVo.selectIndex;
				}else if(type==1){
				if(dataMgr.curAccountChangeType==commonTypeListVo.selectIndex)return;
				dataMgr.curAccountChangeType=commonTypeListVo.selectIndex;
			}
			this.onUpdateChooseInfo();
			this.onSearch();
		}

		__proto.onSearchClick=function(){
			this.onSearch();
		}

		__proto.onPageButtonClick=function(){
			var curPage=this.sView.commonPageComponent.getCurrentPage();
			this.onSearch();
		}

		__getset(0,__proto,'sView',function(){
			return this.mcAccountChangeDetailScrollComponent;
		});

		return McAccountChangeDetailPanel;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McAccountChangeDetailScrollComponent extends robotLegs.sprite.BaseUISprite
	var McAccountChangeDetailScrollComponent=(function(_super){
		function McAccountChangeDetailScrollComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonGrid2Component0=null;
			this.commonGrid2Component1=null;
			this.commonDateSearchComponent=null;
			this.commonPageComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McAccountChangeDetailScrollComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McAccountChangeDetailScrollComponent,'modules.hall.v.minecenter.McAccountChangeDetailScrollComponent',_super);
		var __proto=McAccountChangeDetailScrollComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return McAccountChangeDetailScrollComponent;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McBetRecord2Panel extends robotLegs.sprite.BaseUISprite
	var McBetRecord2Panel=(function(_super){
		function McBetRecord2Panel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcBetRecord2Vo=null;
			this.commonTopComponent=null;
			this.btnTitle2=null;
			this.hallTabComponent=null;
			this.gList=null;
			this.searchController=null;
			this.commonLst1Component=null;
			this.commonPageTabComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McBetRecord2Panel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McBetRecord2Panel,'modules.hall.v.minecenter.McBetRecord2Panel',_super);
		var __proto=McBetRecord2Panel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("投注记录");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.btnTitle2.onClick(this,this.onTitleClick);
			this.hallTabComponent.tabBtnController.on("fui_state_changed",this,this.onCommonTab1StateChange,[1]);
			this.hallTabComponent.setTabLabel("今日","前日","本月");
			this.hallTabComponent.toShow();
			this.hallTabComponent.tabBtnController.setSelectedIndex(0);
			this.gList.lineGap=5;
			this.gList.itemProvider=Handler.create(this,this.itemOfListProvider,null,false);
			this.gList.itemRenderer=Handler.create(this,this.itemOfListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.itemOfListClick);
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var lotteryGameTypeConfigData=dataMgr.lotteryGameTypeConfigData;
			var gameTypeArr=[];
			var i=0;
			for (i=0;i < gameTypeConfigData.items.length;i++){
				gameTypeArr.push(gameTypeConfigData.items[i].cn);
			};
			var lotteryGameArr=[];
			lotteryGameArr.push(dataMgr.ALL_TXT+"彩种");
			for (i=0;i < lotteryGameTypeConfigData.openItems.length;i++){
				lotteryGameArr.push(lotteryGameTypeConfigData.openItems[i].game_value);
			}
			this.commonLst1Component.updateTabsWidth([0.5,0.5]);
			this.commonLst1Component.setTabs([0,0],[gameTypeArr,lotteryGameArr],["请选择游戏种类","请选择游戏类型"]);
			this.commonLst1Component.chooseHanlder=new Handler(this,this.onChooseHanlder);
			this.registerStatusCallBack(McBetRecord2Vo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
			this.commonPageTabComponent.btnLeft.onClick(this,this.onPageTabClick,[-1]);
			this.commonPageTabComponent.btnRight.onClick(this,this.onPageTabClick,[1]);
			this.commonPageTabComponent.btnFirst.onClick(this,this.onPageTabClick2,[0]);
			this.commonPageTabComponent.btnLast.onClick(this,this.onPageTabClick2,[1]);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.onUpdateChooseInfo();
			this.onCommonTab1StateChange(1);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_BET_RECORD_2,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onTitleClick=function(){
			this.searchController.selectedIndex=this.searchController.selectedIndex==0 ? 1 :0;
		}

		__proto.onUpdateChooseInfo=function(){}
		__proto.onCommonTab1StateChange=function(_current){
			var selectIindex=this.hallTabComponent.tabBtnController.selectedIndex;
			var dataArr;
			switch(selectIindex){
				case 0:
					dataArr=GameUtil.getSearchDate(0,1);
					break ;
				case 1:
					dataArr=GameUtil.getSearchDate(-1,0);
					break ;
				case 2:;
					var date=new Date(Laya.timer.currTimer);
					dataArr=GameUtil.getSearchDate(-date.getDate(),1);
					break ;
				};
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var lotteryGameTypeConfigData=dataMgr.lotteryGameTypeConfigData;
			var selectIndexArr=this.commonLst1Component.getSelectIndexArr();
			var product_id=gameTypeConfigData.items[selectIndexArr[0]].id;
			var game_id=selectIndexArr[1]==0 ?-1 :lotteryGameTypeConfigData.openItems[selectIndexArr[1]-1].id;
			this.sendNotification("GET_MC_BET_RECORD2_SEARCH_Cmd",[product_id,game_id,dataArr[0],dataArr[1],_current]);
		}

		__proto.onChooseHanlder=function(){
			this.onCommonTab1StateChange(1);
		}

		__proto.onUpdateInfo=function(){
			this.mcBetRecord2Vo.curPage=this.mcBetRecord2Vo.data.page.current;
			this.mcBetRecord2Vo.totalPage=this.mcBetRecord2Vo.data.page.pages;
			this.commonPageTabComponent.updateData(this.mcBetRecord2Vo.curPage,this.mcBetRecord2Vo.totalPage);
			this.gList.numItems=this.mcBetRecord2Vo.getDataList().length;
		}

		__proto.itemOfListProvider=function(index){
			return "ui://"+GameUtil.Res_Hall_Package+"/McBetRecordItem";
		}

		__proto.itemOfListRenderer=function(index,gobj){
			var item=gobj;
			var dataList=this.mcBetRecord2Vo.getDataList();
			item.updateData(dataList[index]);
		}

		__proto.itemOfListClick=function(item,evt){
			var index=this.gList.getChildIndex(item);
			var dataList=this.mcBetRecord2Vo.getDataList();
			DataMgr.get().betDetailPanelVo=dataList[index];
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_BET_RECORD_Detail,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_MC_BET_RECORD_2,GameUtil.PANEL_ANI_TO_LEFT,false));
		}

		__proto.onPageTabClick=function(value){
			var curPage=this.mcBetRecord2Vo.curPage;
			var totalPage=this.mcBetRecord2Vo.totalPage;
			this.mcBetRecord2Vo.curPage=Number(this.mcBetRecord2Vo.curPage)+Number(value);
			if(this.mcBetRecord2Vo.curPage<1){
				this.mcBetRecord2Vo.curPage=1;
				return;
			}
			if(this.mcBetRecord2Vo.curPage>this.mcBetRecord2Vo.totalPage){
				this.mcBetRecord2Vo.curPage=this.mcBetRecord2Vo.totalPage;
				return;
			}
			this.onCommonTab1StateChange(this.mcBetRecord2Vo.curPage);
		}

		__proto.onPageTabClick2=function(value){
			var curPage=this.mcBetRecord2Vo.curPage;
			var totalPage=this.mcBetRecord2Vo.totalPage;
			if(value==0){
				if(this.mcBetRecord2Vo.curPage==1){
					return;
				}
				this.mcBetRecord2Vo.curPage=1;
			}
			else{
				if(this.mcBetRecord2Vo.curPage==this.mcBetRecord2Vo.totalPage){
					return;
				}
				this.mcBetRecord2Vo.curPage=this.mcBetRecord2Vo.totalPage;
			}
			this.onCommonTab1StateChange(this.mcBetRecord2Vo.curPage);
		}

		return McBetRecord2Panel;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McBetRecordDetailPanel extends robotLegs.sprite.BaseUISprite
	var McBetRecordDetailPanel=(function(_super){
		function McBetRecordDetailPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.cancelController=null;
			this.commonTopComponent=null;
			this.txtNum=null;
			this.txtDate=null;
			this.txtPlayType=null;
			this.txtBetMoney=null;
			this.txtBetNum=null;
			this.txtResult=null;
			this.txtState=null;
			this.txtReward=null;
			this.txtbetContent=null;
			this.cancelBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McBetRecordDetailPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McBetRecordDetailPanel,'modules.hall.v.minecenter.McBetRecordDetailPanel',_super);
		var __proto=McBetRecordDetailPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("投注详情");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.cancelBtn.onClick(this,this.cancel);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			var dataMgr=DataMgr.get();
			var langConfigData=dataMgr.langConfigData;
			var langItem;
			var data=dataMgr.betDetailPanelVo;
			this.txtNum.text="第"+data.game_cycle_value+"期";
			this.txtDate.text=data.create_time;
			this.txtPlayType.text=data.game_type_name;
			this.txtBetMoney.text=Number(data.bet_balance).toFixed(3);
			this.txtBetNum.text=data.id;
			this.txtResult.text=data.order_result;
			this.txtState.text=langConfigData.lang_order_status.get(data.order_status);
			this.txtReward.text=data.result_balance_display;
			data.bet_info=GameUtil.changeName(JSON.stringify(data.bet_info));
			this.txtbetContent.text=data.bet_info;
			if(data.order_status==0 || data.order_status==1){
				this.cancelController.selectedIndex=1;
			}
			else{
				this.cancelController.selectedIndex=0;
			}
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_BET_RECORD_Detail,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		/**
		*撤单
		*
		*/
		__proto.cancel=function(){
			this.sendNotification("Cancel_Bet_Cmd",this.txtBetNum.text);
		}

		__proto.onUpdateInfo=function(){}
		return McBetRecordDetailPanel;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McBetRecordPanel extends robotLegs.sprite.BaseUISprite
	var McBetRecordPanel=(function(_super){
		function McBetRecordPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcBetRecordVo=null;
			this.commonTopComponent=null;
			this.commonLst1Component=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McBetRecordPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McBetRecordPanel,'modules.hall.v.minecenter.McBetRecordPanel',_super);
		var __proto=McBetRecordPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("投注记录");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			var dataMgr=DataMgr.get();
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var datas=[];
			var tempArr=[];
			var i=0;
			for (i=0;i < gameTypeConfigData.items.length;i++){
				tempArr.push(gameTypeConfigData.items[i].cn);
			}
			datas.push(tempArr);
			datas.push(dataMgr.tabOrderStateData);
			datas.push(dataMgr.tabTimeData2);
			this.commonLst1Component.updateTabsWidth([0.4,0.3,0.3]);
			this.commonLst1Component.setTabs([0,0,0],datas,["请选彩票种类","请选择彩种","请选择时间"]);
			this.commonLst1Component.gList.lineGap=5;
			this.commonLst1Component.gList.itemProvider=Handler.create(this,this.itemOfListProvider,null,false);
			this.commonLst1Component.gList.itemRenderer=Handler.create(this,this.itemOfListRenderer,null,false);
			this.commonLst1Component.gList.numItems=2;
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_BET_RECORD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		__proto.itemOfListProvider=function(index){
			return "ui://"+GameUtil.Res_Hall_Package+"/McBetRecordItem";
		}

		__proto.itemOfListRenderer=function(index,gobj){
			var item=gobj;
			item.updateData(null);
		}

		return McBetRecordPanel;
	})(BaseUISprite)


	//class modules.login.m.LoginInputVo extends robotLegs.vo.BaseViewVo
	var LoginInputVo=(function(_super){
		function LoginInputVo(){
			this.loginAccount="";
			this.loginPassword='';
			LoginInputVo.__super.call(this);
		}

		__class(LoginInputVo,'modules.login.m.LoginInputVo',_super);
		return LoginInputVo;
	})(BaseViewVo)


	//class modules.hall.v.minecenter.McBonusOverviewPanel extends robotLegs.sprite.BaseUISprite
	var McBonusOverviewPanel=(function(_super){
		function McBonusOverviewPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcBonusOverviewVo=null;
			this.commonTopComponent=null;
			this.mcBonusOverviewScrollComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McBonusOverviewPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McBonusOverviewPanel,'modules.hall.v.minecenter.McBonusOverviewPanel',_super);
		var __proto=McBonusOverviewPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.intiData();
			this.commonTopComponent.setTitle("个人奖励总览");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.sView.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.sView.commonGrid2Component0.setTitle("游戏种类");
			this.sView.glist.itemRenderer=Handler.create(this,this.itemOfListRenderer,null,false);
			this.registerStatusCallBack(McBonusOverviewVo.INIT_INFO,new Handler(this,this.onInitInfo));
			this.registerStatusCallBack(McBonusOverviewVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
		}

		__proto.intiData=function(){
			this.sView.txt_high_lottery.text="";
			this.sView.txt_low_lottery.text="";
			this.sView.txt_pk_lottery_percent.text="";
			this.sView.txt_pk_lottery.text="";
			this.sView.txt_backwaterName.text="";
			this.sView.txt_backwaterValue.text="";
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			var lotteryGameListData=dataMgr.lotteryGameListData;
			tabName=lotteryGameListData.ggList[dataMgr.curLettoryType].game_value;
			this.sView.commonGrid2Component0.setName(tabName);
			var gameId=lotteryGameListData.ggList[dataMgr.curLettoryType].id;
			if(this.mcBonusOverviewVo.mineStatisticsDataDic[dataMgr.curLettoryType]==null){
				this.sendNotification("GET_MC_BONUS_OVERVIEW_Cmd",gameId);
				}else{
				this.onUpdateInfo();
			}
		}

		__proto.onUpdateInfo=function(){
			var dataMgr=DataMgr.get();
			var mineStatisticsData=this.mcBonusOverviewVo.mineStatisticsDataDic[dataMgr.curLettoryType];
			this.sView.txt_high_lottery.text=mineStatisticsData.high_lottery;
			this.sView.txt_low_lottery.text=mineStatisticsData.low_lottery;
			this.sView.txt_pk_lottery_percent.text=mineStatisticsData.pk_lottery_percent;
			this.sView.txt_pk_lottery.text=mineStatisticsData.pk_lottery;
			this.sView.txt_backwaterName.text="彩票娱乐场返水：";
			this.sView.txt_backwaterValue.text=mineStatisticsData.backwaterLottery+"%";
			this.sView.glist.numItems=mineStatisticsData.items.length;
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_BONUS_OVERVIEW,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.chooseTypeListClick=function(type){
			var dataMgr=DataMgr.get();
			var lotteryGameListData=dataMgr.lotteryGameListData;
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var tempArr=[];
			var i=0;
			switch(type){
				case 0:
					for (i=0;i < lotteryGameListData.ggList.length;i++){
						tempArr.push(lotteryGameListData.ggList[i].game_value);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curLettoryType;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[type]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_MC_BONUS_OVERVIEW,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=DataMgr.get().commonTypeListVo;
			switch(type){
				case 0:
					dataMgr.curLettoryType=commonTypeListVo.selectIndex;
					break ;
				}
			this.onUpdateChooseInfo();
		}

		__proto.itemOfListRenderer=function(index,gobj){
			var dataMgr=DataMgr.get();
			var item=gobj;
			var mineStatisticsData=this.mcBonusOverviewVo.mineStatisticsDataDic[dataMgr.curLettoryType];
			item.updateData(mineStatisticsData.items[index],index);
		}

		__getset(0,__proto,'sView',function(){
			return this.mcBonusOverviewScrollComponent;
		});

		return McBonusOverviewPanel;
	})(BaseUISprite)


	//class modules.login.m.LoginVo extends robotLegs.vo.BaseViewVo
	var LoginVo=(function(_super){
		function LoginVo(){
			this.loginInputVo=new LoginInputVo();
			this.registerData=new RegisterData();
			LoginVo.__super.call(this);
		}

		__class(LoginVo,'modules.login.m.LoginVo',_super);
		LoginVo.RegisterTry_Complete="RegisterTry_Complete_Status";
		LoginVo.Register_Complete="Register_Complete_Status";
		return LoginVo;
	})(BaseViewVo)


	//class modules.hall.v.minecenter.McBonusOverviewScrollComponent extends robotLegs.sprite.BaseUISprite
	var McBonusOverviewScrollComponent=(function(_super){
		function McBonusOverviewScrollComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonGrid2Component0=null;
			this.txt_high_lottery=null;
			this.txt_low_lottery=null;
			this.txt_pk_lottery_percent=null;
			this.txt_pk_lottery=null;
			this.txt_backwaterName=null;
			this.txt_backwaterValue=null;
			this.glist=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McBonusOverviewScrollComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McBonusOverviewScrollComponent,'modules.hall.v.minecenter.McBonusOverviewScrollComponent',_super);
		var __proto=McBonusOverviewScrollComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return McBonusOverviewScrollComponent;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McGameRecordPanel extends robotLegs.sprite.BaseUISprite
	var McGameRecordPanel=(function(_super){
		function McGameRecordPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcGameRecordVo=null;
			this.commonTopComponent=null;
			this.mcGameRecordScrollComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McGameRecordPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McGameRecordPanel,'modules.hall.v.minecenter.McGameRecordPanel',_super);
		var __proto=McGameRecordPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("个人游戏记录");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.sView.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.sView.commonGrid2Component1.onClick(this,this.chooseTypeListClick,[1]);
			this.sView.commonGrid2Component2.onClick(this,this.chooseTypeListClick,[2]);
			this.sView.commonGrid2Component3.onClick(this,this.chooseTypeListClick,[3]);
			this.sView.commonGrid2Component0.setTitle("游戏种类");
			this.sView.commonGrid2Component1.setTitle("注单种类");
			this.sView.commonGrid2Component2.setTitle("彩种");
			this.sView.commonGrid2Component3.setTitle("注单模式");
			this.registerStatusCallBack(McGameRecordVo.INIT_INFO,new Handler(this,this.onInitInfo));
		}

		__proto.onInitInfo=function(){
			this.onUpdateChooseInfo();
			this.sView.commonDateSearchComponent.initToday();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_GAME_RECORD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			this.sView.vController.selectedIndex=dataMgr.curGameType==0 ? 0 :1;
			if(dataMgr.curGameType==0){
				this.sView.commonPageComponent.setAllTitleName(["注单编号","种类","注单模式","彩种玩法","期号","投注时间","投注内容","倍数","注数","投注金额","中奖金额","注单状态","操作"]);
				this.sView.commonPageComponent.setAllTitleWidth([90,50,90,90,50,90,90,50,50,90,90,90,64],true);
				this.sView.commonPageComponent.setIsShowCurrentPageCount(true);
				this.sView.commonPageComponent.setIsShowAllPageCount(true);
				this.sView.commonPageComponent.initPageComponent();
				var tempContentValues=[
				["1","1","1\n1\n1","1","1","1","1","1","1","1","1","1","1"],
				["2","2","2\n3\n1\n1","2","2","2","2","2","2","2","2","2","2"],
				["3","3","3\n3\n1\n1\n1","3","3","3","3","3","3","3","3","3","3"],
				["4","4","4\n4\n1\n1\n1\n1","4","4","4","4","4","4","4","4","4","4"],
				["10","10","10\n10\n1\n1\n1\n1\n1\n1\n1\n1","10","10","10","10","10","10","10","10","10","10"]];
				var tempCurrentCountValues=["","","","","","","","","本页小计","188","0","",""];
				var tempAllCountValues=["","","","","","","","","全页总计","372","34","",""];
				this.sView.commonPageComponent.setContentValues(tempContentValues,tempCurrentCountValues,tempAllCountValues);
				}else{
				this.sView.commonPageComponent.setAllTitleName(["注单编号","投注时间","投注金额","派奖","盈亏","返水状态"]);
				this.sView.commonPageComponent.setAllTitleWidth([90,90,90,50,50,90],true);
				this.sView.commonPageComponent.setIsShowCurrentPageCount(true);
				this.sView.commonPageComponent.setIsShowAllPageCount(true);
				this.sView.commonPageComponent.initPageComponent();
				var tempContentValues1=[
				["1","1","1","1","1","1"],
				["2","2","2","2","2","2"],
				["3","3","3","3","3","3"],
				["4","4","4","4","4","4"],
				["10","10","10","10","10","10"]];
				var tempCurrentCountValues1=["","","本页小计","188","0",""];
				var tempAllCountValues1=["","","全页总计","372","34",""];
				this.sView.commonPageComponent.setContentValues(tempContentValues1,tempCurrentCountValues1,tempAllCountValues1);
			}
			tabName=dataMgr.gameTypeConfigData.items[dataMgr.curGameType].cn;
			this.sView.commonGrid2Component0.setName(tabName);
			tabName=dataMgr.curOrderType==0 ? dataMgr.ALL_TXT :dataMgr.langConfigData.lang_order_type[dataMgr.curOrderType];
			this.sView.commonGrid2Component1.setName(tabName);
			tabName=dataMgr.curLettoryType==0 ? dataMgr.ALL_TXT :dataMgr.lotteryGameListData.ggList[dataMgr.curLettoryType].game_value;
			this.sView.commonGrid2Component2.setName(tabName);
			tabName=dataMgr.curZhuDanMoShi==0 ? dataMgr.ALL_TXT :dataMgr.langConfigData.lang_bet_percent_type.values[dataMgr.curZhuDanMoShi];
			this.sView.commonGrid2Component3.setName(tabName);
		}

		__proto.chooseTypeListClick=function(tabType){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var gameTypeConfigData=dataMgr.gameTypeConfigData;
			var langConfigData=dataMgr.langConfigData;
			var lotteryGameListData=dataMgr.lotteryGameListData;
			var zhuDanZhuangTaiConfigData=dataMgr.zhuDanZhuangTaiConfigData;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < gameTypeConfigData.items.length;i++){
						tempArr.push(gameTypeConfigData.items[i].cn);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curGameType;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[0]);
					break ;
				case 1:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < langConfigData.lang_order_type.values.length;i++){
						tempArr.push(langConfigData.lang_order_type.values[i]);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component1.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curOrderType;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[1]);
					break ;
				case 2:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < lotteryGameListData.ggList.length;i++){
						tempArr.push(lotteryGameListData.ggList[i].game_value);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component2.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curLettoryType;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[2]);
					break ;
				case 3:
					tempArr.push(dataMgr.ALL_TXT);
					for (i=0;i < langConfigData.lang_bet_percent_type.values.length;i++){
						tempArr.push(langConfigData.lang_bet_percent_type.values[i]);
					}
					commonTypeListVo.title="选择"+this.sView.commonGrid2Component3.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curZhuDanMoShi;
					commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[3]);
					break ;
				}
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_MC_GAME_RECORD,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSelectedCommonTypeHandler=function(type){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=DataMgr.get().commonTypeListVo;
			if(type==0){
				dataMgr.curGameType=commonTypeListVo.selectIndex;
				}else if(type==1){
				dataMgr.curOrderType=commonTypeListVo.selectIndex;
				}else if(type==2){
				dataMgr.curLettoryType=commonTypeListVo.selectIndex;
				}else if(type==3){
				dataMgr.curZhuDanMoShi=commonTypeListVo.selectIndex;
			}
			this.onUpdateChooseInfo();
		}

		__getset(0,__proto,'sView',function(){
			return this.mcGameRecordScrollComponent;
		});

		return McGameRecordPanel;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McGameRecordScrollComponent extends robotLegs.sprite.BaseUISprite
	var McGameRecordScrollComponent=(function(_super){
		function McGameRecordScrollComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonGrid2Component0=null;
			this.commonGrid2Component1=null;
			this.commonGrid2Component2=null;
			this.commonGrid2Component3=null;
			this.commonDateSearchComponent=null;
			this.vController=null;
			this.commonPageComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McGameRecordScrollComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McGameRecordScrollComponent,'modules.hall.v.minecenter.McGameRecordScrollComponent',_super);
		var __proto=McGameRecordScrollComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return McGameRecordScrollComponent;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McStatisticalAnalysisPanel extends robotLegs.sprite.BaseUISprite
	var McStatisticalAnalysisPanel=(function(_super){
		function McStatisticalAnalysisPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcStatisticalAnalysisVo=null;
			this.commonTopComponent=null;
			this.mcStatisticalAnalysisScrollComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McStatisticalAnalysisPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McStatisticalAnalysisPanel,'modules.hall.v.minecenter.McStatisticalAnalysisPanel',_super);
		var __proto=McStatisticalAnalysisPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("个人系统分析");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.mcStatisticalAnalysisScrollComponent.commonDateSearchComponent.initToday();
			this.mcStatisticalAnalysisScrollComponent.commonDateSearchComponent.btnSearch.onClick(this,this.onSearchClick);
			this.mcStatisticalAnalysisScrollComponent.hallTabComponent.tabBtnController.on("fui_state_changed",this,this.onTabStateChange);
			this.mcStatisticalAnalysisScrollComponent.hallTabComponent.setTabLabel("今日","昨日","最近七天");
			this.mcStatisticalAnalysisScrollComponent.hallTabComponent.toShow();
			this.mcStatisticalAnalysisScrollComponent.hallTabComponent.tabBtnController.setSelectedIndex(0);
			this.mcStatisticalAnalysisScrollComponent.commonGridOneComponent.glist.itemRenderer=Handler.create(this,this.itemOfGridOneListRenderer,null,false);
			var count=this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr.length;
			this.mcStatisticalAnalysisScrollComponent.commonGridOneComponent.view.height=Math.ceil(count/2)*GameUtil.CommonGridOneComponentHeight;
			this.mcStatisticalAnalysisScrollComponent.commonGridOneComponent.glist.numItems=count;
			this.registerStatusCallBack(McStatisticalAnalysisVo.UPDATE_DATA,new Handler(this,this.onUpdateData));
			var chartGraph=this.mcStatisticalAnalysisScrollComponent.chartGraph;
			console.log("chartGraph:",chartGraph.x,chartGraph.y,chartGraph.width,chartGraph.height,chartGraph.scaleX,chartGraph.scaleY);
			console.log("Browser 物理宽高:",Browser.width,Browser.height);
			console.log("浏览器窗口可视宽度：",Browser.clientWidth,Browser.clientHeight);
			console.log("设备像素比 pixelRatio:",Browser.pixelRatio);
			console.log("Laya.stage宽高:",Laya.stage.width,Laya.stage.height);
			console.log("GRoot.inst宽高:",GRoot.inst.width,GRoot.inst.height);
			var top=(chartGraph.y+this.commonTopComponent.view.height)/ GRoot.inst.height *Browser.clientHeight;
			var height=Math.floor(chartGraph.height / GRoot.inst.height *Browser.clientHeight);
			var data={
				type:'line',
				data:{
					labels:["start","05-08","05-14","05-16"],
					datasets:[{
						label:"总充值",
						data:["0",0,0,0],
						backgroundColor:"rgba(233, 4, 4,0.4)",
						borderColor:"rgba(233, 4, 4,1)",
						pointBorderColor:"rgba(233, 4, 4,1)",
						pointHoverBackgroundColor:
						"rgba(233, 4, 4,1)"
						},{
						label:"总提现",
						data:["0",0,0,0],
						backgroundColor:"rgba(233, 182, 4,0.4)",
						borderColor:"rgba(233, 182, 4,1)",
						pointBorderColor:"rgba(233, 182, 4,1)",
						pointHoverBackgroundColor:"rgba(233, 182, 4,1)"
						},{
						label:"总促销",
						data:["0",2,0,0],
						backgroundColor:"rgba(209, 78, 174,0.4)",
						borderColor:"rgba(209, 78, 174,1)",
						pointBorderColor:"rgba(209, 78, 174,1)",
						pointHoverBackgroundColor:"rgba(209, 78, 174,1)"
						},{
						label:"总佣金",
						data:["0",0,0,0],
						backgroundColor:"rgba(70, 99, 166,0.4)",
						borderColor:"rgba(70, 99, 166,1)",
						pointBorderColor:"rgba(70, 99, 166,1)",
						pointHoverBackgroundColor:"rgba(70, 99, 166,1)"
						},{
						label:"实际销量",
						data:["0",0,0.2,0.002],
						backgroundColor:"rgba(70, 166, 92,0.4)",
						borderColor:"rgba(70, 166, 92,1)",
						pointBorderColor:"rgba(70, 166, 92,1)",
						pointHoverBackgroundColor:"rgba(70, 166, 92,1)"
						},{
						label:"总派奖",
						data:["0",0,0,0],
						backgroundColor:"rgba(25, 149, 236,0.4)",
						borderColor:"rgba(25, 149, 236,1)",
						pointBorderColor:"rgba(25, 149, 236,1)",
						pointHoverBackgroundColor:"rgba(25, 149, 236,1)"
						},{
						label:"返点",
						data:["0",0,0,0],
						backgroundColor:"rgba(236, 119, 25,0.4)",
						borderColor:"rgba(236, 119, 25,1)",
						pointBorderColor:"rgba(236, 119, 25,1)",
						pointHoverBackgroundColor:"rgba(236, 119, 25,1)"
						},{
						label:"自身返点",
						data:["0",0,0,0],
						backgroundColor:"rgba(70, 200, 25,0.4)",
						borderColor:"rgba(70, 200, 25,1)",
						pointBorderColor:"rgba(70, 200, 25,1)",
						pointHoverBackgroundColor:"rgba(70, 200, 25,1)"
						},{
						label:"总盈亏",
						data:["0",2,-0.2,-0.002],
						backgroundColor:"rgba(70, 200, 25,0.4)",
						borderColor:"rgba(70, 200, 25,1)",
						pointBorderColor:"rgba(70, 200, 25,1)",
						pointHoverBackgroundColor:"rgba(70, 200, 25,1)"
					}]
				},
				options:{
					scales:{
						yAxes:[{
							ticks:{
								beginAtZero:true
							}
						}]
					}
				}
			};
			ChartUtil.initChart(0,top,Browser.clientWidth,height,data);
			this.mcStatisticalAnalysisScrollComponent.view.on("fui_scroll",this,this.onScroll);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			Laya.timer.once(GameUtil.Time_Panel_Ani,this,this.aniPlayComplete);
		}

		__proto.aniPlayComplete=function(){
			ChartUtil.showChart();
		}

		__proto.onScroll=function(e){
			var posy=this.mcStatisticalAnalysisScrollComponent.view._container.y;
			var top=(this.mcStatisticalAnalysisScrollComponent.chartGraph.y+this.commonTopComponent.view.height+posy)/ GRoot.inst.height *Browser.clientHeight;
			ChartUtil.updatePos(0,top);
		}

		__proto.onSearchClick=function(){
			this.sendNotification("GET_Mc_STATISTICAL_ANALYSISR_Cmd",this.mcStatisticalAnalysisScrollComponent.commonDateSearchComponent.getDate());
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_STATISTICAL_ANALYSIS,GameUtil.PANEL_ANI_TO_RIGHT));
			ChartUtil.hideChart();
		}

		__proto.onTabStateChange=function(){
			var selectIindex=this.mcStatisticalAnalysisScrollComponent.hallTabComponent.tabBtnController.selectedIndex;
			var dataArr;
			if(selectIindex==0){
				dataArr=GameUtil.getSearchDate(0,1);
			}
			else if(selectIindex==1){
				dataArr=GameUtil.getSearchDate(-1,0);
			}
			else{
				dataArr=GameUtil.getSearchDate(-6,1);
			}
			this.mcStatisticalAnalysisScrollComponent.commonDateSearchComponent.setDate(dataArr[0],dataArr[1]);
		}

		__proto.itemOfGridOneListRenderer=function(index,gobj){
			var item=gobj;
			item.updateData(this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr[index]);
		}

		__proto.onUpdateData=function(){
			this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr[0].value=this.mcStatisticalAnalysisVo.mineCenterTodayData.total_recharge_balance;
			this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr[1].value=this.mcStatisticalAnalysisVo.mineCenterTodayData.total_withdraw_balance;
			this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr[2].value=this.mcStatisticalAnalysisVo.mineCenterTodayData.total_bet_balance;
			this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr[3].value=this.mcStatisticalAnalysisVo.mineCenterTodayData.total_reward_balance;
			this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr[4].value=this.mcStatisticalAnalysisVo.mineCenterTodayData.total_result_balance;
			this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr[5].value=this.mcStatisticalAnalysisVo.mineCenterTodayData.total_promotion_balance;
			this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr[7].value=this.mcStatisticalAnalysisVo.mineCenterTodayData.total_commission_balance;
			this.mcStatisticalAnalysisScrollComponent.commonGridOneComponent.glist.numItems=this.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr.length;
		}

		return McStatisticalAnalysisPanel;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McStatisticalAnalysisScrollComponent extends robotLegs.sprite.BaseUISprite
	var McStatisticalAnalysisScrollComponent=(function(_super){
		function McStatisticalAnalysisScrollComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonDateSearchComponent=null;
			this.hallTabComponent=null;
			this.commonGridOneComponent=null;
			this.chartGraph=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McStatisticalAnalysisScrollComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McStatisticalAnalysisScrollComponent,'modules.hall.v.minecenter.McStatisticalAnalysisScrollComponent',_super);
		var __proto=McStatisticalAnalysisScrollComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return McStatisticalAnalysisScrollComponent;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McWinLostBottomComponent extends robotLegs.sprite.BaseUISprite
	var McWinLostBottomComponent=(function(_super){
		function McWinLostBottomComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txt_recharge_balance_total=null;
			this.txt_withdraw_balance1_total=null;
			this.txt_bet_balance=null;
			this.txt_real_bet_balance=null;
			this.txt_reward_balance=null;
			this.txt_result_balance=null;
			this.txt_result_self_balance=null;
			this.txt_income_balance=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McWinLostBottomComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McWinLostBottomComponent,'modules.hall.v.minecenter.McWinLostBottomComponent',_super);
		var __proto=McWinLostBottomComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		return McWinLostBottomComponent;
	})(BaseUISprite)


	//class modules.hall.v.minecenter.McWinLostPanel extends robotLegs.sprite.BaseUISprite
	var McWinLostPanel=(function(_super){
		function McWinLostPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mcWinLostVo=null;
			this.commonTopComponent=null;
			this.commonDateSearchComponent=null;
			this.txt_account=null;
			this.txt_account_loader=null;
			this.txt_user_percent=null;
			this.txt_recharge_balance=null;
			this.txt_withdraw_balance=null;
			this.txt_promotion_balance=null;
			this.txt_commission_balance=null;
			this.glist=null;
			this.mcWinLostBottomComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			McWinLostPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(McWinLostPanel,'modules.hall.v.minecenter.McWinLostPanel',_super);
		var __proto=McWinLostPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("个人盈亏报表");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.glist.itemRenderer=Handler.create(this,this.itemOfListRenderer,null,false);
			this.registerStatusCallBack(McWinLostVo.INIT_INFO,new Handler(this,this.onInitInfo));
			this.registerStatusCallBack(McWinLostVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
			this.commonDateSearchComponent.on(CommonDateSearchComponent.CLICK_SEARCH,this,this.onSearchClick);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.onInitInfo();
			this.onSearch();
		}

		__proto.onInitInfo=function(){
			this.commonDateSearchComponent.initToday();
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_WIN_LOST,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onSearchClick=function(){
			this.sendNotification("GET_MC_WIN_LOST_Cmd",this.commonDateSearchComponent.getDate());
		}

		__proto.onUpdateInfo=function(){
			this.txt_account.text=this.mcWinLostVo.account;
			this.txt_account_loader.text=this.mcWinLostVo.mineWinLostData.parent_name;
			this.txt_user_percent.text=this.mcWinLostVo.mineWinLostData.user_percent;
			this.txt_recharge_balance.text=this.mcWinLostVo.mineWinLostData.ur_total_recharge_balance_display+"";
			this.txt_withdraw_balance.text=this.mcWinLostVo.mineWinLostData.ur_total_withdraw_balance_display+"";
			this.txt_promotion_balance.text=this.mcWinLostVo.mineWinLostData.ur_total_promotion_balance_display+"";
			this.txt_commission_balance.text=this.mcWinLostVo.mineWinLostData.ur_total_commission_balance_display+"";
			this.glist.numItems=this.mcWinLostVo.mineWinLostData.gameRecords.length;
			this.mcWinLostBottomComponent.txt_recharge_balance_total.text=this.mcWinLostVo.mineWinLostData.total_recharge_balance_display+"";
			this.mcWinLostBottomComponent.txt_withdraw_balance1_total.text=this.mcWinLostVo.mineWinLostData.total_withdraw_balance_display+"";
			this.mcWinLostBottomComponent.txt_bet_balance.text=this.mcWinLostVo.mineWinLostData.total_bet_balance_display+"";
			this.mcWinLostBottomComponent.txt_real_bet_balance.text=this.mcWinLostVo.mineWinLostData.total_real_bet_balance_display+"";
			this.mcWinLostBottomComponent.txt_reward_balance.text=this.mcWinLostVo.mineWinLostData.total_reward_balance_display+"";
			this.mcWinLostBottomComponent.txt_result_balance.text=this.mcWinLostVo.mineWinLostData.total_result_balance_display+"";
			this.mcWinLostBottomComponent.txt_result_self_balance.text=this.mcWinLostVo.mineWinLostData.total_result_self_balance_display+"";
			this.mcWinLostBottomComponent.txt_income_balance.text=this.mcWinLostVo.mineWinLostData.income_balance_display+"";
		}

		__proto.itemOfListRenderer=function(index,gobj){
			var item=gobj;
			item.updateData(this.mcWinLostVo.mineWinLostData.gameRecords[index]);
		}

		__proto.onSearch=function(){
			this.sendNotification("GET_MC_WIN_LOST_Cmd",this.commonDateSearchComponent.getDate());
		}

		return McWinLostPanel;
	})(BaseUISprite)


	//class modules.hall.v.MinePanel extends robotLegs.sprite.BaseUISprite
	var MinePanel=(function(_super){
		function MinePanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.mineVo=null;
			this.refreshBalanceBtn=null;
			this.safeBtn=null;
			this.moneyManageBtn=null;
			this.bankCardManageBtn=null;
			this.betHistorBtn=null;
			this.winLoseHistoryBtn=null;
			this.zhangBianMingXiBtn=null;
			this.messageBtn=null;
			this.systemSetBtn=null;
			this.teamBtn=null;
			this.customerBtn=null;
			this.activeBtn=null;
			this.txtName=null;
			this.txtMoney=null;
			this.btnZijin0=null;
			this.btnZijin1=null;
			this.btnZijin2=null;
			this.mineTabContent1Component=null;
			this.mineTabContent2Component=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			MinePanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(MinePanel,'modules.hall.v.MinePanel',_super);
		var __proto=MinePanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.txtName.text="Loading...";
			this.btnZijin0.onClick(this,this.onMoneyManageClick,[0]);
			this.btnZijin1.onClick(this,this.onMoneyManageClick,[1]);
			this.btnZijin2.onClick(this,this.onMoneyManageClick,[2]);
			this.customerBtn.onClick(this,this.openCustomer);
			this.betHistorBtn.onClick(this,this.onMoneyManageClick,[3]);
			this.safeBtn.onClick(this,this.openManage,[0]);
			this.moneyManageBtn.onClick(this,this.openManage,[1]);
			this.bankCardManageBtn.onClick(this,this.openManage,[2]);
			this.betHistorBtn.onClick(this,this.openManage,[3]);
			this.winLoseHistoryBtn.onClick(this,this.openManage,[4]);
			this.zhangBianMingXiBtn.onClick(this,this.openManage,[5]);
			this.messageBtn.onClick(this,this.openManage,[6]);
			this.systemSetBtn.onClick(this,this.openManage,[7]);
			this.teamBtn.onClick(this,this.openManage,[8]);
			this.activeBtn.onClick(this,this.openManage,[9]);
			this.refreshBalanceBtn.onClick(this,this.getBalance);
			this.registerStatusCallBack(MineVo.INIT_INFO,new Handler(this,this.initInfo));
			this.registerStatusCallBack(MineVo.OPEN_CUSTOMER_STATUS,new Handler(this,this.openCustomer));
			var iconConfigData=DataMgr.get().iconConfigData;
		}

		// this.gList.numItems=iconConfigData.mineIconConfigData.length;
		__proto.initInfo=function(){
			this.txtName.text=DataMgr.get().playerInfoData.user_account;
			var userBalanceData=DataMgr.get().userBalanceData;
			var userBalanceDataItem=userBalanceData.itemDic.get(DataMgr.GameType_Lottery_ID);
			if(userBalanceDataItem !=null){
				this.txtMoney.text=userBalanceDataItem.user_balance_display;
			}
			if(DataMgr.get().userInfoData && DataMgr.get().userInfoData.is_proxy=="1" && DataMgr.get().userInfoData.is_beta !="1"){
				this.teamBtn.visible=true;
			}
			else{
				this.teamBtn.visible=false;
			}
		}

		__proto.gListRenderer=function(index,obj){
			var iconConfigData=DataMgr.get().iconConfigData;
			var mineListConfigData=iconConfigData.mineIconConfigData;
			var icon1Vo=mineListConfigData[index];
			var item=obj;
			item.updateData(icon1Vo,index);
		}

		/**
		*打开管理界面
		*@param _index
		*
		*/
		__proto.openManage=function(_index){
			switch(_index){
				case 0:{
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_SET_SAFE,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 1:{
						this.sendNotification("UPDATE_TOPUP_RECORD_TYPE_Cmd",0);
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 2:{
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_MY_BANK_CARD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 3:{
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_BET_RECORD_2,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 4:{
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_WIN_LOST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 5:{
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 6:{
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_INBOX,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 7:{
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_SET,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 8:{
						this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
						break ;
					}
				case 9:{
						this.sendNotification("Init_Hall_Event_Cmd");
						break ;
					}
				}
		}

		__proto.gListClick=function(obj,evt){
			var item=obj;
			if(item.index!=6){
				if(DataMgr.get().loginState()< DataMgr.LoginState_Account){
					this.sendNotification("SHOW_PROMPT_TEXT_Cmd","试玩玩家没有对应的权限！");
					return;
				}
			}
			switch(item.index){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_BET_RECORD_2,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_WIN_LOST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 2:
					this.sendNotification("UPDATE_TOPUP_RECORD_TYPE_Cmd",0);
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_RECORD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 3:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 4:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_MY_BANK_CARD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 5:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_INBOX,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 6:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_SET,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 7:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_GROUP,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		__proto.onMoneyManageClick=function(index){
			if(DataMgr.get().loginState()< DataMgr.LoginState_Account){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","试玩玩家没有对应的权限！");
				return;
			}
			switch(index){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TOPUP_MONEY,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					if(!this.mineVo.gotOtherWebBol){
						this.showAlert("正在加载配置，请稍后");
						return;
					}
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_TRANSFER_ACCOUNTS,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 2:
					if(!this.mineVo.gotOtherWebBol){
						this.showAlert("正在加载配置，请稍后");
						return;
					}
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_DRAW_MONEY_CENTER,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_HALL,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		/**
		*打开客户中心
		*
		*/
		__proto.openCustomer=function(){
			if(this.mineVo.customerUrl.length > 0){
				this.sendNotification("Open_Iframe_Cmd",[this.mineVo.customerUrl,new Handler(this,this.onClosePokerGame)]);
				return;
			}
		}

		/**
		*获取余额
		*
		*/
		__proto.getBalance=function(){
			this.sendNotification("GET_GAME_MONEY_Cmd");
		}

		__proto.onClosePokerGame=function(){
			this.sendNotification("Close_Iframe_Cmd");
		}

		return MinePanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysAboutPanel extends robotLegs.sprite.BaseUISprite
	var SysAboutPanel=(function(_super){
		function SysAboutPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.commonTopComponent=null;
			this.n6=null;
			this.n32=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysAboutPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysAboutPanel,'modules.hall.v.systemcenter.SysAboutPanel',_super);
		var __proto=SysAboutPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.n6.height=this.n32.y+this.n32.height+20;
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_ABOUT,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		return SysAboutPanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysBindingBankCardPanel extends robotLegs.sprite.BaseUISprite
	var SysBindingBankCardPanel=(function(_super){
		function SysBindingBankCardPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.sysBindingBankCardPanelVo=null;
			this.commonTopComponent=null;
			this.commonGrid2Component0=null;
			this.commonGrid3Component4=null;
			this.commonGrid3Component0=null;
			this.commonGrid3Component1=null;
			this.commonGrid3Component2=null;
			this.commonGrid3Component3=null;
			this.btnDo=null;
			this.firstBankController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysBindingBankCardPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysBindingBankCardPanel,'modules.hall.v.systemcenter.SysBindingBankCardPanel',_super);
		var __proto=SysBindingBankCardPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("绑定银行卡");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonGrid2Component0.setTitle("开户银行");
			this.commonGrid3Component4.setTitle("支行名称");
			this.commonGrid3Component0.setTitle("姓名");
			this.commonGrid3Component1.setTitle("银行卡号");
			this.commonGrid3Component2.setTitle("确认银行卡号",170);
			this.commonGrid3Component3.setTitle("您设定的第一张银行卡号",280);
			this.commonGrid3Component4.setNameWidth(470);
			this.commonGrid3Component4.setPrompt('由1至20个"汉字"组成,不能使用特殊字符');
			this.commonGrid3Component0.setPrompt("请填写持卡人姓名");
			this.commonGrid3Component1.setPrompt("卡号为16、18或19位数字");
			this.commonGrid3Component2.setPrompt("卡号为16、18或19位数字");
			this.commonGrid3Component3.setPrompt("卡号为16、18或19位数字");
			this.commonGrid3Component1.setMaxLen(19);
			this.commonGrid3Component2.setMaxLen(19);
			this.commonGrid3Component3.setMaxLen(19);
			this.commonGrid3Component4.setMaxLen(20);
			this.commonGrid3Component4.setRestrict("\u4e00-\u9fa5");
			this.commonGrid3Component0.setRestrict("");
			this.btnDo.onClick(this,this.onDoClick);
			this.commonGrid2Component0.onClick(this,this.chooseTypeListClick,[0]);
			this.registerStatusCallBack(SysBindingBankCardPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
			this.registerStatusCallBack(SysBindingBankCardPanelVo.DONE_SUCCESS,new Handler(this,this.onBackClick));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.onInitInfo();
			var userBankAccountData=DataMgr.get().userBankAccountData;
			if(userBankAccountData==null){
				return;
			}
			this.firstBankController.selectedIndex=userBankAccountData.items.length > 0 ? 0 :1;
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_BINDING_BANK_CARD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onInitInfo=function(){
			var dataMgr=DataMgr.get();
			dataMgr.curBankType=0;
			this.onUpdateChooseInfo();
		}

		__proto.onUpdateInfo=function(){}
		// showError("密码修改成功！");
		__proto.onDoClick=function(){
			var dataMgr=DataMgr.get();
			var bankListConfigData=dataMgr.bankListConfigData;
			var userBankAccountData=dataMgr.userBankAccountData;
			var zhihangStr=StringTool.trim(this.commonGrid3Component4.getName());
			if(zhihangStr==""){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填支行信息");
				return;
			};
			var bank_owner=StringTool.trim(this.commonGrid3Component0.getName());
			if(bank_owner==""){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填写姓名");
				return;
			};
			var bank_id=bankListConfigData.items[dataMgr.curBankType].id;
			var bank_account=StringTool.trim(this.commonGrid3Component1.getName());
			if(bank_account==""){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填写银行卡号");
				return;
			}
			if(!(bank_account.length==16 || bank_account.length==18 || bank_account.length==19)){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","银行卡号长度需为16，18或19长度");
				return;
			};
			var bank_account2=StringTool.trim(this.commonGrid3Component2.getName());
			if(bank_account !=bank_account2){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","两次输入的银行卡号不一致");
				return;
			};
			var first_bank_account=StringTool.trim(this.commonGrid3Component3.getName());
			if(userBankAccountData==null){
				return;
			}
			if(userBankAccountData.items.length > 0){
				if(first_bank_account==""){
					this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请填写第一张银行卡卡号");
					return;
				}
			};
			var bank_list_id=bankListConfigData.items[dataMgr.curBankType].id;
			var bank_branch=this.commonGrid3Component4.getName();
			this.sendNotification("BINDING_BANK_Cmd",[bank_id,bank_account,bank_owner,bank_list_id,bank_branch,first_bank_account]);
		}

		__proto.onUpdateChooseInfo=function(){
			var tabName;
			var dataMgr=DataMgr.get();
			var bankListConfigData=dataMgr.bankListConfigData;
			this.commonGrid2Component0.setName(bankListConfigData.items[dataMgr.curBankType].bank_name);
		}

		__proto.chooseTypeListClick=function(tabType){
			console.log("chooseTypeListClick");
			var dataMgr=DataMgr.get();
			var bankListConfigData=dataMgr.bankListConfigData;
			var balanceChangeTypeConfigData=dataMgr.balanceChangeTypeConfigData;
			var commonTypeListVo=dataMgr.commonTypeListVo;
			var tempArr=[];
			var i=0;
			switch(tabType){
				case 0:
					for (i=0;i < bankListConfigData.items.length;i++){
						tempArr.push(bankListConfigData.items[i].bank_name);
					}
					commonTypeListVo.title="选择"+this.commonGrid2Component0.getTitle();
					commonTypeListVo.dataArr=tempArr;
					commonTypeListVo.selectIndex=dataMgr.curBankType;
					break ;
				}
			commonTypeListVo.handler=Handler.create(this,this.onSelectedCommonTypeHandler,[tabType]);
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_COMMON_TYPELIST,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_SYS_BINDING_BANK_CARD,GameUtil.PANEL_ANI_TO_LEFT));
		}

		__proto.onSelectedCommonTypeHandler=function(tabType){
			var dataMgr=DataMgr.get();
			var commonTypeListVo=dataMgr.commonTypeListVo;
			switch(tabType){
				case 0:
					dataMgr.curBankType=commonTypeListVo.selectIndex;
					break ;
				}
			this.onUpdateChooseInfo();
		}

		return SysBindingBankCardPanel;
	})(BaseUISprite)


	//class modules.registered.m.LoginVo extends robotLegs.vo.BaseViewVo
	var LoginVo$1=(function(_super){
		function LoginVo(){
			this.account=null;
			this.password=null;
			this.rememberPassword=null;
			this.loginAccountInfoObj=null;
			LoginVo.__super.call(this);
		}

		__class(LoginVo,'modules.registered.m.LoginVo',_super,'LoginVo$1');
		LoginVo.UPDATE_STATUS="Update_And_Login_Status";
		return LoginVo;
	})(BaseViewVo)


	//class modules.registered.m.RegisteredVo extends robotLegs.vo.BaseViewVo
	var RegisteredVo=(function(_super){
		function RegisteredVo(){
			this.account=null;
			this.password=null;
			this.tuiJianCode=null;
			RegisteredVo.__super.call(this);
		}

		__class(RegisteredVo,'modules.registered.m.RegisteredVo',_super);
		return RegisteredVo;
	})(BaseViewVo)


	//class modules.hall.v.systemcenter.SysInboxPanel extends robotLegs.sprite.BaseUISprite
	var SysInboxPanel=(function(_super){
		function SysInboxPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.settingModifyPasswordPanelVo=null;
			this.commonTopComponent=null;
			this.stateController=null;
			this.gList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysInboxPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysInboxPanel,'modules.hall.v.systemcenter.SysInboxPanel',_super);
		var __proto=SysInboxPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("站内消息");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
			this.registerStatusCallBack(SettingModifyPasswordPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_INBOX,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		__proto.gListRenderer=function(index,obj){
			var item=obj;
			item.updateData(null);
		}

		__proto.gListClick=function(obj,evt){}
		return SysInboxPanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysInputBankPwdPanel extends robotLegs.sprite.BaseUISprite
	var SysInputBankPwdPanel=(function(_super){
		function SysInputBankPwdPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.settingModifyPasswordPanelVo=null;
			this.commonTopComponent=null;
			this.commonGrid6Component0=null;
			this.btnDo=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysInputBankPwdPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysInputBankPwdPanel,'modules.hall.v.systemcenter.SysInputBankPwdPanel',_super);
		var __proto=SysInputBankPwdPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("添加银行卡");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonGrid6Component0.setTitle("输入资金密码");
			this.commonGrid6Component0.setPrompt("请输入旧登陆密码");
			this.btnDo.onClick(this,this.onDoClick);
			this.registerStatusCallBack(SettingModifyPasswordPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_INPUT_BANK_PWD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		__proto.onTxtClick=function(){}
		__proto.onDoClick=function(){
			var pwd=StringTool.trim(this.commonGrid6Component0.getName());;
			if(pwd.length < GameUtil.PWD_BANK_MIN){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","资金密码最低长度为"+GameUtil.PWD_BANK_MIN+"个字符！");
				return;
			}
		}

		return SysInputBankPwdPanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysModifyPasswordPanel extends robotLegs.sprite.BaseUISprite
	var SysModifyPasswordPanel=(function(_super){
		function SysModifyPasswordPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.settingModifyPasswordPanelVo=null;
			this.commonTopComponent=null;
			this.grid01Button0=null;
			this.commonGrid6Component0=null;
			this.commonGrid6Component1=null;
			this.commonGrid6Component2=null;
			this.btnDo=null;
			this.txtError=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysModifyPasswordPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysModifyPasswordPanel,'modules.hall.v.systemcenter.SysModifyPasswordPanel',_super);
		var __proto=SysModifyPasswordPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("修改登陆密码");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.grid01Button0.setTextColor("#FF33CC");
			this.commonGrid6Component0.setTitle("旧密码");
			this.commonGrid6Component1.setTitle("新密码");
			this.commonGrid6Component2.setTitle("确认密码");
			this.commonGrid6Component0.setMaxLen(16);
			this.commonGrid6Component1.setPrompt("请输入新登陆密码(8-16位)");
			this.commonGrid6Component1.setMaxLen(16);
			this.commonGrid6Component2.setPrompt("请确认新登陆密码(8-16位)");
			this.commonGrid6Component2.setMaxLen(16);
			this.btnDo.onClick(this,this.onDoClick);
			this.registerStatusCallBack(SettingModifyPasswordPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.grid01Button0.setText(DataMgr.get().playerInfoData.user_account);
			this.showError("");
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_MODIFY_PASSWORD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){
			this.commonGrid6Component0.setName("");
			this.commonGrid6Component1.setName("");
			this.commonGrid6Component2.setName("");
			this.showAlert("密码修改成功！");
		}

		__proto.onDoClick=function(){
			var oldPwd=StringTool.trim(this.commonGrid6Component0.getName());;
			var newpwd=StringTool.trim(this.commonGrid6Component1.getName());
			var new2Pwd=StringTool.trim(this.commonGrid6Component2.getName());
			if(newpwd.length < GameUtil.PWD_LEN_MIN){
				this.showTip("新密码最低长度为"+GameUtil.PWD_LEN_MIN+"个字符！");
				return;
			}
			if(newpwd !=new2Pwd){
				this.showTip("两次密码输入不一致!");
				return;
			}
			this.sendNotification("MODIFY_PASSWORD_Cmd",[oldPwd,newpwd,new2Pwd]);
		}

		__proto.showError=function(msg){
			this.txtError.text=msg;
		}

		return SysModifyPasswordPanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysMyBankCardPanel extends robotLegs.sprite.BaseUISprite
	var SysMyBankCardPanel=(function(_super){
		function SysMyBankCardPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.sysMyBankCardPanelVo=null;
			this.commonTopComponent=null;
			this.btnTxt=null;
			this.gList=null;
			this.n57=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysMyBankCardPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysMyBankCardPanel,'modules.hall.v.systemcenter.SysMyBankCardPanel',_super);
		var __proto=SysMyBankCardPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("我的银行卡");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.btnTxt.onClick(this,this.onTxtClick);
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.registerStatusCallBack(SysMyBankCardPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.sendNotification("GET_MY_BANK_CARD_Cmd",GameUtil.PANEL_SYS_MY_BANK_CARD);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_MY_BANK_CARD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onTxtClick=function(){
			var userBankAccountData=DataMgr.get().userBankAccountData;
			if(userBankAccountData==null){
				return;
			}
			if(userBankAccountData.items.length > GameUtil.BANK_CARD_NUMBER_MAX){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","最低可绑定"+GameUtil.BANK_CARD_NUMBER_MAX+"张银行卡");
				return;
			}
			this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_BINDING_BANK_CARD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_SYS_MY_BANK_CARD,GameUtil.PANEL_ANI_TO_LEFT));
		}

		// }
		__proto.onUpdateInfo=function(){
			var userBankAccountData=DataMgr.get().userBankAccountData;
			this.gList.numItems=userBankAccountData.items.length;
			var gLishH=(179+5)*userBankAccountData.items.length;
			this.gList.height=gLishH;
			console.log("SysMyBankCardPanel gList:",this.gList.height," view.height:",this.view.height,"  GRoot:",GRoot.inst.height," n57:",(this.n57.y+this.n57.height));
			if(this.n57.y+this.n57.height > this.view.height){
				var diffH=(this.n57.y+this.n57.height)-this.view.height;
				this.gList.height=gLishH-diffH;
				console.log("SysMyBankCardPanel gList2:",this.gList.height);
			}
		}

		__proto.gListRenderer=function(index,gobj){
			var item=gobj;
			var userBankAccountData=DataMgr.get().userBankAccountData;
			var data=userBankAccountData.items[index];
			if(data !=null)item.updateData(data,index);
		}

		return SysMyBankCardPanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetAccountComponent extends robotLegs.sprite.BaseUISprite
	var SysSetAccountComponent=(function(_super){
		function SysSetAccountComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.txtTitle=null;
			this.txtName=null;
			this.txtContent=null;
			this.txtDesc=null;
			this.btnOk=null;
			this.btnCancel=null;
			this.mobileController=null;
			this.codeTxt=null;
			this.btnCode=null;
			this.__time=60;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetAccountComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetAccountComponent,'modules.hall.v.systemcenter.SysSetAccountComponent',_super);
		var __proto=SysSetAccountComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.btnCode.onClick(this,this.getCode);
		}

		__proto.getCode=function(){
			this.__time=60;
			this.btnCode.offClick(this,this.getCode);
			this.btnCode.text=this.__time.toString();
			this.sendNotification("Get_Mobile_Code_Cmd",this.txtContent.text);
			this.startTime(1000,new Handler(this,this.changeTime));
		}

		__proto.changeTime=function(){
			this.__time--;
			if(this.__time==-1){
				this.btnCode.text="获取验证码";
				this.stopTime();
				this.__time=60;
				this.btnCode.onClick(this,this.getCode);
			}
			else{
				this.btnCode.text=this.__time.toString();
			}
		}

		return SysSetAccountComponent;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetAccountMorePanel extends robotLegs.sprite.BaseUISprite
	var SysSetAccountMorePanel=(function(_super){
		function SysSetAccountMorePanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.settingModifyPasswordPanelVo=null;
			this.commonTopComponent=null;
			this.grid01Button0=null;
			this.grid01Button1=null;
			this.btnOk=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetAccountMorePanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetAccountMorePanel,'modules.hall.v.systemcenter.SysSetAccountMorePanel',_super);
		var __proto=SysSetAccountMorePanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("账号设置");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.grid01Button0.onClick(this,this.onItemClick,[0]);
			this.grid01Button1.onClick(this,this.onItemClick,[1]);
		}

		__proto.onItemClick=function(index){
			switch(index){
				case 0:
					break ;
				case 1:
					break ;
				}
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_SET_ACCOUNT_MORE,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		return SysSetAccountMorePanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetAccountPanel extends robotLegs.sprite.BaseUISprite
	var SysSetAccountPanel=(function(_super){
		function SysSetAccountPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.sysSetAccountPanelVo=null;
			this.commonTopComponent=null;
			this.grid01Button0=null;
			this.grid01Button1=null;
			this.grid01Button2=null;
			this.grid01Button3=null;
			this.grid01Button4=null;
			this.grid01Button5=null;
			this.grid01Button6=null;
			this.sysSetAccountComponent=null;
			this.setController=null;
			this._curIndex=0;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetAccountPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetAccountPanel,'modules.hall.v.systemcenter.SysSetAccountPanel',_super);
		var __proto=SysSetAccountPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("账号设置");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.grid01Button2.setText("立即设置");
			this.grid01Button3.setText("立即设置");
			this.grid01Button4.setText("立即设置");
			this.grid01Button5.setText("立即设置");
			this.grid01Button6.setText("立即设置");
			this.grid01Button2.onClick(this,this.onItemClick,[2]);
			this.grid01Button3.onClick(this,this.onItemClick,[3]);
			this.grid01Button4.onClick(this,this.onItemClick,[4]);
			this.grid01Button5.onClick(this,this.onItemClick,[5]);
			this.grid01Button6.onClick(this,this.onItemClick,[6]);
			this.sysSetAccountComponent.btnOk.onClick(this,this.onSetBtnClick,[0])
			this.sysSetAccountComponent.btnCancel.onClick(this,this.onSetBtnClick,[10])
			this.registerStatusCallBack(SysSetAccountPanelVo.INIT_INFO,new Handler(this,this.onInitInfo));
			this.registerStatusCallBack(SysSetAccountPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.sendNotification("GET_USER_INFO_Cmd");
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_SET_ACCOUNT,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onInitInfo=function(){
			var userInfoData=DataMgr.get().userInfoData;
			this.grid01Button0.setText(userInfoData.user_account);
			this.grid01Button1.setText(userInfoData.create_time);
			if(userInfoData.user_nickname !=null)
				this.grid01Button2.setText(userInfoData.user_nickname);
			if(userInfoData.user_name !=null)
				this.grid01Button3.setText(userInfoData.user_name);
			if(userInfoData.wechat_account !="")
				this.grid01Button4.setText(userInfoData.wechat_account);
			if(userInfoData.mobile_number !="")
				this.grid01Button5.setText(userInfoData.mobile_number);
			if(userInfoData.user_email !="")
				this.grid01Button6.setText(userInfoData.user_email);
		}

		__proto.onUpdateInfo=function(){
			this.sendNotification("GET_USER_INFO_Cmd");
			this.sendNotification("SHOW_PROMPT_TEXT_Cmd","设置成功！");
		}

		__proto.onItemClick=function(index){
			this._curIndex=index;
			var userInfoData=DataMgr.get().userInfoData;
			if(userInfoData==null)
				return;
			switch(index){
				case 2:{
						this.setController.selectedIndex=1;
						this.sysSetAccountComponent.mobileController.selectedIndex=0;
						this.sysSetAccountComponent.txtName.text="昵称";
						this.sysSetAccountComponent.txtContent.text="";
						this.sysSetAccountComponent.txtContent.asTextInput.restrict="";
						this.sysSetAccountComponent.txtDesc.text="(请将昵称长度控制在1～8个字符以内)";
					}
					break ;
				case 3:
					this.sysSetAccountComponent.mobileController.selectedIndex=0;
					this.setController.selectedIndex=1;
					this.sysSetAccountComponent.txtName.text="真实姓名";
					this.sysSetAccountComponent.txtContent.text="";
					this.sysSetAccountComponent.txtContent.asTextInput.restrict=GameUtil.Restrict_zh;
					this.sysSetAccountComponent.txtDesc.text="";
					break ;
				case 4:
					this.sysSetAccountComponent.mobileController.selectedIndex=0;
					this.setController.selectedIndex=1;
					this.sysSetAccountComponent.txtName.text="微信";
					this.sysSetAccountComponent.txtContent.text="";
					this.sysSetAccountComponent.txtContent.asTextInput.restrict=GameUtil.Restrict_account;
					this.sysSetAccountComponent.txtDesc.text="";
					break ;
				case 5:
					this.setController.selectedIndex=1;
					this.sysSetAccountComponent.mobileController.selectedIndex=1;
					this.sysSetAccountComponent.txtName.text="手机";
					this.sysSetAccountComponent.txtContent.text="";
					this.sysSetAccountComponent.txtContent.asTextInput.restrict=GameUtil.Restrict_number;
					this.sysSetAccountComponent.codeTxt.asTextInput.restrict=GameUtil.Restrict_number;
					break ;
				case 6:{
						this.sysSetAccountComponent.mobileController.selectedIndex=0;
						this.setController.selectedIndex=1;
						this.sysSetAccountComponent.txtName.text="邮箱";
						this.sysSetAccountComponent.txtContent.text="";
						this.sysSetAccountComponent.txtContent.asTextInput.restrict="";
						this.sysSetAccountComponent.txtDesc.text="";
					}
					break ;
				}
		}

		__proto.onSetBtnClick=function(index){
			this.setController.selectedIndex=0;
			switch(index){
				case 0:;
					var data=new Object();
					if(this._curIndex==2){
					data["case"]="user_nickname";
						data.user_nickname=StringTool.trim(this.sysSetAccountComponent.txtContent.text);
					}
					if(this._curIndex==3){
					data["case"]="user_name";
						data.user_name=StringTool.trim(this.sysSetAccountComponent.txtContent.text);
					}
					if(this._curIndex==4){
					data["case"]="user_wechat_account";
						data.wechat_account=StringTool.trim(this.sysSetAccountComponent.txtContent.text);
					}
					if(this._curIndex==5){
					data["case"]="user_mobile_number";
						data.mobile_number=StringTool.trim(this.sysSetAccountComponent.txtContent.text);
						data.mobile_country_code="86";
						data.auth_code=this.sysSetAccountComponent.codeTxt.text;
					}
					if(this._curIndex==6){
					data["case"]="user_email";
						data.user_email=StringTool.trim(this.sysSetAccountComponent.txtContent.text);
						if(data.user_email.length==0){
							this.showAlert("请填写邮箱地址");
							return;
						}
						if(data.user_email.indexOf("@")==-1){
							this.showAlert("邮箱格式不正确");
							return;
						}
					}
					this.sendNotification("SET_INFO_Cmd",data);
					break ;
				case 1:
					break ;
				}
		}

		return SysSetAccountPanel;
	})(BaseUISprite)


	//class publics.m.alert.AlertVo extends robotLegs.vo.BaseViewVo
	var AlertVo=(function(_super){
		function AlertVo(){
			this.txt="";
			this.callBackCmd="";
			this.btnCount=1;
			this.data=null;
			AlertVo.__super.call(this);
		}

		__class(AlertVo,'publics.m.alert.AlertVo',_super);
		return AlertVo;
	})(BaseViewVo)


	//class modules.hall.v.systemcenter.SysSetBankPwdPanel extends robotLegs.sprite.BaseUISprite
	var SysSetBankPwdPanel=(function(_super){
		function SysSetBankPwdPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.settingModifyPasswordPanelVo=null;
			this.commonTopComponent=null;
			this.grid01Button0=null;
			this.commonGrid6Component0=null;
			this.commonGrid6Component1=null;
			this.commonGrid6Component2=null;
			this.btnDo=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetBankPwdPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetBankPwdPanel,'modules.hall.v.systemcenter.SysSetBankPwdPanel',_super);
		var __proto=SysSetBankPwdPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("设定资金密码");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.grid01Button0.setTextColor("#FF33CC");
			this.commonGrid6Component0.setTitle("输入新的资金密码",150);
			this.commonGrid6Component1.setTitle("确认新的资金密码",150);
			this.commonGrid6Component0.setPrompt("密码由字母数字"+GameUtil.PWD_BANK_MIN+"-"+GameUtil.PWD_BANK_MAX+"个字符组成");
			this.commonGrid6Component1.setPrompt("密码由字母数字"+GameUtil.PWD_BANK_MIN+"-"+GameUtil.PWD_BANK_MAX+"个字符组成");
			this.commonGrid6Component2.setPrompt("密码由字母数字"+GameUtil.PWD_BANK_MIN+"-"+GameUtil.PWD_BANK_MAX+"个字符组成");
			this.commonGrid6Component0.setNameWidth(400);
			this.commonGrid6Component1.setNameWidth(400);
			this.commonGrid6Component2.setNameWidth(400);
			this.btnDo.onClick(this,this.onDoClick);
			this.registerStatusCallBack(SettingModifyPasswordPanelVo.UPDATE_INFO,new Handler(this,this.onUpdateInfo));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.grid01Button0.setText(DataMgr.get().playerInfoData.user_account);
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_SET_BANK_PWD,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){
			this.commonGrid6Component0.setName("");
			this.commonGrid6Component1.setName("");
			this.commonGrid6Component2.setName("");
		}

		__proto.onTxtClick=function(){}
		__proto.onDoClick=function(){
			var new2Pwd=StringTool.trim(this.commonGrid6Component0.getName());
			var newpwd=StringTool.trim(this.commonGrid6Component1.getName());
			var oldPwd=StringTool.trim(this.commonGrid6Component2.getName());
			if(new2Pwd.length < GameUtil.PWD_LEN_MIN){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","资金密码最低长度为"+GameUtil.PWD_BANK_MIN+"个字符！");
				return;
			}
			if(new2Pwd !=newpwd){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","资金密码两次输入不一致");
				return;
			}
			this.sendNotification("MODIFY_MONEY_PASSWORD_Cmd",[oldPwd,newpwd,new2Pwd]);
		}

		return SysSetBankPwdPanel;
	})(BaseUISprite)


	//class publics.m.alert.AlertWindowVo extends robotLegs.vo.BaseViewVo
	var AlertWindowVo=(function(_super){
		function AlertWindowVo(){
			this.rotateControllerIndex=0;
			this.alertVo=new AlertVo();
			AlertWindowVo.__super.call(this);
		}

		__class(AlertWindowVo,'publics.m.alert.AlertWindowVo',_super);
		return AlertWindowVo;
	})(BaseViewVo)


	//class modules.hall.v.systemcenter.SysSetFavoritePanel extends robotLegs.sprite.BaseUISprite
	var SysSetFavoritePanel=(function(_super){
		function SysSetFavoritePanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.sysSetFavoritePanelVo=null;
			this.sysSetFavoritePanelGame=null;
			this.btnCancel=null;
			this.btnOk=null;
			this.gFavorList=null;
			this.gLastList=null;
			this.tabBtnComponent=null;
			this.gAllGameList=null;
			this.testController=null;
			this.dragIndex=0;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetFavoritePanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetFavoritePanel,'modules.hall.v.systemcenter.SysSetFavoritePanel',_super);
		var __proto=SysSetFavoritePanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.btnCancel.onClick(this,this.onCancelClick);
			this.btnOk.onClick(this,this.onOkClick);
			this.tabBtnComponent.selectController.on("fui_state_changed",this,this.onTabStateChange);
			this.gFavorList.itemRenderer=Handler.create(this,this.gFavorListRenderer,null,false);
			this.gFavorList.on("fui_click_item",this,this.gFavorListListClick);
			this.gLastList.itemRenderer=Handler.create(this,this.gLastListRenderer,null,false);
			this.gAllGameList.itemRenderer=Handler.create(this,this.gAllGameListRenderer,null,false);
			this.gAllGameList.on("fui_click_item",this,this.gAllGameListClick);
			this.registerStatusCallBack(SysSetFavoritePanelVo.INIT_INFO,new Handler(this,this.onInitInfo));
			this.registerStatusCallBack(SysSetFavoritePanelVo.DONE_SUCCESS,new Handler(this,this.onDoneSuccess));
			this.registerStatusCallBack(SysSetFavoritePanelVo.UPDATE_FAVORITE_LIST_STATUS,new Handler(this,this.updateFavorList));
		}

		// testController.selectedPage=UITypeConfig.UI_TYPE;
		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.sysSetFavoritePanelVo.myFavoritesTempArr=DataMgr.get().myFavorites.concat();
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			if(favoriteLotteryData==null){
				this.sendNotification("GET_LOTTERY_LIST_Cmd",GameUtil.PANEL_SYS_SET_FAVORITE);
				return;
			}
			this.onInitInfo();
		}

		__proto.onCancelClick=function(){
			DataMgr.get().myFavorites=this.sysSetFavoritePanelVo.myFavoritesTempArr;
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_SET_FAVORITE,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onOkClick=function(){
			this.sendNotification("SET_LOTTERY_LIST_Cmd");
		}

		__proto.onInitInfo=function(){
			this.updateFavorList();
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			var titles=[];
			var favoriteLotteryItem;
			for (var i=0;i < favoriteLotteryData.itemDic.values.length;i++){
				favoriteLotteryItem=favoriteLotteryData.itemDic.values[i];
				titles.push(favoriteLotteryItem.title);
			}
			this.tabBtnComponent.setTabLabel(titles);
			this.updateAllGameList();
			this.gLastList.numItems=DataMgr.get().recentGameList.length;
			this.gAllGameList.height=GRoot.inst.height-this.gAllGameList.y;
			this.sendNotification("UPDATE_FAVORITE_PANEL_GAME_Cmd");
		}

		__proto.updateFavorList=function(){
			this.gFavorList.removeChildren();
			var myFavorites=DataMgr.get().myFavorites;
			this.gFavorList.numItems=myFavorites.length;
			this.autoResizeFavoriteList();
			this.gAllGameList.height=GRoot.inst.height-this.gAllGameList.y;
		}

		__proto.autoResizeFavoriteList=function(){
			var myFavorites=DataMgr.get().myFavorites;
			var columnCount=Math.floor(this.gFavorList.width/GameUtil.GRID_FAVORITE_WIDTH);
			var rowCount=Math.ceil(myFavorites.length/columnCount);
			this.gFavorList.height=rowCount *GameUtil.GRID_FAVORITE_HEIGHT;
			console.log("updateFavorList columnCount:",columnCount," rowCount:",rowCount," height:",this.gFavorList.height);
		}

		__proto.updateAllGameList=function(){
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			var selectIndex=this.tabBtnComponent.selectController.selectedIndex;
			var favoriteLotteryItem=favoriteLotteryData.itemDic.values[selectIndex];
			this.gAllGameList.numItems=favoriteLotteryItem.line.length;
		}

		__proto.gFavorListRenderer=function(index,obj){
			var myFavorites=DataMgr.get().myFavorites;
			var gId=myFavorites[index];
			var showIndex=0;
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			var favoriteLotteryItem;
			for (var i=0;i < favoriteLotteryData.itemDic.values.length;i++){
				favoriteLotteryItem=favoriteLotteryData.itemDic.values[i];
				var indexObj=favoriteLotteryItem.lineDic.get(gId);
				if(indexObj !=null){
					showIndex=2;
					break ;
				}
			};
			var item=obj;
			item.updateData(gId,showIndex);
			item.draggable=true;
			item.index=index;
			var rect=new Rectangle();
			this.gFavorList.localToGlobalRect(0,0,this.gFavorList.width,this.gFavorList.height,rect);
			GRoot.inst.globalToLocalRect(rect.x,rect.y,rect.width,rect.height,rect);
			item.dragBounds=rect;
			item.on("fui_drag_start",this,this.onDragStart);
			item.on("fui_drag_end",this,this.onDragEnd);
		}

		// }
		__proto.onDragStart=function(evt){
			var locPoint=this.gFavorList.globalToLocal(evt.stageX,evt.stageY);
			var item=evt.currentTarget ["$owner"];
			console.log("DragStart ",item.x,item.y);
			console.log("DragStart 1:",item.x,item.y);
			this.dragIndex=item.index;
			console.log("dragIndex:",this.dragIndex);
		}

		// }
		__proto.onDragEnd=function(evt){
			var item=evt.currentTarget ["$owner"];
			console.log("DragEnd ",item.index);
			var locPoint=this.gFavorList.globalToLocal(evt.stageX,evt.stageY);
			for (var i=0;i < this.gFavorList.numItems;i++){
				if(i !=this.dragIndex){
					var item2=this.gFavorList.getChildAt(i);
					var tempId;
					var myFavorites=DataMgr.get().myFavorites;
					if(item2.hit(locPoint)){
						tempId=myFavorites[item.index]
						myFavorites[item.index]=myFavorites[item2.index];
						myFavorites[item2.index]=tempId;
						break ;
					}
				}
			}
			this.updateFavorList();
		}

		__proto.gFavorListListClick=function(obj,evt){
			var item=obj;
			switch(evt.target["$owner"]){
				case item.btnRemove:;
					var gId=item.gId;
					var myFavorites=DataMgr.get().myFavorites;
					var index=myFavorites.indexOf(gId)
					if(index !=-1){
						myFavorites.splice(index,1);
						this.updateFavorList();
						this.updateAllGameList();
						this.sysSetFavoritePanelGame.update();
					}
					break ;
				}
		}

		__proto.gLastListRenderer=function(index,obj){
			var recentGameList=DataMgr.get().recentGameList;
			var item=obj;
			item.updateData(recentGameList[index],0);
		}

		__proto.gAllGameListRenderer=function(index,obj){
			var selectIndex=this.tabBtnComponent.selectController.selectedIndex;
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			var favoriteLotteryItem=favoriteLotteryData.itemDic.values[selectIndex];
			var gId=favoriteLotteryItem.line[index].id;
			var myFavorites=DataMgr.get().myFavorites;
			var showIndex=0;
			if(myFavorites.indexOf(gId)==-1)
				showIndex=1;
			var item=obj;
			item.updateData(gId,showIndex);
		}

		__proto.gAllGameListClick=function(obj,evt){
			var item=obj;
			switch(evt.target["$owner"]){
				case item.btnAdd:;
					var gId=item.gId;
					var selectIndex=this.tabBtnComponent.selectController.selectedIndex;
					var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
					var favoriteLotteryItem=favoriteLotteryData.itemDic.values[selectIndex];
					var index=favoriteLotteryItem.lineDic.get(item.gId);
					var favoriteLotteryItem2=favoriteLotteryItem.line[index];
					if(!DataMgr.get().numberGamePlayConfigData.data[gId]){
						this.sendNotification("SHOW_PROMPT_TEXT_Cmd",favoriteLotteryItem2.name+" 暂未开放！");
						return;
					}
					if(!favoriteLotteryItem2.is_active){
						this.sendNotification("SHOW_PROMPT_TEXT_Cmd",favoriteLotteryItem2.name+" 暂未开放！");
						return;
					};
					var myFavorites=DataMgr.get().myFavorites;
					if(myFavorites.indexOf(gId)==-1){
						if(myFavorites.length >=GameUtil.FAVORITE_GAME_MAX){
							this.sendNotification("SHOW_PROMPT_TEXT_Cmd","我的最爱列表最多设置"+GameUtil.FAVORITE_GAME_MAX+"个游戏！");
							return;
						}
						myFavorites.push(gId);
						item.hideButton();
						DataMgr.get().myFavorites=myFavorites;
						this.updateFavorList();
					}
					break ;
				}
		}

		__proto.onTabStateChange=function(){
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			var favoriteLotteryItem;
			var selectIndex=this.tabBtnComponent.selectController.selectedIndex;
			favoriteLotteryItem=favoriteLotteryData.itemDic.values[selectIndex];
			this.gAllGameList.numItems=favoriteLotteryItem.line.length;
		}

		__proto.onDoneSuccess=function(){
			this.sysSetFavoritePanelVo.myFavoritesTempArr=DataMgr.get().myFavorites.concat();
			this.showTip("设置我的最爱列表成功","CLOSE_LOTTERY_LIST_Cmd");
		}

		return SysSetFavoritePanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetFavoritePanelGame extends robotLegs.sprite.BaseUISprite
	var SysSetFavoritePanelGame=(function(_super){
		function SysSetFavoritePanelGame(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.sysSetFavoritePanelGameListVo=null;
			this.lotteryList=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetFavoritePanelGame.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetFavoritePanelGame,'modules.hall.v.systemcenter.SysSetFavoritePanelGame',_super);
		var __proto=SysSetFavoritePanelGame.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.lotteryList.itemRenderer=Handler.create(this,this.gLastListRenderer,null,false);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack(SysSetFavoritePanelGameListVo.UPDATE_INFO,new Handler(this,this.update));
		}

		__proto.update=function(){
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			this.lotteryList.numItems=favoriteLotteryData.itemDic.values.length;
			this.lotteryList.height=GRoot.inst.height-this.view.y;
		}

		//totalHeight;
		__proto.gLastListRenderer=function(index,obj){
			var selectIndex=index;
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			var favoriteLotteryItem=favoriteLotteryData.itemDic.values[selectIndex];
			(obj).update(favoriteLotteryItem);
		}

		return SysSetFavoritePanelGame;
	})(BaseUISprite)


	//class publics.m.chip.ChipIconVo extends robotLegs.vo.BaseViewVo
	var ChipIconVo=(function(_super){
		function ChipIconVo(){
			this.clientSeatId=0;
			this.createTime=0;
			this.chipValue=0;
			this.creatingBol=false;
			this.moveTime=0;
			this.moveNowBol=false;
			this.enterWhenBetBol=false;
			this.lastChipBol=false;
			this.margeBol=false;
			this.callBackAfterMoveCmd=null;
			this.betAreaType=0;
			this.movingBol=false;
			this.deletingBol=false;
			ChipIconVo.__super.call(this);
			this.randomLocation=new Point();
			this.startLocation=new Point();
			this.moveLocationAreaArr=[];
		}

		__class(ChipIconVo,'publics.m.chip.ChipIconVo',_super);
		ChipIconVo.DISPLAY_ICON_STATUS="Display_Icon_Status";
		ChipIconVo.DISPLAY_ICON_NOT_USE_ANI_STATUS="Display_Icon_Not_Use_Ani_Status";
		ChipIconVo.MOVE_STATUS="Move_Status";
		ChipIconVo.REMOVE_CHIP_BY_ANI_STATUS="Remove_Chip_By_Ani_Status";
		ChipIconVo.REMOVE_CHIP_WITHOUT_ANI_STATUS="Remove_Chip_Without_Ani_Status";
		return ChipIconVo;
	})(BaseViewVo)


	//class modules.hall.v.systemcenter.SysSetPanel extends robotLegs.sprite.BaseUISprite
	var SysSetPanel=(function(_super){
		function SysSetPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.sysSetPanelVo=null;
			this.commonTopComponent=null;
			this.commonGrid5Component0=null;
			this.commonGrid5Component1=null;
			this.commonGrid5Component2=null;
			this.commonGrid5Component3=null;
			this.commonGrid5Component4=null;
			this.btnLoginOut=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetPanel,'modules.hall.v.systemcenter.SysSetPanel',_super);
		var __proto=SysSetPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("设置");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			var iconConfigData=DataMgr.get().iconConfigData;
			var setIconConfigData=iconConfigData.setIconConfigData;
			this.commonGrid5Component0.updateData(iconConfigData.getIcon2Vo(0),0);
			this.commonGrid5Component1.updateData(iconConfigData.getIcon2Vo(1),1);
			this.commonGrid5Component2.updateData(iconConfigData.getIcon2Vo(2),2);
			this.commonGrid5Component3.updateData(iconConfigData.getIcon2Vo(3),3);
			this.commonGrid5Component4.updateData(iconConfigData.getIcon2Vo(4),4);
			this.commonGrid5Component0.onClick(this,this.onItemClick,[0]);
			this.commonGrid5Component1.onClick(this,this.onItemClick,[1]);
			this.commonGrid5Component2.onClick(this,this.onItemClick,[2]);
			this.commonGrid5Component3.onClick(this,this.onItemClick,[3]);
			this.commonGrid5Component4.onClick(this,this.onItemClick,[4]);
			this.btnLoginOut.onClick(this,this.onLoginOutClick);
			this.registerStatusCallBack(SysSetPanelVo.LOGIN_OUT_SUCC,new Handler(this,this.onLoginOutSucc));
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onItemClick=function(index){
			switch(index){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_SET_ACCOUNT,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_SYS_SET,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_SET_SAFE,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_SYS_SET,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 2:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_SET_VOICE,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_SYS_SET,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 3:
					this.openQuestion();
					break ;
				case 4:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_ABOUT,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_SYS_SET,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_SET,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		__proto.gListRenderer=function(index,obj){
			var item=obj;
			item.updateData(null);
		}

		__proto.gListClick=function(obj,evt){}
		__proto.onLoginOutClick=function(){
			this.sendNotification("LOGIN_OUT_Cmd");
		}

		__proto.onLoginOutSucc=function(){
			this.onBackClick();
		}

		__proto.openQuestion=function(){{
				var rect=new Rectangle(0,0,GRoot.inst.width,GRoot.inst.height);
				this.sendNotification("Open_Iframe_Cmd",[GameUtil.GG_DOMAIN+"/index.php?s=/WebHelp/index/onlyHelp/1",new Handler(this,this.closeHelp),rect]);
			}
		}

		// }
		__proto.closeHelp=function(){
			this.sendNotification("Close_Iframe_Cmd");
		}

		return SysSetPanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetSafePanel extends robotLegs.sprite.BaseUISprite
	var SysSetSafePanel=(function(_super){
		function SysSetSafePanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.sysSetPanelVo=null;
			this.commonTopComponent=null;
			this.grid04Button0=null;
			this.grid04Button1=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetSafePanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetSafePanel,'modules.hall.v.systemcenter.SysSetSafePanel',_super);
		var __proto=SysSetSafePanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("安全设置");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.grid04Button0.setDesc("建议您定期更改密码以保护账户安全");
			this.grid04Button1.setDesc("建议您定期更改密码以保护资金安全");
			this.grid04Button0.onClick(this,this.onItemClick,[0]);
			this.grid04Button1.onClick(this,this.onItemClick,[1]);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
		}

		__proto.onItemClick=function(index){
			switch(index){
				case 0:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_MODIFY_PASSWORD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_SYS_SET_SAFE,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				case 1:
					this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_SYS_SET_BANK_PWD,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_SYS_SET_SAFE,GameUtil.PANEL_ANI_TO_LEFT));
					break ;
				}
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_SET_SAFE,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.onUpdateInfo=function(){}
		__proto.gListRenderer=function(index,obj){
			var item=obj;
			item.updateData(null);
		}

		__proto.gListClick=function(obj,evt){}
		__proto.onLoginOutClick=function(){
			this.sendNotification("LOGIN_OUT_Cmd");
		}

		__proto.onLoginOutSucc=function(){
			this.onBackClick();
		}

		return SysSetSafePanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.SysSetVoicePanel extends robotLegs.sprite.BaseUISprite
	var SysSetVoicePanel=(function(_super){
		function SysSetVoicePanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.sysSetVoicePanelVo=null;
			this.commonTopComponent=null;
			this.commonGrid41Component0=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SysSetVoicePanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SysSetVoicePanel,'modules.hall.v.systemcenter.SysSetVoicePanel',_super);
		var __proto=SysSetVoicePanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.commonTopComponent.setTitle("音效设置");
			this.commonTopComponent.btnBack.onClick(this,this.onBackClick);
			this.commonGrid41Component0.setTitle("音效开关");
			this.commonGrid41Component0.setTitle2("开启/关闭所有音效");
			this.commonGrid41Component0.btnSwitch.onClick(this,this.openOrCloseVoice);
			this.commonGrid41Component0.btnSwitch.selected=this.sysSetVoicePanelVo.closeVoice=="0" ? true :false;
		}

		__proto.onBackClick=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_SET_VOICE,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		__proto.openOrCloseVoice=function(){
			var closeVoice=this.commonGrid41Component0.getSelected()? "0" :"1";
			this.sendNotification("SET_VOICE_CMD",closeVoice);
		}

		return SysSetVoicePanel;
	})(BaseUISprite)


	//class modules.hall.v.systemcenter.TabBtnComponent extends robotLegs.sprite.BaseUISprite
	var TabBtnComponent=(function(_super){
		function TabBtnComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.selectController=null;
			this.visibleController=null;
			this.tabBtn0=null;
			this.tabBtn1=null;
			this.tabBtn2=null;
			this.tabBtn3=null;
			this.tabBtn4=null;
			this.tabBtn5=null;
			this.tabBtn6=null;
			this.tabBtn7=null;
			this.n5=null;
			this.tabs=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			TabBtnComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(TabBtnComponent,'modules.hall.v.systemcenter.TabBtnComponent',_super);
		var __proto=TabBtnComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.tabs=[this.tabBtn0,this.tabBtn1,this.tabBtn2,this.tabBtn3,this.tabBtn4,this.tabBtn5,this.tabBtn6,this.tabBtn7];
		}

		__proto.setTabLabel=function(lb1s){
			return;
			this.visibleController.selectedIndex=lb1s.length;
			var __x=0;
			var i=0;
			var tab;
			for (i=0;i < lb1s.length;i++){
				tab=this.tabs[i];
				tab.title=lb1s[i];
				tab.x=__x;
				__x=tab.x+tab.width;
			}
			for (;i < this.tabs.length;i++){
				tab=this.tabs[i];
				tab.x=0;
			}
		}

		return TabBtnComponent;
	})(BaseUISprite)


	//class publics.m.voice.VoiceVo extends robotLegs.vo.BaseViewVo
	var VoiceVo=(function(_super){
		function VoiceVo(){
			this.soundValue=0;
			this.musicValue=0;
			VoiceVo.__super.call(this);
		}

		__class(VoiceVo,'publics.m.voice.VoiceVo',_super);
		return VoiceVo;
	})(BaseViewVo)


	//class publics.m.voice.VoiceWindowVo extends robotLegs.vo.BaseViewVo
	var VoiceWindowVo=(function(_super){
		function VoiceWindowVo(){
			this.voiceVo=new VoiceVo();
			VoiceWindowVo.__super.call(this);
		}

		__class(VoiceWindowVo,'publics.m.voice.VoiceWindowVo',_super);
		return VoiceWindowVo;
	})(BaseViewVo)


	//class modules.loading.v.DataLoading extends robotLegs.sprite.BaseUISprite
	var DataLoading=(function(_super){
		function DataLoading(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.loadingAni=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			DataLoading.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(DataLoading,'modules.loading.v.DataLoading',_super);
		var __proto=DataLoading.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
		}

		return DataLoading;
	})(BaseUISprite)


	//class modules.loading.v.Loading extends robotLegs.sprite.BaseUISprite
	var Loading=(function(_super){
		function Loading(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.loadingVo=null;
			this.loadingBar=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Loading.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Loading,'modules.loading.v.Loading',_super);
		var __proto=Loading.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			console.log("Loading wh:",this.view.width,this.view.height);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_Progress_Status",new Handler(this,this.updateProgress));
		}

		/**
		*更新进度
		*
		*/
		__proto.updateProgress=function(){
			this.loadingBar.value=Number(Number(this.loadingVo.progress *100).toFixed(2));
		}

		return Loading;
	})(BaseUISprite)


	//class modules.loading.v.OpenAppPage extends robotLegs.sprite.BaseUISprite
	var OpenAppPage=(function(_super){
		function OpenAppPage(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.chooseController=null;
			this.startBtn=null;
			this.openAppPageVo=null;
			this.pageList=null;
			this.__currentPage=0;
			this.__mouseDownX=NaN;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			OpenAppPage.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(OpenAppPage,'modules.loading.v.OpenAppPage',_super);
		var __proto=OpenAppPage.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.startBtn.onClick(this,this.start);
			this.pageList.on("mousedown",this,this.addMouseUpEvent);
		}

		__proto.addMouseUpEvent=function(){
			this.__mouseDownX=this.pageList.displayObject.mouseX;
			this.pageList.displayObject.stage.on("mouseup",this,this.checkPage);
		}

		/**
		*鼠标抬起
		*
		*/
		__proto.checkPage=function(){
			this.pageList.displayObject.stage.off("mouseup",this,this.checkPage);
			if(this.pageList.displayObject.mouseX-this.__mouseDownX < 0){
				if(this.__currentPage < 2)
					this.__currentPage++;
			}
			else if(this.pageList.displayObject.mouseX-this.__mouseDownX > 0){
				if(this.__currentPage > 0)
					this.__currentPage--;
			}
			this.chooseController.selectedIndex=this.__currentPage;
			this.pageList.scrollToView(this.__currentPage,true);
		}

		__proto.start=function(){
			this.sendNotification("Close_Open_App_Page_Cmd");
		}

		return OpenAppPage;
	})(BaseUISprite)


	//class modules.login.v.LoginInputComponent extends robotLegs.sprite.BaseUISprite
	var LoginInputComponent=(function(_super){
		function LoginInputComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.loginInputVo=null;
			this.accountTxt=null;
			this.passwordTxt=null;
			this.loginBtn=null;
			this.btnReg=null;
			this.txtError=null;
			this.n25=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			LoginInputComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(LoginInputComponent,'modules.login.v.LoginInputComponent',_super);
		var __proto=LoginInputComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			if(this.loginInputVo.loginAccount.length > 0){
				this.accountTxt.text=this.loginInputVo.loginAccount;
				this.passwordTxt.text=this.loginInputVo.loginPassword;
			}
			else{
			}
			this.txtError.text="";
			this.loginBtn.onClick(this,this.login);
			this.accountTxt.on("focus",this,this.onFocus);
		}

		// trace("accountTxt1:",accountTxt.x,accountTxt.y);
		__proto.addedToStage1=function(){}
		// if (Browser.onPC)emailInput.focus();
		__proto.removedFromStage1=function(){}
		// Browser.document.body.removechild(passwordInput);
		__proto.onResize=function(){}
		// Utils.fitDOMElementInArea(passwordInput,passwordTxt.displayObject,0,0,passwordTxt.width,passwordTxt.height);
		__proto.processInputting=function(e){}
		// inputObj.value=str;
		__proto.onFocus=function(){
			this.txtError.text="";
		}

		__proto.clearAccountText=function(){
			this.txtError.text="";
			this.accountTxt.text="";
			this.view.getChild("cmpAccount").off("click",this,this.clearAccountText);
			this.accountTxt.focusable=true;
		}

		__proto.clearPasswordText=function(){
			this.passwordTxt.text="";
			this.view.getChild("cmpPassword").off("click",this,this.clearPasswordText);
		}

		__proto.login=function(){
			var account=StringTool.trim(this.accountTxt.text);
			if(account.length < GameUtil.ACCOUNT_LEN_MIN){
				this.showError("账号最低输入"+GameUtil.ACCOUNT_LEN_MIN+"个字符！");
				return;
			};
			var pwd=StringTool.trim(this.passwordTxt.text);
			if(pwd.length < GameUtil.PWD_LEN_MIN){
				this.showError("密码最低输入"+GameUtil.PWD_LEN_MIN+"个字符！");
				return;
			}
			this.loginInputVo.loginAccount=this.accountTxt.text;
			this.loginInputVo.loginPassword=this.passwordTxt.text;
			this.sendNotification("Login_Cmd");
		}

		__proto.showError=function(msg){
			this.txtError.text=msg;
		}

		return LoginInputComponent;
	})(BaseUISprite)


	//class modules.login.v.LoginOtherComponent extends robotLegs.sprite.BaseUISprite
	var LoginOtherComponent=(function(_super){
		function LoginOtherComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btnQQ=null;
			this.btnWx=null;
			this.btnTrypaly=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			LoginOtherComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(LoginOtherComponent,'modules.login.v.LoginOtherComponent',_super);
		return LoginOtherComponent;
	})(BaseUISprite)


	//class modules.login.v.LoginPanel extends robotLegs.sprite.BaseUISprite
	var LoginPanel=(function(_super){
		function LoginPanel(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.loginVo=null;
			this.loginInputComponent=null;
			this.loginValidComponent=null;
			this.loginOtherComponent=null;
			this.registerComponent=null;
			this.tryPlayComponent=null;
			this.stateController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			LoginPanel.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(LoginPanel,'modules.login.v.LoginPanel',_super);
		var __proto=LoginPanel.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.loginInputComponent.btnReg.onClick(this,this.onToRegPageClick);
			this.loginOtherComponent.btnTrypaly.onClick(this,this.onToPageTryplayClick);
			this.registerComponent.registerInputComponent.btnReg.onClick(this,this.onRegClick);
			this.registerComponent.btnBack.onClick(this,this.onToLoginPageClick);
			this.tryPlayComponent.btnBack.onClick(this,this.onToLoginPageClick);
			this.registerStatusCallBack(LoginVo.RegisterTry_Complete,new Handler(this,this.onRegisterTryComplete));
			this.registerStatusCallBack(LoginVo.Register_Complete,new Handler(this,this.onRegisterComplete));
			console.log("LoginPanel wh:",this.view.width,this.view.height);
		}

		__proto.addedToStage=function(e){
			_super.prototype.addedToStage.call(this,e);
			this.loginInputComponent.addedToStage1();
		}

		__proto.removedFromStage=function(e){
			_super.prototype.removedFromStage.call(this,e);
			this.loginInputComponent.removedFromStage1();
		}

		__proto.onToRegPageClick=function(){
			this.stateController.selectedIndex=1;
		}

		__proto.onToPageTryplayClick=function(){
			this.stateController.selectedIndex=2;
		}

		__proto.onToLoginPageClick=function(){
			this.stateController.selectedIndex=0;
		}

		__proto.onRegClick=function(){}
		__proto.onRegisterTryPlayClick=function(){}
		__proto.onRegisterTryComplete=function(){
			if(this.loginVo.registerData.status_code==1){
				this.tryPlayComponent.tryPlayInputComponent.clearData();
				if(this.stateController.selectedIndex==2)
					this.stateController.selectedIndex=0;
				}else{
				this.tryPlayComponent.tryPlayInputComponent.showError(this.loginVo.registerData.status_msg);
			}
		}

		__proto.onRegisterComplete=function(){
			if(this.loginVo.registerData.status_code==1){
				this.registerComponent.registerInputComponent.clearData();
				if(this.stateController.selectedIndex==2)
					this.stateController.selectedIndex=0;
				}else{
				this.registerComponent.registerInputComponent.showError(this.loginVo.registerData.status_msg);
			}
		}

		return LoginPanel;
	})(BaseUISprite)


	//class modules.login.v.LoginValidComponent extends robotLegs.sprite.BaseUISprite
	var LoginValidComponent=(function(_super){
		function LoginValidComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			LoginValidComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(LoginValidComponent,'modules.login.v.LoginValidComponent',_super);
		return LoginValidComponent;
	})(BaseUISprite)


	//class modules.login.v.RegisterComponent extends robotLegs.sprite.BaseUISprite
	var RegisterComponent=(function(_super){
		function RegisterComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.btnBack=null;
			this.registerInputComponent=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			RegisterComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(RegisterComponent,'modules.login.v.RegisterComponent',_super);
		return RegisterComponent;
	})(BaseUISprite)


	//class modules.login.v.RegisterInputComponent extends robotLegs.sprite.BaseUISprite
	var RegisterInputComponent=(function(_super){
		function RegisterInputComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.accountTxt=null;
			this.passwordTxt=null;
			this.password2Txt=null;
			this.btnReg=null;
			this.txtError=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			RegisterInputComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(RegisterInputComponent,'modules.login.v.RegisterInputComponent',_super);
		var __proto=RegisterInputComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.txtError.text="";
			this.accountTxt.on("focus",this,this.onFocus);
			this.btnReg.onClick(this,this.onRegClick);
		}

		__proto.onFocus=function(){
			this.txtError.text="";
		}

		__proto.onRegClick=function(){
			var account=StringTool.trim(this.accountTxt.text);
			if(account.length < GameUtil.ACCOUNT_LEN_MIN){
				this.showError("账号最低输入"+GameUtil.ACCOUNT_LEN_MIN+"个字符！");
				return;
			};
			var pwd=StringTool.trim(this.passwordTxt.text);
			if(pwd.length < GameUtil.PWD_LEN_MIN){
				this.showError("密码最低输入"+GameUtil.PWD_LEN_MIN+"个字符！");
				return;
			};
			var pwd2=StringTool.trim(this.password2Txt.text);
			if(pwd !=pwd2){
				this.showError("两次密码输入不一致!");
				return;
			}
			this.sendNotification("REGISTER_PLAY_Cmd",[account,pwd]);
		}

		__proto.clearData=function(){
			this.accountTxt.text="";
			this.txtError.text="";
		}

		__proto.showError=function(msg){
			this.txtError.text=msg;
		}

		return RegisterInputComponent;
	})(BaseUISprite)


	//class modules.login.v.TryPlayComponent extends robotLegs.sprite.BaseUISprite
	var TryPlayComponent=(function(_super){
		function TryPlayComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.tryPlayInputComponent=null;
			this.btnBack=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			TryPlayComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(TryPlayComponent,'modules.login.v.TryPlayComponent',_super);
		return TryPlayComponent;
	})(BaseUISprite)


	//class modules.login.v.TryPlayInputComponent extends robotLegs.sprite.BaseUISprite
	var TryPlayInputComponent=(function(_super){
		function TryPlayInputComponent(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.accountTxt=null;
			this.passwordTxt=null;
			this.txtError=null;
			this.btnAgain=null;
			this.btnReg=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			TryPlayInputComponent.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(TryPlayInputComponent,'modules.login.v.TryPlayInputComponent',_super);
		var __proto=TryPlayInputComponent.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.txtError.text="";
			this.btnAgain.onClick(this,this.onAgainClick);
			this.btnReg.onClick(this,this.onRegClick);
			this.accountTxt.on("focus",this,this.onFocus);
		}

		__proto.onAgainClick=function(){
			this.clearData();
		}

		__proto.onFocus=function(){
			this.txtError.text="";
		}

		__proto.onRegClick=function(){
			var account=StringTool.trim(this.accountTxt.text);
			if(account.length < GameUtil.ACCOUNT_LEN_MIN){
				this.showError("账号最低输入"+GameUtil.ACCOUNT_LEN_MIN+"个字符！");
				return;
			}
			this.sendNotification("REGISTER_TRYPLAY_Cmd",account);
		}

		__proto.clearData=function(){
			this.accountTxt.text="";
			this.txtError.text="";
		}

		__proto.showError=function(msg){
			this.txtError.text=msg;
		}

		return TryPlayInputComponent;
	})(BaseUISprite)


	//class modules.registered.v.Login extends robotLegs.sprite.BaseUISprite
	var Login=(function(_super){
		function Login(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.loginVo=null;
			this.backBtn=null;
			this.accountTxt=null;
			this.passwordTxt=null;
			this.loginBtn=null;
			this.registerBtn=null;
			this.testBtn=null;
			this.rememberPasswordController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Login.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Login,'modules.registered.v.Login',_super);
		var __proto=Login.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.rememberPasswordController.selectedIndex=this.loginVo.rememberPassword=="0" ? 0 :1;
			this.backBtn.onClick(this,this.close);
			this.loginBtn.onClick(this,this.login);
			this.registerBtn.onClick(this,this.regester);
			this.testBtn.onClick(this,this.test);
			this.rememberPasswordController.selectedIndex=Number(this.loginVo.rememberPassword);
			this.rememberPasswordController.on("fui_state_changed",this,this.savePassword);
			this.updateTxt();
			this.accountTxt.on("input",this,this.inputAccount);
			this.accountTxt.on("focus",this,this.accountFocusChange);
			this.passwordTxt.on("focus",this,this.passwordFocusChange);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
			this.registerStatusCallBack("Update_And_Login_Status",new Handler(this,this.updateTxt));
		}

		/**
		*输入账号，检测是否有相同的账号
		*
		*/
		__proto.inputAccount=function(){
			var account=String(this.accountTxt.text).toLocaleLowerCase();
			if(this.loginVo.loginAccountInfoObj && this.loginVo.loginAccountInfoObj[account]){
				this.passwordTxt.text=this.loginVo.loginAccountInfoObj[account];
			}
			else{
				this.passwordTxt.text="";
			}
		}

		/**
		*账号焦点
		*
		*/
		__proto.accountFocusChange=function(){
			(this.accountTxt.displayObject).setSelection(this.accountTxt.text.length,this.accountTxt.text.length);
		}

		/**
		*密码焦点
		*
		*/
		__proto.passwordFocusChange=function(){
			(this.passwordTxt.displayObject).setSelection(this.passwordTxt.text.length,this.passwordTxt.text.length);
		}

		/**
		*更新
		*
		*/
		__proto.updateTxt=function(){
			this.accountTxt.text=this.loginVo.account;
			if(this.loginVo.rememberPassword=="1"){
				this.passwordTxt.text=this.loginVo.password;
			}
			else{
				this.passwordTxt.text="";
			}
		}

		/**
		*是否保存密码
		*
		*/
		__proto.savePassword=function(){
			if(this.loginVo.account.length==0)
				return;
			this.loginVo.rememberPassword=this.loginVo.rememberPassword=="0" ? "1" :"0";
			this.sendNotification("Save_Passsword_Cmd");
		}

		/**
		*登录
		*
		*/
		__proto.login=function(){
			this.loginVo.account=this.accountTxt.text;
			this.loginVo.password=this.passwordTxt.text;
			this.sendNotification("Login_Cmd",[this.loginVo.account,this.loginVo.password]);
		}

		/**
		*注册
		*
		*/
		__proto.regester=function(){
			this.sendNotification("Open_Register_Window_Cmd");
		}

		/**
		*测试账号
		*
		*/
		__proto.test=function(){
			this.sendNotification("Registered_Test_Account_Cmd");
		}

		__proto.close=function(){
			this.loginVo.status="Remove_Status";
		}

		return Login;
	})(BaseUISprite)


	//class modules.registered.v.Registered extends robotLegs.sprite.BaseUISprite
	var Registered=(function(_super){
		function Registered(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.registeredVo=null;
			this.accountTxt=null;
			this.passwordTxt=null;
			this.password2Txt=null;
			this.codeTxt=null;
			this.code2Txt=null;
			this.tuijianCodeTxt=null;
			this.acceptController=null;
			this.registerBtn=null;
			this.backBtn=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Registered.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Registered,'modules.registered.v.Registered',_super);
		var __proto=Registered.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.passwordTxt.asTextInput.restrict=GameUtil.Restrict_account;
			this.password2Txt.asTextInput.restrict=GameUtil.Restrict_account;
			this.backBtn.onClick(this,this.close);
			this.registerBtn.onClick(this,this.register);
			var random=1000+Math.floor(Math.random()*8999);
			this.code2Txt.text=random.toString();
		}

		/**
		*注册
		*
		*/
		__proto.register=function(){
			if(this.accountTxt.text.length < 4 || this.accountTxt.text.length > 16){
				this.showAlert("账户长度必须4-16位");
				return;
			}
			if(this.passwordTxt.text !=this.password2Txt.text){
				this.showAlert("2个密码必须一致");
				return;
			}
			if(this.passwordTxt.text.length < 8 || this.passwordTxt.text.length > 16){
				this.showAlert("密码长度必须8-16位");
				return;
			}
			if(this.codeTxt.text !=this.code2Txt.text){
				this.showAlert("验证码不正确");
				return;
			}
			if(this.acceptController.selectedIndex==0){
				this.showAlert("必须同意《用户协议》");
				return;
			}
			this.registeredVo.account=this.accountTxt.text;
			this.registeredVo.password=this.passwordTxt.text;
			this.registeredVo.tuiJianCode=this.tuijianCodeTxt.text;
			this.sendNotification("Registered_Account_Cmd");
		}

		__proto.close=function(){
			this.registeredVo.status="Remove_Status";
		}

		return Registered;
	})(BaseUISprite)


	//class publics.v.alert.Alert extends robotLegs.sprite.BaseUISprite
	var Alert=(function(_super){
		function Alert(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.alertVo=null;
			this.txt=null;
			this.btnController=null;
			this.cancelBtn=null;
			this.closeBtn=null;
			this.okBtn=null;
			this.exitAni=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Alert.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Alert,'publics.v.alert.Alert',_super);
		var __proto=Alert.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.cancelBtn.onClick(this,this.playCloseAlertAni,[false]);
			this.closeBtn.onClick(this,this.playCloseAlertAni,[false]);
			this.okBtn.onClick(this,this.playCloseAlertAni,[true]);
		}

		__proto.bindViewVo=function(_baseViewVo){
			_super.prototype.bindViewVo.call(this,_baseViewVo);
			this.btnController.selectedPage=String(this.alertVo.btnCount);
			this.txt.text=this.alertVo.txt;
		}

		/**
		*关闭alert
		*
		*/
		__proto.playCloseAlertAni=function(_okBol){
			this.removeEvent();
			this.closeAlert(_okBol)
		}

		__proto.closeAlert=function(_okBol){
			if(_okBol && this.alertVo.callBackCmd.length > 0){
				this.sendNotification(this.alertVo.callBackCmd,this.alertVo.data);
			}
			this.sendNotification("Close_Alert_Cmd",this.alertVo.areaIndex);
		}

		__proto.removeEvent=function(){
			this.cancelBtn.offClick(this,this.playCloseAlertAni);
			this.closeBtn.offClick(this,this.playCloseAlertAni);
			this.okBtn.offClick(this,this.playCloseAlertAni);
		}

		return Alert;
	})(BaseUISprite)


	//class publics.v.alert.AlertWindow extends robotLegs.sprite.BaseUISprite
	var AlertWindow=(function(_super){
		function AlertWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.alertWindowVo=null;
			this.alert=null;
			this.rotateController=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			AlertWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(AlertWindow,'publics.v.alert.AlertWindow',_super);
		var __proto=AlertWindow.prototype;
		__proto.bindViewVo=function(_baseViewVo){
			_super.prototype.bindViewVo.call(this,_baseViewVo);
			this.alert.bindViewVo(this.alertWindowVo.alertVo);
			this.rotateController.selectedIndex=this.alertWindowVo.rotateControllerIndex;
		}

		return AlertWindow;
	})(BaseUISprite)


	//class publics.v.voice.Voice extends robotLegs.sprite.BaseUISprite
	var Voice=(function(_super){
		function Voice(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.voiceVo=null;
			this.closeBtn=null;
			this.displayAni=null;
			this.exitAni=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Voice.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Voice,'publics.v.voice.Voice',_super);
		var __proto=Voice.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			console.log("Voice displayAni:",this.displayAni);
			this.closeBtn.onClick(this,this.playCloseAlertAni);
			console.log("Voice displayAni:",this.displayAni);
			this.playAni(this.displayAni);
		}

		__proto.initStatusCallBack=function(){
			_super.prototype.initStatusCallBack.call(this);
		}

		/**
		*关闭alert
		*
		*/
		__proto.playCloseAlertAni=function(){
			this.playAni(this.exitAni,new Handler(this,this.closeAlert));
		}

		__proto.closeAlert=function(){
			this.sendNotification("Close_Voice_Cmd");
		}

		return Voice;
	})(BaseUISprite)


	//class publics.v.voice.VoiceWindow extends robotLegs.sprite.BaseUISprite
	var VoiceWindow=(function(_super){
		function VoiceWindow(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.voiceWindowVo=null;
			this.voice=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			VoiceWindow.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(VoiceWindow,'publics.v.voice.VoiceWindow',_super);
		return VoiceWindow;
	})(BaseUISprite)


	//class robotLegs.ani.AniCommand extends robotLegs.command.BaseCommand
	var AniCommand=(function(_super){
		function AniCommand(){
			this.delayCommandIndex=0;
			this.animationModel=null;
			AniCommand.__super.call(this);
		}

		__class(AniCommand,'robotLegs.ani.AniCommand',_super);
		var __proto=AniCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Bind_Area_Cmd":
					this.bindArea(_notificationVo.data);
					break ;
				case "Cancel_Bind_Area_Cmd":
					this.cancelBindArea(_notificationVo.data);
					break ;
				case "Add_Cmd":
					this.addAni(_notificationVo.data);
					break ;
				case "Play_Cmd":
					this.startPlayAni();
					break ;
				case "Delay_Cmd":
					this.delay();
					break ;
				case "Complete_One_Ani_Cmd":
					this.oneAniComplete();
					break ;
				case "Stop_Cmd":
					this.stopAni();
					break ;
				}
		}

		/**
		*绑定区域Vo
		*
		*/
		__proto.bindArea=function(_baseViewVo){
			this.animationModel.areaVoObj[_baseViewVo.areaIndex]=_baseViewVo;
		}

		/**
		*解除区域绑定
		*@param _areaIndex
		*
		*/
		__proto.cancelBindArea=function(_areaIndex){
			var checkCount=0;
			for(var i=0;i < this.animationModel.animationVoArr.length;i++){
				if(this.animationModel.animationVoArr[i].areaVoIndex==_areaIndex){
					checkCount++;
				}
			}
			while(checkCount > 0){
				for(i=0;i < this.animationModel.animationVoArr.length;i++){
					if(this.animationModel.animationVoArr[i].areaVoIndex==_areaIndex){
						this.animationModel.animationVoArr.splice(i,1);
						break ;
					}
				}
				checkCount--;
			}
			if(this.animationModel.areaVoObj[_areaIndex])
				delete this.animationModel.areaVoObj[_areaIndex];
		}

		/**
		*添加动画序列
		*@param _animationVo
		*
		*/
		__proto.addAni=function(_animationVoArr){
			for(var voIndex=0;voIndex < _animationVoArr.length;voIndex++){
				this.animationModel.animationVoArr.push(_animationVoArr[voIndex]);
			}
		}

		/**
		*播放动画
		*
		*/
		__proto.startPlayAni=function(){
			if(this.animationModel.status==1){
				_super.prototype.clearMemory.call(this);
				return;
			}
			this.continuePlay();
		}

		/**
		*延迟播放
		*
		*/
		__proto.delay=function(){
			this.sendNotification("Complete_One_Ani_Cmd");
		}

		/**
		*一个动画播放完毕
		*
		*/
		__proto.oneAniComplete=function(){
			this.animationModel.animationVoArr.shift();
			this.continuePlay();
		}

		__proto.continuePlay=function(){
			if(this.animationModel.animationVoArr.length > 0){
				this.animationModel.status=1;
				if(this.animationModel.animationVoArr[0].delyTime > 0){
					AniCommand.delayCommandCount++;
					this.delayCommandIndex=AniCommand.delayCommandCount;
					this.commandMap.delayCommandObj[String(this.delayCommandIndex)]=this;
					Laya.timer.once(this.animationModel.animationVoArr[0].delyTime,this,this.play);
				}
				else{
					this.play();
				}
			}
			else{
				this.animationModel.status=0;
			}
		}

		/**
		*播放
		*
		*/
		__proto.play=function(){
			if(this.delayCommandIndex > 0){
				delete this.commandMap.delayCommandObj[String(this.delayCommandIndex)];
			}
			if(this.animationModel.animationVoArr.length==0)
				return;
			if(this.animationModel.animationVoArr[0].soundBol){
				this.playSound(this.animationModel.animationVoArr[0].data);
				this.sendNotification("Complete_One_Ani_Cmd");
			}
			else if(this.animationModel.animationVoArr[0].cmdBol){
				var cmd=this.animationModel.animationVoArr[0].status;
				this.sendNotification(cmd,this.animationModel.animationVoArr[0].data);
			}
			else{
				if(!this.animationModel.areaVoObj[this.animationModel.animationVoArr[0].areaVoIndex]){
					BaseStaticFuncs.warn(BaseStaticFunc.format("没有绑定Vo，请检查->{0}",this.animationModel.animationVoArr[0].status));
					this.sendNotification("Complete_One_Ani_Cmd");
				}
				else{
					this.animationModel.areaVoObj[this.animationModel.animationVoArr[0].areaVoIndex].aniData=this.animationModel.animationVoArr[0].data;
					this.animationModel.areaVoObj[this.animationModel.animationVoArr[0].areaVoIndex].status=this.animationModel.animationVoArr[0].status;
				}
			}
			_super.prototype.clearMemory.call(this);
		}

		/**
		*停止播放动画,清除动画列表
		*
		*/
		__proto.stopAni=function(){
			for(var commandIndex in this.commandMap.delayCommandObj){
				this.commandMap.delayCommandObj[commandIndex].delayClearMemory();
				delete this.commandMap.delayCommandObj[commandIndex];
			}
			while(this.animationModel.animationVoArr.length > 0){
				this.animationModel.animationVoArr.shift();
			}
			this.animationModel.status=0;
		}

		/**
		*延迟执行清除缓存
		*
		*/
		__proto.delayClearMemory=function(){
			Laya.timer.clearAll(this);
			_super.prototype.clearMemory.call(this);
		}

		/**
		*重写清除内存的方法，必须在延迟执行后再清除内存
		*
		*/
		__proto.clearMemory=function(){}
		AniCommand.delayCommandCount=0;
		AniCommand.STOP_STATUS=0;
		AniCommand.PLAYING_STATUS=1;
		AniCommand.BIND_AREA_CMD="Bind_Area_Cmd";
		AniCommand.CANCEL_BIND_AREA_CMD="Cancel_Bind_Area_Cmd";
		AniCommand.ADD_CMD="Add_Cmd";
		AniCommand.PLAY_CMD="Play_Cmd";
		AniCommand.DELAY_CMD="Delay_Cmd";
		AniCommand.COMPLETE_ONE_ANI_CMD="Complete_One_Ani_Cmd";
		AniCommand.STOP_CMD="Stop_Cmd";
		return AniCommand;
	})(BaseCommand)


	//class robotLegs.command.SoundCommand extends robotLegs.command.BaseCommand
	var SoundCommand=(function(_super){
		function SoundCommand(){
			this.soundSessionModel=null;
			SoundCommand.__super.call(this);
		}

		__class(SoundCommand,'robotLegs.command.SoundCommand',_super);
		var __proto=SoundCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Sound_Start_Cmd":
					this.soundSessionModel.startBol=true;
					this._$3_playMusic();
					break ;
				case "Stop_Play_Music_Cmd":
					this.stopPlayMusic();
					break ;
				case "Play_Music_Cmd":
					this.soundSessionModel.music=SoundCommand.soundUrlObj[_notificationVo.data];
					this._$3_playMusic();
					break ;
				case "PlaySound_Cmd":
					this._$3_playSound(SoundCommand.soundUrlObj[_notificationVo.data]);
					break ;
				case "Change_Music_Volume_Cmd":
					this.changeMusicVolume(_notificationVo.data);
					break ;
				case "Change_Sound_Volume_Cmd":
					this.changeSoundVolume(_notificationVo.data);
					break ;
				default :{
						break ;
					}
				}
		}

		/**
		*播放背景音乐
		*@param _bgSound
		*
		*/
		__proto._$3_playMusic=function(){
			if(!this.soundSessionModel.startBol)
				return;
			if(!this.soundSessionModel.music)
				return;
			SoundManager.playMusic(this.soundSessionModel.music);
		}

		/**
		*停止播放音乐
		*
		*/
		__proto.stopPlayMusic=function(){
			if(!this.soundSessionModel.startBol)
				return;
			if(!this.soundSessionModel.music)
				return;
			SoundManager.stopMusic();
		}

		/**
		*播放音效
		*@param _soundUrl
		*
		*/
		__proto._$3_playSound=function(_soundUrl){
			if(!this.soundSessionModel.startBol)
				return;
			SoundManager.playSound(_soundUrl);
		}

		/**
		*更改音乐的音量
		*
		*/
		__proto.changeMusicVolume=function(_musicVolume){
			this.soundSessionModel.musicVolume=_musicVolume / 100;
			SoundManager.musicVolume=this.soundSessionModel.musicVolume / 100;
			this.soundSessionModel.saveValue("musicVolume",this.soundSessionModel.musicVolume);
			if(!this.soundSessionModel.startBol)
				return;
		}

		/**
		*更改音效的音量
		*
		*/
		__proto.changeSoundVolume=function(_soundVolume){
			this.soundSessionModel.soundVolume=_soundVolume / 100;
			SoundManager.soundVolume=this.soundSessionModel.soundVolume / 100;
			this.soundSessionModel.saveValue("soundVolume",this.soundSessionModel.soundVolume);
			if(!this.soundSessionModel.startBol)
				return;
		}

		SoundCommand.SOUND_START_CMD="Sound_Start_Cmd";
		SoundCommand.PLAY_MUSIC_CMD="Play_Music_Cmd";
		SoundCommand.STOP_PLAY_MUSIC_CMD="Stop_Play_Music_Cmd";
		SoundCommand.PLAY_SOUND_CMD="PlaySound_Cmd";
		SoundCommand.CHANGE_MUSIC_VOLUME_CMD="Change_Music_Volume_Cmd";
		SoundCommand.CHANGE_SOUND_VOLUME_CMD="Change_Sound_Volume_Cmd";
		__static(SoundCommand,
		['soundUrlObj',function(){return this.soundUrlObj=new Object();}
		]);
		return SoundCommand;
	})(BaseCommand)


	//class laya.display.Text extends laya.display.Sprite
	var Text=(function(_super){
		function Text(){
			this._clipPoint=null;
			this._currBitmapFont=null;
			this._text=null;
			this._isChanged=false;
			this._textWidth=0;
			this._textHeight=0;
			this._lines=[];
			this._lineWidths=[];
			this._startX=NaN;
			this._startY=NaN;
			this._lastVisibleLineIndex=-1;
			this._words=null;
			this._charSize={};
			this.underline=false;
			this._underlineColor=null;
			Text.__super.call(this);
			this.overflow=Text.VISIBLE;
			this._style=new CSSStyle(this);
			(this._style).wordWrap=false;
		}

		__class(Text,'laya.display.Text',_super);
		var __proto=Text.prototype;
		/**@inheritDoc */
		__proto.destroy=function(destroyChild){
			(destroyChild===void 0)&& (destroyChild=true);
			_super.prototype.destroy.call(this,destroyChild);
			this._lines=null;
			if (this._words){
				this._words.length=0;
				this._words=null;
			}
		}

		/**
		*@private
		*@inheritDoc
		*/
		__proto._getBoundPointsM=function(ifRotate){
			(ifRotate===void 0)&& (ifRotate=false);
			var rec=Rectangle.TEMP;
			rec.setTo(0,0,this.width,this.height);
			return rec._getBoundPoints();
		}

		/**
		*@inheritDoc
		*/
		__proto.getGraphicBounds=function(realSize){
			(realSize===void 0)&& (realSize=false);
			var rec=Rectangle.TEMP;
			rec.setTo(0,0,this.width,this.height);
			return rec;
		}

		/**
		*@private
		*@inheritDoc
		*/
		__proto._getCSSStyle=function(){
			return this._style;
		}

		/**
		*<p>根据指定的文本，从语言包中取当前语言的文本内容。并对此文本中的{i}文本进行替换。</p>
		*<p>设置Text.langPacks语言包后，即可使用lang获取里面的语言</p>
		*<p>例如：
		*<li>（1）text 的值为“我的名字”，先取到这个文本对应的当前语言版本里的值“My name”，将“My name”设置为当前文本的内容。</li>
		*<li>（2）text 的值为“恭喜你赢得{0}个钻石，{1}经验。”，arg1 的值为100，arg2 的值为200。
		*则先取到这个文本对应的当前语言版本里的值“Congratulations on your winning {0}diamonds,{1}experience.”，
		*然后将文本里的{0}、{1}，依据括号里的数字从0开始替换为 arg1、arg2 的值。
		*将替换处理后的文本“Congratulations on your winning 100 diamonds,200 experience.”设置为当前文本的内容。
		*</li>
		*</p>
		*@param text 文本内容。
		*@param ...args 文本替换参数。
		*/
		__proto.lang=function(text,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10){
			text=Text.langPacks && Text.langPacks[text] ? Text.langPacks[text] :text;
			if (arguments.length < 2){
				this._text=text;
				}else {
				for (var i=0,n=arguments.length;i < n;i++){
					text=text.replace("{"+i+"}",arguments[i+1]);
				}
				this._text=text;
			}
		}

		/**
		*@private
		*/
		__proto._isPassWordMode=function(){
			var style=this._style;
			var password=style.password;
			if (("prompt" in this)&& this['prompt']==this._text)
				password=false;
			return password;
		}

		/**
		*@private
		*/
		__proto._getPassWordTxt=function(txt){
			var len=txt.length;
			var word;
			word="";
			for (var j=len;j > 0;j--){
				word+="●";
			}
			return word;
		}

		/**
		*渲染文字。
		*@param begin 开始渲染的行索引。
		*@param visibleLineCount 渲染的行数。
		*/
		__proto.renderText=function(begin,visibleLineCount){
			var graphics=this.graphics;
			graphics.clear(true);
			var ctxFont=(this.italic ? "italic " :"")+(this.bold ? "bold " :"")+this.fontSize+"px "+(Browser.onIPhone ? (laya.display.Text._fontFamilyMap[this.font] || this.font):this.font);
			Browser.context.font=ctxFont;
			var padding=this.padding;
			var startX=padding[3];
			var textAlgin="left";
			var lines=this._lines;
			var lineHeight=this.leading+this._charSize.height;
			var tCurrBitmapFont=this._currBitmapFont;
			if (tCurrBitmapFont){
				lineHeight=this.leading+tCurrBitmapFont.getMaxHeight();
			};
			var startY=padding[0];
			if ((!tCurrBitmapFont)&& this._width > 0 && this._textWidth <=this._width){
				if (this.align=="right"){
					textAlgin="right";
					startX=this._width-padding[1];
					}else if (this.align=="center"){
					textAlgin="center";
					startX=this._width *0.5+padding[3]-padding[1];
				}
			}
			if (this._height > 0){
				var tempVAlign=(this._textHeight > this._height)? "top" :this.valign;
				if (tempVAlign==="middle")
					startY=(this._height-visibleLineCount *lineHeight)*0.5+padding[0]-padding[2];
				else if (tempVAlign==="bottom")
				startY=this._height-visibleLineCount *lineHeight-padding[2];
			};
			var style=this._style;
			if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize){
				var bitmapScale=tCurrBitmapFont.fontSize / this.fontSize;
			}
			if (this._clipPoint){
				graphics.save();
				if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize){
					var tClipWidth=0;
					var tClipHeight=0;
					this._width ? tClipWidth=(this._width-padding[3]-padding[1]):tClipWidth=this._textWidth;
					this._height ? tClipHeight=(this._height-padding[0]-padding[2]):tClipHeight=this._textHeight;
					tClipWidth *=bitmapScale;
					tClipHeight *=bitmapScale;
					graphics.clipRect(padding[3],padding[0],tClipWidth,tClipHeight);
					}else {
					graphics.clipRect(padding[3],padding[0],this._width ? (this._width-padding[3]-padding[1]):this._textWidth,this._height ? (this._height-padding[0]-padding[2]):this._textHeight);
				}
			};
			var password=style.password;
			if (("prompt" in this)&& this['prompt']==this._text)
				password=false;
			var x=0,y=0;
			var end=Math.min(this._lines.length,visibleLineCount+begin)|| 1;
			for (var i=begin;i < end;i++){
				var word=lines[i];
				var _word;
				if (password){
					var len=word.length;
					word="";
					for (var j=len;j > 0;j--){
						word+="●";
					}
				}
				x=startX-(this._clipPoint ? this._clipPoint.x :0);
				y=startY+lineHeight *i-(this._clipPoint ? this._clipPoint.y :0);
				this.underline && this.drawUnderline(textAlgin,x,y,i);
				if (tCurrBitmapFont){
					var tWidth=this.width;
					if (tCurrBitmapFont.autoScaleSize){
						tWidth=this.width *bitmapScale;
					}
					tCurrBitmapFont.drawText(word,this,x,y,this.align,tWidth);
					}else {
					if (Render.isWebGL){
						this._words || (this._words=[]);
						_word=this._words.length > (i-begin)? this._words[i-begin] :new WordText();
						_word.setText(word);
						}else {
						_word=word;
					}
					style.stroke ? graphics.fillBorderText(_word,x,y,ctxFont,this.color,style.strokeColor,style.stroke,textAlgin):graphics.fillText(_word,x,y,ctxFont,this.color,textAlgin);
				}
			}
			if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize){
				var tScale=1 / bitmapScale;
				this.scale(tScale,tScale);
			}
			if (this._clipPoint)
				graphics.restore();
			this._startX=startX;
			this._startY=startY;
		}

		/**
		*绘制下划线
		*@param x 本行坐标
		*@param y 本行坐标
		*@param lineIndex 本行索引
		*/
		__proto.drawUnderline=function(align,x,y,lineIndex){
			var lineWidth=this._lineWidths[lineIndex];
			switch (align){
				case 'center':
					x-=lineWidth / 2;
					break ;
				case 'right':
					x-=lineWidth;
					break ;
				case 'left':
				default :
					break ;
				}
			y+=this._charSize.height;
			this._graphics.drawLine(x,y,x+lineWidth,y,this.underlineColor || this.color,1);
		}

		/**
		*<p>排版文本。</p>
		*<p>进行宽高计算，渲染、重绘文本。</p>
		*/
		__proto.typeset=function(){
			this._isChanged=false;
			if (!this._text){
				this._clipPoint=null;
				this._textWidth=this._textHeight=0;
				this.graphics.clear(true);
				return;
			}
			Browser.context.font=this._getCSSStyle().font;
			this._lines.length=0;
			this._lineWidths.length=0;
			if (this._isPassWordMode()){
				this.parseLines(this._getPassWordTxt(this._text));
			}else
			this.parseLines(this._text);
			this.evalTextSize();
			if (this.checkEnabledViewportOrNot())
				this._clipPoint || (this._clipPoint=new Point(0,0));
			else
			this._clipPoint=null;
			var lineCount=this._lines.length;
			if (this.overflow !=Text.VISIBLE){
				var func=this.overflow==Text.HIDDEN ? Math.floor :Math.ceil;
				lineCount=Math.min(lineCount,func((this.height-this.padding[0]-this.padding[2])/ (this.leading+this._charSize.height)));
			};
			var startLine=this.scrollY / (this._charSize.height+this.leading)| 0;
			this.renderText(startLine,lineCount);
			this.repaint();
		}

		__proto.evalTextSize=function(){
			var nw=NaN,nh=NaN;
			nw=Math.max.apply(this,this._lineWidths);
			if (this._currBitmapFont)
				nh=this._lines.length *(this._currBitmapFont.getMaxHeight()+this.leading)+this.padding[0]+this.padding[2];
			else
			nh=this._lines.length *(this._charSize.height+this.leading)+this.padding[0]+this.padding[2];
			if (nw !=this._textWidth || nh !=this._textHeight){
				this._textWidth=nw;
				this._textHeight=nh;
				if (!this._width || !this._height)
					this.conchModel && this.conchModel.size(this._width || this._textWidth,this._height || this._textHeight);
			}
		}

		__proto.checkEnabledViewportOrNot=function(){
			return this.overflow==Text.SCROLL && ((this._width > 0 && this._textWidth > this._width)|| (this._height > 0 && this._textHeight > this._height));
		}

		/**
		*<p>快速更改显示文本。不进行排版计算，效率较高。</p>
		*<p>如果只更改文字内容，不更改文字样式，建议使用此接口，能提高效率。</p>
		*@param text 文本内容。
		*/
		__proto.changeText=function(text){
			if (this._text!==text){
				this.lang(text+"");
				if (this._graphics && this._graphics.replaceText(this._text)){
					}else {
					this.typeset();
				}
			}
		}

		/**
		*@private
		*分析文本换行。
		*/
		__proto.parseLines=function(text){
			var needWordWrapOrTruncate=this.wordWrap || this.overflow==Text.HIDDEN;
			if (needWordWrapOrTruncate){
				var wordWrapWidth=this.getWordWrapWidth();
			}
			if (this._currBitmapFont){
				this._charSize.width=this._currBitmapFont.getMaxWidth();
				this._charSize.height=this._currBitmapFont.getMaxHeight();
				}else {
				var measureResult=Browser.context.measureText(Text._testWord);
				this._charSize.width=measureResult.width;
				this._charSize.height=(measureResult.height || this.fontSize);
			};
			var lines=text.replace(/\r\n/g,"\n").split("\n");
			for (var i=0,n=lines.length;i < n;i++){
				var line=lines[i];
				if (needWordWrapOrTruncate)
					this.parseLine(line,wordWrapWidth);
				else {
					this._lineWidths.push(this.getTextWidth(line));
					this._lines.push(line);
				}
			}
		}

		/**
		*@private
		*解析行文本。
		*@param line 某行的文本。
		*@param wordWrapWidth 文本的显示宽度。
		*/
		__proto.parseLine=function(line,wordWrapWidth){
			var ctx=Browser.context;
			var lines=this._lines;
			var maybeIndex=0;
			var execResult;
			var charsWidth=NaN;
			var wordWidth=NaN;
			var startIndex=0;
			charsWidth=this.getTextWidth(line);
			if (charsWidth <=wordWrapWidth){
				lines.push(line);
				this._lineWidths.push(charsWidth);
				return;
			}
			charsWidth=this._charSize.width;
			maybeIndex=Math.floor(wordWrapWidth / charsWidth);
			(maybeIndex==0)&& (maybeIndex=1);
			charsWidth=this.getTextWidth(line.substring(0,maybeIndex));
			wordWidth=charsWidth;
			for (var j=maybeIndex,m=line.length;j < m;j++){
				charsWidth=this.getTextWidth(line.charAt(j));
				wordWidth+=charsWidth;
				if (wordWidth > wordWrapWidth){
					if (this.wordWrap){
						var newLine=line.substring(startIndex,j);
						if (newLine.charCodeAt(newLine.length-1)< 255){
							execResult=/(?:\w|-)+$/.exec(newLine);
							if (execResult){
								j=execResult.index+startIndex;
								if (execResult.index==0)
									j+=newLine.length;
								else
								newLine=line.substring(startIndex,j);
							}
						}else
						if (Text.RightToLeft){
							execResult=/([\u0600-\u06FF])+$/.exec(newLine);
							if(execResult){
								j=execResult.index+startIndex;
								if (execResult.index==0)
									j+=newLine.length;
								else
								newLine=line.substring(startIndex,j);
							}
						}
						lines.push(newLine);
						this._lineWidths.push(wordWidth-charsWidth);
						startIndex=j;
						if (j+maybeIndex < m){
							j+=maybeIndex;
							charsWidth=this.getTextWidth(line.substring(startIndex,j));
							wordWidth=charsWidth;
							j--;
							}else {
							lines.push(line.substring(startIndex,m));
							this._lineWidths.push(this.getTextWidth(lines[lines.length-1]));
							startIndex=-1;
							break ;
						}
						}else if (this.overflow==Text.HIDDEN){
						lines.push(line.substring(0,j));
						this._lineWidths.push(this.getTextWidth(lines[lines.length-1]));
						return;
					}
				}
			}
			if (this.wordWrap && startIndex !=-1){
				lines.push(line.substring(startIndex,m));
				this._lineWidths.push(this.getTextWidth(lines[lines.length-1]));
			}
		}

		__proto.getTextWidth=function(text){
			if (this._currBitmapFont)
				return this._currBitmapFont.getTextWidth(text);
			else
			return Browser.context.measureText(text).width;
		}

		/**
		*获取换行所需的宽度。
		*/
		__proto.getWordWrapWidth=function(){
			var p=this.padding;
			var w=NaN;
			if (this._currBitmapFont && this._currBitmapFont.autoScaleSize)
				w=this._width *(this._currBitmapFont.fontSize / this.fontSize);
			else
			w=this._width;
			if (w <=0){
				w=this.wordWrap ? 100 :Browser.width;
			}
			w <=0 && (w=100);
			return w-p[3]-p[1];
		}

		/**
		*返回字符在本类实例的父坐标系下的坐标。
		*@param charIndex 索引位置。
		*@param out （可选）输出的Point引用。
		*@return Point 字符在本类实例的父坐标系下的坐标。如果out参数不为空，则将结果赋值给指定的Point对象，否则创建一个新的Point对象返回。建议使用Point.TEMP作为out参数，可以省去Point对象创建和垃圾回收的开销，尤其是在需要频繁执行的逻辑中，比如帧循环和MOUSE_MOVE事件回调函数里面。
		*/
		__proto.getCharPoint=function(charIndex,out){
			this._isChanged && Laya.timer.runCallLater(this,this.typeset);
			var len=0,lines=this._lines,startIndex=0;
			for (var i=0,n=lines.length;i < n;i++){
				len+=lines[i].length;
				if (charIndex < len){
					var line=i;
					break ;
				}
				startIndex=len;
			};
			var ctxFont=(this.italic ? "italic " :"")+(this.bold ? "bold " :"")+this.fontSize+"px "+this.font;
			Browser.context.font=ctxFont;
			var width=this.getTextWidth(this._text.substring(startIndex,charIndex));
			var point=out || new Point();
			return point.setTo(this._startX+width-(this._clipPoint ? this._clipPoint.x :0),this._startY+line *(this._charSize.height+this.leading)-(this._clipPoint ? this._clipPoint.y :0));
		}

		/**
		*@inheritDoc
		*/
		__getset(0,__proto,'width',function(){
			if (this._width)
				return this._width;
			return this.textWidth+this.padding[1]+this.padding[3];
			},function(value){
			if (value !=this._width){
				_super.prototype._$set_width.call(this,value);
				this.isChanged=true;
			}
		});

		/**
		*表示文本的宽度，以像素为单位。
		*/
		__getset(0,__proto,'textWidth',function(){
			this._isChanged && Laya.timer.runCallLater(this,this.typeset);
			return this._textWidth;
		});

		/**
		*@inheritDoc
		*/
		__getset(0,__proto,'height',function(){
			if (this._height)return this._height;
			return this.textHeight+this.padding[0]+this.padding[2];
			},function(value){
			if (value !=this._height){
				_super.prototype._$set_height.call(this,value);
				this.isChanged=true;
			}
		});

		/**
		*表示文本的高度，以像素为单位。
		*/
		__getset(0,__proto,'textHeight',function(){
			this._isChanged && Laya.timer.runCallLater(this,this.typeset);
			return this._textHeight;
		});

		/**
		*<p>边距信息。</p>
		*<p>数据格式：[上边距，右边距，下边距，左边距]（边距以像素为单位）。</p>
		*/
		__getset(0,__proto,'padding',function(){
			return this._getCSSStyle().padding;
			},function(value){
			this._getCSSStyle().padding=value;
			this.isChanged=true;
		});

		/**
		*<p>指定文本是否为粗体字。</p>
		*<p>默认值为 false，这意味着不使用粗体字。如果值为 true，则文本为粗体字。</p>
		*/
		__getset(0,__proto,'bold',function(){
			return this._getCSSStyle().bold;
			},function(value){
			this._getCSSStyle().bold=value;
			this.isChanged=true;
		});

		/**当前文本的内容字符串。*/
		__getset(0,__proto,'text',function(){
			return this._text || "";
			},function(value){
			if (this._text!==value){
				this.lang(value+"");
				this.isChanged=true;
				this.event("change");
			}
		});

		/**
		*<p>表示文本的颜色值。可以通过 <code>Text.defaultColor</code> 设置默认颜色。</p>
		*<p>默认值为黑色。</p>
		*/
		__getset(0,__proto,'color',function(){
			return this._getCSSStyle().color;
			},function(value){
			if (this._getCSSStyle().color !=value){
				this._getCSSStyle().color=value;
				if (!this._isChanged && this._graphics){
					this._graphics.replaceTextColor(this.color)
					}else {
					this.isChanged=true;
				}
			}
		});

		/**
		*<p>文本的字体名称，以字符串形式表示。</p>
		*<p>默认值为："Arial"，可以通过Font.defaultFont设置默认字体。</p>
		*<p>如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。</p>
		*@see laya.display.css.Font#defaultFamily
		*/
		__getset(0,__proto,'font',function(){
			return this._getCSSStyle().fontFamily;
			},function(value){
			if (this._currBitmapFont){
				this._currBitmapFont=null;
				this.scale(1,1);
			}
			if (Text._bitmapFonts && Text._bitmapFonts[value]){
				this._currBitmapFont=Text._bitmapFonts[value];
			}
			this._getCSSStyle().fontFamily=value;
			this.isChanged=true;
		});

		/**
		*<p>指定文本的字体大小（以像素为单位）。</p>
		*<p>默认为20像素，可以通过 <code>Text.defaultSize</code> 设置默认大小。</p>
		*/
		__getset(0,__proto,'fontSize',function(){
			return this._getCSSStyle().fontSize;
			},function(value){
			this._getCSSStyle().fontSize=value;
			this.isChanged=true;
		});

		/**
		*<p>表示使用此文本格式的文本是否为斜体。</p>
		*<p>默认值为 false，这意味着不使用斜体。如果值为 true，则文本为斜体。</p>
		*/
		__getset(0,__proto,'italic',function(){
			return this._getCSSStyle().italic;
			},function(value){
			this._getCSSStyle().italic=value;
			this.isChanged=true;
		});

		/**
		*<p>表示文本的水平显示方式。</p>
		*<p><b>取值：</b>
		*<li>"left"： 居左对齐显示。</li>
		*<li>"center"： 居中对齐显示。</li>
		*<li>"right"： 居右对齐显示。</li>
		*</p>
		*/
		__getset(0,__proto,'align',function(){
			return this._getCSSStyle().align;
			},function(value){
			this._getCSSStyle().align=value;
			this.isChanged=true;
		});

		/**
		*<p>表示文本的垂直显示方式。</p>
		*<p><b>取值：</b>
		*<li>"top"： 居顶部对齐显示。</li>
		*<li>"middle"： 居中对齐显示。</li>
		*<li>"bottom"： 居底部对齐显示。</li>
		*</p>
		*/
		__getset(0,__proto,'valign',function(){
			return this._getCSSStyle().valign;
			},function(value){
			this._getCSSStyle().valign=value;
			this.isChanged=true;
		});

		/**
		*<p>表示文本是否自动换行，默认为false。</p>
		*<p>若值为true，则自动换行；否则不自动换行。</p>
		*/
		__getset(0,__proto,'wordWrap',function(){
			return this._getCSSStyle().wordWrap;
			},function(value){
			this._getCSSStyle().wordWrap=value;
			this.isChanged=true;
		});

		/**
		*垂直行间距（以像素为单位）。
		*/
		__getset(0,__proto,'leading',function(){
			return this._getCSSStyle().leading;
			},function(value){
			this._getCSSStyle().leading=value;
			this.isChanged=true;
		});

		/**
		*文本背景颜色，以字符串表示。
		*/
		__getset(0,__proto,'bgColor',function(){
			return this._getCSSStyle().backgroundColor;
			},function(value){
			this._getCSSStyle().backgroundColor=value;
			this.isChanged=true;
		});

		/**
		*文本边框背景颜色，以字符串表示。
		*/
		__getset(0,__proto,'borderColor',function(){
			return this._getCSSStyle().borderColor;
			},function(value){
			this._getCSSStyle().borderColor=value;
			this.isChanged=true;
		});

		/**
		*<p>描边宽度（以像素为单位）。</p>
		*<p>默认值0，表示不描边。</p>
		*/
		__getset(0,__proto,'stroke',function(){
			return this._getCSSStyle().stroke;
			},function(value){
			this._getCSSStyle().stroke=value;
			this.isChanged=true;
		});

		/**
		*<p>描边颜色，以字符串表示。</p>
		*<p>默认值为 "#000000"（黑色）;</p>
		*/
		__getset(0,__proto,'strokeColor',function(){
			return this._getCSSStyle().strokeColor;
			},function(value){
			this._getCSSStyle().strokeColor=value;
			this.isChanged=true;
		});

		/**
		*一个布尔值，表示文本的属性是否有改变。若为true表示有改变。
		*/
		__getset(0,__proto,'isChanged',null,function(value){
			if (this._isChanged!==value){
				this._isChanged=value;
				value && Laya.timer.callLater(this,this.typeset);
			}
		});

		/**
		*<p>设置横向滚动量。</p>
		*<p>即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。</p>
		*/
		/**
		*获取横向滚动量。
		*/
		__getset(0,__proto,'scrollX',function(){
			if (!this._clipPoint)
				return 0;
			return this._clipPoint.x;
			},function(value){
			if (this.overflow !=Text.SCROLL || (this.textWidth < this._width || !this._clipPoint))
				return;
			value=value < this.padding[3] ? this.padding[3] :value;
			var maxScrollX=this._textWidth-this._width;
			value=value > maxScrollX ? maxScrollX :value;
			var visibleLineCount=this._height / (this._charSize.height+this.leading)| 0+1;
			this._clipPoint.x=value;
			this.renderText(this._lastVisibleLineIndex,visibleLineCount);
		});

		/**
		*设置纵向滚动量（px)。即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。
		*/
		/**
		*获取纵向滚动量。
		*/
		__getset(0,__proto,'scrollY',function(){
			if (!this._clipPoint)
				return 0;
			return this._clipPoint.y;
			},function(value){
			if (this.overflow !=Text.SCROLL || (this.textHeight < this._height || !this._clipPoint))
				return;
			value=value < this.padding[0] ? this.padding[0] :value;
			var maxScrollY=this._textHeight-this._height;
			value=value > maxScrollY ? maxScrollY :value;
			var startLine=value / (this._charSize.height+this.leading)| 0;
			this._lastVisibleLineIndex=startLine;
			var visibleLineCount=(this._height / (this._charSize.height+this.leading)| 0)+1;
			this._clipPoint.y=value;
			this.renderText(startLine,visibleLineCount);
		});

		/**
		*获取横向可滚动最大值。
		*/
		__getset(0,__proto,'maxScrollX',function(){
			return (this.textWidth < this._width)? 0 :this._textWidth-this._width;
		});

		/**
		*获取纵向可滚动最大值。
		*/
		__getset(0,__proto,'maxScrollY',function(){
			return (this.textHeight < this._height)? 0 :this._textHeight-this._height;
		});

		__getset(0,__proto,'lines',function(){
			if (this._isChanged)
				this.typeset();
			return this._lines;
		});

		__getset(0,__proto,'underlineColor',function(){
			return this._underlineColor;
			},function(value){
			this._underlineColor=value;
			this._isChanged=true;
			this.typeset();
		});

		Text.registerBitmapFont=function(name,bitmapFont){
			Text._bitmapFonts || (Text._bitmapFonts={});
			Text._bitmapFonts[name]=bitmapFont;
		}

		Text.unregisterBitmapFont=function(name,destroy){
			(destroy===void 0)&& (destroy=true);
			if (Text._bitmapFonts && Text._bitmapFonts[name]){
				var tBitmapFont=Text._bitmapFonts[name];
				if (destroy){
					tBitmapFont.destroy();
				}
				delete Text._bitmapFonts[name];
			}
		}

		Text.setTextRightToLeft=function(){
			var style;
			style=Browser.canvas.source.style;
			style.display="none";
			style.position="absolute";
			style.direction="rtl";
			Render._mainCanvas.source.style.direction="rtl";
			laya.display.Text.RightToLeft=true;
			Browser.document.body.appendChild(Browser.canvas.source);
		}

		Text.supportFont=function(font){
			Browser.context.font="10px sans-serif";
			var defaultFontWidth=Browser.context.measureText("abcji").width;
			Browser.context.font="10px "+font;
			var customFontWidth=Browser.context.measureText("abcji").width;
			console.log(defaultFontWidth,customFontWidth);
			if (defaultFontWidth===customFontWidth)return false;
			else return true;
		}

		Text._testWord="游";
		Text.langPacks=null
		Text.VISIBLE="visible";
		Text.SCROLL="scroll";
		Text.HIDDEN="hidden";
		Text.CharacterCache=true;
		Text.RightToLeft=false;
		Text._bitmapFonts=null
		__static(Text,
		['_fontFamilyMap',function(){return this._fontFamilyMap={"报隶" :"报隶-简","黑体" :"黑体-简","楷体" :"楷体-简","兰亭黑" :"兰亭黑-简","隶变" :"隶变-简","凌慧体" :"凌慧体-简","翩翩体" :"翩翩体-简","苹方" :"苹方-简","手札体" :"手札体-简","宋体" :"宋体-简","娃娃体" :"娃娃体-简","魏碑" :"魏碑-简","行楷" :"行楷-简","雅痞" :"雅痞-简","圆体" :"圆体-简"};}
		]);
		return Text;
	})(Sprite)


	//class laya.ui.Component extends laya.display.Sprite
	var Component=(function(_super){
		function Component(){
			this._comXml=null;
			this._dataSource=null;
			this._toolTip=null;
			this._tag=null;
			this._disabled=false;
			this._gray=false;
			this.layoutEnabled=true;
			Component.__super.call(this);
			this._layout=LayoutStyle.EMPTY;
			this.preinitialize();
			this.createChildren();
			this.initialize();
		}

		__class(Component,'laya.ui.Component',_super);
		var __proto=Component.prototype;
		Laya.imps(__proto,{"laya.ui.IComponent":true})
		/**@inheritDoc */
		__proto.destroy=function(destroyChild){
			(destroyChild===void 0)&& (destroyChild=true);
			_super.prototype.destroy.call(this,destroyChild);
			this._dataSource=this._layout=null;
			this._tag=null;
			this._toolTip=null;
		}

		/**
		*<p>预初始化。</p>
		*@internal 子类可在此函数内设置、修改属性默认值
		*/
		__proto.preinitialize=function(){}
		/**
		*<p>创建并添加控件子节点。</p>
		*@internal 子类可在此函数内创建并添加子节点。
		*/
		__proto.createChildren=function(){}
		/**
		*<p>控件初始化。</p>
		*@internal 在此子对象已被创建，可以对子对象进行修改。
		*/
		__proto.initialize=function(){}
		/**
		*<p>延迟运行指定的函数。</p>
		*<p>在控件被显示在屏幕之前调用，一般用于延迟计算数据。</p>
		*@param method 要执行的函数的名称。例如，functionName。
		*@param args 传递给 <code>method</code> 函数的可选参数列表。
		*
		*@see #runCallLater()
		*/
		__proto.callLater=function(method,args){
			Laya.timer.callLater(this,method,args);
		}

		/**
		*<p>如果有需要延迟调用的函数（通过 <code>callLater</code> 函数设置），则立即执行延迟调用函数。</p>
		*@param method 要执行的函数名称。例如，functionName。
		*@see #callLater()
		*/
		__proto.runCallLater=function(method){
			Laya.timer.runCallLater(this,method);
		}

		/**
		*<p>立即执行影响宽高度量的延迟调用函数。</p>
		*@internal <p>使用 <code>runCallLater</code> 函数，立即执行影响宽高度量的延迟运行函数(使用 <code>callLater</code> 设置延迟执行函数)。</p>
		*@see #callLater()
		*@see #runCallLater()
		*/
		__proto.commitMeasure=function(){}
		/**
		*<p>重新调整对象的大小。</p>
		*/
		__proto.changeSize=function(){
			this.event("resize");
		}

		/**
		*@private
		*<p>获取对象的布局样式。</p>
		*/
		__proto.getLayout=function(){
			this._layout===LayoutStyle.EMPTY && (this._layout=new LayoutStyle());
			return this._layout;
		}

		/**
		*@private
		*<p>指定对象是否可使用布局。</p>
		*<p>如果值为true,则此对象可以使用布局样式，否则不使用布局样式。</p>
		*@param value 一个 Boolean 值，指定对象是否可使用布局。
		*/
		__proto._setLayoutEnabled=function(value){
			if (this._layout && this._layout.enable !=value){
				this._layout.enable=value;
				this.on("added",this,this.onAdded);
				this.on("removed",this,this.onRemoved);
				if (this.parent){
					this.onAdded();
				}
			}
		}

		/**
		*对象从显示列表移除的事件侦听处理函数。
		*/
		__proto.onRemoved=function(){
			this.parent.off("resize",this,this.onCompResize);
		}

		/**
		*对象被添加到显示列表的事件侦听处理函数。
		*/
		__proto.onAdded=function(){
			this.parent.on("resize",this,this.onCompResize);
			this.resetLayoutX();
			this.resetLayoutY();
		}

		/**
		*父容器的 <code>Event.RESIZE</code> 事件侦听处理函数。
		*/
		__proto.onCompResize=function(){
			if (this._layout && this._layout.enable){
				this.resetLayoutX();
				this.resetLayoutY();
			}
		}

		/**
		*<p>重置对象的 <code>X</code> 轴（水平方向）布局。</p>
		*/
		__proto.resetLayoutX=function(){
			var layout=this._layout;
			if (!isNaN(layout.anchorX))this.pivotX=layout.anchorX *this.width;
			if (!this.layoutEnabled)return;
			var parent=this.parent;
			if (parent){
				if (!isNaN(layout.centerX)){
					this.x=Math.round((parent.width-this.displayWidth)*0.5+layout.centerX+this.pivotX *this.scaleX);
					}else if (!isNaN(layout.left)){
					this.x=Math.round(layout.left+this.pivotX *this.scaleX);
					if (!isNaN(layout.right)){
						this.width=(parent._width-layout.left-layout.right)/ (this.scaleX || 0.01);
					}
					}else if (!isNaN(layout.right)){
					this.x=Math.round(parent.width-this.displayWidth-layout.right+this.pivotX *this.scaleX);
				}
			}
		}

		/**
		*<p>重置对象的 <code>Y</code> 轴（垂直方向）布局。</p>
		*/
		__proto.resetLayoutY=function(){
			var layout=this._layout;
			if (!isNaN(layout.anchorY))this.pivotY=layout.anchorY *this.height;
			if (!this.layoutEnabled)return;
			var parent=this.parent;
			if (parent){
				if (!isNaN(layout.centerY)){
					this.y=Math.round((parent.height-this.displayHeight)*0.5+layout.centerY+this.pivotY *this.scaleY);
					}else if (!isNaN(layout.top)){
					this.y=Math.round(layout.top+this.pivotY *this.scaleY);
					if (!isNaN(layout.bottom)){
						this.height=(parent._height-layout.top-layout.bottom)/ (this.scaleY || 0.01);
					}
					}else if (!isNaN(layout.bottom)){
					this.y=Math.round(parent.height-this.displayHeight-layout.bottom+this.pivotY *this.scaleY);
				}
			}
		}

		/**
		*对象的 <code>Event.MOUSE_OVER</code> 事件侦听处理函数。
		*/
		__proto.onMouseOver=function(e){
			Laya.stage.event("showtip",this._toolTip);
		}

		/**
		*对象的 <code>Event.MOUSE_OUT</code> 事件侦听处理函数。
		*/
		__proto.onMouseOut=function(e){
			Laya.stage.event("hidetip",this._toolTip);
		}

		/**
		*<p>对象的显示宽度（以像素为单位）。</p>
		*/
		__getset(0,__proto,'displayWidth',function(){
			return this.width *this.scaleX;
		});

		/**
		*<p>表示显示对象的宽度，以像素为单位。</p>
		*<p><b>注：</b>当值为0时，宽度为自适应大小。</p>
		*/
		__getset(0,__proto,'width',function(){
			if (this._width)return this._width;
			return this.measureWidth;
			},function(value){
			if (this._width !=value){
				this._width=value;
				this.conchModel && this.conchModel.size(this._width,this._height);
				this.callLater(this.changeSize);
				if (this._layout.enable && (!isNaN(this._layout.centerX)|| !isNaN(this._layout.right)|| !isNaN(this._layout.anchorX)))this.resetLayoutX();
			}
		});

		/**
		*<p>显示对象的实际显示区域宽度（以像素为单位）。</p>
		*/
		__getset(0,__proto,'measureWidth',function(){
			var max=0;
			this.commitMeasure();
			for (var i=this.numChildren-1;i >-1;i--){
				var comp=this.getChildAt(i);
				if (comp.visible){
					max=Math.max(comp.x+comp.width *comp.scaleX,max);
				}
			}
			return max;
		});

		/**
		*<p>对象的显示高度（以像素为单位）。</p>
		*/
		__getset(0,__proto,'displayHeight',function(){
			return this.height *this.scaleY;
		});

		/**
		*<p>表示显示对象的高度，以像素为单位。</p>
		*<p><b>注：</b>当值为0时，高度为自适应大小。</p>
		*/
		__getset(0,__proto,'height',function(){
			if (this._height)return this._height;
			return this.measureHeight;
			},function(value){
			if (this._height !=value){
				this._height=value;
				this.conchModel && this.conchModel.size(this._width,this._height);
				this.callLater(this.changeSize);
				if (this._layout.enable && (!isNaN(this._layout.centerY)|| !isNaN(this._layout.bottom)|| !isNaN(this._layout.anchorY)))this.resetLayoutY();
			}
		});

		/**
		*<p>数据赋值，通过对UI赋值来控制UI显示逻辑。</p>
		*<p>简单赋值会更改组件的默认属性，使用大括号可以指定组件的任意属性进行赋值。</p>
		*@example
		//默认属性赋值
		dataSource={label1:"改变了label",checkbox1:true};//(更改了label1的text属性值，更改checkbox1的selected属性)。
		//任意属性赋值
		dataSource={label2:{text:"改变了label",size:14},checkbox2:{selected:true,x:10}};
		*/
		__getset(0,__proto,'dataSource',function(){
			return this._dataSource;
			},function(value){
			this._dataSource=value;
			for (var prop in this._dataSource){
				if (this.hasOwnProperty(prop)&& !((typeof (this[prop])=='function'))){
					this[prop]=this._dataSource[prop];
				}
			}
		});

		/**@inheritDoc */
		__getset(0,__proto,'scaleY',_super.prototype._$get_scaleY,function(value){
			if (_super.prototype._$get_scaleY.call(this)!=value){
				_super.prototype._$set_scaleY.call(this,value);
				this.callLater(this.changeSize);
				this._layout.enable && this.resetLayoutY();
			}
		});

		/**
		*<p>显示对象的实际显示区域高度（以像素为单位）。</p>
		*/
		__getset(0,__proto,'measureHeight',function(){
			var max=0;
			this.commitMeasure();
			for (var i=this.numChildren-1;i >-1;i--){
				var comp=this.getChildAt(i);
				if (comp.visible){
					max=Math.max(comp.y+comp.height *comp.scaleY,max);
				}
			}
			return max;
		});

		/**@inheritDoc */
		__getset(0,__proto,'scaleX',_super.prototype._$get_scaleX,function(value){
			if (_super.prototype._$get_scaleX.call(this)!=value){
				_super.prototype._$set_scaleX.call(this,value);
				this.callLater(this.changeSize);
				this._layout.enable && this.resetLayoutX();
			}
		});

		/**
		*<p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>
		*/
		__getset(0,__proto,'top',function(){
			return this._layout.top;
			},function(value){
			if (value !=this._layout.top){
				this.getLayout().top=value;
				this._setLayoutEnabled(true);
			}
			this.resetLayoutY();
		});

		/**
		*<p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>
		*/
		__getset(0,__proto,'bottom',function(){
			return this._layout.bottom;
			},function(value){
			if (value !=this._layout.bottom){
				this.getLayout().bottom=value;
				this._setLayoutEnabled(true);
			}
			this.resetLayoutY();
		});

		/**
		*<p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>
		*/
		__getset(0,__proto,'left',function(){
			return this._layout.left;
			},function(value){
			if (value !=this._layout.left){
				this.getLayout().left=value;
				this._setLayoutEnabled(true);
			}
			this.resetLayoutX();
		});

		/**
		*<p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>
		*/
		__getset(0,__proto,'right',function(){
			return this._layout.right;
			},function(value){
			if (value !=this._layout.right){
				this.getLayout().right=value;
				this._setLayoutEnabled(true);
			}
			this.resetLayoutX();
		});

		/**
		*<p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>
		*/
		__getset(0,__proto,'centerX',function(){
			return this._layout.centerX;
			},function(value){
			if (value !=this._layout.centerX){
				this.getLayout().centerX=value;
				this._setLayoutEnabled(true);
			}
			this.resetLayoutX();
		});

		/**
		*<p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>
		*/
		__getset(0,__proto,'centerY',function(){
			return this._layout.centerY;
			},function(value){
			if (value !=this._layout.centerY){
				this.getLayout().centerY=value;
				this._setLayoutEnabled(true);
			}
			this.resetLayoutY();
		});

		/**X轴锚点，值为0-1*/
		__getset(0,__proto,'anchorX',function(){
			return this._layout.anchorX;
			},function(value){
			if (value !=this._layout.anchorX){
				this.getLayout().anchorX=value;
				this._setLayoutEnabled(true);
			}
			this.resetLayoutX();
		});

		/**Y轴锚点，值为0-1*/
		__getset(0,__proto,'anchorY',function(){
			return this._layout.anchorY;
			},function(value){
			if (value !=this._layout.anchorY){
				this.getLayout().anchorY=value;
				this._setLayoutEnabled(true);
			}
			this.resetLayoutY();
		});

		/**
		*<p>对象的标签。</p>
		*@internal 冗余字段，可以用来储存数据。
		*/
		__getset(0,__proto,'tag',function(){
			return this._tag;
			},function(value){
			this._tag=value;
		});

		/**
		*<p>鼠标悬停提示。</p>
		*<p>可以赋值为文本 <code>String</code> 或函数 <code>Handler</code> ，用来实现自定义样式的鼠标提示和参数携带等。</p>
		*@example
		*private var _testTips:TestTipsUI=new TestTipsUI();
		*private function testTips():void {
			//简单鼠标提示
			*btn2.toolTip="这里是鼠标提示&lt;b&gt;粗体&lt;/b&gt;&lt;br&gt;换行";
			//自定义的鼠标提示
			*btn1.toolTip=showTips1;
			//带参数的自定义鼠标提示
			*clip.toolTip=new Handler(this,showTips2,["clip"]);
			*}
		*private function showTips1():void {
			*_testTips.label.text="这里是按钮["+btn1.label+"]";
			*tip.addChild(_testTips);
			*}
		*private function showTips2(name:String):void {
			*_testTips.label.text="这里是"+name;
			*tip.addChild(_testTips);
			*}
		*/
		__getset(0,__proto,'toolTip',function(){
			return this._toolTip;
			},function(value){
			if (this._toolTip !=value){
				this._toolTip=value;
				if (value !=null){
					this.on("mouseover",this,this.onMouseOver);
					this.on("mouseout",this,this.onMouseOut);
					}else {
					this.off("mouseover",this,this.onMouseOver);
					this.off("mouseout",this,this.onMouseOut);
				}
			}
		});

		/**
		*XML 数据。
		*/
		__getset(0,__proto,'comXml',function(){
			return this._comXml;
			},function(value){
			this._comXml=value;
		});

		/**是否变灰。*/
		__getset(0,__proto,'gray',function(){
			return this._gray;
			},function(value){
			if (value!==this._gray){
				this._gray=value;
				UIUtils.gray(this,value);
			}
		});

		/**是否禁用页面，设置为true后，会变灰并且禁用鼠标。*/
		__getset(0,__proto,'disabled',function(){
			return this._disabled;
			},function(value){
			if (value!==this._disabled){
				this.gray=this._disabled=value;
				this.mouseEnabled=!value;
			}
		});

		return Component;
	})(Sprite)


	//class laya.display.Stage extends laya.display.Sprite
	var Stage=(function(_super){
		function Stage(){
			this.focus=null;
			this.designWidth=0;
			this.designHeight=0;
			this.canvasRotation=false;
			this.canvasDegree=0;
			this.renderingEnabled=true;
			this.screenAdaptationEnabled=true;
			this._screenMode="none";
			this._scaleMode="noscale";
			this._alignV="top";
			this._alignH="left";
			this._bgColor="black";
			this._mouseMoveTime=0;
			this._renderCount=0;
			this._frameStartTime=NaN;
			this._isFocused=false;
			this._isVisibility=false;
			this._scenes=null;
			this._frameRate="fast";
			Stage.__super.call(this);
			this.offset=new Point();
			this._canvasTransform=new Matrix();
			this._previousOrientation=Browser.window.orientation;
			var _$this=this;
			this.transform=Matrix.create();
			this._scenes=[];
			this.mouseEnabled=true;
			this.hitTestPrior=true;
			this.autoSize=false;
			this._displayedInStage=true;
			this._isFocused=true;
			this._isVisibility=true;
			var window=Browser.window;
			var _this=this;
			window.addEventListener("focus",function(){
				_$this._isFocused=true;
				_this.event("focus");
				_this.event("focuschange");
			});
			window.addEventListener("blur",function(){
				_$this._isFocused=false;
				_this.event("blur");
				_this.event("focuschange");
				if (_this._isInputting())Input["inputElement"].target.focus=false;
			});
			var hidden="hidden",state="visibilityState",visibilityChange="visibilitychange";
			var document=window.document;
			if (typeof document.hidden!=="undefined"){
				visibilityChange="visibilitychange";
				state="visibilityState";
				}else if (typeof document.mozHidden!=="undefined"){
				visibilityChange="mozvisibilitychange";
				state="mozVisibilityState";
				}else if (typeof document.msHidden!=="undefined"){
				visibilityChange="msvisibilitychange";
				state="msVisibilityState";
				}else if (typeof document.webkitHidden!=="undefined"){
				visibilityChange="webkitvisibilitychange";
				state="webkitVisibilityState";
			}
			window.document.addEventListener(visibilityChange,visibleChangeFun);
			function visibleChangeFun (){
				if (Browser.document[state]=="hidden"){
					_this._setStageVisible(false);
					}else {
					_this._setStageVisible(true);
				}
			}
			window.document.addEventListener("qbrowserVisibilityChange",qbroserVisibleChangeFun);
			function qbroserVisibleChangeFun (e){
				_this._setStageVisible(!e.hidden);
			}
			window.addEventListener("resize",function(){
				var orientation=Browser.window.orientation;
				if (orientation !=null && orientation !=_$this._previousOrientation && _this._isInputting()){
					Input["inputElement"].target.focus=false;
				}
				_$this._previousOrientation=orientation;
				if (_this._isInputting())return;
				_this._resetCanvas();
			});
			window.addEventListener("orientationchange",function(e){
				_this._resetCanvas();
			});
			this.on("mousemove",this,this._onmouseMove);
			if (Browser.onMobile)this.on("mousedown",this,this._onmouseMove);
		}

		__class(Stage,'laya.display.Stage',_super);
		var __proto=Stage.prototype;
		__proto._setStageVisible=function(value){
			if (this._isVisibility==value)return;
			this._isVisibility=value;
			if (!this._isVisibility)if (this._isInputting())Input["inputElement"].target.focus=false;
			this.event("visibilitychange");
		}

		/**
		*@private
		*在移动端输入时，输入法弹出期间不进行画布尺寸重置。
		*/
		__proto._isInputting=function(){
			return (Browser.onMobile && Input.isInputting);
		}

		/**@private */
		__proto._changeCanvasSize=function(){
			this.setScreenSize(Browser.clientWidth *Browser.pixelRatio,Browser.clientHeight *Browser.pixelRatio);
		}

		/**@private */
		__proto._resetCanvas=function(){
			if (!this.screenAdaptationEnabled)return;
			var canvas=Render._mainCanvas;
			var canvasStyle=canvas.source.style;
			canvas.size(1,1);
			Laya.timer.once(100,this,this._changeCanvasSize);
		}

		/**
		*设置屏幕大小，场景会根据屏幕大小进行适配。可以动态调用此方法，来更改游戏显示的大小。
		*@param screenWidth 屏幕宽度。
		*@param screenHeight 屏幕高度。
		*/
		__proto.setScreenSize=function(screenWidth,screenHeight){
			var rotation=false;
			if (this._screenMode!=="none"){
				var screenType=screenWidth / screenHeight < 1 ? "vertical" :"horizontal";
				rotation=screenType!==this._screenMode;
				if (rotation){
					var temp=screenHeight;
					screenHeight=screenWidth;
					screenWidth=temp;
				}
			}
			this.canvasRotation=rotation;
			var canvas=Render._mainCanvas;
			var canvasStyle=canvas.source.style;
			var mat=this._canvasTransform.identity();
			var scaleMode=this._scaleMode;
			var scaleX=screenWidth / this.designWidth;
			var scaleY=screenHeight / this.designHeight;
			var canvasWidth=this.designWidth;
			var canvasHeight=this.designHeight;
			var realWidth=screenWidth;
			var realHeight=screenHeight;
			var pixelRatio=Browser.pixelRatio;
			this._width=this.designWidth;
			this._height=this.designHeight;
			switch (scaleMode){
				case "noscale":
					scaleX=scaleY=1;
					realWidth=this.designWidth;
					realHeight=this.designHeight;
					break ;
				case "showall":
					scaleX=scaleY=Math.min(scaleX,scaleY);
					canvasWidth=realWidth=Math.round(this.designWidth *scaleX);
					canvasHeight=realHeight=Math.round(this.designHeight *scaleY);
					break ;
				case "noborder":
					scaleX=scaleY=Math.max(scaleX,scaleY);
					realWidth=Math.round(this.designWidth *scaleX);
					realHeight=Math.round(this.designHeight *scaleY);
					break ;
				case "full":
					scaleX=scaleY=1;
					this._width=canvasWidth=screenWidth;
					this._height=canvasHeight=screenHeight;
					break ;
				case "fixedwidth":
					scaleY=scaleX;
					this._height=canvasHeight=Math.round(screenHeight / scaleX);
					break ;
				case "fixedheight":
					scaleX=scaleY;
					this._width=canvasWidth=Math.round(screenWidth / scaleY);
					break ;
				case "fixedauto":
					if ((screenWidth / screenHeight)< (this.designWidth / this.designHeight)){
						scaleY=scaleX;
						this._height=canvasHeight=Math.round(screenHeight / scaleX);
						}else {
						scaleX=scaleY;
						this._width=canvasWidth=Math.round(screenWidth / scaleY);
					}
					break ;
				}
			if (this.conchModel)this.conchModel.size(this._width,this._height);
			scaleX *=this.scaleX;
			scaleY *=this.scaleY;
			if (scaleX===1 && scaleY===1){
				this.transform.identity();
				}else {
				this.transform.a=this._formatData(scaleX / (realWidth / canvasWidth));
				this.transform.d=this._formatData(scaleY / (realHeight / canvasHeight));
				this.conchModel && this.conchModel.scale(this.transform.a,this.transform.d);
			}
			canvas.size(canvasWidth,canvasHeight);
			RunDriver.changeWebGLSize(canvasWidth,canvasHeight);
			mat.scale(realWidth / canvasWidth / pixelRatio,realHeight / canvasHeight / pixelRatio);
			if (this._alignH==="left")this.offset.x=0;
			else if (this._alignH==="right")this.offset.x=(screenWidth-realWidth)/pixelRatio;
			else this.offset.x=(screenWidth-realWidth)*0.5 / pixelRatio;
			if (this._alignV==="top")this.offset.y=0;
			else if (this._alignV==="bottom")this.offset.y=(screenHeight-realHeight)/pixelRatio;
			else this.offset.y=(screenHeight-realHeight)*0.5 / pixelRatio;
			this.offset.x=Math.round(this.offset.x);
			this.offset.y=Math.round(this.offset.y);
			mat.translate(this.offset.x,this.offset.y);
			this.canvasDegree=0;
			if (rotation){
				if (this._screenMode==="horizontal"){
					mat.rotate(Math.PI / 2);
					mat.translate(screenHeight / pixelRatio,0);
					this.canvasDegree=90;
					}else {
					mat.rotate(-Math.PI / 2);
					mat.translate(0,screenWidth / pixelRatio);
					this.canvasDegree=-90;
				}
			}
			mat.a=this._formatData(mat.a);
			mat.d=this._formatData(mat.d);
			mat.tx=this._formatData(mat.tx);
			mat.ty=this._formatData(mat.ty);
			canvasStyle.transformOrigin=canvasStyle.webkitTransformOrigin=canvasStyle.msTransformOrigin=canvasStyle.mozTransformOrigin=canvasStyle.oTransformOrigin="0px 0px 0px";
			canvasStyle.transform=canvasStyle.webkitTransform=canvasStyle.msTransform=canvasStyle.mozTransform=canvasStyle.oTransform="matrix("+mat.toString()+")";
			mat.translate(parseInt(canvasStyle.left)|| 0,parseInt(canvasStyle.top)|| 0);
			this.visible=true;
			this._repaint=1;
			this.event("resize");
		}

		/**@private */
		__proto._formatData=function(value){
			if (Math.abs(value)< 0.000001)return 0;
			if (Math.abs(1-value)< 0.001)return value > 0 ? 1 :-1;
			return value;
		}

		/**@inheritDoc */
		__proto.getMousePoint=function(){
			return Point.TEMP.setTo(this.mouseX,this.mouseY);
		}

		/**@inheritDoc */
		__proto.repaint=function(){
			this._repaint=1;
		}

		/**@inheritDoc */
		__proto.parentRepaint=function(){}
		/**@private */
		__proto._loop=function(){
			this.render(Render.context,0,0);
			return true;
		}

		/**@private */
		__proto._onmouseMove=function(e){
			this._mouseMoveTime=Browser.now();
		}

		/**
		*<p>获得距当前帧开始后，过了多少时间，单位为毫秒。</p>
		*<p>可以用来判断函数内时间消耗，通过合理控制每帧函数处理消耗时长，避免一帧做事情太多，对复杂计算分帧处理，能有效降低帧率波动。</p>
		*/
		__proto.getTimeFromFrameStart=function(){
			return Browser.now()-this._frameStartTime;
		}

		/**@inheritDoc */
		__proto.render=function(context,x,y){
			if (this._frameRate==="sleep" && !Render.isConchApp){
				var now=Browser.now();
				if (now-this._frameStartTime >=1000)this._frameStartTime=now;
				else return;
			}
			this._renderCount++;
			Render.isFlash && this.repaint();
			if (!this._style.visible){
				if (this._renderCount % 5===0){
					Stat.loopCount++;
					MouseManager.instance.runEvent();
					Laya.timer._update();
				}
				return;
			}
			this._frameStartTime=Browser.now();
			var frameMode=this._frameRate==="mouse" ? (((this._frameStartTime-this._mouseMoveTime)< 2000)? "fast" :"slow"):this._frameRate;
			var isFastMode=(frameMode!=="slow");
			var isDoubleLoop=(this._renderCount % 2===0);
			Stat.renderSlow=!isFastMode;
			if (isFastMode || isDoubleLoop || Render.isConchApp){
				Stat.loopCount++;
				MouseManager.instance.runEvent();
				Laya.timer._update();
				RunDriver.update3DLoop();
				var scene;
				var i=0,n=0;
				if (Render.isConchNode){
					for (i=0,n=this._scenes.length;i < n;i++){
						scene=this._scenes[i];
						(scene)&& (scene._updateSceneConch());
					}
					}else {
					for (i=0,n=this._scenes.length;i < n;i++){
						scene=this._scenes[i];
						(scene)&& (scene._updateScene());
					}
				}
				if (Render.isConchNode){
					var customList=Sprite["CustomList"];
					for (i=0,n=customList.length;i < n;i++){
						var customItem=customList[i];
						customItem.customRender(customItem.customContext,0,0);
					}
					return;
				}
			}
			if (Render.isConchNode)return;
			if (this.renderingEnabled && (isFastMode || !isDoubleLoop)){
				if (Render.isWebGL){
					context.clear();
					_super.prototype.render.call(this,context,x,y);
					Stat._show&& Stat._sp && Stat._sp.render(context,x,y);
					RunDriver.clear(this._bgColor);
					RunDriver.beginFlush();
					context.flush();
					RunDriver.endFinish();
					VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();
					}else {
					RunDriver.clear(this._bgColor);
					_super.prototype.render.call(this,context,x,y);
					Stat._show&& Stat._sp && Stat._sp.render(context,x,y);
				}
			}
		}

		/**@private */
		__proto._requestFullscreen=function(){
			var element=Browser.document.documentElement;
			if (element.requestFullscreen){
				element.requestFullscreen();
				}else if (element.mozRequestFullScreen){
				element.mozRequestFullScreen();
				}else if (element.webkitRequestFullscreen){
				element.webkitRequestFullscreen();
				}else if (element.msRequestFullscreen){
				element.msRequestFullscreen();
			}
		}

		/**@private */
		__proto._fullScreenChanged=function(){
			Laya.stage.event("fullscreenchange");
		}

		/**退出全屏模式*/
		__proto.exitFullscreen=function(){
			var document=Browser.document;
			if (document.exitFullscreen){
				document.exitFullscreen();
				}else if (document.mozCancelFullScreen){
				document.mozCancelFullScreen();
				}else if (document.webkitExitFullscreen){
				document.webkitExitFullscreen();
			}
		}

		/**当前视窗由缩放模式导致的 X 轴缩放系数。*/
		__getset(0,__proto,'clientScaleX',function(){
			return this._transform ? this._transform.getScaleX():1;
		});

		//[Deprecated]
		__getset(0,__proto,'desginHeight',function(){
			console.debug("desginHeight已经弃用，请使用designHeight代替");
			return this.designHeight;
		});

		/**帧率类型，支持三种模式：fast-60帧(默认)，slow-30帧，mouse-30帧（鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗），sleep-1帧。*/
		__getset(0,__proto,'frameRate',function(){
			return this._frameRate;
			},function(value){
			this._frameRate=value;
			if (Render.isConchApp){
				switch (this._frameRate){
					case "slow":
						Browser.window.conch && Browser.window.conchConfig.setSlowFrame && Browser.window.conchConfig.setSlowFrame(true);
						break ;
					case "fast":
						Browser.window.conch && Browser.window.conchConfig.setSlowFrame && Browser.window.conchConfig.setSlowFrame(false);
						break ;
					case "mouse":
						Browser.window.conch && Browser.window.conchConfig.setMouseFrame && Browser.window.conchConfig.setMouseFrame(2000);
						break ;
					case "sleep":
						Browser.window.conch && Browser.window.conchConfig.setLimitFPS && Browser.window.conchConfig.setLimitFPS(1);
						break ;
					default :
						throw new Error("Stage:frameRate invalid.");
						break ;
					}
			}
		});

		/**当前视窗由缩放模式导致的 Y 轴缩放系数。*/
		__getset(0,__proto,'clientScaleY',function(){
			return this._transform ? this._transform.getScaleY():1;
		});

		__getset(0,__proto,'width',_super.prototype._$get_width,function(value){
			this.designWidth=value;
			_super.prototype._$set_width.call(this,value);
			Laya.timer.callLater(this,this._changeCanvasSize);
		});

		/**
		*<p>水平对齐方式。默认值为"left"。</p>
		*<p><ul>取值范围：
		*<li>"left" ：居左对齐；</li>
		*<li>"center" ：居中对齐；</li>
		*<li>"right" ：居右对齐；</li>
		*</ul></p>
		*/
		__getset(0,__proto,'alignH',function(){
			return this._alignH;
			},function(value){
			this._alignH=value;
			Laya.timer.callLater(this,this._changeCanvasSize);
		});

		/**
		*舞台是否获得焦点。
		*/
		__getset(0,__proto,'isFocused',function(){
			return this._isFocused;
		});

		__getset(0,__proto,'height',_super.prototype._$get_height,function(value){
			this.designHeight=value;
			_super.prototype._$set_height.call(this,value);
			Laya.timer.callLater(this,this._changeCanvasSize);
		});

		__getset(0,__proto,'transform',function(){
			if (this._tfChanged)this._adjustTransform();
			return this._transform=this._transform|| Matrix.create();
		},_super.prototype._$set_transform);

		/**
		*舞台是否处于可见状态(是否进入后台)。
		*/
		__getset(0,__proto,'isVisibility',function(){
			return this._isVisibility;
		});

		//[Deprecated]
		__getset(0,__proto,'desginWidth',function(){
			console.debug("desginWidth已经弃用，请使用designWidth代替");
			return this.designWidth;
		});

		/**
		*<p>缩放模式。默认值为 "noscale"。</p>
		*<p><ul>取值范围：
		*<li>"noscale" ：不缩放；</li>
		*<li>"exactfit" ：全屏不等比缩放；</li>
		*<li>"showall" ：最小比例缩放；</li>
		*<li>"noborder" ：最大比例缩放；</li>
		*<li>"full" ：不缩放，stage的宽高等于屏幕宽高；</li>
		*<li>"fixedwidth" ：宽度不变，高度根据屏幕比缩放；</li>
		*<li>"fixedheight" ：高度不变，宽度根据屏幕比缩放；</li>
		*<li>"fixedauto" ：根据宽高比，自动选择使用fixedwidth或fixedheight；</li>
		*</ul></p>
		*/
		__getset(0,__proto,'scaleMode',function(){
			return this._scaleMode;
			},function(value){
			this._scaleMode=value;
			Laya.timer.callLater(this,this._changeCanvasSize);
		});

		/**
		*<p>垂直对齐方式。默认值为"top"。</p>
		*<p><ul>取值范围：
		*<li>"top" ：居顶部对齐；</li>
		*<li>"middle" ：居中对齐；</li>
		*<li>"bottom" ：居底部对齐；</li>
		*</ul></p>
		*/
		__getset(0,__proto,'alignV',function(){
			return this._alignV;
			},function(value){
			this._alignV=value;
			Laya.timer.callLater(this,this._changeCanvasSize);
		});

		/**舞台的背景颜色，默认为黑色，null为透明。*/
		__getset(0,__proto,'bgColor',function(){
			return this._bgColor;
			},function(value){
			this._bgColor=value;
			this.conchModel && this.conchModel.bgColor(value);
			if (Render.isWebGL){
				if (value){
					Stage._wgColor=Color$1.create(value)._color;
					}else {
					if (!Browser.onMiniGame)Stage._wgColor=null;
				}
			}
			if (Browser.onLimixiu){
				Stage._wgColor=Color$1.create(value)._color;
			}else
			if (value){
				Render.canvas.style.background=value;
				}else {
				Render.canvas.style.background="none";
			}
		});

		/**鼠标在 Stage 上的 X 轴坐标。*/
		__getset(0,__proto,'mouseX',function(){
			return Math.round(MouseManager.instance.mouseX / this.clientScaleX);
		});

		/**鼠标在 Stage 上的 Y 轴坐标。*/
		__getset(0,__proto,'mouseY',function(){
			return Math.round(MouseManager.instance.mouseY / this.clientScaleY);
		});

		/**
		*<p>场景布局类型。</p>
		*<p><ul>取值范围：
		*<li>"none" ：不更改屏幕</li>
		*<li>"horizontal" ：自动横屏</li>
		*<li>"vertical" ：自动竖屏</li>
		*</ul></p>
		*/
		__getset(0,__proto,'screenMode',function(){
			return this._screenMode;
			},function(value){
			this._screenMode=value;
		});

		__getset(0,__proto,'visible',_super.prototype._$get_visible,function(value){
			if (this.visible!==value){
				_super.prototype._$set_visible.call(this,value);
				var style=Render._mainCanvas.source.style;
				style.visibility=value ? "visible" :"hidden";
			}
		});

		/**
		*<p>是否开启全屏，用户点击后进入全屏。</p>
		*<p>兼容性提示：部分浏览器不允许点击进入全屏，比如Iphone等。</p>
		*/
		__getset(0,__proto,'fullScreenEnabled',null,function(value){
			var document=Browser.document;
			var canvas=Render.canvas;
			if (value){
				canvas.addEventListener('mousedown',this._requestFullscreen);
				canvas.addEventListener('touchstart',this._requestFullscreen);
				document.addEventListener("fullscreenchange",this._fullScreenChanged);
				document.addEventListener("mozfullscreenchange",this._fullScreenChanged);
				document.addEventListener("webkitfullscreenchange",this._fullScreenChanged);
				document.addEventListener("msfullscreenchange",this._fullScreenChanged);
				}else {
				canvas.removeEventListener('mousedown',this._requestFullscreen);
				canvas.removeEventListener('touchstart',this._requestFullscreen);
				document.removeEventListener("fullscreenchange",this._fullScreenChanged);
				document.removeEventListener("mozfullscreenchange",this._fullScreenChanged);
				document.removeEventListener("webkitfullscreenchange",this._fullScreenChanged);
				document.removeEventListener("msfullscreenchange",this._fullScreenChanged);
			}
		});

		Stage.SCALE_NOSCALE="noscale";
		Stage.SCALE_EXACTFIT="exactfit";
		Stage.SCALE_SHOWALL="showall";
		Stage.SCALE_NOBORDER="noborder";
		Stage.SCALE_FULL="full";
		Stage.SCALE_FIXED_WIDTH="fixedwidth";
		Stage.SCALE_FIXED_HEIGHT="fixedheight";
		Stage.SCALE_FIXED_AUTO="fixedauto";
		Stage.ALIGN_LEFT="left";
		Stage.ALIGN_RIGHT="right";
		Stage.ALIGN_CENTER="center";
		Stage.ALIGN_TOP="top";
		Stage.ALIGN_MIDDLE="middle";
		Stage.ALIGN_BOTTOM="bottom";
		Stage.SCREEN_NONE="none";
		Stage.SCREEN_HORIZONTAL="horizontal";
		Stage.SCREEN_VERTICAL="vertical";
		Stage.FRAME_FAST="fast";
		Stage.FRAME_SLOW="slow";
		Stage.FRAME_MOUSE="mouse";
		Stage.FRAME_SLEEP="sleep";
		Stage.FRAME_MOUSE_THREDHOLD=2000;
		__static(Stage,
		['_wgColor',function(){return this._wgColor=[0,0,0,1];}
		]);
		return Stage;
	})(Sprite)


	//class laya.html.dom.HTMLElement extends laya.display.Sprite
	var HTMLElement=(function(_super){
		function HTMLElement(){
			this.URI=null;
			this._href=null;
			HTMLElement.__super.call(this);
			this._text=HTMLElement._EMPTYTEXT;
			this.setStyle(new CSSStyle(this));
			this._getCSSStyle().valign="middle";
			this.mouseEnabled=true;
		}

		__class(HTMLElement,'laya.html.dom.HTMLElement',_super);
		var __proto=HTMLElement.prototype;
		/**
		*@private
		*/
		__proto.layaoutCallNative=function(){
			var n=0;
			if (this._childs &&(n=this._childs.length)> 0){
				for (var i=0;i < n;i++){
					this._childs[i].layaoutCallNative && this._childs[i].layaoutCallNative();
				}
			};
			var word=this._getWords();
			word ? laya.html.dom.HTMLElement.fillWords(this,word,0,0,this.style.font,this.style.color,this.style.underLine):this.graphics.clear();
		}

		__proto.appendChild=function(c){
			return this.addChild(c);
		}

		/**
		*rtl模式的getWords函數
		*/
		__proto._getWords2=function(){
			var txt=this._text.text;
			if (!txt || txt.length===0)
				return null;
			var i=0,n=0;
			var realWords;
			var drawWords;
			if (!this._text.drawWords){
				realWords=txt.split(" ");
				n=realWords.length-1;
				drawWords=[];
				for (i=0;i < n;i++){
					drawWords.push(realWords[i]," ")
				}
				if(n>=0)
					drawWords.push(realWords[n]);
				this._text.drawWords=drawWords;
				}else{
				drawWords=this._text.drawWords;
			};
			var words=this._text.words;
			if (words && words.length===drawWords.length)
				return words;
			words===null && (this._text.words=words=[]);
			words.length=drawWords.length;
			var size;
			var style=this.style;
			var fontStr=style.font;
			for (i=0,n=drawWords.length;i < n;i++){
				size=Utils.measureText(drawWords[i],fontStr);
				var tHTMLChar=words[i]=new HTMLChar(drawWords[i],size.width,size.height || style.fontSize,style);
				if (tHTMLChar.char.length > 1){
					tHTMLChar.charNum=tHTMLChar.char;
				}
				if (this.href){
					var tSprite=new Sprite();
					this.addChild(tSprite);
					tHTMLChar.setSprite(tSprite);
				}
			}
			return words;
		}

		__proto._getWords=function(){
			if (!Text.CharacterCache)return this._getWords2();
			var txt=this._text.text;
			if (!txt || txt.length===0)
				return null;
			var words=this._text.words;
			if (words && words.length===txt.length)
				return words;
			words===null && (this._text.words=words=[]);
			words.length=txt.length;
			var size;
			var style=this.style;
			var fontStr=style.font;
			var startX=0;
			for (var i=0,n=txt.length;i < n;i++){
				size=Utils.measureText(txt.charAt(i),fontStr);
				var tHTMLChar=words[i]=new HTMLChar(txt.charAt(i),size.width,size.height||style.fontSize,style);
				if (this.href){
					var tSprite=new Sprite();
					this.addChild(tSprite);
					tHTMLChar.setSprite(tSprite);
				}
			}
			return words;
		}

		__proto.showLinkSprite=function(){
			var words=this._text.words;
			if (words){
				var tLinkSpriteList=[];
				var tSprite;
				var tHtmlChar;
				for (var i=0;i < words.length;i++){
					tHtmlChar=words[i];
					tSprite=new Sprite();
					tSprite.graphics.drawRect(0,0,tHtmlChar.width,tHtmlChar.height,"#ff0000");
					tSprite.width=tHtmlChar.width;
					tSprite.height=tHtmlChar.height;
					this.addChild(tSprite);
					tLinkSpriteList.push(tSprite);
				}
			}
		}

		__proto._layoutLater=function(){
			var style=this.style;
			if ((style._type & 0x200))return;
			if (style.widthed(this)&& (this._childs.length>0 || this._getWords()!=null)&& style.block){
				Layout.later(this);
				style._type |=0x200;
			}
			else{
				this.parent && (this.parent)._layoutLater();
			}
		}

		__proto._setAttributes=function(name,value){
			switch (name){
				case 'style':
					this.style.cssText(value);
					return;
				case 'class':
					this.className=value;
					return;
				}
			_super.prototype._setAttributes.call(this,name,value);
		}

		__proto.updateHref=function(){
			if (this._href !=null){
				var words=this._getWords();
				if (words){
					var tHTMLChar;
					var tSprite;
					for (var i=0;i < words.length;i++){
						tHTMLChar=words[i];
						tSprite=tHTMLChar.getSprite();
						if (tSprite){
							tSprite.size(tHTMLChar.width,tHTMLChar.height);
							tSprite.on("click",this,this.onLinkHandler);
						}
					}
				}
			}
		}

		__proto.onLinkHandler=function(e){
			switch(e.type){
				case "click":;
					var target=this;
					while (target){
						target.event("link",[this.href]);
						target=target.parent;
					}
					break ;
				}
		}

		__proto.formatURL=function(url){
			if (!this.URI)return url;
			return URL.formatURL(url,this.URI ? this.URI.path :null);
		}

		__getset(0,__proto,'href',function(){
			return this._href;
			},function(url){
			this._href=url;
			if (url !=null){
				this._getCSSStyle().underLine=1;
				this.updateHref();
			}
		});

		__getset(0,__proto,'color',null,function(value){
			this.style.color=value;
		});

		__getset(0,__proto,'onClick',null,function(value){
			var fn;
			Laya._runScript("fn=function(event){"+value+";}");
			this.on("click",this,fn);
		});

		__getset(0,__proto,'id',null,function(value){
			HTMLDocument.document.setElementById(value,this);
		});

		__getset(0,__proto,'innerTEXT',function(){
			return this._text.text;
			},function(value){
			this.text=value;
		});

		__getset(0,__proto,'style',function(){
			return this._style;
		});

		__getset(0,__proto,'text',function(){
			return this._text.text;
			},function(value){
			if (this._text==HTMLElement._EMPTYTEXT){
				this._text={text:value,words:null};
			}
			else{
				this._text.text=value;
				this._text.words && (this._text.words.length=0);
			}
			Render.isConchApp && this.layaoutCallNative();
			this._renderType |=0x800;
			this.repaint();
			this.updateHref();
		});

		__getset(0,__proto,'parent',_super.prototype._$get_parent,function(value){
			if ((value instanceof laya.html.dom.HTMLElement )){
				var p=value;
				this.URI || (this.URI=p.URI);
				this.style.inherit(p.style);
			}
			_super.prototype._$set_parent.call(this,value);
		});

		__getset(0,__proto,'className',null,function(value){
			this.style.attrs(HTMLDocument.document.styleSheets['.'+value]);
		});

		HTMLElement.fillWords=function(ele,words,x,y,font,color,underLine){
			ele.graphics.clear();
			for (var i=0,n=words.length;i < n;i++){
				var a=words[i];
				ele.graphics.fillText(a.char,a.x+x,a.y+y,font,color,'left',underLine);
			}
		}

		HTMLElement._EMPTYTEXT={text:null,words:null};
		return HTMLElement;
	})(Sprite)


	//class laya.webgl.shader.Shader extends laya.webgl.shader.BaseShader
	var Shader=(function(_super){
		function Shader(vs,ps,saveName,nameMap){
			//this._nameMap=null;
			//this._vs=null;
			//this._ps=null;
			this._curActTexIndex=0;
			//this._reCompile=false;
			this.tag={};
			//this._vshader=null;
			//this._pshader=null;
			this._program=null;
			this._params=null;
			this._paramsMap={};
			this._offset=0;
			//this._id=0;
			Shader.__super.call(this);
			if ((!vs)|| (!ps))throw "Shader Error";
			this._id=++Shader._count;
			this._vs=vs;
			this._ps=ps;
			this._nameMap=nameMap ? nameMap :{};
			saveName !=null && (Shader.sharders[saveName]=this);
		}

		__class(Shader,'laya.webgl.shader.Shader',_super);
		var __proto=Shader.prototype;
		__proto.recreateResource=function(){
			this._compile();
			this.completeCreate();
			this.memorySize=0;
		}

		//忽略尺寸尺寸
		__proto.disposeResource=function(){
			WebGL.mainContext.deleteShader(this._vshader);
			WebGL.mainContext.deleteShader(this._pshader);
			WebGL.mainContext.deleteProgram(this._program);
			this._vshader=this._pshader=this._program=null;
			this._params=null;
			this._paramsMap={};
			this.memorySize=0;
			this._curActTexIndex=0;
		}

		__proto._compile=function(){
			if (!this._vs || !this._ps || this._params)
				return;
			this._reCompile=true;
			this._params=[];
			var text=[this._vs,this._ps];
			var result;
			var gl=WebGL.mainContext;
			this._program=gl.createProgram();
			this._vshader=Shader._createShader(gl,text[0],0x8B31);
			this._pshader=Shader._createShader(gl,text[1],0x8B30);
			gl.attachShader(this._program,this._vshader);
			gl.attachShader(this._program,this._pshader);
			gl.linkProgram(this._program);
			if (!Render.isConchApp && !gl.getProgramParameter(this._program,0x8B82)){
				throw gl.getProgramInfoLog(this._program);
			};
			var one,i=0,j=0,n=0,location;
			var attribNum=0;
			if (Render.isConchApp){
				attribNum=gl.getProgramParameterEx(this._vs,this._ps,"",0x8B89);
			}
			else{
				attribNum=gl.getProgramParameter(this._program,0x8B89);
			}
			for (i=0;i < attribNum;i++){
				var attrib=null;
				if (Render.isConchApp){
					attrib=gl.getActiveAttribEx(this._vs,this._ps,"",i);
				}
				else{
					attrib=gl.getActiveAttrib(this._program,i);
				}
				location=gl.getAttribLocation(this._program,attrib.name);
				one={vartype:"attribute",glfun:null,ivartype:0,attrib:attrib,location:location,name:attrib.name,type:attrib.type,isArray:false,isSame:false,preValue:null,indexOfParams:0};
				this._params.push(one);
			};
			var nUniformNum=0;
			if (Render.isConchApp){
				nUniformNum=gl.getProgramParameterEx(this._vs,this._ps,"",0x8B86);
			}
			else{
				nUniformNum=gl.getProgramParameter(this._program,0x8B86);
			}
			for (i=0;i < nUniformNum;i++){
				var uniform=null;
				if (Render.isConchApp){
					uniform=gl.getActiveUniformEx(this._vs,this._ps,"",i);
				}
				else{
					uniform=gl.getActiveUniform(this._program,i);
				}
				location=gl.getUniformLocation(this._program,uniform.name);
				one={vartype:"uniform",glfun:null,ivartype:1,attrib:attrib,location:location,name:uniform.name,type:uniform.type,isArray:false,isSame:false,preValue:null,indexOfParams:0};
				if (one.name.indexOf('[0]')> 0){
					one.name=one.name.substr(0,one.name.length-3);
					one.isArray=true;
					one.location=gl.getUniformLocation(this._program,one.name);
				}
				this._params.push(one);
			}
			for (i=0,n=this._params.length;i < n;i++){
				one=this._params[i];
				one.indexOfParams=i;
				one.index=1;
				one.value=[one.location,null];
				one.codename=one.name;
				one.name=this._nameMap[one.codename] ? this._nameMap[one.codename] :one.codename;
				this._paramsMap[one.name]=one;
				one._this=this;
				one.uploadedValue=[];
				if (one.vartype==="attribute"){
					one.fun=this._attribute;
					continue ;
				}
				switch (one.type){
					case 0x1404:
						one.fun=one.isArray ? this._uniform1iv :this._uniform1i;
						break ;
					case 0x1406:
						one.fun=one.isArray ? this._uniform1fv :this._uniform1f;
						break ;
					case 0x8B50:
						one.fun=one.isArray ? this._uniform_vec2v:this._uniform_vec2;
						break ;
					case 0x8B51:
						one.fun=one.isArray ? this._uniform_vec3v:this._uniform_vec3;
						break ;
					case 0x8B52:
						one.fun=one.isArray ? this._uniform_vec4v:this._uniform_vec4;
						break ;
					case 0x8B5E:
						one.fun=this._uniform_sampler2D;
						break ;
					case 0x8B60:
						one.fun=this._uniform_samplerCube;
						break ;
					case 0x8B5C:
						one.glfun=gl.uniformMatrix4fv;
						one.fun=this._uniformMatrix4fv;
						break ;
					case 0x8B56:
						one.fun=this._uniform1i;
						break ;
					case 0x8B5A:
					case 0x8B5B:
						throw new Error("compile shader err!");
						break ;
					default :
						throw new Error("compile shader err!");
						break ;
					}
			}
		}

		/**
		*根据变量名字获得
		*@param name
		*@return
		*/
		__proto.getUniform=function(name){
			return this._paramsMap[name];
		}

		__proto._attribute=function(one,value){
			var gl=WebGL.mainContext;
			var enableAtributes=Buffer._enableAtributes;
			var location=one.location;
			(enableAtributes[location])||(gl.enableVertexAttribArray(location));
			gl.vertexAttribPointer(location,value[0],value[1],value[2],value[3],value[4]+this._offset);
			enableAtributes[location]=Buffer._bindVertexBuffer;
			return 1;
		}

		__proto._uniform1f=function(one,value){
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]!==value){
				WebGL.mainContext.uniform1f(one.location,uploadedValue[0]=value);
				return 1;
			}
			return 0;
		}

		__proto._uniform1fv=function(one,value){
			if (value.length < 4){
				var uploadedValue=one.uploadedValue;
				if (uploadedValue[0]!==value[0] || uploadedValue[1]!==value[1] || uploadedValue[2]!==value[2] || uploadedValue[3]!==value[3]){
					WebGL.mainContext.uniform1fv(one.location,value);
					uploadedValue[0]=value[0];
					uploadedValue[1]=value[1];
					uploadedValue[2]=value[2];
					uploadedValue[3]=value[3];
					return 1;
				}
				return 0;
				}else {
				WebGL.mainContext.uniform1fv(one.location,value);
				return 1;
			}
		}

		__proto._uniform_vec2=function(one,value){
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]!==value[0] || uploadedValue[1]!==value[1]){
				WebGL.mainContext.uniform2f(one.location,uploadedValue[0]=value[0],uploadedValue[1]=value[1]);
				return 1;
			}
			return 0;
		}

		__proto._uniform_vec2v=function(one,value){
			if (value.length < 2){
				var uploadedValue=one.uploadedValue;
				if (uploadedValue[0]!==value[0] || uploadedValue[1]!==value[1] || uploadedValue[2]!==value[2] || uploadedValue[3]!==value[3]){
					WebGL.mainContext.uniform2fv(one.location,value);
					uploadedValue[0]=value[0];
					uploadedValue[1]=value[1];
					uploadedValue[2]=value[2];
					uploadedValue[3]=value[3];
					return 1;
				}
				return 0;
				}else {
				WebGL.mainContext.uniform2fv(one.location,value);
				return 1;
			}
		}

		__proto._uniform_vec3=function(one,value){
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]!==value[0] || uploadedValue[1]!==value[1] || uploadedValue[2]!==value[2]){
				WebGL.mainContext.uniform3f(one.location,uploadedValue[0]=value[0],uploadedValue[1]=value[1],uploadedValue[2]=value[2]);
				return 1;
			}
			return 0;
		}

		__proto._uniform_vec3v=function(one,value){
			WebGL.mainContext.uniform3fv(one.location,value);
			return 1;
		}

		__proto._uniform_vec4=function(one,value){
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]!==value[0] || uploadedValue[1]!==value[1] || uploadedValue[2]!==value[2] || uploadedValue[3]!==value[3]){
				WebGL.mainContext.uniform4f(one.location,uploadedValue[0]=value[0],uploadedValue[1]=value[1],uploadedValue[2]=value[2],uploadedValue[3]=value[3]);
				return 1;
			}
			return 0;
		}

		__proto._uniform_vec4v=function(one,value){
			WebGL.mainContext.uniform4fv(one.location,value);
			return 1;
		}

		__proto._uniformMatrix2fv=function(one,value){
			WebGL.mainContext.uniformMatrix2fv(one.location,false,value);
			return 1;
		}

		__proto._uniformMatrix3fv=function(one,value){
			WebGL.mainContext.uniformMatrix3fv(one.location,false,value);
			return 1;
		}

		__proto._uniformMatrix4fv=function(one,value){
			WebGL.mainContext.uniformMatrix4fv(one.location,false,value);
			return 1;
		}

		__proto._uniform1i=function(one,value){
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]!==value){
				WebGL.mainContext.uniform1i(one.location,uploadedValue[0]=value);
				return 1;
			}
			return 0;
		}

		__proto._uniform1iv=function(one,value){
			WebGL.mainContext.uniform1iv(one.location,value);
			return 1;
		}

		__proto._uniform_ivec2=function(one,value){
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]!==value[0] || uploadedValue[1]!==value[1]){
				WebGL.mainContext.uniform2i(one.location,uploadedValue[0]=value[0],uploadedValue[1]=value[1]);
				return 1;
			}
			return 0;
		}

		__proto._uniform_ivec2v=function(one,value){
			WebGL.mainContext.uniform2iv(one.location,value);
			return 1;
		}

		__proto._uniform_vec3i=function(one,value){
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]!==value[0] || uploadedValue[1]!==value[1] || uploadedValue[2]!==value[2]){
				WebGL.mainContext.uniform3i(one.location,uploadedValue[0]=value[0],uploadedValue[1]=value[1],uploadedValue[2]=value[2]);
				return 1;
			}
			return 0;
		}

		__proto._uniform_vec3vi=function(one,value){
			WebGL.mainContext.uniform3iv(one.location,value);
			return 1;
		}

		__proto._uniform_vec4i=function(one,value){
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]!==value[0] || uploadedValue[1]!==value[1] || uploadedValue[2]!==value[2] || uploadedValue[3]!==value[3]){
				WebGL.mainContext.uniform4i(one.location,uploadedValue[0]=value[0],uploadedValue[1]=value[1],uploadedValue[2]=value[2],uploadedValue[3]=value[3]);
				return 1;
			}
			return 0;
		}

		__proto._uniform_vec4vi=function(one,value){
			WebGL.mainContext.uniform4iv(one.location,value);
			return 1;
		}

		__proto._uniform_sampler2D=function(one,value){
			var gl=WebGL.mainContext;
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]==null){
				uploadedValue[0]=this._curActTexIndex;
				gl.uniform1i(one.location,this._curActTexIndex);
				gl.activeTexture(Shader._TEXTURES[this._curActTexIndex]);
				WebGLContext.bindTexture(gl,0x0DE1,value);
				this._curActTexIndex++;
				return 1;
				}else {
				gl.activeTexture(Shader._TEXTURES[uploadedValue[0]]);
				WebGLContext.bindTexture(gl,0x0DE1,value);
				return 0;
			}
		}

		__proto._uniform_samplerCube=function(one,value){
			var gl=WebGL.mainContext;
			var uploadedValue=one.uploadedValue;
			if (uploadedValue[0]==null){
				uploadedValue[0]=this._curActTexIndex;
				gl.uniform1i(one.location,this._curActTexIndex);
				gl.activeTexture(Shader._TEXTURES[this._curActTexIndex]);
				WebGLContext.bindTexture(gl,0x8513,value);
				this._curActTexIndex++;
				return 1;
				}else {
				gl.activeTexture(Shader._TEXTURES[uploadedValue[0]]);
				WebGLContext.bindTexture(gl,0x8513,value);
				return 0;
			}
		}

		__proto._noSetValue=function(one){
			console.log("no....:"+one.name);
		}

		//throw new Error("upload shader err,must set value:"+one.name);
		__proto.uploadOne=function(name,value){
			this.activeResource();
			WebGLContext.UseProgram(this._program);
			var one=this._paramsMap[name];
			one.fun.call(this,one,value);
		}

		__proto.uploadTexture2D=function(value){
			Stat.shaderCall++;
			var gl=WebGL.mainContext;
			gl.activeTexture(0x84C0);
			WebGLContext.bindTexture(gl,0x0DE1,value);
		}

		/**
		*提交shader到GPU
		*@param shaderValue
		*/
		__proto.upload=function(shaderValue,params){
			BaseShader.activeShader=BaseShader.bindShader=this;
			this._lastUseFrameCount===Stat.loopCount || this.activeResource();
			WebGLContext.UseProgram(this._program);
			if (this._reCompile){
				params=this._params;
				this._reCompile=false;
				}else {
				params=params || this._params;
			};
			var gl=WebGL.mainContext;
			var one,value,n=params.length,shaderCall=0;
			for (var i=0;i < n;i++){
				one=params[i];
				if ((value=shaderValue[one.name])!==null)
					shaderCall+=one.fun.call(this,one,value);
			}
			Stat.shaderCall+=shaderCall;
		}

		/**
		*按数组的定义提交
		*@param shaderValue 数组格式[name,value,...]
		*/
		__proto.uploadArray=function(shaderValue,length,_bufferUsage){
			BaseShader.activeShader=this;
			BaseShader.bindShader=this;
			this.activeResource();
			WebGLContext.UseProgram(this._program);
			var params=this._params,value;
			var one,shaderCall=0;
			for (var i=length-2;i >=0;i-=2){
				one=this._paramsMap[shaderValue[i]];
				if (!one)
					continue ;
				value=shaderValue[i+1];
				if (value !=null){
					_bufferUsage && _bufferUsage[one.name] && _bufferUsage[one.name].bind();
					shaderCall+=one.fun.call(this,one,value);
				}
			}
			Stat.shaderCall+=shaderCall;
		}

		/**
		*得到编译后的变量及相关预定义
		*@return
		*/
		__proto.getParams=function(){
			return this._params;
		}

		Shader.getShader=function(name){
			return Shader.sharders[name];
		}

		Shader.create=function(vs,ps,saveName,nameMap){
			return new Shader(vs,ps,saveName,nameMap);
		}

		Shader.withCompile=function(nameID,define,shaderName,createShader){
			if (shaderName && Shader.sharders[shaderName])
				return Shader.sharders[shaderName];
			var pre=Shader._preCompileShader[0.0002 *nameID];
			if (!pre)
				throw new Error("withCompile shader err!"+nameID);
			return pre.createShader(define,shaderName,createShader);
		}

		Shader.withCompile2D=function(nameID,mainID,define,shaderName,createShader){
			if (shaderName && Shader.sharders[shaderName])
				return Shader.sharders[shaderName];
			var pre=Shader._preCompileShader[0.0002 *nameID+mainID];
			if (!pre)
				throw new Error("withCompile shader err!"+nameID+" "+mainID);
			return pre.createShader(define,shaderName,createShader);
		}

		Shader.addInclude=function(fileName,txt){
			ShaderCompile.addInclude(fileName,txt);
		}

		Shader.preCompile=function(nameID,vs,ps,nameMap){
			var id=0.0002 *nameID;
			Shader._preCompileShader[id]=new ShaderCompile(id,vs,ps,nameMap);
		}

		Shader.preCompile2D=function(nameID,mainID,vs,ps,nameMap){
			var id=0.0002 *nameID+mainID;
			Shader._preCompileShader[id]=new ShaderCompile(id,vs,ps,nameMap);
		}

		Shader._createShader=function(gl,str,type){
			var shader=gl.createShader(type);
			gl.shaderSource(shader,str);
			gl.compileShader(shader);
			return shader;
		}

		Shader._TEXTURES=[0x84C0,0x84C1,0x84C2,0x84C3,0x84C4,0x84C5,0x84C6,,0x84C7,0x84C8];
		Shader._count=0;
		Shader._preCompileShader={};
		Shader.SHADERNAME2ID=0.0002;
		Shader.sharders=(Shader.sharders=[],Shader.sharders.length=0x20,Shader.sharders);
		__static(Shader,
		['nameKey',function(){return this.nameKey=new StringKey();}
		]);
		return Shader;
	})(BaseShader)


	//class fairygui.display.Image extends laya.display.Sprite
	var Image$1=(function(_super){
		function Image(){
			this._tex=null;
			this._scaleByTile=false;
			this._scale9Grid=null;
			this._tileGridIndice=0;
			this._textureScaleX=0;
			this._textureScaleY=0;
			this._needRebuild=false;
			Image.__super.call(this);
			this.mouseEnabled=false;
			this._textureScaleX=1;
			this._textureScaleY=1;
		}

		__class(Image,'fairygui.display.Image',_super,'Image$1');
		var __proto=Image.prototype;
		__proto.scaleTexture=function(sx,sy){
			if(this._textureScaleX!=sx || this._textureScaleY!=sy){
				this._textureScaleX=sx;
				this._textureScaleY=sy;
				if(this._tex)
					this.size(this._tex.width*sx,this._tex.height*sy);
				this.markChanged();
			}
		}

		__proto.markChanged=function(){
			if(!this._needRebuild){
				this._needRebuild=true;
				Laya.timer.callLater(this,this.rebuild);
			}
		}

		__proto.rebuild=function(){
			this._needRebuild=false;
			var g=this.graphics;
			g.clear();
			if(this._tex==null){
				this.repaint();
				return;
			};
			var width=this.width;
			var height=this.height;
			var sw=this._tex.width;
			var sh=this._tex.height;
			if(width==0 || height==0){
				this.repaint();
				return;
			}
			if(this._scaleByTile){
				g.fillTexture(this._tex,0,0,width,height);
			}
			else if(this._scale9Grid!=null){
				var left=this._scale9Grid.x;
				var right=Math.max(sw-this._scale9Grid.right,0);
				var top=this._scale9Grid.y;
				var bottom=Math.max(sh-this._scale9Grid.bottom,0);
				var tmp=NaN;
				if (height >=(sh-this._scale9Grid.height)){
					top=this._scale9Grid.y;
					bottom=sh-this._scale9Grid.bottom;
				}
				else{
					tmp=this._scale9Grid.y / (sh-this._scale9Grid.bottom);
					tmp=height *tmp / (1+tmp);
					top=Math.round(tmp);
					bottom=height-tmp;
				}
				if (width >=(sw-this._scale9Grid.width)){
					left=this._scale9Grid.x;
					right=sw-this._scale9Grid.right;
				}
				else{
					tmp=this._scale9Grid.x / (sw-this._scale9Grid.right);
					tmp=width *tmp / (1+tmp);
					left=Math.round(tmp);
					right=width-tmp;
				};
				var centerWidth=Math.max(width-left-right,0);
				var centerHeight=Math.max(height-top-bottom,0);
				left && top && g.drawTexture(fairygui.display.Image.getTexture(this._tex,0,0,left,top),0,0,left,top);
				right && top && g.drawTexture(fairygui.display.Image.getTexture(this._tex,sw-right,0,right,top),width-right,0,right,top);
				left && bottom && g.drawTexture(fairygui.display.Image.getTexture(this._tex,0,sh-bottom,left,bottom),0,height-bottom,left,bottom);
				right && bottom && g.drawTexture(fairygui.display.Image.getTexture(this._tex,sw-right,sh-bottom,right,bottom),width-right,height-bottom,right,bottom);
				centerWidth && top && this.drawTexture(0,fairygui.display.Image.getTexture(this._tex,left,0,sw-left-right,top),left,0,centerWidth,top);
				centerWidth && bottom && this.drawTexture(1,fairygui.display.Image.getTexture(this._tex,left,sh-bottom,sw-left-right,bottom),left,height-bottom,centerWidth,bottom);
				centerHeight && left && this.drawTexture(2,fairygui.display.Image.getTexture(this._tex,0,top,left,sh-top-bottom),0,top,left,centerHeight);
				centerHeight && right && this.drawTexture(3,fairygui.display.Image.getTexture(this._tex,sw-right,top,right,sh-top-bottom),width-right,top,right,centerHeight);
				centerWidth && centerHeight && this.drawTexture(4,fairygui.display.Image.getTexture(this._tex,left,top,sw-left-right,sh-top-bottom),left,top,centerWidth,centerHeight);
			}
			else {
				g.drawTexture(this._tex,0,0,width,height);
			}
			this.repaint();
		}

		__proto.drawTexture=function(part,tex,x,y,width,height){
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			if(part==-1 || (this._tileGridIndice & (1<<part))==0)
				this.graphics.drawTexture(tex,x,y,width,height);
			else
			this.graphics.fillTexture(tex,x,y,width,height);
		}

		__getset(0,__proto,'tex',function(){
			return this._tex;
			},function(value){
			if(this._tex!=value){
				this._tex=value;
				if(this._tex)
					this.size(this._tex.width*this._textureScaleX,this._tex.height*this._textureScaleY);
				else
				this.size(0,0);
				this.markChanged();
			}
		});

		__getset(0,__proto,'scale9Grid',function(){
			return this._scale9Grid;
			},function(value){
			this._scale9Grid=value;
			this.markChanged();
		});

		__getset(0,__proto,'scaleByTile',function(){
			return this._scaleByTile;
			},function(value){
			if(this._scaleByTile!=value){
				this._scaleByTile=value;
				this.markChanged();
			}
		});

		__getset(0,__proto,'tileGridIndice',function(){
			return this._tileGridIndice;
			},function(value){
			if(this._tileGridIndice!=value){
				this._tileGridIndice=value;
				this.markChanged();
			}
		});

		Image.getTexture=function(source,x,y,width,height){
			source.$GID || (source.$GID=Utils.getGID());
			var key=source.$GID+"."+x+"."+y+"."+width+"."+height;
			var texture=fairygui.display.Image._textureCache[key];
			if (!texture){
				texture=fairygui.display.Image._textureCache[key]=Texture.create(source,x,y,width,height);
			}
			return texture;
		}

		Image.clearCache=function(){
			fairygui.display.Image._textureCache={};
		}

		Image._textureCache={};
		return Image;
	})(Sprite)


	//class fairygui.display.MovieClip extends laya.display.Sprite
	var MovieClip$1=(function(_super){
		function MovieClip(){
			this.interval=0;
			this.swing=false;
			this.repeatDelay=0;
			this.playState=null;
			this._$3__texture=null;
			this._needRebuild=false;
			this._playing=false;
			this._frameCount=0;
			this._frames=null;
			this._currentFrame=0;
			this._boundsRect=null;
			this._start=0;
			this._end=0;
			this._times=0;
			this._endAt=0;
			this._status=0;
			this._endHandler=null;
			MovieClip.__super.call(this);
			this.playState=new PlayState();
			this._playing=true;
			this.mouseEnabled=false;
			this.setPlaySettings();
			this.on("display",this,this.__addToStage);
			this.on("undisplay",this,this.__removeFromStage);
		}

		__class(MovieClip,'fairygui.display.MovieClip',_super,'MovieClip$1');
		var __proto=MovieClip.prototype;
		//从start帧开始，播放到end帧（-1表示结尾），重复times次（0表示无限循环），循环结束后，停止在endAt帧（-1表示参数end）
		__proto.setPlaySettings=function(start,end,times,endAt,endHandler){
			(start===void 0)&& (start=0);
			(end===void 0)&& (end=-1);
			(times===void 0)&& (times=0);
			(endAt===void 0)&& (endAt=-1);
			this._start=start;
			this._end=end;
			if(this._end==-1 || this._end > this._frameCount-1)
				this._end=this._frameCount-1;
			this._times=times;
			this._endAt=endAt;
			if(this._endAt==-1)
				this._endAt=this._end;
			this._status=0;
			this._endHandler=endHandler;
			this.currentFrame=start;
		}

		__proto.update=function(){
			if (this._playing && this._frameCount !=0 && this._status !=3){
				this.playState.update(this);
				if (this._currentFrame !=this.playState.currentFrame){
					if (this._status==1){
						this._currentFrame=this._start;
						this.playState.currentFrame=this._currentFrame;
						this._status=0;
					}
					else if (this._status==2){
						this._currentFrame=this._endAt;
						this.playState.currentFrame=this._currentFrame;
						this._status=3;
						if (this._endHandler !=null){
							this._endHandler.run();
						}
					}
					else {
						this._currentFrame=this.playState.currentFrame;
						if (this._currentFrame==this._end){
							if (this._times > 0){
								this._times--;
								if (this._times==0)
									this._status=2;
								else
								this._status=1;
							}
							else if(this._start!=0)
							this._status=1;
						}
					}
					this.setFrame(this._frames[this._currentFrame]);
				}
			}
		}

		__proto.setFrame=function(frame){
			this.graphics.clear();
			if (frame !=null)
				this.graphics.drawTexture(frame.texture,frame.rect.x,frame.rect.y);
		}

		__proto.__addToStage=function(){
			if(this._playing)
				Laya.timer.frameLoop(1,this,this.update);
		}

		__proto.__removeFromStage=function(){
			if(this._playing)
				Laya.timer.clear(this,this.update);
		}

		__getset(0,__proto,'frames',function(){
			return this._frames;
			},function(value){
			this._frames=value;
			if (this._frames !=null)
				this._frameCount=this._frames.length;
			else
			this._frameCount=0;
			if(this._end==-1 || this._end > this._frameCount-1)
				this._end=this._frameCount-1;
			if(this._endAt==-1 || this._endAt > this._frameCount-1)
				this._endAt=this._frameCount-1;
			if(this._currentFrame < 0 || this._currentFrame > this._frameCount-1)
				this._currentFrame=this._frameCount-1;
			if(this._frameCount > 0)
				this.setFrame(this._frames[this._currentFrame]);
			else
			this.setFrame(null);
			this.playState.rewind();
		});

		__getset(0,__proto,'playing',function(){
			return this._playing;
			},function(value){
			this._playing=value;
			if(value && this.stage!=null){
				Laya.timer.frameLoop(1,this,this.update);
				}else {
				Laya.timer.clear(this,this.update);
			}
		});

		__getset(0,__proto,'frameCount',function(){
			return this._frameCount;
		});

		__getset(0,__proto,'boundsRect',function(){
			return this._boundsRect;
			},function(value){
			this._boundsRect=value;
		});

		__getset(0,__proto,'currentFrame',function(){
			return this._currentFrame;
			},function(value){
			if (this._currentFrame !=value){
				this._currentFrame=value;
				this.playState.currentFrame=value;
				this.setFrame(this._currentFrame < this._frameCount ? this._frames[this._currentFrame] :null);
			}
		});

		return MovieClip;
	})(Sprite)


	//class laya.webgl.utils.Buffer2D extends laya.webgl.utils.Buffer
	var Buffer2D=(function(_super){
		function Buffer2D(){
			this._maxsize=0;
			this._upload=true;
			this._uploadSize=0;
			Buffer2D.__super.call(this);
			this.lock=true;
		}

		__class(Buffer2D,'laya.webgl.utils.Buffer2D',_super);
		var __proto=Buffer2D.prototype;
		/**
		*在当前的基础上需要多大空间，单位是byte
		*@param sz
		*@return 增加大小之前的写位置。单位是byte
		*/
		__proto.needSize=function(sz){
			var old=this._byteLength;
			if (sz){
				var needsz=this._byteLength+sz;
				needsz <=this._buffer.byteLength || (this._resizeBuffer(needsz << 1,true));
				this._byteLength=needsz;
			}
			return old;
		}

		__proto._bufferData=function(){
			this._maxsize=Math.max(this._maxsize,this._byteLength);
			if (Stat.loopCount % 30==0){
				if (this._buffer.byteLength > (this._maxsize+64)){
					this.memorySize=this._buffer.byteLength;
					this._buffer=this._buffer.slice(0,this._maxsize+64);
					this._checkArrayUse();
				}
				this._maxsize=this._byteLength;
			}
			if (this._uploadSize < this._buffer.byteLength){
				this._uploadSize=this._buffer.byteLength;
				Buffer._gl.bufferData(this._bufferType,this._uploadSize,this._bufferUsage);
				this.memorySize=this._uploadSize;
			}
			Buffer._gl.bufferSubData(this._bufferType,0,this._buffer);
		}

		__proto._bufferSubData=function(offset,dataStart,dataLength){
			(offset===void 0)&& (offset=0);
			(dataStart===void 0)&& (dataStart=0);
			(dataLength===void 0)&& (dataLength=0);
			this._maxsize=Math.max(this._maxsize,this._byteLength);
			if (Stat.loopCount % 30==0){
				if (this._buffer.byteLength > (this._maxsize+64)){
					this.memorySize=this._buffer.byteLength;
					this._buffer=this._buffer.slice(0,this._maxsize+64);
					this._checkArrayUse();
				}
				this._maxsize=this._byteLength;
			}
			if (this._uploadSize < this._buffer.byteLength){
				this._uploadSize=this._buffer.byteLength;
				Buffer._gl.bufferData(this._bufferType,this._uploadSize,this._bufferUsage);
				this.memorySize=this._uploadSize;
			}
			if (dataStart || dataLength){
				var subBuffer=this._buffer.slice(dataStart,dataLength);
				Buffer._gl.bufferSubData(this._bufferType,offset,subBuffer);
				}else {
				Buffer._gl.bufferSubData(this._bufferType,offset,this._buffer);
			}
		}

		__proto._checkArrayUse=function(){}
		__proto._bind_upload=function(){
			if (!this._upload)
				return false;
			this._upload=false;
			this._bind();
			this._bufferData();
			return true;
		}

		__proto._bind_subUpload=function(offset,dataStart,dataLength){
			(offset===void 0)&& (offset=0);
			(dataStart===void 0)&& (dataStart=0);
			(dataLength===void 0)&& (dataLength=0);
			if (!this._upload)
				return false;
			this._upload=false;
			this._bind();
			this._bufferSubData(offset,dataStart,dataLength);
			return true;
		}

		__proto._resizeBuffer=function(nsz,copy){
			if (nsz < this._buffer.byteLength)
				return this;
			this.memorySize=nsz;
			if (copy && this._buffer && this._buffer.byteLength > 0){
				var newbuffer=new ArrayBuffer(nsz);
				var n=new Uint8Array(newbuffer);
				n.set(new Uint8Array(this._buffer),0);
				this._buffer=newbuffer;
			}else
			this._buffer=new ArrayBuffer(nsz);
			this._checkArrayUse();
			this._upload=true;
			return this;
		}

		__proto.append=function(data){
			this._upload=true;
			var byteLen=0,n;
			byteLen=data.byteLength;
			if ((data instanceof Uint8Array)){
				this._resizeBuffer(this._byteLength+byteLen,true);
				n=new Uint8Array(this._buffer,this._byteLength);
				}else if ((data instanceof Uint16Array)){
				this._resizeBuffer(this._byteLength+byteLen,true);
				n=new Uint16Array(this._buffer,this._byteLength);
				}else if ((data instanceof Float32Array)){
				this._resizeBuffer(this._byteLength+byteLen,true);
				n=new Float32Array(this._buffer,this._byteLength);
			}
			n.set(data,0);
			this._byteLength+=byteLen;
			this._checkArrayUse();
		}

		/**
		*附加Uint16Array的数据。数据长度是len。byte的话要*2
		*@param data
		*@param len
		*/
		__proto.appendU16Array=function(data,len){
			this._resizeBuffer(this._byteLength+len*2,true);
			var u=new Uint16Array(this._buffer,this._byteLength,len);
			for (var i=0;i < len;i++){
				u[i]=data[i];
			}
			this._byteLength+=len *2;
			this._checkArrayUse();
		}

		__proto.appendEx=function(data,type){
			this._upload=true;
			var byteLen=0,n;
			byteLen=data.byteLength;
			this._resizeBuffer(this._byteLength+byteLen,true);
			n=new type(this._buffer,this._byteLength);
			n.set(data,0);
			this._byteLength+=byteLen;
			this._checkArrayUse();
		}

		__proto.appendEx2=function(data,type,dataLen,perDataLen){
			(perDataLen===void 0)&& (perDataLen=1);
			this._upload=true;
			var byteLen=0,n;
			byteLen=dataLen*perDataLen;
			this._resizeBuffer(this._byteLength+byteLen,true);
			n=new type(this._buffer,this._byteLength);
			var i=0;
			for (i=0;i < dataLen;i++){
				n[i]=data[i];
			}
			this._byteLength+=byteLen;
			this._checkArrayUse();
		}

		__proto.getBuffer=function(){
			return this._buffer;
		}

		__proto.setNeedUpload=function(){
			this._upload=true;
		}

		__proto.getNeedUpload=function(){
			return this._upload;
		}

		__proto.upload=function(){
			var scuess=this._bind_upload();
			Buffer._gl.bindBuffer(this._bufferType,null);
			Buffer._bindActive[this._bufferType]=null;
			BaseShader.activeShader=null
			return scuess;
		}

		__proto.subUpload=function(offset,dataStart,dataLength){
			(offset===void 0)&& (offset=0);
			(dataStart===void 0)&& (dataStart=0);
			(dataLength===void 0)&& (dataLength=0);
			var scuess=this._bind_subUpload();
			Buffer._gl.bindBuffer(this._bufferType,null);
			Buffer._bindActive[this._bufferType]=null;
			BaseShader.activeShader=null
			return scuess;
		}

		__proto.disposeResource=function(){
			_super.prototype.disposeResource.call(this);
			this._upload=true;
			this._uploadSize=0;
		}

		__proto.clear=function(){
			this._byteLength=0;
			this._upload=true;
		}

		__getset(0,__proto,'bufferLength',function(){
			return this._buffer.byteLength;
		});

		__getset(0,__proto,'byteLength',null,function(value){
			if (this._byteLength===value)
				return;
			value <=this._buffer.byteLength || (this._resizeBuffer(value *2+256,true));
			this._byteLength=value;
		});

		Buffer2D.__int__=function(gl){
			IndexBuffer2D.QuadrangleIB=IndexBuffer2D.create(0x88E4);
			GlUtils.fillIBQuadrangle(IndexBuffer2D.QuadrangleIB,16);
		}

		Buffer2D.FLOAT32=4;
		Buffer2D.SHORT=2;
		return Buffer2D;
	})(Buffer)


	//class laya.resource.FileBitmap extends laya.resource.Bitmap
	var FileBitmap=(function(_super){
		function FileBitmap(){
			this._src=null;
			this._onload=null;
			this._onerror=null;
			FileBitmap.__super.call(this);
		}

		__class(FileBitmap,'laya.resource.FileBitmap',_super);
		var __proto=FileBitmap.prototype;
		/**
		*文件路径全名。
		*/
		__getset(0,__proto,'src',function(){
			return this._src;
			},function(value){
			this._src=value;
		});

		/**
		*载入完成处理函数。
		*/
		__getset(0,__proto,'onload',null,function(value){
		});

		/**
		*错误处理函数。
		*/
		__getset(0,__proto,'onerror',null,function(value){
		});

		return FileBitmap;
	})(Bitmap)


	//class laya.resource.HTMLCanvas extends laya.resource.Bitmap
	var HTMLCanvas=(function(_super){
		function HTMLCanvas(type,canvas){
			//this._ctx=null;
			this._is2D=false;
			HTMLCanvas.__super.call(this);
			var _$this=this;
			this._source=this;
			if (type==="2D" || (type==="AUTO" && !Render.isWebGL)){
				this._is2D=true;
				this._source=canvas || Browser.createElement("canvas");
				this._w=this._source.width;
				this._h=this._source.height;
				var o=this;
				o.getContext=function (contextID,other){
					if (_$this._ctx)return _$this._ctx;
					var ctx=_$this._ctx=_$this._source.getContext(contextID,other);
					if (ctx){
						ctx._canvas=o;
						if(!Render.isFlash&&!Browser.onLimixiu)ctx.size=function (w,h){
						};
					}
					return ctx;
				}
			}
			this.lock=true;
		}

		__class(HTMLCanvas,'laya.resource.HTMLCanvas',_super);
		var __proto=HTMLCanvas.prototype;
		/**
		*清空画布内容。
		*/
		__proto.clear=function(){
			this._ctx && this._ctx.clear();
		}

		/**
		*销毁。
		*/
		__proto.destroy=function(){
			this._ctx && this._ctx.destroy();
			this._ctx=null;
			laya.resource.Resource.prototype.destroy.call(this);
		}

		/**
		*释放。
		*/
		__proto.release=function(){}
		/**
		*@private
		*设置 Canvas 渲染上下文。
		*@param context Canvas 渲染上下文。
		*/
		__proto._setContext=function(context){
			this._ctx=context;
		}

		/**
		*获取 Canvas 渲染上下文。
		*@param contextID 上下文ID.
		*@param other
		*@return Canvas 渲染上下文 Context 对象。
		*/
		__proto.getContext=function(contextID,other){
			return this._ctx ? this._ctx :(this._ctx=HTMLCanvas._createContext(this));
		}

		/**
		*获取内存大小。
		*@return 内存大小。
		*/
		__proto.getMemSize=function(){
			return 0;
		}

		/**
		*设置宽高。
		*@param w 宽度。
		*@param h 高度。
		*/
		__proto.size=function(w,h){
			if (this._w !=w || this._h !=h ||(this._source && (this._source.width!=w || this._source.height!=h))){
				this._w=w;
				this._h=h;
				this.memorySize=this._w *this._h *4;
				this._ctx && this._ctx.size(w,h);
				this._source && (this._source.height=h,this._source.width=w);
			}
		}

		__proto.getCanvas=function(){
			return this._source;
		}

		__proto.toBase64=function(type,encoderOptions,callBack){
			if (this._source){
				if (Render.isConchApp && this._source.toBase64){
					this._source.toBase64(type,encoderOptions,callBack);
				}
				else {
					var base64Data=this._source.toDataURL(type,encoderOptions);
					callBack.call(this,base64Data);
				}
			}
		}

		/**
		*Canvas 渲染上下文。
		*/
		__getset(0,__proto,'context',function(){
			return this._ctx;
		});

		/**
		*是否当作 Bitmap 对象。
		*/
		__getset(0,__proto,'asBitmap',null,function(value){
		});

		HTMLCanvas.create=function(type,canvas){
			return new HTMLCanvas(type,canvas);
		}

		HTMLCanvas.TYPE2D="2D";
		HTMLCanvas.TYPE3D="3D";
		HTMLCanvas.TYPEAUTO="AUTO";
		HTMLCanvas._createContext=null
		return HTMLCanvas;
	})(Bitmap)


	//class laya.resource.HTMLSubImage extends laya.resource.Bitmap
	var HTMLSubImage=(function(_super){
		//请不要直接使用new HTMLSubImage
		function HTMLSubImage(canvas,offsetX,offsetY,width,height,atlasImage,src,allowMerageInAtlas){
			HTMLSubImage.__super.call(this);
			throw new Error("不允许new！");
		}

		__class(HTMLSubImage,'laya.resource.HTMLSubImage',_super);
		HTMLSubImage.create=function(canvas,offsetX,offsetY,width,height,atlasImage,src,allowMerageInAtlas){
			(allowMerageInAtlas===void 0)&& (allowMerageInAtlas=false);
			return new HTMLSubImage(canvas,offsetX,offsetY,width,height,atlasImage,src,allowMerageInAtlas);
		}

		return HTMLSubImage;
	})(Bitmap)


	//class laya.webgl.atlas.AtlasWebGLCanvas extends laya.resource.Bitmap
	var AtlasWebGLCanvas=(function(_super){
		function AtlasWebGLCanvas(){
			this._atlaser=null;
			this._flashCacheImage=null;
			this._flashCacheImageNeedFlush=false;
			AtlasWebGLCanvas.__super.call(this);
		}

		__class(AtlasWebGLCanvas,'laya.webgl.atlas.AtlasWebGLCanvas',_super);
		var __proto=AtlasWebGLCanvas.prototype;
		/***重新创建资源*/
		__proto.recreateResource=function(){
			var gl=WebGL.mainContext;
			var glTex=this._source=gl.createTexture();
			var preTarget=WebGLContext.curBindTexTarget;
			var preTexture=WebGLContext.curBindTexValue;
			WebGLContext.bindTexture(gl,0x0DE1,glTex);
			gl.texImage2D(0x0DE1,0,0x1908,this._w,this._h,0,0x1908,0x1401,null);
			gl.texParameteri(0x0DE1,0x2801,0x2601);
			gl.texParameteri(0x0DE1,0x2800,0x2601);
			gl.texParameteri(0x0DE1,0x2802,0x812F);
			gl.texParameteri(0x0DE1,0x2803,0x812F);
			(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
			this.memorySize=this._w *this._h *4;
			this.completeCreate();
		}

		/***销毁资源*/
		__proto.disposeResource=function(){
			if (this._source){
				WebGL.mainContext.deleteTexture(this._source);
				this._source=null;
				this.memorySize=0;
			}
		}

		/**采样image到WebGLTexture的一部分*/
		__proto.texSubImage2D=function(xoffset,yoffset,bitmap){
			if (!Render.isFlash){
				var gl=WebGL.mainContext;
				var preTarget=WebGLContext.curBindTexTarget;
				var preTexture=WebGLContext.curBindTexValue;
				WebGLContext.bindTexture(gl,0x0DE1,this._source);
				if (Render.isConchWebGL){
					(xoffset-1 >=0)&& (gl.texSubImage2DEx(true,0x0DE1,0,xoffset-1,yoffset,0x1908,0x1401,bitmap));
					(xoffset+1 <=this._w)&& (gl.texSubImage2DEx(true,0x0DE1,0,xoffset+1,yoffset,0x1908,0x1401,bitmap));
					(yoffset-1 >=0)&& (gl.texSubImage2DEx(true,0x0DE1,0,xoffset,yoffset-1,0x1908,0x1401,bitmap));
					(yoffset+1 <=this._h)&& (gl.texSubImage2DEx(true,0x0DE1,0,xoffset,yoffset+1,0x1908,0x1401,bitmap));
					gl.texSubImage2DEx(true,0x0DE1,0,xoffset,yoffset,0x1908,0x1401,bitmap);
				}
				else {
					gl.pixelStorei(0x9241,true);
					(xoffset-1 >=0)&& (gl.texSubImage2D(0x0DE1,0,xoffset-1,yoffset,0x1908,0x1401,bitmap));
					(xoffset+1 <=this._w)&& (gl.texSubImage2D(0x0DE1,0,xoffset+1,yoffset,0x1908,0x1401,bitmap));
					(yoffset-1 >=0)&& (gl.texSubImage2D(0x0DE1,0,xoffset,yoffset-1,0x1908,0x1401,bitmap));
					(yoffset+1 <=this._h)&& (gl.texSubImage2D(0x0DE1,0,xoffset,yoffset+1,0x1908,0x1401,bitmap));
					gl.texSubImage2D(0x0DE1,0,xoffset,yoffset,0x1908,0x1401,bitmap);
					gl.pixelStorei(0x9241,false);
				}
				(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
				}else {
				if (!this._flashCacheImage){
					this._flashCacheImage=HTMLImage.create("");
					this._flashCacheImage._image.createCanvas(this._w,this._h);
				};
				var bmData=bitmap.bitmapdata;
				this._flashCacheImage._image.copyPixels(bmData,0,0,bmData.width,bmData.height,xoffset,yoffset);
				(this._flashCacheImageNeedFlush)|| (this._flashCacheImageNeedFlush=true);
			}
		}

		/**采样image到WebGLTexture的一部分*/
		__proto.texSubImage2DPixel=function(xoffset,yoffset,width,height,pixel){
			var gl=WebGL.mainContext;
			var preTarget=WebGLContext.curBindTexTarget;
			var preTexture=WebGLContext.curBindTexValue;
			WebGLContext.bindTexture(gl,0x0DE1,this._source);
			var pixels=new Uint8Array(pixel.data);
			if (Render.isConchWebGL){
				gl.texSubImage2DEx(true,0x0DE1,0,xoffset,yoffset,width,height,0x1908,0x1401,pixels);
			}
			else {
				gl.pixelStorei(0x9241,true);
				gl.texSubImage2D(0x0DE1,0,xoffset,yoffset,width,height,0x1908,0x1401,pixels);
				gl.pixelStorei(0x9241,false);
			}
			(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
		}

		/***
		*设置图片宽度
		*@param value 图片宽度
		*/
		__getset(0,__proto,'width',_super.prototype._$get_width,function(value){
			this._w=value;
		});

		/***
		*设置图片高度
		*@param value 图片高度
		*/
		__getset(0,__proto,'height',_super.prototype._$get_height,function(value){
			this._h=value;
		});

		return AtlasWebGLCanvas;
	})(Bitmap)


	//class laya.webgl.resource.WebGLCanvas extends laya.resource.Bitmap
	var WebGLCanvas=(function(_super){
		function WebGLCanvas(){
			this.flipY=true;
			this.premulAlpha=false;
			//this._ctx=null;
			//this._canvas=null;
			//this._imgData=null;
			//this.iscpuSource=false;
			this.alwaysChange=false;
			WebGLCanvas.__super.call(this);
		}

		__class(WebGLCanvas,'laya.webgl.resource.WebGLCanvas',_super);
		var __proto=WebGLCanvas.prototype;
		//}
		__proto.getCanvas=function(){
			return this._canvas;
		}

		__proto.clear=function(){
			this._ctx && this._ctx.clear();
		}

		__proto.destroy=function(){
			this._ctx && this._ctx.destroy();
			this._ctx=null;
		}

		__proto._setContext=function(context){
			this._ctx=context;
		}

		__proto.getContext=function(contextID,other){
			return this._ctx ? this._ctx :(this._ctx=WebGLCanvas._createContext(this));
		}

		/*override public function copyTo(dec:Bitmap):void {
		super.copyTo(dec);
		(dec as WebGLCanvas)._ctx=_ctx;
	}*/


	__proto.size=function(w,h){
		if (this._w !=w || this._h !=h){
			this._w=w;
			this._h=h;
			this._ctx && this._ctx.size(w,h);
			this._canvas && (this._canvas.height=h,this._canvas.width=w);
		}

	}


	__proto.activeResource=function(force){
		(force===void 0)&& (force=false);
		if (!this._source){
			this.recreateResource();
		}

	}


	__proto.recreateResource=function(){
		this.createWebGlTexture();
		this.completeCreate();
	}


	__proto.disposeResource=function(){
		if (this._source && !this.iscpuSource){
			WebGL.mainContext.deleteTexture(this._source);
			this._source=null;
			this.memorySize=0;
		}

	}


	__proto.createWebGlTexture=function(){
		var gl=WebGL.mainContext;
		if (!this._canvas){
		};

		var glTex=this._source=gl.createTexture();
		this.iscpuSource=false;
		var preTarget=WebGLContext.curBindTexTarget;
		var preTexture=WebGLContext.curBindTexValue;
		WebGLContext.bindTexture(gl,0x0DE1,glTex);
		gl.pixelStorei(0x9240,this.flipY?1:0);
		if (Render.isConchWebGL){
			gl.texImage2DEx(this.premulAlpha,0x0DE1,0,0x1908,0x1908,0x1401,this._imgData);
		}

		else {
			this.premulAlpha&&gl.pixelStorei(0x9241,true);
			gl.texImage2D(0x0DE1,0,0x1908,0x1908,0x1401,this._imgData);
			this.premulAlpha && gl.pixelStorei(0x9241,false);
		}

		gl.texParameteri(0x0DE1,0x2800,0x2601);
		gl.texParameteri(0x0DE1,0x2801,0x2601);
		gl.texParameteri(0x0DE1,0x2802,0x812F);
		gl.texParameteri(0x0DE1,0x2803,0x812F);
		gl.pixelStorei(0x9240,0);
		this.memorySize=this._w *this._h *4;
		(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
	}


	//_canvas=null;
	__proto.reloadCanvasData=function(){
		var gl=WebGL.mainContext;
		if (!this._source){
			throw "reloadCanvasData error, gl texture not created!";
		};

		var preTarget=WebGLContext.curBindTexTarget;
		var preTexture=WebGLContext.curBindTexValue;
		WebGLContext.bindTexture(gl,0x0DE1,this._source);
		if (Render.isConchWebGL){
			gl.texImage2DEx(this.premulAlpha,0x0DE1,0,0x1908,0x1908,0x1401,this._imgData);
		}

		else {
			this.premulAlpha&&gl.pixelStorei(0x9241,true);
			gl.texImage2D(0x0DE1,0,0x1908,0x1908,0x1401,this._imgData);
			this.premulAlpha && gl.pixelStorei(0x9241,false);
		}

		gl.pixelStorei(0x9240,0);
		(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
	}


	//_canvas=null;
	__proto.texSubImage2D=function(webglCanvas,xoffset,yoffset){
		var gl=WebGL.mainContext;
		var preTarget=WebGLContext.curBindTexTarget;
		var preTexture=WebGLContext.curBindTexValue;
		WebGLContext.bindTexture(gl,0x0DE1,this._source);
		if (Render.isConchWebGL){
			gl.texSubImage2DEx(true,0x0DE1,0,xoffset,yoffset,0x1908,0x1401,webglCanvas._source);
		}

		else {
			gl.pixelStorei(0x9241,true);
			gl.texSubImage2D(0x0DE1,0,xoffset,yoffset,0x1908,0x1401,webglCanvas._source);
			gl.pixelStorei(0x9241,false);
		}

		(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
	}


	__proto.toBase64=function(type,encoderOptions,callBack){
		var base64Data=null;
		if (this._canvas){
			base64Data=this._canvas.toDataURL(type,encoderOptions);
		}

		callBack.call(this,base64Data);
	}


	__getset(0,__proto,'context',function(){
		return this._ctx;
	});


	__getset(0,__proto,'source',function(){
		if (this.alwaysChange)this.reloadCanvasData();
		return this._source;
	});


	__getset(0,__proto,'asBitmap',null,function(value){
		this._ctx && (this._ctx.asBitmap=value);
	});


	WebGLCanvas._createContext=null
	return WebGLCanvas;
	})(Bitmap)


	//class laya.webgl.resource.WebGLCharImage extends laya.resource.Bitmap
	var WebGLCharImage=(function(_super){
		function WebGLCharImage(content,drawValue){
			this.CborderSize=12;
			//this._ctx=null;
			//this._allowMerageInAtlas=false;
			//this._enableMerageInAtlas=false;
			//this.canvas=null;
			//this.cw=NaN;
			//this.ch=NaN;
			//this.xs=NaN;
			//this.ys=NaN;
			//this.char=null;
			//this.fillColor=null;
			//this.borderColor=null;
			//this.borderSize=0;
			//this.font=null;
			//this.fontSize=0;
			//this.texture=null;
			//this.lineWidth=0;
			//this.UV=null;
			//this.isSpace=false;
			//this.underLine=0;
			WebGLCharImage.__super.call(this);
			this.char=content;
			this.isSpace=content===' ';
			this.xs=drawValue.scaleX;
			this.ys=drawValue.scaleY;
			this.font=drawValue.font.toString();
			this.fontSize=drawValue.font.size;
			this.fillColor=drawValue.fillColor;
			this.borderColor=drawValue.borderColor;
			this.lineWidth=drawValue.lineWidth;
			this.underLine=drawValue.underLine;
			var bIsConchApp=Render.isConchApp;
			var pCanvas;
			if (bIsConchApp){
				pCanvas=ConchTextCanvas;
				pCanvas._source=ConchTextCanvas;
				pCanvas._source.canvas=ConchTextCanvas;
				}else {
				pCanvas=Browser.canvas.source;
			}
			this.canvas=pCanvas;
			this._enableMerageInAtlas=true;
			if (bIsConchApp){
				this._ctx=pCanvas;
				}else {
				this._ctx=this.canvas.getContext('2d',undefined);
			};
			var t=Utils.measureText(this.char,this.font);
			this.cw=t.width *this.xs;
			this.ch=(t.height || this.fontSize)*this.ys;
			this.onresize(this.cw+this.CborderSize *2,this.ch+this.CborderSize *2);
			this.texture=new Texture(this);
		}

		__class(WebGLCharImage,'laya.webgl.resource.WebGLCharImage',_super);
		var __proto=WebGLCharImage.prototype;
		Laya.imps(__proto,{"laya.webgl.resource.IMergeAtlasBitmap":true})
		__proto.active=function(){
			this.texture.active();
		}

		__proto.recreateResource=function(){
			var bIsConchApp=Render.isConchApp;
			this.onresize(this.cw+this.CborderSize *2,this.ch+this.CborderSize *2);
			this.canvas && (this.canvas.height=this._h,this.canvas.width=this._w);
			if (bIsConchApp){
				var nFontSize=this.fontSize;
				if (this.xs !=1 || this.ys !=1){
					nFontSize=parseInt(nFontSize *((this.xs > this.ys)? this.xs :this.ys)+"");
				};
				var sFont="normal 100 "+nFontSize+"px Arial";
				if (this.borderColor){
					sFont+=" 1 "+this.borderColor;
				}
				this._ctx.font=sFont;
				this._ctx.textBaseline="top";
				this._ctx.fillStyle=this.fillColor;
				this._ctx.fillText(this.char,this.CborderSize,this.CborderSize,null,null,null);
				}else {
				this._ctx.save();
				(this._ctx).clearRect(0,0,this.cw+this.CborderSize *2,this.ch+this.CborderSize *2);
				this._ctx.font=this.font;
				if (Text.RightToLeft){
					this._ctx.textAlign="end";
				}
				this._ctx.textBaseline="top";
				this._ctx.translate(this.CborderSize,this.CborderSize);
				if (this.xs !=1 || this.ys !=1){
					this._ctx.scale(this.xs,this.ys);
				}
				if (this.fillColor && this.borderColor){
					this._ctx.strokeStyle=this.borderColor;
					this._ctx.lineWidth=this.lineWidth;
					this._ctx.strokeText(this.char,0,0,null,null,0,null);
					this._ctx.fillStyle=this.fillColor;
					this._ctx.fillText(this.char,0,0,null,null,null);
					}else {
					if (this.lineWidth===-1){
						this._ctx.fillStyle=this.fillColor ? this.fillColor :"white";
						this._ctx.fillText(this.char,0,0,null,null,null);
						}else {
						this._ctx.strokeStyle=this.borderColor?this.borderColor:'white';
						this._ctx.lineWidth=this.lineWidth;
						this._ctx.strokeText(this.char,0,0,null,null,0,null);
					}
				}
				if (this.underLine){
					this._ctx.lineWidth=1;
					this._ctx.strokeStyle=this.fillColor;
					this._ctx.beginPath();
					this._ctx.moveTo(0,this.fontSize+1);
					var nW=this._ctx.measureText(this.char).width+1;
					this._ctx.lineTo(nW,this.fontSize+1);
					this._ctx.stroke();
				}
				this._ctx.restore();
			}
			this.borderSize=this.CborderSize;
			this.completeCreate();
		}

		__proto.onresize=function(w,h){
			this._w=w;
			this._h=h;
			this._allowMerageInAtlas=true;
		}

		__proto.clearAtlasSource=function(){}
		/**
		*是否创建私有Source
		*@return 是否创建
		*/
		__getset(0,__proto,'allowMerageInAtlas',function(){
			return this._allowMerageInAtlas;
		});

		__getset(0,__proto,'atlasSource',function(){
			return this.canvas;
		});

		/**
		*是否创建私有Source,通常禁止修改
		*@param value 是否创建
		*/
		/**
		*是否创建私有Source
		*@return 是否创建
		*/
		__getset(0,__proto,'enableMerageInAtlas',function(){
			return this._enableMerageInAtlas;
			},function(value){
			this._enableMerageInAtlas=value;
		});

		WebGLCharImage.createOneChar=function(content,drawValue){
			var char=new WebGLCharImage(content,drawValue);
			return char;
		}

		return WebGLCharImage;
	})(Bitmap)


	//class laya.webgl.resource.WebGLRenderTarget extends laya.resource.Bitmap
	var WebGLRenderTarget=(function(_super){
		function WebGLRenderTarget(width,height,surfaceFormat,surfaceType,depthStencilFormat,mipMap,repeat,minFifter,magFifter){
			//this._frameBuffer=null;
			//this._depthStencilBuffer=null;
			//this._surfaceFormat=0;
			//this._surfaceType=0;
			//this._depthStencilFormat=0;
			//this._mipMap=false;
			//this._repeat=false;
			//this._minFifter=0;
			//this._magFifter=0;
			(surfaceFormat===void 0)&& (surfaceFormat=0x1908);
			(surfaceType===void 0)&& (surfaceType=0x1401);
			(depthStencilFormat===void 0)&& (depthStencilFormat=0x84F9);
			(mipMap===void 0)&& (mipMap=false);
			(repeat===void 0)&& (repeat=false);
			(minFifter===void 0)&& (minFifter=-1);
			(magFifter===void 0)&& (magFifter=1);
			WebGLRenderTarget.__super.call(this);
			this._w=width;
			this._h=height;
			this._surfaceFormat=surfaceFormat;
			this._surfaceType=surfaceType;
			this._depthStencilFormat=depthStencilFormat;
			if (Render.isConchWebGL && this._depthStencilFormat===0x84F9){
				this._depthStencilFormat=0x81A5;
			}
			this._mipMap=mipMap;
			this._repeat=repeat;
			this._minFifter=minFifter;
			this._magFifter=magFifter;
		}

		__class(WebGLRenderTarget,'laya.webgl.resource.WebGLRenderTarget',_super);
		var __proto=WebGLRenderTarget.prototype;
		__proto.recreateResource=function(){
			var gl=WebGL.mainContext;
			this._frameBuffer || (this._frameBuffer=gl.createFramebuffer());
			this._source || (this._source=gl.createTexture());
			var preTarget=WebGLContext.curBindTexTarget;
			var preTexture=WebGLContext.curBindTexValue;
			WebGLContext.bindTexture(gl,0x0DE1,this._source);
			gl.texImage2D(0x0DE1,0,0x1908,this._w,this._h,0,this._surfaceFormat,this._surfaceType,null);
			var minFifter=this._minFifter;
			var magFifter=this._magFifter;
			var repeat=this._repeat ? 0x2901 :0x812F;
			var isPot=Arith.isPOT(this._w,this._h);
			if (isPot){
				if (this._mipMap)
					(minFifter!==-1)|| (minFifter=0x2703);
				else
				(minFifter!==-1)|| (minFifter=0x2601);
				(magFifter!==-1)|| (magFifter=0x2601);
				gl.texParameteri(0x0DE1,0x2801,minFifter);
				gl.texParameteri(0x0DE1,0x2800,magFifter);
				gl.texParameteri(0x0DE1,0x2802,repeat);
				gl.texParameteri(0x0DE1,0x2803,repeat);
				this._mipMap && gl.generateMipmap(0x0DE1);
				}else {
				(minFifter!==-1)|| (minFifter=0x2601);
				(magFifter!==-1)|| (magFifter=0x2601);
				gl.texParameteri(0x0DE1,0x2801,minFifter);
				gl.texParameteri(0x0DE1,0x2800,magFifter);
				gl.texParameteri(0x0DE1,0x2802,0x812F);
				gl.texParameteri(0x0DE1,0x2803,0x812F);
			}
			gl.bindFramebuffer(0x8D40,this._frameBuffer);
			gl.framebufferTexture2D(0x8D40,0x8CE0,0x0DE1,this._source,0);
			if (this._depthStencilFormat){
				this._depthStencilBuffer || (this._depthStencilBuffer=gl.createRenderbuffer());
				gl.bindRenderbuffer(0x8D41,this._depthStencilBuffer);
				gl.renderbufferStorage(0x8D41,this._depthStencilFormat,this._w,this._h);
				switch (this._depthStencilFormat){
					case 0x81A5:
						gl.framebufferRenderbuffer(0x8D40,0x8D00,0x8D41,this._depthStencilBuffer);
						break ;
					case 0x8D48:
						gl.framebufferRenderbuffer(0x8D40,0x8D20,0x8D41,this._depthStencilBuffer);
						break ;
					case 0x84F9:
						gl.framebufferRenderbuffer(0x8D40,0x821A,0x8D41,this._depthStencilBuffer);
						break ;
					}
			}
			gl.bindFramebuffer(0x8D40,null);
			(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
			gl.bindRenderbuffer(0x8D41,null);
			if (isPot && this._mipMap)
				this.memorySize=this._w *this._h *4 *(1+1 / 3);
			else
			this.memorySize=this._w *this._h *4;
			this.completeCreate();
		}

		__proto.disposeResource=function(){
			if (this._frameBuffer){
				WebGL.mainContext.deleteTexture(this._source);
				WebGL.mainContext.deleteFramebuffer(this._frameBuffer);
				WebGL.mainContext.deleteRenderbuffer(this._depthStencilBuffer);
				this._source=null;
				this._frameBuffer=null;
				this._depthStencilBuffer=null;
				this.memorySize=0;
			}
		}

		__getset(0,__proto,'depthStencilBuffer',function(){
			return this._depthStencilBuffer;
		});

		__getset(0,__proto,'frameBuffer',function(){
			return this._frameBuffer;
		});

		return WebGLRenderTarget;
	})(Bitmap)


	//class laya.webgl.resource.WebGLSubImage extends laya.resource.Bitmap
	var WebGLSubImage=(function(_super){
		function WebGLSubImage(canvas,offsetX,offsetY,width,height,atlasImage,src){
			//this._ctx=null;
			//this._allowMerageInAtlas=false;
			//this._enableMerageInAtlas=false;
			//this.canvas=null;
			//this.repeat=false;
			//this.mipmap=false;
			//this.minFifter=0;
			//this.magFifter=0;
			//this.atlasImage=null;
			this.offsetX=0;
			this.offsetY=0;
			//this.src=null;
			WebGLSubImage.__super.call(this);
			this.repeat=true;
			this.mipmap=false;
			this.minFifter=-1;
			this.magFifter=-1;
			this.atlasImage=atlasImage;
			this.canvas=canvas;
			this._ctx=canvas.getContext('2d',undefined);
			this._w=width;
			this._h=height;
			this.offsetX=offsetX;
			this.offsetY=offsetY;
			this.src=src;
			this._enableMerageInAtlas=true;
			(AtlasResourceManager.enabled)&& (this._w < AtlasResourceManager.atlasLimitWidth && this._h < AtlasResourceManager.atlasLimitHeight)? this._allowMerageInAtlas=true :this._allowMerageInAtlas=false;
		}

		__class(WebGLSubImage,'laya.webgl.resource.WebGLSubImage',_super);
		var __proto=WebGLSubImage.prototype;
		Laya.imps(__proto,{"laya.webgl.resource.IMergeAtlasBitmap":true})
		/*override public function copyTo(dec:Bitmap):void {
		var d:WebGLSubImage=dec as WebGLSubImage;
		super.copyTo(dec);
		d._ctx=_ctx;
	}*/


	__proto.size=function(w,h){
		this._w=w;
		this._h=h;
		this._ctx && this._ctx.size(w,h);
		this.canvas && (this.canvas.height=h,this.canvas.width=w);
	}


	__proto.recreateResource=function(){
		this.size(this._w,this._h);
		this._ctx.drawImage(this.atlasImage,this.offsetX,this.offsetY,this._w,this._h,0,0,this._w,this._h);
		(!(this._allowMerageInAtlas && this._enableMerageInAtlas))? (this.createWebGlTexture()):(this.memorySize=0);
		this.completeCreate();
	}


	__proto.createWebGlTexture=function(){
		var gl=WebGL.mainContext;
		if (!this.canvas){
			throw "create GLTextur err:no data:"+this.canvas;
		};

		var glTex=this._source=gl.createTexture();
		var preTarget=WebGLContext.curBindTexTarget;
		var preTexture=WebGLContext.curBindTexValue;
		WebGLContext.bindTexture(gl,0x0DE1,glTex);
		if (Render.isConchWebGL){
			gl.texImage2DEx(true,0x0DE1,0,0x1908,0x1908,0x1401,this.canvas);
		}

		else {
			gl.pixelStorei(0x9241,true);
			gl.texImage2D(0x0DE1,0,0x1908,0x1908,0x1401,this.canvas);
			gl.pixelStorei(0x9241,false);
		};

		var minFifter=this.minFifter;
		var magFifter=this.magFifter;
		var repeat=this.repeat ? 0x2901 :0x812F;
		var isPOT=Arith.isPOT(this.width,this.height);
		if (isPOT){
			if (this.mipmap)
				(minFifter!==-1)|| (minFifter=0x2703);
			else
			(minFifter!==-1)|| (minFifter=0x2601);
			(magFifter!==-1)|| (magFifter=0x2601);
			gl.texParameteri(0x0DE1,0x2800,magFifter);
			gl.texParameteri(0x0DE1,0x2801,minFifter);
			gl.texParameteri(0x0DE1,0x2802,repeat);
			gl.texParameteri(0x0DE1,0x2803,repeat);
			this.mipmap && gl.generateMipmap(0x0DE1);
			}else {
			(minFifter!==-1)|| (minFifter=0x2601);
			(magFifter!==-1)|| (magFifter=0x2601);
			gl.texParameteri(0x0DE1,0x2801,minFifter);
			gl.texParameteri(0x0DE1,0x2800,magFifter);
			gl.texParameteri(0x0DE1,0x2802,0x812F);
			gl.texParameteri(0x0DE1,0x2803,0x812F);
		}

		(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
		this.canvas=null;
		if (isPOT && this.mipmap)
			this.memorySize=this._w *this._h *4 *(1+1 / 3);
		else
		this.memorySize=this._w *this._h *4;
	}


	__proto.disposeResource=function(){
		if (!(AtlasResourceManager.enabled && this._allowMerageInAtlas)&& this._source){
			WebGL.mainContext.deleteTexture(this._source);
			this._source=null;
			this.memorySize=0;
		}

	}


	//}
	__proto.clearAtlasSource=function(){}
	/**
	*是否创建私有Source
	*@return 是否创建
	*/
	__getset(0,__proto,'allowMerageInAtlas',function(){
		return this._allowMerageInAtlas;
	});


	//public var createFromPixel:Boolean=true;
	__getset(0,__proto,'atlasSource',function(){
		return this.canvas;
	});


	/**
	*是否创建私有Source,通常禁止修改
	*@param value 是否创建
	*/
	/**
	*是否创建私有Source
	*@return 是否创建
	*/
	__getset(0,__proto,'enableMerageInAtlas',function(){
		return this._allowMerageInAtlas;
		},function(value){

		this._allowMerageInAtlas=value;
	});


	return WebGLSubImage;
	})(Bitmap)


	//class laya.webgl.shader.d2.value.TextSV extends laya.webgl.shader.d2.value.TextureSV
	var TextSV=(function(_super){
		function TextSV(args){
			TextSV.__super.call(this,0x40);
			this.defines.add(0x40);
		}

		__class(TextSV,'laya.webgl.shader.d2.value.TextSV',_super);
		var __proto=TextSV.prototype;
		__proto.release=function(){
			TextSV.pool[TextSV._length++]=this;
			this.clear();
		}

		__proto.clear=function(){
			_super.prototype.clear.call(this);
		}

		TextSV.create=function(){
			if (TextSV._length)return TextSV.pool[--TextSV._length];
			else return new TextSV(null);
		}

		TextSV.pool=[];
		TextSV._length=0;
		return TextSV;
	})(TextureSV)


	//class game.numberGame.c.NumberGamesInitCommand extends core.BaseLoadingFileCommand
	var NumberGamesInitCommand=(function(_super){
		function NumberGamesInitCommand(){
			this.numberGamesConfigModel=null;
			NumberGamesInitCommand.__super.call(this);
		}

		__class(NumberGamesInitCommand,'game.numberGame.c.NumberGamesInitCommand',_super);
		var __proto=NumberGamesInitCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Load_Number_Games_File_Complete_Cmd":{
						this.initNumberGames();
						break ;
					}
				case "Close_Number_Games_Cmd":{
						this.closeNumberGames();
						break ;
					}
				}
		}

		__proto.initNumberGames=function(){
			this.addPackage("Lottery");
			this.sendNotification("Build_Number_Games_Cmd");
		}

		__proto.closeNumberGames=function(){
			this.removePackage("Lottery");
			this.sendNotification("Close_Number_Games_UI_Cmd");
		}

		NumberGamesInitCommand.LOAD_NUMBER_GAMES_FILE_COMPLETE_CMD="Load_Number_Games_File_Complete_Cmd";
		NumberGamesInitCommand.CLOSE_NUMBER_GAMES_CMD="Close_Number_Games_Cmd";
		return NumberGamesInitCommand;
	})(BaseLoadingFileCommand)


	//class game.numberGame.c.NumberGamesBaseCommand extends publics.c.BaseServerCommand
	var NumberGamesBaseCommand=(function(_super){
		function NumberGamesBaseCommand(){
			this.numberGamesPlayerModel=null;
			this.numberGamesUIModel=null;
			NumberGamesBaseCommand.__super.call(this);
		}

		__class(NumberGamesBaseCommand,'game.numberGame.c.NumberGamesBaseCommand',_super);
		var __proto=NumberGamesBaseCommand.prototype;
		/**
		*计算发送的数据
		*
		*/
		__proto.mathData=function(_zhuiHaoBol){
			(_zhuiHaoBol===void 0)&& (_zhuiHaoBol=false);
			var postData=new Object();
			postData["game_id"]=this.numberGamesPlayerModel.currentGameInfoVo.id;
			postData["game_type_id"]=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId;
			postData["game_cycle_id"]=this.numberGamesUIModel.numberGamesVo.resultVo.gameCycleId;
			postData["bet_info"]=this.mathBetInfo();
			postData["bet_mode"]=this.numberGamesUIModel.numberGamesVo.betVo.chooseMoneyIndex;
			postData["bet_percent_type"]=this.numberGamesUIModel.numberGamesVo.betVo.betType;
			if(_zhuiHaoBol){
				postData["bet_multiple"]=1;
				this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.orderData=postData;
			}
			else{
				postData["bet_multiple"]=this.numberGamesUIModel.numberGamesVo.betVo.bei;
			}
			return postData;
		}

		__proto.mathBetInfo=function(){
			var betInfo;
			switch(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType){
				case "pk10Digital":
				case "digital":{
						betInfo=this.checkDigital(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType);
						break ;
					}
				case "digitalrx":{
						betInfo=this.checkDigitalRx();
						break ;
					}
				case "pk10DragonTiger":{
						betInfo=this.checkPk10DragonTiger();
						break ;
					}
				case "sp_digital":{
						betInfo=this.checkSpDigital();
						break ;
					}
				case "dragonTiger":{
						betInfo=this.checkDragonTiger();
						break ;
					}
				case "selectBox":{
						betInfo=this.checkSelectBox();
						break ;
					}
				case "zuXuanHeZhi":{
						betInfo=this.checkZuXuanHeZhi();
						break ;
					}
				case "danTuo":{
						betInfo=this.checkDanTuo();
						break ;
					}
				case "hk6hDigital":{
						betInfo=this.checkHk6hDiagital();
						break ;
					}
				case "tmsx":{
						betInfo=this.checkTmsx();
						break ;
					}
				case "tmbs1":{
						betInfo=this.checkTmbs(0);
						break ;
					}
				case "tmbs2":{
						betInfo=this.checkTmbs(1);
						break ;
					}
				case "tmbs3":{
						betInfo=this.checkTmbs(2);
						break ;
					}
				case "tmbs4":{
						betInfo=this.checkTmbs(3);
						break ;
					}
				case "input":{
						betInfo=this.checkInput();
						break ;
					}
				case "inputrx":{
						betInfo=this.checkInputRx();
						break ;
					}
				case "bjkl8rx":{
						betInfo=this.bjkl8rx();
						break ;
					}
				case "jsk33thdx":{
						betInfo=this.jsk33thdx();
						break ;
					}
				case "jsk32thfx":{
						betInfo=this.jsk32thfx();
						break ;
					}
				case "jsk32thdx":{
						betInfo=this.jsk32thdx();
						break ;
					}
				default :{
						break ;
					}
				}
			return betInfo;
		}

		/**
		*一般选号
		*@return
		*
		*/
		__proto.checkDigital=function(_type){
			var betInfo=[];
			var lotteryNumbersVoArr;
			if(_type=="pk10Digital"){
				lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pk10SelectNumberTypeVo.lotteryNumbersVoArr;
			}
			else{
				lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberTypeVo.lotteryNumbersVoArr;
			}
			for(var i=0;i < lotteryNumbersVoArr.length;i++){
				var oneBetInfo=[];
				var numberVoArr=lotteryNumbersVoArr[i].numberVoArr;
				for(var ii=0;ii < numberVoArr.length;ii++){
					if(numberVoArr[ii].chooseBol)
						oneBetInfo.push(numberVoArr[ii].value);
				}
				betInfo.push(oneBetInfo);
			}
			return betInfo;
		}

		__proto.checkDigitalRx=function(){
			var betInfo=[];
			var lotteryNumbersVoArr;
			lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberRxTypeVo.lotteryNumbersVoArr;
			for(var i=0;i < lotteryNumbersVoArr.length;i++){
				var oneBetInfo=[];
				var numberVoArr=lotteryNumbersVoArr[i].numberVoArr;
				for(var ii=0;ii < numberVoArr.length;ii++){
					if(numberVoArr[ii].chooseBol)
						oneBetInfo.push(numberVoArr[ii].value);
				}
				betInfo.push(oneBetInfo);
			}
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberRxTypeVo.weiArr,betInfo];
		}

		/**
		*特殊选号
		*@return
		*
		*/
		__proto.checkSpDigital=function(){
			var specialNumberTypesVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.specialNumberTypesVo;
			return specialNumberTypesVo.chooseValueArr;
		}

		/**
		*检测龙虎
		*@return
		*
		*/
		__proto.checkDragonTiger=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.dragonTigerTypesVo.chooseValueArr[0]];
		}

		/**
		*大小单双
		*
		*/
		__proto.checkSelectBox=function(){
			var chooseValueArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectBoxTypeVo.chooseValueArr;
			for(var i=0;i < chooseValueArr.length;i++){
				if(chooseValueArr[i]){
					for(var ii=0;ii < chooseValueArr[i].length;ii++){
						if(chooseValueArr[i][ii]=="龙"){
							chooseValueArr[i][ii]="dragon";
						}
						else if(chooseValueArr[i][ii]=="虎"){
							chooseValueArr[i][ii]="tiger";
						}
					}
				}
			}
			return chooseValueArr;
		}

		/**
		*组选和值
		*@return
		*
		*/
		__proto.checkZuXuanHeZhi=function(){
			return this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.zuXuanHeZhiTypeVo.chooseValueArr;
		}

		/**
		*胆拖
		*@return
		*
		*/
		__proto.checkDanTuo=function(){
			return this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo.chooseValueArr;
		}

		/**
		*pk10龙虎
		*@return
		*
		*/
		__proto.checkPk10DragonTiger=function(){
			return this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pK10DragonTigerVo.chooseValueArr;
		}

		/**
		*六合彩的选号
		*@return
		*
		*/
		__proto.checkHk6hDiagital=function(){
			var chooseValueArr=[];
			chooseValueArr[0]=[];
			for(var i=0;i < this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hSelectNumberTypeVo.chooseValueArr[0].length;i++){
				var value=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hSelectNumberTypeVo.chooseValueArr[0][i];
				if(value < 10){
					chooseValueArr[0].push("0"+value);
				}
				else{
					chooseValueArr[0].push(String(value));
				}
			}
			return chooseValueArr;
		}

		__proto.checkTmsx=function(){
			return this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hTmsxTypeVo.chooseValueArr;
		}

		__proto.checkTmbs=function(_index){
			return this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.numberGamesSelectBSNumbersVoArr[_index].chooseValueArr;
		}

		__proto.checkInput=function(){
			var chooseValueArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputTypeVo.chooseValueArr;
			var baseGame=this.numberGamesPlayerModel.currentGameInfoVo.baseGame;
			var playTypeId=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId;
			addBetToOrderNow(chooseValueArr,false,baseGame,playTypeId);
			return chooseValueArr;
		}

		__proto.checkInputRx=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputRxTypeVo.weiArr,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputRxTypeVo.chooseValueArr];
		}

		__proto.bjkl8rx=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.kL8RXVo.chooseValueArr];
		}

		__proto.jsk33thdx=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk33thdxVo.chooseValueArr];
		}

		__proto.jsk32thfx=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thfxVo.chooseValueArr];
		}

		__proto.jsk32thdx=function(){
			return [this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thdxVo.chooseValueArr,this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thdxVo.chooseValueArr2];
		}

		return NumberGamesBaseCommand;
	})(BaseServerCommand)


	//class modules.hall.c.DailyEventCommand extends publics.c.BaseServerCommand
	var DailyEventCommand=(function(_super){
		function DailyEventCommand(){
			this.playerInfoModel=null;
			this.resManager=null;
			this.gameUIBuilderBridge=null;
			this.eventsUIModel=null;
			DailyEventCommand.__super.call(this);
		}

		__class(DailyEventCommand,'modules.hall.c.DailyEventCommand',_super);
		var __proto=DailyEventCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Init_Daily_Event_Cmd":{
						this.initDailyEvent();
						break ;
					}
				case "Open_Daily_Event_Cmd":{
						this.getEventInfo();
						break ;
					}
				case "Got_Event_Info_Cmd":{
						this.gotEventInfo(_notificationVo.data)
						break ;
					}
				case "Update_Daily_Event_Cmd":{
						this.updateDailyEvent();
						break ;
					}
				case "Claim_Daily_Reward_Cmd":{
						this.claimDailyReward();
						break ;
					}
				case "Claim_Daily_Reward_Result_Cmd":{
						this.claimDailyRewardResult(_notificationVo.data);
						break ;
					}
				case "Close_Daily_Event_Cmd":{
						this.closeDailyEvent();
					}
				default :{
						break ;
					}
				}
		}

		__proto.initDailyEvent=function(){
			this.addPackage("DailyEvent");
			this.eventsUIModel=this.injector.getSingleton(EventsUIModel);
			this.viewClassMap.map(DailyEventWindow,this.eventsUIModel.dailyEventWindowVo);
			this.viewClassMap.map(DailyEventWindowMain,this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("DailyEvent","OneDailyEvent"),OneDailyEvent);
		}

		/**
		*打开每日任务
		*
		*/
		__proto.getEventInfo=function(){
			this.showLoading();
			var url=this.resManager.serverUrl+"/USE_TASK/"+this.playerInfoModel.playerInfoVo.user_id;
			this.sendHttpRequest(url,"Got_Event_Info_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.gotEventInfo=function(_eventInfo){
			this.hideLoading();
			if(_eventInfo.task_activity_list.length==0){
				this.showAlert("目前暂无每日任务");
				return;
			};
			var taskArr=_eventInfo["task_activity_list"];
			for(var i=0;i < taskArr.length;i++){
				var oneDailyTypeInfoVo=this.parseDailyEvent(taskArr[i]);
				this.eventsUIModel.dailyEventWindowVo.oneDailyTypeInfoVoArr.push(oneDailyTypeInfoVo);
			}
			this.gameUIBuilderBridge.openPage("DailyEvent",DailyEventWindow);
			this.eventsUIModel.dailyEventWindowVo.eventIndex=0;
			this.updateDailyEvent();
		}

		__proto.parseDailyEvent=function(_taskInfo){
			var oneDailyTypeInfoVo=new OneDailyTypeInfoVo();
			oneDailyTypeInfoVo.startTime=_taskInfo["start_time"];
			oneDailyTypeInfoVo.endTime=_taskInfo["end_time"];
			oneDailyTypeInfoVo.activityId=_taskInfo["activity_id"];
			oneDailyTypeInfoVo.currentActivity=_taskInfo["total_active_value"];
			oneDailyTypeInfoVo.totalActivity=_taskInfo["max_active_value"];
			var oneDailyEventArr=_taskInfo["task_data_list"];
			for(var ii=0;ii < oneDailyEventArr.length;ii++){
				var oneDailyEventVo=new OneDailyEventVo();
				oneDailyEventVo.eventName=oneDailyEventArr[ii]["title"];
				oneDailyEventVo.completeCount=oneDailyEventArr[ii]["reach_count"];
				oneDailyEventVo.activity=oneDailyEventArr[ii]["active_value"];
				oneDailyEventVo.totalCount=oneDailyEventArr[ii]["total_reach_count"];
				oneDailyTypeInfoVo.oneDailyEventVoArr.push(oneDailyEventVo);
			};
			var rewardArr=_taskInfo["reward_list"];
			for(ii=0;ii < rewardArr.length;ii++){
				oneDailyTypeInfoVo.rewardArr.push(rewardArr[ii]["reward"]);
				oneDailyTypeInfoVo.activityValueArr.push(rewardArr[ii]["active_value"]);
				var rewardState=rewardArr[ii]["reward_state"];
				if(rewardState==1){
					oneDailyTypeInfoVo.claimStatusArr.push(2);
				}
				else{
					if(oneDailyTypeInfoVo.currentActivity >=rewardArr[ii]["active_value"]){
						oneDailyTypeInfoVo.claimStatusArr.push(1);
					}
					else{
						oneDailyTypeInfoVo.claimStatusArr.push(0);
					}
				}
			}
			return oneDailyTypeInfoVo;
		}

		/**
		*更新每日任务
		*
		*/
		__proto.updateDailyEvent=function(){
			var oneDailyTypeInfoVo=this.eventsUIModel.dailyEventWindowVo.oneDailyTypeInfoVoArr[this.eventsUIModel.dailyEventWindowVo.eventIndex];
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.oneDailyEventVoArr=oneDailyTypeInfoVo.oneDailyEventVoArr;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.currentActivity=oneDailyTypeInfoVo.currentActivity;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.totalActivity=oneDailyTypeInfoVo.totalActivity;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.claimStatusArr=oneDailyTypeInfoVo.claimStatusArr;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.rewardArr=oneDailyTypeInfoVo.rewardArr;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.activityValueArr=oneDailyTypeInfoVo.activityValueArr;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.activityId=oneDailyTypeInfoVo.activityId;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.startTime=oneDailyTypeInfoVo.startTime;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.endTime=oneDailyTypeInfoVo.endTime;
			this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.status="Update_Daily_Event_Status";
		}

		/**
		*领取奖励
		*
		*/
		__proto.claimDailyReward=function(){
			var url=this.resManager.serverUrl+"/USE_TASK/";
			var data=new Object();
			data["id"]=this.playerInfoModel.playerInfoVo.user_id;
			data["activity_id"]=this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.activityId;
			data["reward_index"]=this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.claimRewardIndex;
			this.sendHttpRequest(url,"Claim_Daily_Reward_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		/**
		*领奖结果
		*@param _result
		*
		*/
		__proto.claimDailyRewardResult=function(_result){
			var oneDailyTypeInfoVo=this.parseDailyEvent(_result);
			var oneDailyTypeInfoVoArr=this.eventsUIModel.dailyEventWindowVo.oneDailyTypeInfoVoArr;
			for(var i=0;i < oneDailyTypeInfoVoArr.length;i++){
				if(oneDailyTypeInfoVoArr[i].activityId==oneDailyTypeInfoVo.activityId){
					oneDailyTypeInfoVoArr[i]=oneDailyTypeInfoVo;
					break ;
				}
			}
			this.updateDailyEvent();
			var reward=this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.rewardArr[this.eventsUIModel.dailyEventWindowVo.dailyEventWindowMainVo.claimRewardIndex];
			this.playerInfoModel.playerInfoVo.user_balance+=reward;
			this.showAlert(BaseStaticFuncs.format("领取到每日奖励{0}元, 请检查您的余额",reward));
		}

		__proto.closeDailyEvent=function(){
			this.eventsUIModel.dailyEventWindowVo.status="Remove_Status";
		}

		DailyEventCommand.INIT_DAILY_EVENT_CMD="Init_Daily_Event_Cmd";
		DailyEventCommand.OPEN_DAILY_EVENT_CMD="Open_Daily_Event_Cmd";
		DailyEventCommand.GOT_EVENT_INFO_CMD="Got_Event_Info_Cmd";
		DailyEventCommand.CLAIM_DAILY_REWARD_CMD="Claim_Daily_Reward_Cmd";
		DailyEventCommand.CLAIM_DAILY_REWARD_RESULT_CMD="Claim_Daily_Reward_Result_Cmd";
		DailyEventCommand.UPDATE_DAILY_EVENT_CMD="Update_Daily_Event_Cmd";
		DailyEventCommand.CLOSE_DAILY_EVENT_CMD="Close_Daily_Event_Cmd";
		return DailyEventCommand;
	})(BaseServerCommand)


	//class modules.hall.c.FundManageCommand extends publics.c.BaseServerCommand
	var FundManageCommand=(function(_super){
		function FundManageCommand(){
			this.hallUIModel=null;
			this.gameUIBuilderBridge=null;
			this.playerInfoModel=null;
			FundManageCommand.__super.call(this);
		}

		__class(FundManageCommand,'modules.hall.c.FundManageCommand',_super);
		var __proto=FundManageCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Open_Fund_Cmd":
					this.openFund(_notificationVo.data);
					break ;
				case "Open_Fund_Result_Cmd":
					this.openFundResult(_notificationVo.data);
					break ;
				case "VALID_PWD_Cmd":
					this.onValidPwd(_notificationVo.data);
					break ;
				case "VALID_PWD_COMPLETE_Cmd":
					this.onValidPwdComplete(_notificationVo.data);
					break ;
				case "TRANSFER_ACCOUNTS_Cmd":
					this.onTransferAccounts(_notificationVo.data);
					break ;
				case "TRANSFER_ACCOUNTS_COMPLETE_Cmd":
					this.onTransferAccountsComplete(_notificationVo.data);
					break ;
				case "DRAW_MONEY_Cmd":
					this.onDrawMoney(_notificationVo.data);
					break ;
				case "DRAW_MONEY_COMPLETE_Cmd":
					this.onDrawMoneyComplete(_notificationVo.data);
					break ;
				case "UPDATE_TOPUP_RECORD_TYPE_Cmd":
					this.updateTopupRecordType(_notificationVo.data);
					break ;
				case "GET_TOPUP_RECORD_Cmd":
					this.onGetTopupRecord(_notificationVo.data);
					break ;
				case "GET_TOPUP_RECORD_COMPLETE_Cmd":
					this.onGetTopupRecordComplete(_notificationVo.data);
					break ;
				case "GET_GAME_MONEY_Cmd":
					this.onGetGameMoney(_notificationVo.data);
					break ;
				case "GET_GAME_MONEY_COMPLETE_Cmd":
					this.onGetGameMoneyComplete(_notificationVo.data);
					break ;
				case "GET_TOP_UP_RECHARGE_PIPE_Cmd":
					this.onGetTopUpRechargePipe();
					break ;
				case "GET_TOP_UP_RECHARGE_PIPE_COMPLETE_Cmd":
					this.onGetTopUpRechargePipeComplete(_notificationVo.data);
					break ;
				case "TOPUP_Cmd":
					this.onTopUp(_notificationVo.data);
					break ;
				case "TOPUP_COMPLETE_Cmd":
					this.onTopUpComplete(_notificationVo.data);
					break ;
				case "Get_System_Config_Cmd":
					this.getSystemConfig();
					break ;
				case "Got_System_Config_Cmd":
					this.gotSystemConfig(_notificationVo.data);
					break ;
				}
		}

		/**
		*开通支付
		*
		*/
		__proto.openFund=function(_prodoctId){
			this.showLoading();
			this.playerInfoModel.playerInfoVo.openFundId=_prodoctId;
			var data=new Object();
			data.id=this.playerInfoModel.playerInfoVo.id;
			data.product_id=_prodoctId;
			var url=GameUtil.getOpenFund();
			console.log("onTransferAccounts url:",url);
			this.sendHttpRequest(url,"Open_Fund_Result_Cmd","","json",data,false,GameUtil.headers,"",false,true);
		}

		/**
		*开通成功
		*
		*/
		__proto.openFundResult=function(_result){
			this.hideLoading();
			if(_result["status_code"] !=1){
				this.showAlert(_result["status_msg"]);
				return;
			};
			var dataMgr=DataMgr.get();
			var userBalanceData=dataMgr.userBalanceData;
			var userBalanceDataItem=userBalanceData.itemDic.get(this.playerInfoModel.playerInfoVo.openFundId);
			userBalanceDataItem.user_balance_display="0";
			this.showAlert("开通成功");
			var panelName=DataMgr.get().userBalancePanelName;
			switch(panelName){
				case GameUtil.PANEL_FM_TOPUP_MONEY:
					this.hallUIModel.fmTopUpMoneyVo.status=FmTopUpMoneyVo.UPDATE_MONEY;
					break ;
				case GameUtil.PANEL_FM_TRANSFER_ACCOUNTS:
					this.hallUIModel.fmTransferAccountsPanelVo.status=FmTransferAccountsPanelVo.INIT_INFO;
					break ;
				case GameUtil.PANEL_FM_DRAW_MONEY_CENTER:
					this.hallUIModel.fmDrawMoneyCenterPanelVo.status=FmDrawMoneyCenterPanelVo.INIT_INFO;
					break ;
				case GameUtil.PANEL_HALL:
					this.hallUIModel.mineVo.initBol=false;
					break ;
				}
		}

		__proto.onValidPwd=function(pwd){
			console.log("onValidPwd data:",pwd);
			this.hallUIModel.fmValidPwdPanelVo.status=FmValidPwdPanelVo.VALID_INFO;
		}

		__proto.onValidPwdComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onDrawMoney data:",data);
			if(data.status_code==1){
			}
		}

		/**
		*转账
		*/
		__proto.onTransferAccounts=function(data){
			this.showLoading();
			data.id=this.playerInfoModel.playerInfoVo.id;
			var url=GameUtil.getTransferUrl(data);
			console.log("onTransferAccounts url:",url);
			this.sendHttpRequest(url,"TRANSFER_ACCOUNTS_COMPLETE_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.onTransferAccountsComplete=function(data){
			this.hideLoading();
			console.log("onTransferAccountsComplete data:",data);
			if(data.status_code==1){
				this.hallUIModel.fmTransferAccountsPanelVo.status=FmTransferAccountsPanelVo.UPDATE_INFO
			}
		}

		__proto.onDrawMoney=function(data){
			data.id=this.playerInfoModel.playerInfoVo.id;
			var url=GameUtil.getWithdrawUrl();
			console.log("onDrawMoney url:",url," data:",data);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"DRAW_MONEY_COMPLETE_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.onDrawMoneyComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onDrawMoneyComplete data:",data);
			if(data.status_code==1){
				this.showAlert("已提交，等待审核");
				var count=Number(this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawCurrentCount)+1;
				this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawCurrentCount=String(count);
				this.hallUIModel.fmDrawMoneyCenterPanelVo.status=FmDrawMoneyCenterPanelVo.UPDATE_STATUS;
			}
		}

		/**
		*更新记录类型
		*@param _type
		*
		*/
		__proto.updateTopupRecordType=function(_type){
			this.hallUIModel.fmTopUpRecordPanelVo.searchIndex=_type;
		}

		__proto.onGetTopupRecord=function(arr){
			var id=arr[0];
			var date1=arr[1];
			var date2=arr[2];
			var url="";
			if(id==0){
				url=GameUtil.getTopupRecordUrl(this.playerInfoModel.playerInfoVo.id,date1,date2);
				}else if(id==1){
				url=GameUtil.getTransferRecordUrl(this.playerInfoModel.playerInfoVo.id,date1,date2);
				}else{
				url=GameUtil.getWithdrawRecordUrl(this.playerInfoModel.playerInfoVo.id,date1,date2);
			}
			console.log("onGetTopupRecord url:",url," arr:",arr);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_TOPUP_RECORD_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetTopupRecordComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onGetTopupRecordComplete data:",data);
			if(data.status_code==1){
				this.hallUIModel.fmTopUpRecordPanelVo.data=data;
				this.hallUIModel.fmTopUpRecordPanelVo.status=FmTopUpRecordPanelVo.UPDATE_INFO;
			}
		}

		/**
		*获取充值管道
		*/
		__proto.onGetTopUpRechargePipe=function(){
			var url=GameUtil.getTopUpRechargePipeUrl();
			console.log("onGetTopUpRechargePipe url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_TOP_UP_RECHARGE_PIPE_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetTopUpRechargePipeComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onGetTopUpRechargePipe data:",data);
			if(data.status_code==1){
				this.hallUIModel.fmTopUpMoneyVo.rechargePipeData=new RechargePipeData();
				this.hallUIModel.fmTopUpMoneyVo.rechargePipeData.decode(data);
				this.hallUIModel.fmTopUpMoneyVo.status=FmTopUpMoneyVo.UPDATE_RECHARGE_PIPE;
			}
		}

		/**
		*获取游戏场金币
		*/
		__proto.onGetGameMoney=function(panelName){
			if(panelName==GameUtil.PANEL_HALL){
				if(this.hallUIModel.mineVo.initBol){
					return;
				}
			}
			this.hallUIModel.mineVo.initBol=true;
			if(panelName)
				DataMgr.get().userBalancePanelName=panelName;
			var url=GameUtil.getUserBalance(this.playerInfoModel.playerInfoVo.id);
			console.log("onGetGameMoney url:",url);
			this.sendHttpRequest(url,"GET_GAME_MONEY_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetGameMoneyComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.mineVo.gotOtherWebBol=true;
			console.log("onGetGameMoneyComplete data:",data);
			if(data.status_code==1){
				var userBalanceData=new UserBalanceData();
				userBalanceData.decode(data);
				DataMgr.get().userBalanceData=userBalanceData;
				var panelName=DataMgr.get().userBalancePanelName;
				switch(panelName){
					case GameUtil.PANEL_FM_TOPUP_MONEY:
						this.hallUIModel.fmTopUpMoneyVo.status=FmTopUpMoneyVo.UPDATE_MONEY;
						break ;
					case GameUtil.PANEL_FM_TRANSFER_ACCOUNTS:
						this.hallUIModel.fmTransferAccountsPanelVo.status=FmTransferAccountsPanelVo.INIT_INFO;
						break ;
					case GameUtil.PANEL_FM_DRAW_MONEY_CENTER:
						this.hallUIModel.fmDrawMoneyCenterPanelVo.status=FmDrawMoneyCenterPanelVo.INIT_INFO;
						break ;
					case GameUtil.PANEL_HALL:
						break ;
					}
			}
			this.hallUIModel.mineVo.status=MineVo.INIT_INFO;
		}

		__proto.getSystemConfig=function(){
			if(DataMgr.get().loginState()> DataMgr.LoginState_NoLogin){
				this.showLoading();
			};
			var url=GameUtil.getSystemConfig();
			this.sendHttpRequest(url,"Got_System_Config_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.gotSystemConfig=function(_systemConfigObj){
			this.hideLoading();
			this.hallUIModel.hallVo.customerUrl=_systemConfigObj.service_live_link.value;
			this.hallUIModel.mineVo.customerUrl=_systemConfigObj.service_live_link.value;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawMin=_systemConfigObj.withdraw_amount_single_min_realy.value;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawMax=_systemConfigObj.withdraw_amount_single_max_realy.value;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.total_bet_balance_percent=_systemConfigObj.total_bet_balance_percent.value;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawTime=_systemConfigObj.withdraw_active_time.withdraw_info;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawTotalCount=_systemConfigObj.withdraw_count.value;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawTotalDayPrice=_systemConfigObj.withdraw_money_limit.value;
			this.playerInfoModel.playerInfoVo.pk_lottery=_systemConfigObj.pk_lottery.value;
			this.playerInfoModel.playerInfoVo.pk_lottery_percent=_systemConfigObj.pk_lottery_percent.value;
		}

		/**
		*充值
		*/
		__proto.onTopUp=function(data){
			data.id=this.playerInfoModel.playerInfoVo.id;
			var url=GameUtil.getTopUpUrl();
			this.hallUIModel.qrCodeVo.title=data.title;
			console.log("onTopUp url:",url," data:",data);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"TOPUP_COMPLETE_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.onTopUpComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onTopUp data:",data);
			if(data.status_code==1){
				var type=data["data"]["type"];
				if(type=="display"){
					var code=data["data"]["data"]["recharge_id"];
					this.hallUIModel.fmTopUpMoneyRechargeModeEComponentVo.code=code;
					this.hallUIModel.fmTopUpMoneyRechargeModeEComponentVo.status="Update_Code_Status";
					this.hallUIModel.fmTopUpMoneyVo.status=FmTopUpMoneyVo.UPDATE_HEIGHT_STATUS;
					this.showAlert(BaseStaticFunc.format("请在转账时填写“{0}”，方能审核倒账",code));
					return;
				};
				var msg=data["data"]["data"];
				if(type=="showSuccess"){
					this.showAlert(msg);
					return;
				}
				data=data["data"]["msg"];
				var url;
				if(data["redirect_url"]){
					url=data["redirect_url"];
				}
				else{
					url=data["gateway_url"];
				}
				if(type=="qrcode"){
					this.sendNotification("Open_Qr_Code_Cmd",data);
				}
				else{
					var formData=new Object();
					if(type=="redirect"){
						url=data;
					}
					else if(type=="form"){
						for(var key in data){
							formData[key]=data[key];
						}
					}
					if(UITypeConfig.WEB_VIEW_BOL){
						formData["url"]=url;
						var mainUrl=window.location.href;
						if(mainUrl.indexOf("index.html")){
							mainUrl=mainUrl.split("index.html")[0];
						}
						if(mainUrl.indexOf("?")){
							mainUrl=mainUrl.split("?")[0];
						};
						var attr="";
						for(key in formData){
							attr+=BaseStaticFuncs.format("{0}={1}&",key,formData[key]);
						}
						if(Browser.onIOS){
							if(type=="form"){
								url=BaseStaticFuncs.format("{0}?{1}",mainUrl+"direct.html",attr);
							}
							window.webkit.messageHandlers.ap.postMessage({'url':url});;
						}
						else{
							if(type=="form"){
								url=BaseStaticFuncs.format("{0}?{1}",mainUrl+"direct.html",attr);
								}{
								url="ggwinshouyin/"+url;
							}
							window.location=url;
						}
						return;
					}
					else{
						this.showAlert("获取到充值信息，需要再点一次充值按钮");
						delete formData["gateway_url"];
						delete formData["redirect_url"];
						this.sendNotification("Create_Form_Cmd",[url,formData,this.hallUIModel.fmTopUpMoneyVo.topUpButtonRect]);
					}
				}
			}
		}

		FundManageCommand.VALID_PWD_CMD="VALID_PWD_Cmd";
		FundManageCommand.VALID_PWD_COMPLETE_CMD="VALID_PWD_COMPLETE_Cmd";
		FundManageCommand.OPEN_FUND_CMD="Open_Fund_Cmd";
		FundManageCommand.OPEN_FUND_RESULT_CMD="Open_Fund_Result_Cmd";
		FundManageCommand.TRANSFER_ACCOUNTS_CMD="TRANSFER_ACCOUNTS_Cmd";
		FundManageCommand.TRANSFER_ACCOUNTS_COMPLETE_CMD="TRANSFER_ACCOUNTS_COMPLETE_Cmd";
		FundManageCommand.DRAW_MONEY_CMD="DRAW_MONEY_Cmd";
		FundManageCommand.DRAW_MONEY_COMPLETE_CMD="DRAW_MONEY_COMPLETE_Cmd";
		FundManageCommand.GET_MONEY_DRAW_MONEY_CENTER_COMPLETE_CMD="GET_MONEY_DRAW_MONEY_CENTER_COMPLETE_Cmd";
		FundManageCommand.UPDATE_TOPUP_RECORD_TYPE_CMD="UPDATE_TOPUP_RECORD_TYPE_Cmd";
		FundManageCommand.GET_TOPUP_RECORD_CMD="GET_TOPUP_RECORD_Cmd";
		FundManageCommand.GET_TOPUP_RECORD_COMPLETE_CMD="GET_TOPUP_RECORD_COMPLETE_Cmd";
		FundManageCommand.GET_TOP_UP_RECHARGE_PIPE_CMD="GET_TOP_UP_RECHARGE_PIPE_Cmd";
		FundManageCommand.GET_TOP_UP_RECHARGE_PIPE_COMPLETE_CMD="GET_TOP_UP_RECHARGE_PIPE_COMPLETE_Cmd";
		FundManageCommand.GET_GAME_MONEY_CMD="GET_GAME_MONEY_Cmd";
		FundManageCommand.GET_GAME_MONEY_COMPLETE_CMD="GET_GAME_MONEY_COMPLETE_Cmd";
		FundManageCommand.TOPUP_CMD="TOPUP_Cmd";
		FundManageCommand.TOPUP_COMPLETE_CMD="TOPUP_COMPLETE_Cmd";
		FundManageCommand.GET_SYSTEM_CONFIG_CMD="Get_System_Config_Cmd";
		FundManageCommand.GOT_SYSTEM_CONFIG_CMD="Got_System_Config_Cmd";
		return FundManageCommand;
	})(BaseServerCommand)


	//class modules.hall.c.HallCommand extends publics.c.BaseServerCommand
	var HallCommand=(function(_super){
		function HallCommand(){
			this.hallUIModel=null;
			this.gameUIBuilderBridge=null;
			this.contextMain=null;
			this.resManager=null;
			this.playerInfoModel=null;
			HallCommand.__super.call(this);
		}

		__class(HallCommand,'modules.hall.c.HallCommand',_super);
		var __proto=HallCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "BUILD_HALL_Cmd":
					this.initConfigData();
					this.buildHallComponent();
					break ;
				case "CLOSE_HALL_Cmd":
					this.closeHallComponent();
					break ;
				case "Page_Change_Cmd":
					this.onPageChange(_notificationVo.data);
					break ;
				case "INTO_GAME_Cmd":
					this.onIntoGame(_notificationVo.data)
					break ;
				case "OPEN_POKER_GAME_Cmd":
					this.onOpenPokerGame(_notificationVo.data)
					break ;
				case "OPEN_Panel_Cmd":
					this.onOpenPanel(_notificationVo.data);
					break ;
				case "CLOSE_Panel_Cmd":
					this.onClosePanel(_notificationVo.data);
					break ;
				case "GET_HOTGAMELIST_COMPLETE_Cmd":
					this.onGetHotGameListComplete(_notificationVo.data);
					break ;
				case "OPEN_PANEL_2_Cmd":
					this.onOpenPanel_2(_notificationVo.data);
					break ;
				case "CLOSE_PANEL_2_Cmd":
					this.onClosePanel_2(_notificationVo.data);
					break ;
				case "SHOW_PROMPT_TEXT_Cmd":
					this.onShowPromptText(_notificationVo.data);
					break ;
				case "LOGIN_SUCCESS_Cmd":
					this.onLoginSuccess();
					break ;
				case "Got_Product_Cmd":
					this.gotProduct(_notificationVo.data);
					break ;
				case "HALL_LOGIN_OUT_Cmd":
					this.onHallLoginOut();
					break ;
				case "GET_MY_FAVORITE_Cmd":
					this.onGetMyFavorite(_notificationVo.data);
					break ;
				case "GET_MY_FAVORITE_COMPLETE_Cmd":
					this.onGetMyFavoriteComplete(_notificationVo.data);
					break ;
				case "GET_LOTTERYGAMELIST_COMPLETE_Cmd":
					this.onGetLOTTERYGameListComplete(_notificationVo.data);
					break ;
				case "GET_POKERLIST_COMPLETE_Cmd":
					this.onGetPokerListComplete(_notificationVo.data);
					break ;
				case "GET_GAMES_COMPLETE_Cmd":
					this.onGetGamesComplete(_notificationVo.data);
					break ;
				case "GET_BorakCast_Cmd":
					this.onGetBoardcastRequest();
					break ;
				case "GET_BorakCast_COMPLETE_Cmd":
					this.onGetBoardcastComplete();
					break ;
				case "GET_MC_WIN_LOST_Cmd":
					this.onGetMcWinLost(_notificationVo.data);
					break ;
				case "GET_MC_WIN_LOST_COMPLETE_Cmd":
					this.onGetMcWinLostComplete(_notificationVo.data);
					break ;
				case "GET_POKER_GAME_INFO_COMPLETE_Cmd":
					this.onGetPokerGameInfoComplete(_notificationVo.data);
					break ;
				case "GET_CONFIG1_Cmd":
					this.GetConfig1();
					break ;
				case "GET_CONFIG1_COMPLETE_Cmd":
					this.GetConfig1Complete(_notificationVo.data);
					break ;
				case "GET_PLATFORM_ADDRESS_Cmd":
					this.onGetPlatformAddress(_notificationVo.data);
					break ;
				case "GET_PLATFORM_ADDRESS_COMPLETE_Cmd":
					this.onGetPlatformAddressComplete(_notificationVo.data);
					break ;
				case "GET_PLATFORM_ADDRESS_FAILED_Cmd":
					this.onGetPlatformAddressFialed();
					break ;
				case "SET_VOICE_CMD":
					this.setVoice(_notificationVo.data);
					break ;
				case "Got_Gong_Gao_Cmd":
					this.gotGongGao(_notificationVo.data)
					break ;
				case "Got_Banner_Cmd":{
						this.gotBanner(_notificationVo.data);
						break ;
					}
				case "Open_Gong_Gao_Window_Cmd":
					this.openGongGaoWindow(_notificationVo.data);
					break ;
				case "Open_Qr_Code_Cmd":
					this.openQrCode(_notificationVo.data);
					break ;
				}
		}

		__proto.initConfigData=function(){
			var gameConfig=this.resManager.getRes(GameUtil.Res_Config);
			this.hallUIModel.mineCenterPanelVo.mineCenterGridArr=gameConfig.mineCenterGridArr;
			this.hallUIModel.mineCenterPanelVo.mineCenterArr=gameConfig.mineCenterArr;
			this.hallUIModel.mineCenterPanelVo.groupManageArr=gameConfig.groupManageArr;
			this.hallUIModel.mineCenterPanelVo.groupArr=gameConfig.groupArr;
			this.hallUIModel.mineManagePanelVo.mineManageArr=gameConfig.mineManagerArr;
			this.hallUIModel.mcStatisticalAnalysisVo.mineCenterStatisticalAnalysisArr=gameConfig.mineCenterStatisticalAnalysisArr;
			var iconConfigData=new IconConfigData();
			iconConfigData.decodeIcon1Arr(gameConfig.icon1Arr);
			iconConfigData.decodeIcon2Arr(gameConfig.icon2Arr);
			iconConfigData.decodeIcon3Arr(gameConfig.icon3Arr);
			DataMgr.get().iconConfigData=iconConfigData;
			var questionData=new QuestionData();
			questionData.decode(this.resManager.getRes(GameUtil.Res_Config_Help));
			DataMgr.get().questionData=questionData;
			this.hallUIModel.groupStatisticalAnalysisVo.groupStatisticalAnalysisArr=gameConfig.groupStatisticalAnalysisArr;
			this.hallUIModel.groupStatisticalAnalysisVo.groupUserAnalysisArr=gameConfig.groupUserAnalysisArr;
			var configObj;
			var dataMgr=DataMgr.get();
			var configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_gameTypesConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.gameTypeConfigData=new GameTypeConfigData();
				dataMgr.gameTypeConfigData.decode(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_balanceChangeTypeConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.configFileData.setTypeObj(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_lotteryGameConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.lotteryGameTypeConfigData=new LotteryGameTypeConfigData();
				dataMgr.lotteryGameTypeConfigData.decode(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_bankListConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.bankListConfigData=new BankListConfigData();
				dataMgr.bankListConfigData.decode(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_betPercentTypeConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.betPercentTypeConfigData=new BetPercentTypeConfigData();
				dataMgr.betPercentTypeConfigData.decode(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_numberGamesConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.numberGamesConfigData=new NumberGamesConfigData();
				dataMgr.numberGamesConfigData.decode(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_numberGamePlayConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.numberGamePlayConfigData=new NumberGamePlayConfigData();
				dataMgr.numberGamePlayConfigData.decode(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_numberGameBonunsConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.numberGameBonusConfigData=new NumberGameBonusConfigData();
				dataMgr.numberGameBonusConfigData.decode(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_numberGamesLotteryGameConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.numberGameLotteryGameConfigData=new NumberGameLotteryGameConfigData();
				dataMgr.numberGameLotteryGameConfigData.decode(configObj);
			}
			configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_langConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.langConfigData=new LangConfigData();
				dataMgr.langConfigData.decode(configObj);
			}
			console.log("TT_gameConfig:",dataMgr.lotteryGameTypeConfigData);
		}

		__proto.buildHallComponent=function(){
			console.log("buildHallComponent");
			this.addPackage(GameUtil.Res_Hall_Package);
			this.commandMap.mapAll(MineCenterCommand);
			this.commandMap.mapAll(GroupCommand);
			this.commandMap.mapAll(SystemCenterCommand);
			this.commandMap.mapAll(FundManageCommand);
			this.viewClassMap.map(UpdateWindows,this.hallUIModel.hallVo.updateWindowsVo);
			this.viewClassMap.map(HallPanel,this.hallUIModel.hallVo);
			this.viewClassMap.map(HallComponent);
			this.viewClassMap.map(OtherWebSite,this.hallUIModel.hallVo.otherWebSiteVo);
			this.viewClassMap.map(OtherWebSiteOneType);
			this.viewClassMap.map(HallLotteryComponent);
			this.viewClassMap.map(HallBoardcastComponent,this.hallUIModel.hallVo.boardcastComponentVo);
			this.viewClassMap.map(HallBoardcastTextComponent,this.hallUIModel.hallVo.boardcastComponentVo.textComponentVo);
			this.viewClassMap.map(HallBoardcastWindow,this.hallUIModel.hallVo.boardcastComponentVo.boardcastWindowVo);
			this.viewClassMap.map(HallBoardcastMain,this.hallUIModel.hallVo.boardcastComponentVo.boardcastWindowVo.boardcastMainVo);
			this.viewClassMap.map(HallBottomComponent,this.hallUIModel.hallVo.hallBottomComponentVo);
			this.viewClassMap.map(HallBtnTabComponent);
			this.viewClassMap.map(HallTopComponent);
			this.viewClassMap.map(HallTabComponent);
			this.viewClassMap.map(LoginTabComponent);
			this.viewClassMap.map(LastTimePlayGameComponent);
			this.viewClassMap.map(TabBtnComponent);
			this.viewClassMap.map(CommonTopComponent);
			this.viewClassMap.map(CommonDateSearchComponent);
			this.viewClassMap.map(CommonGridOneComponent);
			this.viewClassMap.map(CommonGrid8Component);
			this.viewClassMap.map(CommonTab1Component);
			this.viewClassMap.map(CommonTypeListPanel);
			this.viewClassMap.map(CommonPageTabComponent);
			this.viewClassMap.map(CommonPageContentComponent);
			this.viewClassMap.map(CommonPageComponent);
			this.viewClassMap.map(CommonPageCountComponent);
			this.viewClassMap.map(CommonPageCountAllComponent);
			this.viewClassMap.map(CommonLst1SearchTabComponent);
			this.viewClassMap.map(CommonLst1TabLstComponent);
			this.viewClassMap.map(CommonLst1Component);
			this.viewClassMap.map(MineTabContent1Component);
			this.viewClassMap.map(MineTabContent2Component);
			this.viewClassMap.map(MinePanel,this.hallUIModel.mineVo);
			this.viewClassMap.map(McStatisticalAnalysisScrollComponent);
			this.viewClassMap.map(McStatisticalAnalysisPanel,this.hallUIModel.mcStatisticalAnalysisVo);
			this.viewClassMap.map(McBonusOverviewScrollComponent);
			this.viewClassMap.map(McBonusOverviewPanel,this.hallUIModel.mcBonusOverviewVo);
			this.viewClassMap.map(McWinLostBottomComponent);
			this.viewClassMap.map(McWinLostPanel,this.hallUIModel.mcWinLostVo);
			this.viewClassMap.map(McAccountChangeDetailScrollComponent);
			this.viewClassMap.map(McAccountChangeDetailPanel,this.hallUIModel.mcAccountChangeDetailVo);
			this.viewClassMap.map(McGameRecordScrollComponent);
			this.viewClassMap.map(McGameRecordPanel,this.hallUIModel.mcGameRecordVo);
			this.viewClassMap.map(McBetRecordPanel);
			this.viewClassMap.map(McBetRecord2Panel,this.hallUIModel.mcBetRecord2Vo);
			this.viewClassMap.map(McBetRecordDetailPanel);
			this.viewClassMap.map(GroupPanel);
			this.viewClassMap.map(GroupStatisticalAnalysisScrollComponent);
			this.viewClassMap.map(GroupStatisticalAnalysisPanel,this.hallUIModel.groupStatisticalAnalysisVo);
			this.viewClassMap.map(GroupWinLostScrollComponent);
			this.viewClassMap.map(GroupWinLostPanel,this.hallUIModel.groupWinLostVo);
			this.viewClassMap.map(GroupAccountChangeDetailScrollComponent);
			this.viewClassMap.map(GroupAccountChangeDetailPanel,this.hallUIModel.groupAccountChangeDetailVo);
			this.viewClassMap.map(GroupGameRecordScrollComponent);
			this.viewClassMap.map(GroupGameRecordPanel,this.hallUIModel.groupGameRecordVo);
			this.viewClassMap.map(GroupBetRecordPanel);
			this.viewClassMap.map(GroupBetRecord2Panel,this.hallUIModel.groupBetRecord2Vo);
			this.viewClassMap.map(GroupIncomePanel);
			this.viewClassMap.map(GroupVipManagePanel,this.hallUIModel.groupVipManagerPanelVo);
			this.viewClassMap.map(GroupAccountTransferMoneyPanel,this.hallUIModel.groupAccountTransferMoneyPanelVo);
			this.viewClassMap.map(GroupVipDetailPanel,this.hallUIModel.groupVipDetailPanelVo);
			this.viewClassMap.map(GroupNewAccountManagePanel,this.hallUIModel.groupNewAccountManagePanelVo);
			this.viewClassMap.map(FmTopUpMoneyPanel,this.hallUIModel.fmTopUpMoneyVo);
			this.viewClassMap.map(FmQrCode,this.hallUIModel.qrCodeVo);
			this.viewClassMap.map(FmTopUpMoneyInfoComponent);
			this.viewClassMap.map(FmTopUpMoneyRechargeModeComponent);
			this.viewClassMap.map(FmTopUpMoneyRechargeModeAComponent);
			this.viewClassMap.map(FmTopUpMoneyRechargeModeBComponent);
			this.viewClassMap.map(FmTopUpMoneyRechargeModeCComponent,this.hallUIModel.fmTopUpMoneyRechargeModeCComponentVo);
			this.viewClassMap.map(FmTopUpMoneyRechargeModeDComponent,this.hallUIModel.fmTopUpMoneyRechargeModeDComponentVo);
			this.viewClassMap.map(FmTopUpMoneyRechargeModeEComponent,this.hallUIModel.fmTopUpMoneyRechargeModeEComponentVo);
			this.viewClassMap.map(FmTransferAccountsPanel,this.hallUIModel.fmTransferAccountsPanelVo);
			this.viewClassMap.map(FmTransferAccountsInfoComponent);
			this.viewClassMap.map(FmValidPwdPanel,this.hallUIModel.fmValidPwdPanelVo);
			this.viewClassMap.map(FmDrawMoneyCenterPanel,this.hallUIModel.fmDrawMoneyCenterPanelVo);
			this.viewClassMap.map(FmQuestionCenterPanel);
			this.viewClassMap.map(FmQuestionDetailPanel);
			this.viewClassMap.map(FmQuestionImageComponent);
			this.viewClassMap.map(FmQuestionTitleComponent);
			this.viewClassMap.map(FmQuestionTitle2Component);
			this.viewClassMap.map(FmQuestionTextComponent);
			this.viewClassMap.map(FmTopUpMoneyRecordPanel,this.hallUIModel.fmTopUpMoneyRecordPanelVo);
			this.viewClassMap.map(FmTopUpRecordPanel,this.hallUIModel.fmTopUpRecordPanelVo);
			this.viewClassMap.map(SysModifyPasswordPanel,this.hallUIModel.settingModifyPasswordPanelVo);
			this.viewClassMap.map(SysBindingBankCardPanel,this.hallUIModel.sysBindingBankCardPanelVo);
			this.viewClassMap.map(SysMyBankCardPanel,this.hallUIModel.sysMyBankCardPanelVo);
			this.viewClassMap.map(SysSetBankPwdPanel,this.hallUIModel.settingModifyPasswordPanelVo2);
			this.viewClassMap.map(SysInputBankPwdPanel);
			this.viewClassMap.map(SysSetFavoritePanel,this.hallUIModel.sysSetFavoritePanelVo);
			this.viewClassMap.map(SysSetFavoritePanelGame,this.hallUIModel.sysSetFavoritePanelVo.sysSetFavoritePanelGameListVo);
			this.viewClassMap.map(SysInboxPanel);
			this.viewClassMap.map(SysSetPanel,this.hallUIModel.sysSetPanelVo);
			this.viewClassMap.map(SysSetAccountPanel,this.hallUIModel.sysSetAccountPanelVo);
			this.viewClassMap.map(SysSetAccountMorePanel);
			this.viewClassMap.map(SysSetAccountComponent);
			this.viewClassMap.map(SysSetSafePanel);
			this.viewClassMap.map(SysSetVoicePanel,this.hallUIModel.sysSetVoicePanelVo);
			this.viewClassMap.map(SysAboutPanel);
			this.viewClassMap.map(ZoomPickerComponent);
			this.viewClassMap.map(ZoomPickerPanel);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"HallFavoriteListItem"),HallFavoriteListItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"OtherWebsiteOneItem_1"),OtherWebsiteOneItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"OtherWebsiteOneItem_2"),OtherWebsiteOneItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"OtherWebsiteOneItem_3"),OtherWebsiteOneItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"OtherWebsiteOneItem_4"),OtherWebsiteOneItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"OtherWebsiteOneItem_5"),OtherWebsiteOneItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"OtherWebsiteOneItem_6"),OtherWebsiteOneItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"OtherWebsiteOneItem_7"),OtherWebsiteOneItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"HallLotteryListItem"),HallLotteryListItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"HallGameListItem"),HallGameListItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonGrid2Component"),CommonGrid2Component);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonGrid3Component"),CommonGrid3Component);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonGrid4Component"),CommonGrid4Component);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonGrid41Component"),CommonGrid41Component);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonGrid6Component"),CommonGrid6Component);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonGrid7Component"),CommonGrid7Component);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonLst1TabLstItem"),CommonLst1TabLstItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"Grid01Button"),Grid01Button);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"Grid02Button"),Grid02Button);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"Grid03Button"),Grid03Button);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"Grid04Button"),Grid04Button);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"Grid05Button"),Grid05Button);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"MineManageListItem"),MineManageListItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"MineCenterListItem"),MineCenterListItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"McBonusOverviewItem"),McBonusOverviewItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"McChooseGameTypeItem"),McChooseGameTypeItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"McWinLostItem"),McWinLostItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"McAccountChangeItem"),McAccountChangeItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"McBetRecordItem"),McBetRecordItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonGridOneItem"),CommonGridOneItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"CommonPageItem"),CommonPageItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"FmQuestionItem"),FmQuestionItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"FmQuestionItem1"),FmQuestionItem1);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"FmQuestionItem2"),FmQuestionItem2);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"FmTopUpMoneyRechargePipeItem"),FmTopUpMoneyRechargePipeItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"FmTopUpMoneyRechargeModeAItem"),FmTopUpMoneyRechargeModeAItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"FmTopUpRecordItem"),FmTopUpRecordItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"FmTransferRecordItem"),FmTransferRecordItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"FmWithdrawRecordItem"),FmWithdrawRecordItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"ZoomPickerItem"),ZoomPickerItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"PromptTextItme"),PromptTextItme);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"SysMyBankCardItem"),SysMyBankCardItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"SysSetFavoriteItem"),SysSetFavoriteItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"SysSetFavoritePannelGameTypeList"),SysSetFavoritePannelGameTypeList);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"SysInboxItem"),SysInboxItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"GroupNewAccountItem"),GroupNewAccountItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"GroupVipItem"),GroupVipItem);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL(GameUtil.Res_Hall_Package,"GroupVipDetailItem"),GroupVipDetailItem);
			this.gameUIBuilderBridge.openPage(GameUtil.Res_Hall_Package,HallPanel);
			var gongGaoUrl=GameUtil.getGongGao();
			var data=new Object();
			data["start"]=0;
			data["limit"]=10;
			this.sendHttpRequest(gongGaoUrl,"Got_Gong_Gao_Cmd","","json",data);
			if(LocalStorage.getItem("Relogin")=="1"){
				LocalStorage.setItem("Relogin","0");
				this.sendNotification("Open_Login_Window_Cmd");
			}
			loadOtherJs();
			this.hallUIModel.hallVo.otherWebSiteVo.status="Update_Other_Website_Status";
			if(this.resManager.displayUpdateInfoBol){
				this.resManager.displayUpdateInfoBol=false;
				this.hallUIModel.hallVo.updateWindowsVo.info=this.resManager.updateInfo;
				this.gameUIBuilderBridge.openWindow(GameUtil.Res_Hall_Package,UpdateWindows);
			}
		}

		__proto.closeHallComponent=function(){
			console.log("closeHallComponent");
			this.commandMap.offAll(MineCenterCommand);
			this.commandMap.offAll(GroupCommand);
			this.commandMap.offAll(SystemCenterCommand);
			this.commandMap.offAll(FundManageCommand);
			this.viewClassMap.off(UpdateWindows);
			this.viewClassMap.off(HallPanel);
			this.viewClassMap.off(HallComponent);
			this.viewClassMap.off(OtherWebSite);
			this.viewClassMap.off(OtherWebSiteOneType);
			this.viewClassMap.off(HallLotteryComponent);
			this.viewClassMap.off(HallBoardcastComponent);
			this.viewClassMap.off(HallBoardcastTextComponent);
			this.viewClassMap.off(HallBoardcastWindow);
			this.viewClassMap.off(HallBoardcastMain);
			this.viewClassMap.off(HallBottomComponent);
			this.viewClassMap.off(HallBtnTabComponent);
			this.viewClassMap.off(HallTopComponent);
			this.viewClassMap.off(HallTabComponent);
			this.viewClassMap.off(LoginTabComponent);
			this.viewClassMap.off(LastTimePlayGameComponent);
			this.viewClassMap.off(TabBtnComponent);
			this.viewClassMap.off(CommonTopComponent);
			this.viewClassMap.off(CommonDateSearchComponent);
			this.viewClassMap.off(CommonGridOneComponent);
			this.viewClassMap.off(CommonGrid8Component);
			this.viewClassMap.off(CommonTab1Component);
			this.viewClassMap.off(CommonTypeListPanel);
			this.viewClassMap.off(CommonPageTabComponent);
			this.viewClassMap.off(CommonPageContentComponent);
			this.viewClassMap.off(CommonPageComponent);
			this.viewClassMap.off(CommonPageCountComponent);
			this.viewClassMap.off(CommonPageCountAllComponent);
			this.viewClassMap.off(CommonLst1SearchTabComponent);
			this.viewClassMap.off(CommonLst1TabLstComponent);
			this.viewClassMap.off(CommonLst1Component);
			this.viewClassMap.off(MineTabContent1Component);
			this.viewClassMap.off(MineTabContent2Component);
			this.viewClassMap.off(MinePanel);
			this.viewClassMap.off(McStatisticalAnalysisScrollComponent);
			this.viewClassMap.off(McStatisticalAnalysisPanel);
			this.viewClassMap.off(McBonusOverviewScrollComponent);
			this.viewClassMap.off(McBonusOverviewPanel);
			this.viewClassMap.off(McWinLostBottomComponent);
			this.viewClassMap.off(McWinLostPanel);
			this.viewClassMap.off(McAccountChangeDetailScrollComponent);
			this.viewClassMap.off(McAccountChangeDetailPanel);
			this.viewClassMap.off(McGameRecordScrollComponent);
			this.viewClassMap.off(McGameRecordPanel);
			this.viewClassMap.off(McBetRecordPanel);
			this.viewClassMap.off(McBetRecord2Panel);
			this.viewClassMap.off(McBetRecordDetailPanel);
			this.viewClassMap.off(GroupPanel);
			this.viewClassMap.off(GroupStatisticalAnalysisScrollComponent);
			this.viewClassMap.off(GroupStatisticalAnalysisPanel);
			this.viewClassMap.off(GroupWinLostScrollComponent);
			this.viewClassMap.off(GroupWinLostPanel);
			this.viewClassMap.off(GroupAccountChangeDetailScrollComponent);
			this.viewClassMap.off(GroupAccountChangeDetailPanel);
			this.viewClassMap.off(GroupGameRecordScrollComponent);
			this.viewClassMap.off(GroupGameRecordPanel);
			this.viewClassMap.off(GroupBetRecordPanel);
			this.viewClassMap.off(GroupBetRecord2Panel);
			this.viewClassMap.off(GroupIncomePanel);
			this.viewClassMap.off(GroupVipManagePanel);
			this.viewClassMap.off(GroupAccountTransferMoneyPanel);
			this.viewClassMap.off(GroupVipDetailPanel);
			this.viewClassMap.off(GroupNewAccountManagePanel);
			this.viewClassMap.off(FmTopUpMoneyPanel);
			this.viewClassMap.off(FmQrCode);
			this.viewClassMap.off(FmTopUpMoneyInfoComponent);
			this.viewClassMap.off(FmTopUpMoneyRechargeModeComponent);
			this.viewClassMap.off(FmTopUpMoneyRechargeModeEComponent);
			this.viewClassMap.off(FmTopUpMoneyRechargeModeDComponent);
			this.viewClassMap.off(FmTopUpMoneyRechargeModeBComponent);
			this.viewClassMap.off(FmTopUpMoneyRechargeModeCComponent);
			this.viewClassMap.off(FmTopUpMoneyRechargeModeAComponent);
			this.viewClassMap.off(FmTransferAccountsPanel);
			this.viewClassMap.off(FmTransferAccountsInfoComponent);
			this.viewClassMap.off(FmValidPwdPanel);
			this.viewClassMap.off(FmDrawMoneyCenterPanel);
			this.viewClassMap.off(FmQuestionCenterPanel);
			this.viewClassMap.off(FmQuestionDetailPanel);
			this.viewClassMap.off(FmQuestionImageComponent);
			this.viewClassMap.off(FmQuestionTitleComponent);
			this.viewClassMap.off(FmQuestionTitle2Component);
			this.viewClassMap.off(FmQuestionTextComponent);
			this.viewClassMap.off(FmTopUpMoneyRecordPanel);
			this.viewClassMap.off(FmTopUpRecordPanel);
			this.viewClassMap.off(SysModifyPasswordPanel);
			this.viewClassMap.off(SysBindingBankCardPanel);
			this.viewClassMap.off(SysMyBankCardPanel);
			this.viewClassMap.off(SysSetBankPwdPanel);
			this.viewClassMap.off(SysInputBankPwdPanel);
			this.viewClassMap.off(SysSetFavoritePanel);
			this.viewClassMap.off(SysSetFavoritePanelGame);
			this.viewClassMap.off(SysInboxPanel);
			this.viewClassMap.off(SysSetPanel);
			this.viewClassMap.off(SysSetAccountPanel);
			this.viewClassMap.off(SysSetAccountMorePanel);
			this.viewClassMap.off(SysSetAccountComponent);
			this.viewClassMap.off(SysSetSafePanel);
			this.viewClassMap.off(SysSetVoicePanel);
			this.viewClassMap.off(SysAboutPanel);
			this.viewClassMap.off(ZoomPickerComponent);
			this.viewClassMap.off(ZoomPickerPanel);
			this.hallUIModel.hallVo.status="Remove_Status";
			this.removePackage(GameUtil.Res_Hall_Package);
		}

		__proto.onPageChange=function(pageIndex){
			if(this.hallUIModel.hallVo.curPage==pageIndex)return;
			if(pageIndex !=GameUtil.Page_Hot && pageIndex !=GameUtil.Page_Lottery && pageIndex !=GameUtil.Page_Poker && pageIndex !=GameUtil.Page_Games)return;
			this.hallUIModel.hallVo.curPage=pageIndex;
			var url;
			switch(pageIndex){
				case GameUtil.Page_Hot:
					if(this.hallUIModel.hallVo.hotGameListData==null){
						this.sendNotification("SHOW_Cmd");
						url=GameUtil.getHallHotGameList();
						console.log("sendRequest:",url);
						this.sendHttpRequest(url,"GET_HOTGAMELIST_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
						}else{
						this.hallUIModel.hallVo.updatePage=GameUtil.Page_Hot;
						this.hallUIModel.hallVo.status=HallVo.Update_List;
					}
					break ;
				case GameUtil.Page_Lottery:
					if(this.hallUIModel.hallVo.lotteryGameListData==null){
						this.sendNotification("SHOW_Cmd");
						url=GameUtil.getLotteryGameList();
						console.log("sendRequest:",url);
						this.sendHttpRequest(url,"GET_LOTTERYGAMELIST_COMPLETE_Cmd","","json",null,true);
						}else{
						this.hallUIModel.hallVo.updatePage=GameUtil.Page_Lottery;
						this.hallUIModel.hallVo.status=HallVo.Update_List;
					}
					break ;
				case GameUtil.Page_Poker:
					if(this.hallUIModel.hallVo.pokerGameListData==null){
						this.sendNotification("SHOW_Cmd");
						url=GameUtil.getPokerGameList();
						console.log("sendRequest:",url);
						this.sendHttpRequest(url,"GET_POKERLIST_COMPLETE_Cmd","","json",null,true);
						}else{
						this.hallUIModel.hallVo.updatePage=GameUtil.Page_Poker;
						this.hallUIModel.hallVo.status=HallVo.Update_List;
					}
					break ;
				case GameUtil.Page_Games:
					if(this.hallUIModel.hallVo.pokerGameListData==null){
						this.sendNotification("SHOW_Cmd");
						url=GameUtil.getPokerGameList();
						console.log("sendRequest:",url);
						this.sendHttpRequest(url,"GET_GAMES_COMPLETE_Cmd","","json",null,true);
						}else{
						this.hallUIModel.hallVo.updatePage=GameUtil.Page_Games;
						this.hallUIModel.hallVo.status=HallVo.Update_List;
					}
					break ;
				}
		}

		__proto.onIntoGame=function(gameId){
			this.hallUIModel.gameId=parseInt(gameId);
			this.onClosePanel_2(GameUtil.PANEL_HALL);
			this.sendNotification("Open_Game_Cmd",PlayerInfoModel.Panel_Lottery);
		}

		__proto.onOpenPokerGame=function(api){
			var url=GameUtil.getPokerGameUrl(api);
			console.log("onOpenPokerGame:",url);
			this.sendHttpRequest(url,"GET_POKER_GAME_INFO_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*打开某个面板
		*/
		__proto.onOpenPanel=function(panelData){
			this.sendNotification("Remove_Form_Cmd");
			console.log("onOpenPanel panelName:",panelData.openPanelName," lastPanelName:",panelData.closePanelName);
			if(panelData.closePanelName !="")
				this.hallUIModel.lastHidePanels.push(panelData.closePanelName);
			this.gameUIBuilderBridge.showPage3(panelData);
			this.executeOpenPanel(panelData.openPanelName);
		}

		/**
		*关闭某个面板
		*/
		__proto.onClosePanel=function(panelData){
			this.sendNotification("Remove_Form_Cmd");
			var lastPanelName=this.hallUIModel.lastHidePanels.pop();
			if(!lastPanelName)
				return;
			panelData.openPanelName=lastPanelName;
			console.log("onOpenPanel panelName:",panelData.openPanelName," lastPanelName:",lastPanelName);
			this.gameUIBuilderBridge.hidePage3(panelData);
		}

		__proto.onOpenPanel_2=function(panelName){
			this.gameUIBuilderBridge.showPage(panelName);
		}

		__proto.onClosePanel_2=function(panelName){
			this.gameUIBuilderBridge.hidePage(panelName);
		}

		__proto.onShowPromptText=function(text){
			this.gameUIBuilderBridge.showPromptText(text);
		}

		__proto.onLoginSuccess=function(){
			DataMgr.get().initRecentGameList();
			this.hallUIModel.hallVo.status=HallVo.LOGIN_SUCCESS;
			this.sendNotification("GET_LOTTERY_LIST_Cmd");
			var url=GameUtil.GG_DOMAIN+"/PRODUCT";
			this.sendHttpRequest(url,"Got_Product_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.gotProduct=function(_data){
			var dataMgr=DataMgr.get();
			dataMgr.gameTypeConfigData.decode2(_data);
			this.hallUIModel.hallVo.otherWebSiteVo.status="Update_Other_Website_Status";
			this.hallUIModel.hallVo.status=HallVo.UPDATE_OTHER_GAME_STATUS;
			this.sendNotification("Get_System_Config_Cmd");
		}

		__proto.onHallLoginOut=function(){
			this.playerInfoModel.playerInfoVo.id="";
			DataMgr.get().playerInfoData=null;
			DataMgr.get().userInfoData=null;
			DataMgr.get().bonesRangData=null;
			DataMgr.get().userBalanceData=null;
			DataMgr.get().userBankAccountData=null;
			DataMgr.get().myFavorites=["14","60","4","6","1","12","21","91"];
			DataMgr.get().favoriteLotteryData=null;
			this.sendNotification("REMOVE_EVENTS_Cmd");
			this.hallUIModel.hallVo.status=HallVo.LOGIN_SUCCESS;
		}

		__proto.executeOpenPanel=function(panelName){
			switch(panelName){
				case GameUtil.PANEL_MC_BONUS_OVERVIEW:
					this.sendNotification("GET_MC_BONUS_OVERVIEW_CONFIG_Cmd");
					break ;
				case GameUtil.PANEL_MC_WIN_LOST:
					this.hallUIModel.mcWinLostVo.account=this.playerInfoModel.playerInfoVo.user_account;
					this.hallUIModel.mcWinLostVo.account_loader=this.playerInfoModel.playerInfoVo.user_percent+"";
					break ;
				case GameUtil.PANEL_MC_STATISTICAL_ANALYSIS:
					this.sendNotification("GET_Mc_STATISTICAL_ANALYSISR_Cmd");
					break ;
				case GameUtil.PANEL_MC_ACCOUNTCHANGE_DETAIL:
					this.sendNotification("GET_Mc_ACCOUNT_CHANGE_TYPE_CONFIG_Cmd");
					break ;
				case GameUtil.PANEL_MC_GAME_RECORD:
					this.sendNotification("GET_Mc_GAME_RECORD_CONFIG_Cmd");
					break ;
				case GameUtil.PANEL_GROUP_GAME_RECORD:
					this.sendNotification("GET_GROUP_GAME_RECORD_CONFIG_Cmd");
					break ;
				case GameUtil.PANEL_FM_DRAW_MONEY_CENTER:
					this.sendNotification("GET_GAME_MONEY_Cmd",GameUtil.PANEL_FM_DRAW_MONEY_CENTER);
					this.delayRun("GET_MY_BANK_CARD_Cmd",1000,GameUtil.PANEL_FM_DRAW_MONEY_CENTER);
					break ;
				}
		}

		/**
		*"我的喜爱"列表
		*/
		__proto.onGetMyFavorite=function(data){
			var url=GameUtil.getMyFavoriteUrl(String(this.playerInfoModel.playerInfoVo.id));
			console.log("onGetMyFavorite url:",url);
			this.sendHttpRequest(url,"GET_MY_FAVORITE_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetMyFavoriteComplete=function(data){
			console.log("onGetMyFavoriteComplete data:",data);
			this.sendNotification("HIDE_Cmd");
			DataMgr.get().myFavorites=data.info;
			this.hallUIModel.hallVo.status=HallVo.Update_MyFavorite;
			if(this.playerInfoModel.playerInfoVo.id > 0){
				this.sendNotification("GET_USER_INFO_2_Cmd");
			}
		}

		__proto.onGetHotGameListComplete=function(data){
			console.log("onGetHotGameListComplete data:",data);
			this.sendNotification("HIDE_Cmd");this.hallUIModel.hallVo.hotGameListData=this.hallUIModel.hallVo.hotGameListData|| new HotGameListData();
			this.hallUIModel.hallVo.hotGameListData.decode(data);
			if(this.hallUIModel.hallVo.hotGameListData.status_code==1){
				this.hallUIModel.hallVo.updatePage=GameUtil.Page_Hot;
				this.hallUIModel.hallVo.status=HallVo.Update_List;
			}
		}

		__proto.onGetLOTTERYGameListComplete=function(data){
			console.log("onGetLOTTERYGameListComplete data:",data);
			this.sendNotification("HIDE_Cmd");this.hallUIModel.hallVo.lotteryGameListData=this.hallUIModel.hallVo.lotteryGameListData|| new LotteryGameListData();
			this.hallUIModel.hallVo.lotteryGameListData.decode(data);
			if(this.hallUIModel.hallVo.lotteryGameListData.status_code==1){
				this.hallUIModel.hallVo.updatePage=GameUtil.Page_Lottery;
				this.hallUIModel.hallVo.status=HallVo.Update_List;
			}
		}

		__proto.onGetPokerListComplete=function(data){
			console.log("onGetPokerListComplete data:",data);
			this.sendNotification("HIDE_Cmd");this.hallUIModel.hallVo.pokerGameListData=this.hallUIModel.hallVo.pokerGameListData|| new PokerGameListData();
			this.hallUIModel.hallVo.pokerGameListData.decode(data);
			if(this.hallUIModel.hallVo.pokerGameListData.status==0){
				this.hallUIModel.hallVo.updatePage=GameUtil.Page_Poker;
				this.hallUIModel.hallVo.status=HallVo.Update_List;
			}
		}

		__proto.onGetPokerListError=function(data){}
		__proto.onGetGamesComplete=function(data){
			console.log("onGetPokerListComplete data:",data);
			this.sendNotification("HIDE_Cmd");this.hallUIModel.hallVo.pokerGameListData=this.hallUIModel.hallVo.pokerGameListData|| new PokerGameListData();
			this.hallUIModel.hallVo.pokerGameListData.decode(data);
			if(this.hallUIModel.hallVo.pokerGameListData.status==0){
				this.hallUIModel.hallVo.updatePage=GameUtil.Page_Games;
				this.hallUIModel.hallVo.status=HallVo.Update_List;
			}
		}

		__proto.onGetGamesError=function(data){}
		/**
		*请求广播
		*/
		__proto.onGetBoardcastRequest=function(){
			var url=GameUtil.getBoardCastUrl();
			this.sendHttpRequest(url,"GET_BorakCast_COMPLETE_Cmd","GET_BorakCast_ERROR_Cmd","json",null,true,GameUtil.headers);
		}

		/**
		*请求广播 成功返回
		*/
		__proto.onGetBoardcastComplete=function(){}
		/**
		*请求个人奖励总览
		*/
		__proto.onGetMcWinLost=function(dateArr){
			this.sendNotification("SHOW_Cmd");
			var url=GameUtil.getMcWinLostUrl(dateArr[0],dateArr[1]);
			this.sendHttpRequest(url,"GET_MC_WIN_LOST_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*请求个人奖励总览 返回
		*/
		__proto.onGetMcWinLostComplete=function(data){
			console.log("onGetMcWinLostComplete data:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.mcWinLostVo.mineWinLostData=new MineWinLostData();
			this.hallUIModel.mcWinLostVo.mineWinLostData.decode(data);
			this.hallUIModel.mcWinLostVo.status=McWinLostVo.UPDATE_INFO;
		}

		__proto.onGetPokerGameInfoComplete=function(data){
			console.log("onGetPokerGameInfoComplete data:",data);
			if(data.status_code==1){
				var url=data.info.url;
				this.hallUIModel.hallVo.gameUrl=url;
				this.hallUIModel.hallVo.status=HallVo.OPEN_POKERGAME;
			}
		}

		__proto.GetConfig1=function(){
			var url=GameUtil.getLotteryGameList();
			if(GameUtil.requestingDic.get(url)!=null)return;
			GameUtil.requestingDic.set(url,true);
			console.log("sendRequest:",url);
			this.sendHttpRequest(url,"GET_CONFIG1_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.GetConfig1Complete=function(data){
			console.log("GetConfig1Complete data:",data);
			var url=data["__url__"];
			GameUtil.requestingDic.remove(url);
			var lotteryGameListData=new LotteryGameListData();
			lotteryGameListData.decode(data);
			DataMgr.get().lotteryGameListData=lotteryGameListData;
		}

		/**获取平台地址 */
		__proto.onGetPlatformAddress=function(pName){
			this.showLoading();
			var platformName=pName;
			this.hallUIModel.hallVo.otherGameName=pName;
			var url=GameUtil.getPlatformUrl(platformName);
			console.log("onGetPlatformAddress:",url);
			this.sendHttpRequest(url,"GET_PLATFORM_ADDRESS_COMPLETE_Cmd","GET_PLATFORM_ADDRESS_FAILED_Cmd","json",null,true,GameUtil.headers);
		}

		__proto.onGetPlatformAddressComplete=function(data){
			console.log("onGetPlatformAddressComplete data:",data);
			if(data.status_code==1){
				var url=data.info.url;
				this.hallUIModel.hallVo.gameUrl=url;
				this.hallUIModel.hallVo.status=HallVo.OPEN_POKERGAME;
			}
		}

		__proto.onGetPlatformAddressFialed=function(){
			this.hideLoading();
			this.showAlert("获取数据失败。");
		}

		__proto.setVoice=function(_closeVice){
			if(String(_closeVice)=="null")
				_closeVice="0";
			this.playerInfoModel.localInfo.closeVoice=_closeVice;
			if(this.playerInfoModel.localInfo.closeVoice=="1"){
				GRoot.inst.volumeScale=0;
			}
			else{
				GRoot.inst.volumeScale=1;
			}
			this.hallUIModel.sysSetVoicePanelVo.closeVoice=_closeVice;
		}

		/**
		*获取到公告,解析并且更新
		*@param _gongGao
		*
		*/
		__proto.gotGongGao=function(_gongGao){
			var infoArr=_gongGao.data;
			for(var i=0;i < infoArr.length;i++){
				if(infoArr[i]["is_active"]==1){
					var boardCastTxtVo=new BoardcastTextVo();
					boardCastTxtVo.id=infoArr[i]["id"];
					boardCastTxtVo.news_title=infoArr[i]["news_title"];
					boardCastTxtVo.news_info=infoArr[i]["news_info"];
					boardCastTxtVo.time=infoArr[i]["last_edit"];
					this.hallUIModel.hallVo.boardcastComponentVo.textComponentVo.boardcastTextVoArr.push(boardCastTxtVo);
					this.hallUIModel.hallVo.boardcastComponentVo.boardcastWindowVo.boardcastMainVo.boardcastTextVoArr.push(boardCastTxtVo);
				}
			}
			if(this.hallUIModel.hallVo.boardcastComponentVo.textComponentVo.boardcastTextVoArr.length > 0){
				this.hallUIModel.hallVo.boardcastComponentVo.textComponentVo.status="UPDATE_TEXT_STATUS";
			}
			this.getBanner();
		}

		/**
		*获取banner信息
		*
		*/
		__proto.getBanner=function(){
			var url=this.resManager.serverUrl+"/BANNER/";
			this.sendHttpRequest(url,"Got_Banner_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*获取到广告信息
		*@param _data
		*
		*/
		__proto.gotBanner=function(_data){
			var bannerInfoArr=_data["data"];
			if(!bannerInfoArr)
				bannerInfoArr=[];
			for(var i=0;i < bannerInfoArr.length;i++){
				this.hallUIModel.hallVo.bannerUrlArr.push(bannerInfoArr[i]["img_url_mobile"]);
			}
			this.hallUIModel.hallVo.status=HallVo.GOT_BANNER;
			if(UITypeConfig.UI_TYPE=="wns")
				this.sendNotification("Get_System_Config_Cmd");
		}

		/**
		*打开公告窗口
		*
		*/
		__proto.openGongGaoWindow=function(_gongGaoIndex){
			this.hallUIModel.hallVo.boardcastComponentVo.boardcastWindowVo.boardcastMainVo.currentIndex=_gongGaoIndex;
			this.gameUIBuilderBridge.openWindow(GameUtil.Res_Hall_Package,HallBoardcastWindow);
		}

		/**
		*打开扫码支付
		*@param _base64
		*
		*/
		__proto.openQrCode=function(_base64){
			this.hallUIModel.qrCodeVo.base64=_base64;
			this.gameUIBuilderBridge.openWindow(GameUtil.Res_Hall_Package,FmQrCode);
		}

		HallCommand.CLOSE_HALL_CMD="CLOSE_HALL_Cmd";
		HallCommand.BUILD_HALL_CMD="BUILD_HALL_Cmd";
		HallCommand.Page_Change_CMD="Page_Change_Cmd";
		HallCommand.INTO_GAME_CMD="INTO_GAME_Cmd";
		HallCommand.OPEN_POKER_GAME_CMD="OPEN_POKER_GAME_Cmd";
		HallCommand.OPEN_PANEL_CMD="OPEN_Panel_Cmd";
		HallCommand.CLOSE_PANEL_CMD="CLOSE_Panel_Cmd";
		HallCommand.OPEN_PANEL_2_CMD="OPEN_PANEL_2_Cmd";
		HallCommand.CLOSE_PANEL_2_CMD="CLOSE_PANEL_2_Cmd";
		HallCommand.SHOW_PROMPT_TEXT_CMD="SHOW_PROMPT_TEXT_Cmd";
		HallCommand.LOGIN_SUCCESS_CMD="LOGIN_SUCCESS_Cmd";
		HallCommand.HALL_LOGIN_OUT_CMD="HALL_LOGIN_OUT_Cmd";
		HallCommand.OPEN_QR_CODE_CMD="Open_Qr_Code_Cmd";
		HallCommand.GET_MY_FAVORITE_CMD="GET_MY_FAVORITE_Cmd";
		HallCommand.GET_MY_FAVORITE_COMPLETE_CMD="GET_MY_FAVORITE_COMPLETE_Cmd";
		HallCommand.GET_HOTGAMELIST_COMPLETE_CMD="GET_HOTGAMELIST_COMPLETE_Cmd";
		HallCommand.GET_LOTTERYGAMELIST_COMPLETE_CMD="GET_LOTTERYGAMELIST_COMPLETE_Cmd";
		HallCommand.GET_POKERLIST_COMPLETE_CMD="GET_POKERLIST_COMPLETE_Cmd";
		HallCommand.GET_GAMES_COMPLETE_CMD="GET_GAMES_COMPLETE_Cmd";
		HallCommand.GET_BORAKCAST_CMD="GET_BorakCast_Cmd";
		HallCommand.GET_BORAKCAST_COMPLETE_CMD="GET_BorakCast_COMPLETE_Cmd";
		HallCommand.GET_BORAKCAST_ERROR_CMD="GET_BorakCast_ERROR_Cmd";
		HallCommand.GET_MC_WIN_LOST_CMD="GET_MC_WIN_LOST_Cmd";
		HallCommand.GET_MC_WIN_LOST_COMPLETE_CMD="GET_MC_WIN_LOST_COMPLETE_Cmd";
		HallCommand.GET_POKER_GAME_INFO_COMPLETE_CMD="GET_POKER_GAME_INFO_COMPLETE_Cmd";
		HallCommand.GET_CONFIG1_CMD="GET_CONFIG1_Cmd";
		HallCommand.GET_CONFIG1_COMPLETE_CMD="GET_CONFIG1_COMPLETE_Cmd";
		HallCommand.GET_PLATFORM_ADDRESS_CMD="GET_PLATFORM_ADDRESS_Cmd";
		HallCommand.GET_PLATFORM_ADDRESS_COMPLETE_CMD="GET_PLATFORM_ADDRESS_COMPLETE_Cmd";
		HallCommand.GET_PLATFORM_ADDRESS_FAILED_CMD="GET_PLATFORM_ADDRESS_FAILED_Cmd";
		HallCommand.SET_VOICE_CMD="SET_VOICE_CMD";
		HallCommand.GOT_GONG_GAO_CMD="Got_Gong_Gao_Cmd";
		HallCommand.OPEN_GONG_GAO_WINDOW_CMD="Open_Gong_Gao_Window_Cmd";
		HallCommand.GOT_BANNER_CMD="Got_Banner_Cmd";
		HallCommand.GOT_PRODUCT_CMD="Got_Product_Cmd";
		return HallCommand;
	})(BaseServerCommand)


	//class modules.hall.c.HallEventCommand extends publics.c.BaseServerCommand
	var HallEventCommand=(function(_super){
		function HallEventCommand(){
			this.playerInfoModel=null;
			this.eventsUIModel=null;
			this.hallUIModel=null;
			this.gameUIBuilderBridge=null;
			this.resManager=null;
			HallEventCommand.__super.call(this);
		}

		__class(HallEventCommand,'modules.hall.c.HallEventCommand',_super);
		var __proto=HallEventCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Init_Hall_Event_Cmd":{
						this.initHallEvent();
						break ;
					}
				case "Got_Hall_Event_Info_Cmd":{
						this.gotHallEventInfo(_notificationVo.data);
						break ;
					}
				case "Got_Sign_Event_Info_Cmd":{
						this.gotSignEventInfo(_notificationVo.data);
						break ;
					}
				case "Open_Sign_Up_Event_Cmd":{
						var eventId=_notificationVo.data[0];
						if(eventId==20){
							this.eventsUIModel.newPlayerEventsVo.ctrl=1;
							this.sendNotification("Check_New_Players_Event_Cmd");
						}
						else if(eventId==21){
							this.openSignUpEvent();
						}
						else if(eventId==999){
							this.sendNotification("Open_Daily_Event_Cmd");
						}
						else{
							this.hallUIModel.hallEventVo.chooseId=eventId;
							this.openBigBanner(_notificationVo.data[1]);
						}
						break ;
					}
				case "Claim_Sign_Event_Reward_Cmd":{
						this.claimSignEventReward(_notificationVo.data);
						break ;
					}
				case "Claim_Sign_Event_Reward_Result_Cmd":{
						this.claimSignEventRewardResult(_notificationVo.data);
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*初始化大厅的活动
		*
		*/
		__proto.initHallEvent=function(){
			this.showLoading();
			var url=this.resManager.serverUrl+"/EVENT/";
			this.sendHttpRequest(url,"Got_Hall_Event_Info_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.gotHallEventInfo=function(_hallEventInfo){
			this.hideLoading();
			this.addPackage("HalllEvent");
			this.viewClassMap.map(HallEvent,this.hallUIModel.hallEventVo);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("HalllEvent","OneHallEvent"),OneHallEvent);
			this.gameUIBuilderBridge.openPage("HalllEvent",HallEvent);
			this.hallUIModel.hallEventVo.oneHallEventVoArr.length=0;
			for(var i=0;i < _hallEventInfo["data"].length;i++){
				var oneHallEventVo=new OneHallEventVo();
				oneHallEventVo.date=_hallEventInfo["data"][i]["start_time"];
				oneHallEventVo.name=_hallEventInfo["data"][i]["event_title"];
				oneHallEventVo.bannerUrl=_hallEventInfo["data"][i]["img_mobile_url"];
				oneHallEventVo.bigBanner=_hallEventInfo["data"][i]["img_mobile_content_url"];
				oneHallEventVo.id=Number(_hallEventInfo["data"][i]["id"]);
				this.hallUIModel.hallEventVo.oneHallEventVoArr.push(oneHallEventVo);
			}
			this.hallUIModel.hallEventVo.status="Update_Status";
		}

		/**
		*打开签到
		*
		*/
		__proto.openSignUpEvent=function(){
			this.showLoading();
			var url=this.resManager.serverUrl+"/EVENT21/";
			this.sendHttpRequest(url,"Got_Sign_Event_Info_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*每日签到
		*@param _signEventInfo
		*
		*/
		__proto.gotSignEventInfo=function(_signEventInfo){
			this.hideLoading();
			this.viewClassMap.map(HallSignEvent,this.hallUIModel.hallSignEventVo);
			UIObjectFactory.setPackageItemExtension(UIPackage.getItemURL("HalllEvent","OneDaySign"),OneDaySign);
			this.hallUIModel.hallSignEventVo.oneDaySignVoArr.length=0;
			var signEventsInfoArr=_signEventInfo["event_map"];
			for(var i=0;i < signEventsInfoArr.length;i++){
				var oneDaySignVo=new OneDaySignVo();
				oneDaySignVo.id=i;
				oneDaySignVo.betNeeded=signEventsInfoArr[i]["bet_needed"];
				oneDaySignVo.bonus=signEventsInfoArr[i]["bonus"];
				oneDaySignVo.dayCount=signEventsInfoArr[i]["day_count"];
				oneDaySignVo.dayStaus=signEventsInfoArr[i]["day_status"];
				this.hallUIModel.hallSignEventVo.oneDaySignVoArr.push(oneDaySignVo);
			}
			this.gameUIBuilderBridge.openPage("HalllEvent",HallSignEvent);
			this.hallUIModel.hallSignEventVo.status="Update_Status";
		}

		/**
		*领取签到奖励
		*
		*/
		__proto.claimSignEventReward=function(_id){
			this.showLoading();
			this.hallUIModel.hallSignEventVo.claimId=_id;
			var url=this.resManager.serverUrl+"/EVENT21/";
			this.sendHttpRequest(url,"Claim_Sign_Event_Reward_Result_Cmd","","json",null,false,GameUtil.headers);
		}

		/**
		*领取奖励结果
		*@param _result
		*
		*/
		__proto.claimSignEventRewardResult=function(_result){
			this.hideLoading();
			this.playerInfoModel.playerInfoVo.user_balance+=Number(_result["reward_balance"]);
			this.showAlert("领取成功");
			for(var i=0;i < this.hallUIModel.hallSignEventVo.oneDaySignVoArr.length;i++){
				if(this.hallUIModel.hallSignEventVo.oneDaySignVoArr[i].id==this.hallUIModel.hallSignEventVo.claimId){
					this.hallUIModel.hallSignEventVo.oneDaySignVoArr[i].dayStaus="completed";
					break ;
				}
			}
			this.hallUIModel.hallSignEventVo.status="Update_Status";
		}

		__proto.openBigBanner=function(_url){
			this.hallUIModel.hallEventVo.bigBannerUrl=_url;
			this.hallUIModel.hallEventVo.status="DISPLAY_BIG_BANNER_STATUS";
		}

		HallEventCommand.INIT_HALL_EVENT_CMD="Init_Hall_Event_Cmd";
		HallEventCommand.GOT_HALL_EVENT_INFO_CMD="Got_Hall_Event_Info_Cmd";
		HallEventCommand.GOT_SIGN_EVENT_INFO_CMD="Got_Sign_Event_Info_Cmd";
		HallEventCommand.OPEN_SIGN_UP_EVENT_CMD="Open_Sign_Up_Event_Cmd";
		HallEventCommand.CLAIM_SIGN_EVENT_REWARD_CMD="Claim_Sign_Event_Reward_Cmd";
		HallEventCommand.CLAIM_SIGN_EVENT_REWARD_RESULT_CMD="Claim_Sign_Event_Reward_Result_Cmd";
		return HallEventCommand;
	})(BaseServerCommand)


	//class modules.hall.c.MineCenterCommand extends publics.c.BaseServerCommand
	var MineCenterCommand=(function(_super){
		function MineCenterCommand(){
			this.resManager=null;
			this.hallUIModel=null;
			this.gameUIBuilderBridge=null;
			this.playerInfoModel=null;
			MineCenterCommand.__super.call(this);
		}

		__class(MineCenterCommand,'modules.hall.c.MineCenterCommand',_super);
		var __proto=MineCenterCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "GET_MineCenter_Cmd":
					this.onGetMineCenter();
					break ;
				case "GET_MineCenter_COMPLETE_Cmd":
					this.onGetMineCenterComplete(_notificationVo.data);
					break ;
				case "GET_MINE_Cmd":
					this.onGetMine();
					break ;
				case "GET_MINE_COMPLETE_Cmd":
					this.onGetMineComplete(_notificationVo.data);
					break ;
				case "GET_Mc_MINE_CENTER_GROUP_Cmd":
					this.onGetMineCenterGroup();
					break ;
				case "GET_Mc_MINE_CENTER_GROUP_COMPLETE_Cmd":
					this.onGetMineCenterGroupComplete(_notificationVo.data);
					break ;
				case "GET_Mc_STATISTICAL_ANALYSISR_Cmd":
					this.onGetStatisticaLAnalysisr(_notificationVo.data);
					break ;
				case "GET_Mc_STATISTICAL_ANALYSISR_COMPLETE_Cmd":
					this.onGetStatisticaLAnalysisrComplete(_notificationVo.data);
					break ;
				case "GET_Mc_ACCOUNT_CHANGE_TYPE_CONFIG_Cmd":
					this.onGetAccountChangeTypeConfig();
					break ;
				case "GET_Mc_ACCOUNT_CHANGE_TYPE_SEARCH_Cmd":
					this.onGetAccountChangeTypeSearch(_notificationVo.data);
					break ;
				case "GET_Mc_ACCOUNT_CHANGE_TYPE_SEARCH_COMPLETE_Cmd":
					this.onGetAccountChangeTypeSearchComplete(_notificationVo.data);
					break ;
				case "GET_MC_BET_RECORD2_SEARCH_Cmd":
					this.onGetMcBetRecord2Search(_notificationVo.data);
					break ;
				case "GET_MC_BET_RECORD2_SEARCH_COMPLETE_Cmd":
					this.onGetMcBetRecord2SearchComplete(_notificationVo.data);
					break ;
				case "GET_Mc_GAME_RECORD_CONFIG_Cmd":
					this.onGetGameRecordConfig();
					break ;
				case "GET_MC_BONUS_OVERVIEW_CONFIG_Cmd":
					this.onGetMcBonusOverviewConfig();
					break ;
				case "GET_MC_BONUS_OVERVIEW_Cmd":
					this.onGetMcBonusOverview(_notificationVo.data)
					break ;
				case "GET_MC_BONUS_OVERVIEW_COMPLETE_Cmd":
					this.onGetMcBonusOverviewComplete(_notificationVo.data);
					break ;
				case "Cancel_Bet_Cmd":
					this.cancelBet(_notificationVo.data);
					break ;
				case "Cancel_Bet_Result_Cmd":
					this.cancelBetResult();
					break ;
				case "Get_Customer_Url_Cmd":
					this.getCustomerUrl();
					break ;
				case "Got_Customer_Url_Cmd":
					this.gotCustomerUrl(_notificationVo.data);
					break ;
				}
		}

		/**
		*请求个人中心数据
		*/
		__proto.onGetMineCenter=function(){
			var dateArr=GameUtil.getSearchDate(0,1);
			var url=GameUtil.getMineCenterUrl(dateArr[0],dateArr[1]);
			console.log("onGetMineCenter url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_MineCenter_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetMineCenterComplete=function(data){
			console.log("onGetMineCenterComplete:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.mineCenterPanelVo.mineCenterTodayData=new MineCenterTodayData();
			this.hallUIModel.mineCenterPanelVo.mineCenterTodayData.decode(data);
			this.hallUIModel.mineCenterPanelVo.status=MineCenterPanelVo.UPDATE_DATA;
		}

		/**
		*请求个人中心数据
		*/
		__proto.onGetMine=function(){}
		__proto.onGetMineComplete=function(data){}
		__proto.onGetMineCenterGroup=function(){
			this.hallUIModel.mineCenterPanelVo.status=MineCenterPanelVo.UPDATE_DATA;
			return;
			var dateArr=GameUtil.getSearchDate(0,1);
			var url=GameUtil.getMineCenterUrl(dateArr[0],dateArr[1]);
			console.log("onGetMineCenterGroup url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_Mc_MINE_CENTER_GROUP_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetMineCenterGroupComplete=function(data){
			console.log("onGetMineCenterGroupComplete:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.mineCenterPanelVo.mineCenterTodayData=new MineCenterTodayData();
			this.hallUIModel.mineCenterPanelVo.mineCenterTodayData.decode(data);
			this.hallUIModel.mineCenterPanelVo.status=MineCenterPanelVo.UPDATE_DATA;
		}

		/**
		*请求个人系统分析
		*/
		__proto.onGetStatisticaLAnalysisr=function(dateArr){
			var date1;
			var date2;
			if(dateArr==null || dateArr.length==0){
				var todayArr=GameUtil.getSearchDate(0,1);
				date1=todayArr[0];
				date2=todayArr[1];
				}else{
				date1=dateArr[0];
				date2=dateArr[1];
			};
			var url=GameUtil.getMineCenterUrl(date1,date2);
			console.log("onGetStatisticaLAnalysisr url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_Mc_STATISTICAL_ANALYSISR_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*返回个人系统分析
		*/
		__proto.onGetStatisticaLAnalysisrComplete=function(data){
			console.log("onGetStatisticaLAnalysisrComplete:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.mcStatisticalAnalysisVo.mineCenterTodayData=new MineCenterTodayData();
			this.hallUIModel.mcStatisticalAnalysisVo.mineCenterTodayData.decode(data);
			this.hallUIModel.mcStatisticalAnalysisVo.status=McStatisticalAnalysisVo.UPDATE_DATA;
		}

		/**
		*请求帐变类型配置
		*/
		__proto.onGetAccountChangeTypeConfig=function(){
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.mcAccountChangeDetailVo.status=McAccountChangeDetailVo.INIT_INFO;
		}

		/**
		*请求帐变类型配置
		*/
		__proto.onGetAccountChangeTypeSearch=function(dateArr){
			var product_id=dateArr[0];
			var change_type=dateArr[1];
			var date1=dateArr[2];
			var date2=dateArr[3];
			var page=dateArr[4];
			var url=GameUtil.getAccountChagneSearhData(product_id,change_type,date1,date2,page);
			console.log("onGetAccountChangeTypeSearch url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_Mc_ACCOUNT_CHANGE_TYPE_SEARCH_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetAccountChangeTypeSearchComplete=function(data){
			console.log("onGetAccountChangeTypeSearch:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.mcAccountChangeDetailVo.mcAccountSearchData=new McAccountSearchData();
			this.hallUIModel.mcAccountChangeDetailVo.mcAccountSearchData.decode(data);
			this.hallUIModel.mcAccountChangeDetailVo.status=McAccountChangeDetailVo.UPDATE_INFO;
		}

		/**
		*请求投注记录数据查询
		*/
		__proto.onGetMcBetRecord2Search=function(dateArr){
			var product_id=dateArr[0];
			var game_id=dateArr[1];
			var date1=dateArr[2];
			var date2=dateArr[3];
			var date3=dateArr[4];
			var url=GameUtil.getBettingLogUrl(product_id,-1,game_id,date1,date2,date3);
			console.log("onGetMcBetRecord2Search url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_MC_BET_RECORD2_SEARCH_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetMcBetRecord2SearchComplete=function(data){
			console.log("onGetMcBetRecord2SearchComplete:",data);
			this.sendNotification("HIDE_Cmd");
			this.hallUIModel.mcBetRecord2Vo.data=data;
			this.hallUIModel.mcBetRecord2Vo.status=McBetRecord2Vo.UPDATE_INFO;
		}

		__proto.onGetGameRecordConfig=function(){
			console.log("MineCenter onGetGameRecordConfig");
			if(DataMgr.get().lotteryGameListData==null){
				this.sendNotification("SHOW_Cmd");
				this.sendNotification("GET_CONFIG1_Cmd");
				this.delayRun("GET_Mc_GAME_RECORD_CONFIG_Cmd",100);
				}else{
				this.sendNotification("HIDE_Cmd");
				this.hallUIModel.mcGameRecordVo.status=McGameRecordVo.INIT_INFO;
			}
		}

		__proto.onGetMcBonusOverviewConfig=function(){
			console.log("MineCenter onGetGameRecordConfig");
			if(DataMgr.get().lotteryGameListData==null){
				this.sendNotification("SHOW_Cmd");
				this.sendNotification("GET_CONFIG1_Cmd");
				this.delayRun("GET_MC_BONUS_OVERVIEW_CONFIG_Cmd",100);
				}else{
				this.sendNotification("HIDE_Cmd");
				this.hallUIModel.mcBonusOverviewVo.status=McBonusOverviewVo.INIT_INFO;
			}
		}

		/**
		*请求个人奖励总览
		*/
		__proto.onGetMcBonusOverview=function(gameId){
			this.sendNotification("SHOW_Cmd");
			var url=GameUtil.getMcBonusOverviewUrl(gameId);
			this.sendHttpRequest(url,"GET_MC_BONUS_OVERVIEW_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*请求个人奖励总览 返回
		*/
		__proto.onGetMcBonusOverviewComplete=function(data){
			console.log("onGetMcBonusOverviewComplete data:",data);
			this.sendNotification("HIDE_Cmd");
			var mineStatisticsData=new MineStatisticsData();
			mineStatisticsData.decode(data);
			var dataMgr=DataMgr.get();
			this.hallUIModel.mcBonusOverviewVo.mineStatisticsDataDic[dataMgr.curLettoryType]=mineStatisticsData;
			this.hallUIModel.mcBonusOverviewVo.status=McBonusOverviewVo.UPDATE_INFO;
		}

		__proto.cancelBet=function(_orderId){
			this.hallUIModel.mcBetRecord2Vo.cancelId=_orderId;
			this.showLoading();
			var url=this.resManager.serverUrl+"/LOTTERY_CANCEL_ORDER/";
			var data=new Object();
			data["id"]=this.playerInfoModel.playerInfoVo.user_id;
			data["order_id"]=[];
			data["order_id"].push(_orderId);
			this.sendHttpRequest(url,"Cancel_Bet_Result_Cmd","","json",data,false,GameUtil.headers,"",false,true);
		}

		__proto.cancelBetResult=function(){
			this.hideLoading();
			var dataMgr=DataMgr.get();
			var langConfigData=dataMgr.langConfigData;
			var langItem;
			var data=dataMgr.betDetailPanelVo;
			data["order_status"]=3;
			for(var i=0;i < this.hallUIModel.mcBetRecord2Vo.getDataList.length;i++){
				if(this.hallUIModel.mcBetRecord2Vo.getDataList[i].id==this.hallUIModel.mcBetRecord2Vo.cancelId){
					this.hallUIModel.mcBetRecord2Vo.getDataList[i].order_status=3;
					break ;
				}
			}
			this.hallUIModel.mcBetRecord2Vo.status=McBetRecord2Vo.UPDATE_INFO;
			this.showAlert("撤单成功");
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_MC_BET_RECORD_Detail,GameUtil.PANEL_ANI_TO_RIGHT));
			this.sendNotification("GET_GAME_MONEY_Cmd");
		}

		__proto.getCustomerUrl=function(){
			this.hallUIModel.mineVo.status=MineVo.OPEN_CUSTOMER_STATUS;
		}

		__proto.gotCustomerUrl=function(_data){}
		MineCenterCommand.GET_MINE_CENTER_CMD="GET_MineCenter_Cmd";
		MineCenterCommand.GET_MINE_CENTER_COMPLETE_CMD="GET_MineCenter_COMPLETE_Cmd";
		MineCenterCommand.GET_MINE_CMD="GET_MINE_Cmd";
		MineCenterCommand.GET_MINE_COMPLETE_CMD="GET_MINE_COMPLETE_Cmd";
		MineCenterCommand.GET_MINE_CENTER_GROUP_CMD="GET_Mc_MINE_CENTER_GROUP_Cmd";
		MineCenterCommand.GET_MINE_CENTER_GROUP_COMPLETE_CMD="GET_Mc_MINE_CENTER_GROUP_COMPLETE_Cmd";
		MineCenterCommand.GET_STATISTICAL_ANALYSISR_CMD="GET_Mc_STATISTICAL_ANALYSISR_Cmd";
		MineCenterCommand.GET_STATISTICAL_ANALYSISR_COMPLETE_CMD="GET_Mc_STATISTICAL_ANALYSISR_COMPLETE_Cmd";
		MineCenterCommand.GET_ACCOUNT_CHANGE_TYPE_CONFIG_CMD="GET_Mc_ACCOUNT_CHANGE_TYPE_CONFIG_Cmd";
		MineCenterCommand.GET_ACCOUNT_CHANGE_TYPE_SEARCH_CMD="GET_Mc_ACCOUNT_CHANGE_TYPE_SEARCH_Cmd";
		MineCenterCommand.GET_ACCOUNT_CHANGE_TYPE_SEARCH_COMPLETE_CMD="GET_Mc_ACCOUNT_CHANGE_TYPE_SEARCH_COMPLETE_Cmd";
		MineCenterCommand.GET_MC_BET_RECORD2_SEARCH_CMD="GET_MC_BET_RECORD2_SEARCH_Cmd";
		MineCenterCommand.GET_MC_BET_RECORD2_SEARCH_COMPLETE_CMD="GET_MC_BET_RECORD2_SEARCH_COMPLETE_Cmd";
		MineCenterCommand.GET_GAME_RECORD_CONFIG_CMD="GET_Mc_GAME_RECORD_CONFIG_Cmd";
		MineCenterCommand.CANCEL_BET_CMD="Cancel_Bet_Cmd";
		MineCenterCommand.CANCEL_BET_RESULT_CMD="Cancel_Bet_Result_Cmd";
		MineCenterCommand.GET_MC_BONUS_OVERVIEW_CONFIG_CMD="GET_MC_BONUS_OVERVIEW_CONFIG_Cmd";
		MineCenterCommand.GET_MC_BONUS_OVERVIEW_CMD="GET_MC_BONUS_OVERVIEW_Cmd";
		MineCenterCommand.GET_MC_BONUS_OVERVIEW_COMPLETE_CMD="GET_MC_BONUS_OVERVIEW_COMPLETE_Cmd";
		MineCenterCommand.GET_CUSTOMER_URL_CMD="Get_Customer_Url_Cmd";
		MineCenterCommand.GOT_CUSTOMER_URL_CMD="Got_Customer_Url_Cmd";
		return MineCenterCommand;
	})(BaseServerCommand)


	//class modules.hall.c.NewPlayerEventsCommand extends publics.c.BaseServerCommand
	var NewPlayerEventsCommand=(function(_super){
		function NewPlayerEventsCommand(){
			this.playerInfoModel=null;
			this.resManager=null;
			this.gameUIBuilderBridge=null;
			this.eventsUIModel=null;
			NewPlayerEventsCommand.__super.call(this);
		}

		__class(NewPlayerEventsCommand,'modules.hall.c.NewPlayerEventsCommand',_super);
		var __proto=NewPlayerEventsCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Init_New_Player_Events_Cmd":{
						this.initEvents();
						break ;
					}
				case "Check_New_Players_Event_Cmd":{
						this.checkNewPlayerEvents();
						break ;
					}
				case "Check_New_Players_Event_Result_Cmd":{
						this.checkNewPlayerEventsResult(_notificationVo.data);
						break ;
					}
				case "Open_New_Players_Events_Cmd":{
						this.openNewPlayerEvents();
						break ;
					}
				case "Send_Name_Cmd":{
						this.sendName();
						break ;
					}
				case "Send_Name_Result_Cmd":{
						this.sendNameResult();
						break ;
					}
				case "Send_Wechat_Cmd":{
						this.sendWechat();
						break ;
					}
				case "Send_Wechat_Result_Cmd":{
						this.sendWechatResult();
						break ;
					}
				case "Get_Check_Code_Cmd":{
						this.getCheckCode();
						break ;
					}
				case "Check_Code_Cmd":{
						this.checkCode();
						break ;
					}
				case "Check_Code_Result_Cmd":{
						this.checkCodeResult();
						break ;
					}
				case "Claim_Rewards_Cmd":{
						this.claimRewards();
						break ;
					}
				case "Claim_Rewards_Result_Cmd":{
						this.claimRewardsResult(_notificationVo.data);
						break ;
					}
				default :{
						break ;
					}
				}
		}

		__proto.initEvents=function(){
			this.eventsUIModel=this.injector.getSingleton(EventsUIModel);
			this.viewClassMap.map(NewPlayerEvents,this.eventsUIModel.newPlayerEventsVo);
		}

		/**
		*检查新手奖励是否完成
		*
		*/
		__proto.checkNewPlayerEvents=function(){
			this.showLoading();
			var url=this.resManager.serverUrl+"/EVENT20/";
			var data=new Object();
			data["step_id"]=1;
			this.sendHttpRequest(url,"Check_New_Players_Event_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.checkNewPlayerEventsResult=function(_resultObj){
			this.hideLoading();
			console.log(_resultObj);
			if(_resultObj["is_complete"]){
				if(this.eventsUIModel.newPlayerEventsVo.ctrl==1){
					this.showAlert("已经完成过新手任务了");
				}
				else if(this.eventsUIModel.newPlayerEventsVo.ctrl==2){
				}
				this.eventsUIModel.newPlayerEventsVo.ctrl=0;
				return;
			}
			this.eventsUIModel.newPlayerEventsVo.stepIndex=_resultObj["next_step_id"]-2;
			this.sendNotification("Open_New_Players_Events_Cmd");
		}

		/**
		*打开新手奖励
		*
		*/
		__proto.openNewPlayerEvents=function(){
			this.addPackage("NewPlayerEvents");
			this.gameUIBuilderBridge.openPage("NewPlayerEvents",NewPlayerEvents);
		}

		__proto.sendName=function(){
			if(this.eventsUIModel.newPlayerEventsVo.name.length==0){
				this.showAlert("请输入姓名");
				return;
			};
			var url=this.resManager.serverUrl+"/EVENT20/";
			var data=new Object();
			data["step_id"]=2;
			data["user_name"]=this.eventsUIModel.newPlayerEventsVo.name;
			this.sendHttpRequest(url,"Send_Name_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.sendNameResult=function(){
			this.eventsUIModel.newPlayerEventsVo.stepIndex++;
			this.eventsUIModel.newPlayerEventsVo.status="Update_Step_Status";
		}

		__proto.sendWechat=function(){
			if(this.eventsUIModel.newPlayerEventsVo.wechat.length==0){
				this.showAlert("请输入微信");
				return;
			};
			var url=this.resManager.serverUrl+"/EVENT20/";
			var data=new Object();
			data["step_id"]=3;
			data["wechat_account"]=this.eventsUIModel.newPlayerEventsVo.wechat;
			this.sendHttpRequest(url,"Send_Wechat_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.sendWechatResult=function(){
			this.eventsUIModel.newPlayerEventsVo.stepIndex++;
			this.eventsUIModel.newPlayerEventsVo.status="Update_Step_Status";
		}

		__proto.getCheckCode=function(){
			if(this.eventsUIModel.newPlayerEventsVo.mobileCountryCode.length==0){
				this.showAlert("请输入国家区号");
				return;
			}
			if(this.eventsUIModel.newPlayerEventsVo.mobileNumber.length==0){
				this.showAlert("请输入电话号码");
				return;
			};
			var url=this.resManager.serverUrl+"/EVENT20/";
			var data=new Object();
			data["step_id"]=4;
			data["mobile_country_code"]=this.eventsUIModel.newPlayerEventsVo.mobileCountryCode;
			data["mobile_number"]=this.eventsUIModel.newPlayerEventsVo.mobileNumber;
			this.sendHttpRequest(url,"","","json",data,false,GameUtil.headers);
		}

		/**
		*检查验证码
		*
		*/
		__proto.checkCode=function(){
			if(this.eventsUIModel.newPlayerEventsVo.mobileCountryCode.length==0){
				this.showAlert("请输入国家区号");
				return;
			}
			if(this.eventsUIModel.newPlayerEventsVo.mobileNumber.length==0){
				this.showAlert("请输入电话号码");
				return;
			}
			if(this.eventsUIModel.newPlayerEventsVo.code.length==0){
				this.showAlert("请输入验证码");
				return;
			};
			var url=this.resManager.serverUrl+"/EVENT20/";
			var data=new Object();
			data["step_id"]=5;
			data["mobile_country_code"]=this.eventsUIModel.newPlayerEventsVo.mobileCountryCode;
			data["mobile_number"]=this.eventsUIModel.newPlayerEventsVo.mobileNumber;
			data["auth_code"]=this.eventsUIModel.newPlayerEventsVo.code;
			this.sendHttpRequest(url,"Check_Code_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		/**
		*检查验证码结果
		*
		*/
		__proto.checkCodeResult=function(){
			this.claimRewards();
		}

		__proto.claimRewards=function(){
			var url=this.resManager.serverUrl+"/EVENT20/";
			var data=new Object();
			data["step_id"]=6;
			this.sendHttpRequest(url,"Claim_Rewards_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.claimRewardsResult=function(_result){
			this.playerInfoModel.playerInfoVo.user_balance+=Number(_result["reward_balance"]);
			this.eventsUIModel.newPlayerEventsVo.stepIndex+=2;
			this.eventsUIModel.newPlayerEventsVo.status="Update_Step_Status";
		}

		NewPlayerEventsCommand.INIT_NEWP_PLAYER_EVENTS_CMD="Init_New_Player_Events_Cmd";
		NewPlayerEventsCommand.CHECK_NEW_PLAYERS_EVENT_CMD="Check_New_Players_Event_Cmd";
		NewPlayerEventsCommand.CHECK_NEW_PLAYERS_EVENT_RESULT_CMD="Check_New_Players_Event_Result_Cmd";
		NewPlayerEventsCommand.SEND_NAME_CMD="Send_Name_Cmd";
		NewPlayerEventsCommand.SEND_NAME_RESULT_CMD="Send_Name_Result_Cmd";
		NewPlayerEventsCommand.SEND_WECHAT_CMD="Send_Wechat_Cmd";
		NewPlayerEventsCommand.SEND_WECHAT_RESULT_CMD="Send_Wechat_Result_Cmd";
		NewPlayerEventsCommand.GET_CHECK_CODE_CMD="Get_Check_Code_Cmd";
		NewPlayerEventsCommand.CHECK_CODE_CMD="Check_Code_Cmd";
		NewPlayerEventsCommand.CHECK_CODE_RESULT_CMD="Check_Code_Result_Cmd";
		NewPlayerEventsCommand.CLAIM_REWARDS_CMD="Claim_Rewards_Cmd";
		NewPlayerEventsCommand.CLAIM_REWARDS_RESULT_CMD="Claim_Rewards_Result_Cmd";
		NewPlayerEventsCommand.OPEN_NEW_PLAYER_EVENTS_CMD="Open_New_Players_Events_Cmd";
		return NewPlayerEventsCommand;
	})(BaseServerCommand)


	//class modules.hall.c.SystemCenterCommand extends publics.c.BaseServerCommand
	var SystemCenterCommand=(function(_super){
		function SystemCenterCommand(){
			this.hallUIModel=null;
			this.gameUIBuilderBridge=null;
			this.playerInfoModel=null;
			SystemCenterCommand.__super.call(this);
		}

		__class(SystemCenterCommand,'modules.hall.c.SystemCenterCommand',_super);
		var __proto=SystemCenterCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "MODIFY_PASSWORD_Cmd":
					this.onModifyPassword(_notificationVo.data);
					break ;
				case "MODIFY_PASSWORD_COMPLETE_Cmd":
					this.onModifyPasswordComplete(_notificationVo.data);
					break ;
				case "MODIFY_MONEY_PASSWORD_Cmd":
					this.modifyMoneyPassword(_notificationVo.data);
					break ;
				case "MODIFY_MONEY_PASSWORD_COMPLETE_Cmd":
					this.modifyMoneyPasswordComplete(_notificationVo.data);
					break ;
				case "GET_MY_BANK_CARD_Cmd":
					this.onGetMyBank(_notificationVo.data);
					break ;
				case "GET_MY_BANK_CARD_COMPLETE_Cmd":
					this.onGetMyBankComplete(_notificationVo.data);
					break ;
				case "Got_Draw_Info_Cmd":
					this.gotDrawInfo(_notificationVo.data);
					break ;
				case "BINDING_BANK_Cmd":
					this.onBindingBank(_notificationVo.data);
					break ;
				case "BINDING_BANK_COMPLETE_Cmd":
					this.onBindingBankComplete(_notificationVo.data);
					break ;
				case "GET_LOTTERY_LIST_Cmd":
					this.onGetLotteryList(_notificationVo.data);
					break ;
				case "GET_LOTTERY_LIST_COMPLETE_Cmd":
					this.onGetLotteryListComplete(_notificationVo.data);
					break ;
				case "SET_LOTTERY_LIST_Cmd":
					this.onSetLotteryList(_notificationVo.data);
					break ;
				case "SET_LOTTERY_LIST_COMPLETE_Cmd":
					this.onSetLotteryListComplete(_notificationVo.data);
					break ;
				case "CLOSE_LOTTERY_LIST_Cmd":
					this.closeLotteryList();
					break ;
				case "GET_USER_INFO_Cmd":
					this.onGetUserInfo(_notificationVo.data);
					break ;
				case "GET_USER_INFO_COMPLETE_Cmd":
					this.onGetUserInfoComplete(_notificationVo.data);
					break ;
				case "GET_USER_INFO_2_Cmd":
					this.getUserInfo();
					break ;
				case "GET_USER_INFO_COMPLETE_2_Cmd":
					this.onGetUserInfoComplete2(_notificationVo.data);
					break ;
				case "LOGIN_OUT_Cmd":
					this.onLoginOut(_notificationVo.data);
					break ;
				case "LOGIN_OUT_COMPLETE_Cmd":
					this.onLoginOutComplete(_notificationVo.data);
					break ;
				case "SET_INFO_Cmd":
					this.onSetInfo(_notificationVo.data);
					break ;
				case "SET_INFO_COMPLETE_Cmd":
					this.onSetInfoComplete(_notificationVo.data);
					break ;
				case "Get_Mobile_Code_Cmd":
					this.getMobileCode(_notificationVo.data);
					break ;
				case "Got_Mobile_Code_Cmd":
					this.gotMobileCode(_notificationVo.data);
					break ;
				case "UPDATE_FAVORITE_LIST_Cmd":
					this.updateFavoriteList();
					break ;
				case "UPDATE_FAVORITE_PANEL_GAME_Cmd":
					this.updateFavoritePanelGame();
					break ;
				}
		}

		__proto.modifyMoneyPassword=function(arr){
			var url=GameUtil.getUserUrl(this.playerInfoModel.playerInfoVo.user_id);
			var data=new Object();
			data["case"]="user_balance_password";
			data.old_balance_password=arr[0];
			data.new_balance_password=arr[1];
			data.new_balance_password_rep=arr[2];
			console.log("onModifyPassword url:",url," data:",data);
			this.sendNotification("SHOW_Cmd");
			var httpRequestVo=new HttpRequestVo();
			httpRequestVo.url=url;
			httpRequestVo.completeBackCmd="MODIFY_MONEY_PASSWORD_COMPLETE_Cmd";
			httpRequestVo.errorBackCmd="";
			httpRequestVo.responseType="json";
			httpRequestVo.postData=data;
			httpRequestVo.headers=GameUtil.headers;
			httpRequestVo.method="put";
			this.sendNotification("Request_Cmd",httpRequestVo);
		}

		__proto.modifyMoneyPasswordComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onModifyPassword data:",data);
			if(data.status_code==1){
				this.showAlert("修改成功");
				this.hallUIModel.settingModifyPasswordPanelVo2.status=SettingModifyPasswordPanelVo.UPDATE_INFO;
			}
		}

		__proto.onModifyPassword=function(arr){
			var url=GameUtil.getUserUrl(this.playerInfoModel.playerInfoVo.user_id);
			var data=new Object();
			data["case"]="user_password";
			data.old_password=arr[0];
			data.new_password=arr[1];
			data.new_password_rep=arr[2];
			this.hallUIModel.settingModifyPasswordPanelVo.newPassword=arr[1];
			console.log("onModifyPassword url:",url," data:",data);
			this.sendNotification("SHOW_Cmd");
			var httpRequestVo=new HttpRequestVo();
			httpRequestVo.url=url;
			httpRequestVo.completeBackCmd="MODIFY_PASSWORD_COMPLETE_Cmd";
			httpRequestVo.errorBackCmd="";
			httpRequestVo.responseType="json";
			httpRequestVo.postData=data;
			httpRequestVo.headers=GameUtil.headers;
			httpRequestVo.method="put";
			this.sendNotification("Request_Cmd",httpRequestVo);
		}

		__proto.onModifyPasswordComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onModifyPassword data:",data);
			if(data.status_code==1){
				var loginAccountInfoObj=this.playerInfoModel.localInfo.loginAccountInfoObj;
				var account=String(DataMgr.get().playerInfoData.user_account).toLowerCase();
				loginAccountInfoObj[account]=new Object();
				loginAccountInfoObj[account]=this.hallUIModel.settingModifyPasswordPanelVo.newPassword;
				this.playerInfoModel.localInfo.loginAccountInfoObj=loginAccountInfoObj;
				this.playerInfoModel.localInfo.loginPassword=this.hallUIModel.settingModifyPasswordPanelVo.newPassword;
				this.hallUIModel.settingModifyPasswordPanelVo.status=SettingModifyPasswordPanelVo.UPDATE_INFO;
			}
		}

		/**获取已绑定银行卡列表 */
		__proto.onGetMyBank=function(panelName){
			DataMgr.get().userBankAccountPanelName=panelName;
			var url=GameUtil.getMyBankUrl();
			console.log("onGetMyBank url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_MY_BANK_CARD_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetMyBankComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onGetMyBankComplete data:",data);
			var userBankAccountData=new UserBankAccountData();
			userBankAccountData.decode(data);
			userBankAccountData.checkBol=true;
			DataMgr.get().userBankAccountData=userBankAccountData;
			var panelName=DataMgr.get().userBankAccountPanelName;
			switch(panelName){
				case GameUtil.PANEL_SYS_MY_BANK_CARD:
					this.hallUIModel.sysMyBankCardPanelVo.status=SysMyBankCardPanelVo.UPDATE_INFO;
					break ;
				case GameUtil.PANEL_FM_DRAW_MONEY_CENTER:
					this.hallUIModel.fmDrawMoneyCenterPanelVo.status=FmDrawMoneyCenterPanelVo.INIT_INFO;
					this.getDrawInfo();
					break ;
				}
		}

		/**
		*获取取款信息
		*
		*/
		__proto.getDrawInfo=function(){
			var url=GameUtil.GG_DOMAIN+"/WITHDRAW_QUOTA";
			this.sendHttpRequest(url,"Got_Draw_Info_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.gotDrawInfo=function(_data){
			this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawTotalCount=_data["info"].withdraw_count;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawTotalDayPrice=_data["info"].withdraw_money_limit;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.withDrawCurrentCount=_data["info"].count;
			this.hallUIModel.fmDrawMoneyCenterPanelVo.status=FmDrawMoneyCenterPanelVo.UPDATE_STATUS;
		}

		/**绑定银行卡 */
		__proto.onBindingBank=function(arr){
			var data=new Object();
			data.id=this.playerInfoModel.playerInfoVo.id;
			data.bank_account=arr[1];
			data.bank_owner=arr[2];
			data.bank_list_id=arr[3];
			data.bank_branch=arr[4];
			data.first_bank_account=arr[5];
			var url=GameUtil.getBindingBankUrl();
			console.log("onBindingBank url:",url,"data:",data);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"BINDING_BANK_COMPLETE_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.onBindingBankComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onBindingBankComplete data:",data);
			if(data.status_code==1){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","添加银行卡成功");
				this.hallUIModel.sysBindingBankCardPanelVo.status=SysBindingBankCardPanelVo.DONE_SUCCESS;
			}
		}

		/**获取彩票列表 */
		__proto.onGetLotteryList=function(panelName){
			DataMgr.get().favoriteLotteryPanelName=panelName;
			var url=GameUtil.getLotteryListUrl(false);
			console.log("onGetLotteryList url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_LOTTERY_LIST_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetLotteryListComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onGetLotteryListComplete data:",data);
			var favoriteLotteryData=new FavoriteLotteryData();
			try{
				delete data["info"]["pc_menu"]["1"]["line"]["01"]["row"]["26"];
			}
			catch(e){
			}
			try{
				delete data["info"]["pc_menu"]["2"]["line"]["01"]["row"]["25"];
			}
			catch(e){
			}
			try{
				delete data["info"]["pc_menu"]["8"]["line"]["01"]["row"]["22"];
			}
			catch(e){
			}
			favoriteLotteryData.decode(data["info"]["pc_menu"]);
			DataMgr.get().favoriteLotteryData=favoriteLotteryData;
			var panelName=DataMgr.get().favoriteLotteryPanelName;
			switch(panelName){
				case GameUtil.PANEL_SYS_SET_FAVORITE:
					this.hallUIModel.sysSetFavoritePanelVo.status=SysSetFavoritePanelVo.INIT_INFO;
					break ;
				case GameUtil.PANEL_HALL:
					this.hallUIModel.hallVo.status=HallVo.Update_HallLottery;
					break ;
				}
		}

		/**获取用户信息 */
		__proto.getUserInfo=function(){
			this.showLoading();
			var uid=DataMgr.get().playerInfoData.id+"";
			var url=GameUtil.getUserInfoUrl(uid);;
			this.sendHttpRequest(url,"GET_USER_INFO_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetUserInfoComplete2=function(data){
			this.hideLoading();
			console.log("onGetUserInfoComplete data:",data);
			var userInfoData=new UserInfoData();
			userInfoData.decode(data);
			DataMgr.get().userInfoData=userInfoData;
		}

		/**设置彩票列表 */
		__proto.onSetLotteryList=function(arr){
			var data=new Object();
			data.favoriteIds=DataMgr.get().myFavorites;
			if(data.favoriteIds.length==0){
				this.showTip("请添加彩种后再点击确认");
				return;
			};
			var url=GameUtil.setLotteryListUrl();
			console.log("onSetLotteryList url:",url,"data:",data);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"SET_LOTTERY_LIST_COMPLETE_Cmd","","json",data,false,GameUtil.headers);
		}

		__proto.onSetLotteryListComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onSetLotteryListComplete data:",data);
			if(data.status_code==1){
				this.hallUIModel.sysSetFavoritePanelVo.status=SysSetFavoritePanelVo.DONE_SUCCESS;
			}
		}

		__proto.closeLotteryList=function(){
			this.sendNotification("CLOSE_Panel_Cmd",new PanelData().setOpenData3(GameUtil.PANEL_ANI_FROM_LEFT).setCloseData(GameUtil.PANEL_SYS_SET_FAVORITE,GameUtil.PANEL_ANI_TO_RIGHT));
		}

		/**获取用户信息 */
		__proto.onGetUserInfo=function(panelName){
			DataMgr.get().favoriteLotteryPanelName=panelName;
			var uid=DataMgr.get().playerInfoData.id+"";
			var url=GameUtil.getUserInfoUrl(uid);;
			console.log("onGetUserInfo url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"GET_USER_INFO_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onGetUserInfoComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onGetUserInfoComplete data:",data);
			var userInfoData=new UserInfoData();
			userInfoData.decode(data);
			DataMgr.get().userInfoData=userInfoData;
			this.hallUIModel.sysSetAccountPanelVo.status=SysSetAccountPanelVo.INIT_INFO;
			var dataMgr=DataMgr.get();
			var configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_langConfig);
			var configObj;
			configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
			dataMgr.balanceChangeTypeConfigData=new BalanceChangeTypeConfigData();
			if(userInfoData.is_proxy=="1"){
				dataMgr.balanceChangeTypeConfigData.decode(configObj["LOTTERY_BALANCE_CHANGE_TYPE_SELECT"]);
			}
			else{
				dataMgr.balanceChangeTypeConfigData.decode(configObj["LOTTERY_BALANCE_CHANGE_TYPE_SELECT_NOT_PROXY"]);
			}
		}

		/**登出操作 */
		__proto.onLoginOut=function(panelName){
			var url=GameUtil.getLoginOutUrl();;
			console.log("onLoginOut url:",url);
			this.sendNotification("SHOW_Cmd");
			this.sendHttpRequest(url,"LOGIN_OUT_COMPLETE_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.onLoginOutComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onLoginOutComplete data:",data);
			if(data.status_code==1){
				this.showAlert("退出成功");
				this.hallUIModel.mineVo.initBol=false;
				this.hallUIModel.sysSetPanelVo.status=SysSetPanelVo.LOGIN_OUT_SUCC;
				this.sendNotification("HALL_LOGIN_OUT_Cmd");
			}
		}

		/**登出操作 */
		__proto.onSetInfo=function(data){
			var uid=DataMgr.get().playerInfoData.id+"";
			var url=GameUtil.getUserInfoUrl(uid);
			console.log("onSetInfo url:",url);
			this.sendNotification("SHOW_Cmd");
			var httpRequestVo=new HttpRequestVo();
			httpRequestVo.url=url;
			httpRequestVo.completeBackCmd="SET_INFO_COMPLETE_Cmd";
			httpRequestVo.errorBackCmd="";
			httpRequestVo.responseType="json";
			httpRequestVo.postData=data;
			httpRequestVo.headers=GameUtil.headers;
			httpRequestVo.method="put";
			this.sendNotification("Request_Cmd",httpRequestVo);
		}

		__proto.onSetInfoComplete=function(data){
			this.sendNotification("HIDE_Cmd");
			console.log("onSetInfoComplete data:",data);
			if(data.status_code==1){
				this.hallUIModel.sysSetAccountPanelVo.status=SysSetAccountPanelVo.UPDATE_INFO;
			}
		}

		/**
		*获取手机验证码
		*@return
		*
		*/
		__proto.getMobileCode=function(_mobile){
			if(_mobile.length !=11){
				this.showAlert("请输入正确的手机号码");
				return;
			}
			this.showLoading();
			var url=GameUtil.GG_DOMAIN+"/MOBILE_AUTH_CODE?mobile_number="+_mobile+"&mobile_country_code=86";
			this.sendHttpRequest(url,"Got_Mobile_Code_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.gotMobileCode=function(_result){
			this.hideLoading();
			this.showAlert("验证码已经发送到手机，请检查手机短信。");
		}

		__proto.updateFavoriteList=function(){
			this.hallUIModel.sysSetFavoritePanelVo.status=SysSetFavoritePanelVo.UPDATE_FAVORITE_LIST_STATUS;
			this.hallUIModel.sysSetFavoritePanelVo.sysSetFavoritePanelGameListVo.status=SysSetFavoritePanelGameListVo.UPDATE_INFO;
		}

		__proto.updateFavoritePanelGame=function(){
			this.hallUIModel.sysSetFavoritePanelVo.sysSetFavoritePanelGameListVo.status=SysSetFavoritePanelGameListVo.UPDATE_INFO;
		}

		SystemCenterCommand.MODIFY_PASSWORD_CMD="MODIFY_PASSWORD_Cmd";
		SystemCenterCommand.MODIFY_PASSWORD_COMPLETE_CMD="MODIFY_PASSWORD_COMPLETE_Cmd";
		SystemCenterCommand.MODIFY_MONEY_PASSWORD_CMD="MODIFY_MONEY_PASSWORD_Cmd";
		SystemCenterCommand.MODIFY_MONEY_PASSWORD_COMPLETE_CMD="MODIFY_MONEY_PASSWORD_COMPLETE_Cmd";
		SystemCenterCommand.GET_MY_BANK_CARD_CMD="GET_MY_BANK_CARD_Cmd";
		SystemCenterCommand.GET_MY_BANK_CARD_COMPLETE_CMD="GET_MY_BANK_CARD_COMPLETE_Cmd";
		SystemCenterCommand.GOT_DRAW_INFO_CMD="Got_Draw_Info_Cmd";
		SystemCenterCommand.BINDING_BANK_CMD="BINDING_BANK_Cmd";
		SystemCenterCommand.BINDING_BANK_COMPLETE_CMD="BINDING_BANK_COMPLETE_Cmd";
		SystemCenterCommand.GET_LOTTERY_LIST_CMD="GET_LOTTERY_LIST_Cmd";
		SystemCenterCommand.GET_LOTTERY_LIST_COMPLETE_CMD="GET_LOTTERY_LIST_COMPLETE_Cmd";
		SystemCenterCommand.SET_LOTTERY_LIST_CMD="SET_LOTTERY_LIST_Cmd";
		SystemCenterCommand.SET_LOTTERY_LIST_COMPLETE_CMD="SET_LOTTERY_LIST_COMPLETE_Cmd";
		SystemCenterCommand.CLOSE_LOTTERY_LIST_CMD="CLOSE_LOTTERY_LIST_Cmd";
		SystemCenterCommand.GET_USER_INFO_CMD="GET_USER_INFO_Cmd";
		SystemCenterCommand.GET_USER_INFO_COMPLETE_CMD="GET_USER_INFO_COMPLETE_Cmd";
		SystemCenterCommand.GET_USER_INFO_2_CMD="GET_USER_INFO_2_Cmd";
		SystemCenterCommand.GET_USER_INFO_COMPLETE_2_CMD="GET_USER_INFO_COMPLETE_2_Cmd";
		SystemCenterCommand.LOGIN_OUT_CMD="LOGIN_OUT_Cmd";
		SystemCenterCommand.LOGIN_OUT_COMPLETE_CMD="LOGIN_OUT_COMPLETE_Cmd";
		SystemCenterCommand.SET_INFO_CMD="SET_INFO_Cmd";
		SystemCenterCommand.SET_INFO_COMPLETE_CMD="SET_INFO_COMPLETE_Cmd";
		SystemCenterCommand.GET_MOBILE_CODE_CMD="Get_Mobile_Code_Cmd";
		SystemCenterCommand.GOT_MOBILE_CODE_CMD="Got_Mobile_Code_Cmd";
		SystemCenterCommand.UPDATE_FAVORITE_LIST_CMD="UPDATE_FAVORITE_LIST_Cmd";
		SystemCenterCommand.UPDATE_FAVORITE_PANEL_GAME_CMD="UPDATE_FAVORITE_PANEL_GAME_Cmd";
		return SystemCenterCommand;
	})(BaseServerCommand)


	//class game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoOne extends robotLegs.sprite.BaseGButton
	var NumberGamesZhuiHaoOne=(function(_super){
		function NumberGamesZhuiHaoOne(){
			this.__oneZhuiHaoVo=null;
			this.idTxt=null;
			this.timeTxt=null;
			this.beiTxt=null;
			this.moneyTxt=null;
			this.chooseBtn=null;
			this.openNumberKeyBtn=null;
			this.chooseController=null;
			NumberGamesZhuiHaoOne.__super.call(this);
		}

		__class(NumberGamesZhuiHaoOne,'game.numberGame.v.bet.zhuiHao.NumberGamesZhuiHaoOne',_super);
		var __proto=NumberGamesZhuiHaoOne.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.idTxt=this.getChild("idTxt");
			this.timeTxt=this.getChild("timeTxt");
			this.beiTxt=this.getChild("beiTxt");
			this.moneyTxt=this.getChild("moneyTxt");
			this.chooseBtn=this.getChild("chooseBtn");
			this.openNumberKeyBtn=this.getChild("openNumberKeyBtn");
			this.chooseController=this.getController("chooseController");
			this.chooseController.on("fui_state_changed",this,this.choose);
			this.openNumberKeyBtn.onClick(this,this.openNumberKey);
		}

		__proto.choose=function(){
			this.__oneZhuiHaoVo.chooseBol=this.chooseController.selectedIndex==0 ? false :true;
			this.updateBei(Number(this.beiTxt.text));
			this.sendNotification("Choose_Time_Cmd");
		}

		__proto.openNumberKey=function(){
			if(this.chooseController.selectedIndex==0)
				return;
			this.updateBei(0);
			this.sendNotification("Choose_Zhui_Hao_Time_Cmd",this.__oneZhuiHaoVo.id);
			this.sendNotification("Display_Number_Key_Cmd",1);
		}

		/**
		*更新倍率
		*
		*/
		__proto.updateBei=function(_bei){
			if(_bei > 99999){
				_bei=99999;
				this.showAlert("已达投注倍数上限。");
			}
			this.__oneZhuiHaoVo.bei=_bei;
			this.beiTxt.text=_bei.toString();
		}

		__proto.update=function(_oneZhuiHaoVo){
			this.__oneZhuiHaoVo=_oneZhuiHaoVo;
			this.idTxt.text=String(this.__oneZhuiHaoVo.id);
			this.moneyTxt.text=_oneZhuiHaoVo.money;
			this.timeTxt.text=this.__oneZhuiHaoVo.time;
			if(this.__oneZhuiHaoVo.bei > 99999){
				this.__oneZhuiHaoVo.bei=99999;
				this.showAlert("已达投注倍数上限。");
			};
			var bei=Number(this.__oneZhuiHaoVo.bei);
			this.chooseController.selectedIndex=this.__oneZhuiHaoVo.chooseBol ? 1 :0;
			if(bei > 1){
				this.updateBei(bei);
			}
			if(this.__oneZhuiHaoVo.chooseBol){
				this.beiTxt.text=bei > 0 ? String(bei):"0";
			}
		}

		return NumberGamesZhuiHaoOne;
	})(BaseGButton)


	//class game.numberGame.v.history.bjkl8.Bjkl8GameHistory extends game.numberGame.v.history.BaseGameHistory
	var Bjkl8GameHistory=(function(_super){
		function Bjkl8GameHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Bjkl8GameHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Bjkl8GameHistory,'game.numberGame.v.history.bjkl8.Bjkl8GameHistory',_super);
		var __proto=Bjkl8GameHistory.prototype;
		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGameHistory=obj;
			oneGameHistory.render(this.gameHistoryVo.oneHistoryVoArr[index]);
		}

		return Bjkl8GameHistory;
	})(BaseGameHistory)


	//class game.numberGame.v.history.bjpk10.Bjpk10GameHistory extends game.numberGame.v.history.BaseGameHistory
	var Bjpk10GameHistory=(function(_super){
		function Bjpk10GameHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Bjpk10GameHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Bjpk10GameHistory,'game.numberGame.v.history.bjpk10.Bjpk10GameHistory',_super);
		var __proto=Bjpk10GameHistory.prototype;
		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGameHistory=obj;
			oneGameHistory.render(this.gameHistoryVo.oneHistoryVoArr[index]);
		}

		return Bjpk10GameHistory;
	})(BaseGameHistory)


	//class game.numberGame.v.history.bjkl8.Bjkl8OneGameHistory extends game.numberGame.v.history.BaseOneGameHistory
	var Bjkl8OneGameHistory=(function(_super){
		function Bjkl8OneGameHistory(){
			Bjkl8OneGameHistory.__super.call(this);
			this.__numberCount=20;
		}

		__class(Bjkl8OneGameHistory,'game.numberGame.v.history.bjkl8.Bjkl8OneGameHistory',_super);
		return Bjkl8OneGameHistory;
	})(BaseOneGameHistory)


	//class game.numberGame.v.history.cqssc.CQSSCGameHistory extends game.numberGame.v.history.BaseGameHistory
	var CQSSCGameHistory=(function(_super){
		function CQSSCGameHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			CQSSCGameHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(CQSSCGameHistory,'game.numberGame.v.history.cqssc.CQSSCGameHistory',_super);
		var __proto=CQSSCGameHistory.prototype;
		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGameHistory=obj;
			oneGameHistory.render(this.gameHistoryVo.oneHistoryVoArr[index]);
		}

		return CQSSCGameHistory;
	})(BaseGameHistory)


	//class game.numberGame.v.history.bjpk10.Bjpk10OneGameHistory extends game.numberGame.v.history.BaseOneGameHistory
	var Bjpk10OneGameHistory=(function(_super){
		function Bjpk10OneGameHistory(){
			Bjpk10OneGameHistory.__super.call(this);
			this.__numberCount=10;
		}

		__class(Bjpk10OneGameHistory,'game.numberGame.v.history.bjpk10.Bjpk10OneGameHistory',_super);
		return Bjpk10OneGameHistory;
	})(BaseOneGameHistory)


	//class game.numberGame.v.history.fc3d.Fc3dGameHistory extends game.numberGame.v.history.BaseGameHistory
	var Fc3dGameHistory=(function(_super){
		function Fc3dGameHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Fc3dGameHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Fc3dGameHistory,'game.numberGame.v.history.fc3d.Fc3dGameHistory',_super);
		var __proto=Fc3dGameHistory.prototype;
		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGameHistory=obj;
			oneGameHistory.render(this.gameHistoryVo.oneHistoryVoArr[index]);
		}

		return Fc3dGameHistory;
	})(BaseGameHistory)


	//class game.numberGame.v.history.cqssc.CQSSCOneGameHistory extends game.numberGame.v.history.BaseOneGameHistory
	var CQSSCOneGameHistory=(function(_super){
		function CQSSCOneGameHistory(){
			CQSSCOneGameHistory.__super.call(this);
			this.__numberCount=5;
		}

		__class(CQSSCOneGameHistory,'game.numberGame.v.history.cqssc.CQSSCOneGameHistory',_super);
		return CQSSCOneGameHistory;
	})(BaseOneGameHistory)


	//class game.numberGame.v.history.hk6.Hk6GameHistory extends game.numberGame.v.history.BaseGameHistory
	var Hk6GameHistory=(function(_super){
		function Hk6GameHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Hk6GameHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Hk6GameHistory,'game.numberGame.v.history.hk6.Hk6GameHistory',_super);
		var __proto=Hk6GameHistory.prototype;
		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGameHistory=obj;
			oneGameHistory.render(this.gameHistoryVo.oneHistoryVoArr[index]);
		}

		return Hk6GameHistory;
	})(BaseGameHistory)


	//class game.numberGame.v.history.fc3d.Fc3dOneGameHistory extends game.numberGame.v.history.BaseOneGameHistory
	var Fc3dOneGameHistory=(function(_super){
		function Fc3dOneGameHistory(){
			Fc3dOneGameHistory.__super.call(this);
			this.__numberCount=4;
		}

		__class(Fc3dOneGameHistory,'game.numberGame.v.history.fc3d.Fc3dOneGameHistory',_super);
		return Fc3dOneGameHistory;
	})(BaseOneGameHistory)


	//class game.numberGame.v.history.jsk3.Jsk3GameHistory extends game.numberGame.v.history.BaseGameHistory
	var Jsk3GameHistory=(function(_super){
		function Jsk3GameHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Jsk3GameHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Jsk3GameHistory,'game.numberGame.v.history.jsk3.Jsk3GameHistory',_super);
		var __proto=Jsk3GameHistory.prototype;
		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGameHistory=obj;
			oneGameHistory.render(this.gameHistoryVo.oneHistoryVoArr[index]);
		}

		return Jsk3GameHistory;
	})(BaseGameHistory)


	//class game.numberGame.v.history.hk6.Hk6OneGameHistory extends game.numberGame.v.history.BaseOneGameHistory
	var Hk6OneGameHistory=(function(_super){
		function Hk6OneGameHistory(){
			Hk6OneGameHistory.__super.call(this);
			this.__numberCount=7;
		}

		__class(Hk6OneGameHistory,'game.numberGame.v.history.hk6.Hk6OneGameHistory',_super);
		return Hk6OneGameHistory;
	})(BaseOneGameHistory)


	//class game.numberGame.v.history.klsf.KlsfGameHistory extends game.numberGame.v.history.BaseGameHistory
	var KlsfGameHistory=(function(_super){
		function KlsfGameHistory(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			KlsfGameHistory.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(KlsfGameHistory,'game.numberGame.v.history.klsf.KlsfGameHistory',_super);
		var __proto=KlsfGameHistory.prototype;
		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneGameHistory=obj;
			oneGameHistory.render(this.gameHistoryVo.oneHistoryVoArr[index]);
		}

		return KlsfGameHistory;
	})(BaseGameHistory)


	//class game.numberGame.v.history.jsk3.Jsk3OneGameHistory extends game.numberGame.v.history.BaseOneGameHistory
	var Jsk3OneGameHistory=(function(_super){
		function Jsk3OneGameHistory(){
			Jsk3OneGameHistory.__super.call(this);
			this.__numberCount=3;
		}

		__class(Jsk3OneGameHistory,'game.numberGame.v.history.jsk3.Jsk3OneGameHistory',_super);
		return Jsk3OneGameHistory;
	})(BaseOneGameHistory)


	//class game.numberGame.v.menu.game.NumberGamesGameMenuOneGame extends robotLegs.sprite.BaseGButton
	var NumberGamesGameMenuOneGame=(function(_super){
		function NumberGamesGameMenuOneGame(){
			this.numberGamesGameMenuOneGameVo=null;
			this.gameNameTxt=null;
			this.chooseController=null;
			NumberGamesGameMenuOneGame.__super.call(this);
		}

		__class(NumberGamesGameMenuOneGame,'game.numberGame.v.menu.game.NumberGamesGameMenuOneGame',_super);
		var __proto=NumberGamesGameMenuOneGame.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.gameNameTxt=this.getChild("gameNameTxt");
			this.chooseController=this.getController("chooseController");
			this.onClick(this,this.chooseThisGame);
		}

		/**
		*更新数据
		*
		*/
		__proto.update=function(_numberGamesGameMenuOneGameVo){
			this.numberGamesGameMenuOneGameVo=_numberGamesGameMenuOneGameVo;
			this.gameNameTxt.text=this.numberGamesGameMenuOneGameVo.gameName;
			this.chooseController.selectedIndex=this.numberGamesGameMenuOneGameVo.chooseIndex;
		}

		/**
		*选中这个游戏
		*
		*/
		__proto.chooseThisGame=function(){
			this.sendNotification("Choose_One_Game_Cmd",this.numberGamesGameMenuOneGameVo.gameId);
		}

		return NumberGamesGameMenuOneGame;
	})(BaseGButton)


	//class game.numberGame.v.history.klsf.KlsfOneGameHistory extends game.numberGame.v.history.BaseOneGameHistory
	var KlsfOneGameHistory=(function(_super){
		function KlsfOneGameHistory(){
			KlsfOneGameHistory.__super.call(this);
			this.__numberCount=8;
		}

		__class(KlsfOneGameHistory,'game.numberGame.v.history.klsf.KlsfOneGameHistory',_super);
		return KlsfOneGameHistory;
	})(BaseOneGameHistory)


	//class game.numberGame.v.menu.game.NumberGamesGameMenuOneGameType extends robotLegs.sprite.BaseGButton
	var NumberGamesGameMenuOneGameType=(function(_super){
		function NumberGamesGameMenuOneGameType(){
			this.__oneGameTypeVo=null;
			this.lotteryTypeTxt=null;
			this.gameTitleBtn=null;
			this.countController=null;
			this.___menuOneGameArr=[];
			NumberGamesGameMenuOneGameType.__super.call(this);
		}

		__class(NumberGamesGameMenuOneGameType,'game.numberGame.v.menu.game.NumberGamesGameMenuOneGameType',_super);
		var __proto=NumberGamesGameMenuOneGameType.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.lotteryTypeTxt=this.getChild("lotteryTypeTxt");
			for(var i=0;i < 36;i++){
				this.___menuOneGameArr.push(this.getChild("comp$NumberGamesGameMenuOneGame$"+i));
			}
			this.countController=this.getController("countController");
			this.gameTitleBtn=this.getChild("gameTitleBtn");
			this.gameTitleBtn.onClick(this,this.open);
		}

		/**
		*更新
		*@param _oneGameTypeVo
		*
		*/
		__proto.update=function(_oneGameTypeVo){
			this.__oneGameTypeVo=_oneGameTypeVo;
			this.lotteryTypeTxt.text=_oneGameTypeVo.lotteryType;
			if(_oneGameTypeVo.openBol){
				this.countController.selectedIndex=_oneGameTypeVo.gameMenuOneGameVoArr.length;
			}
			else{
				this.countController.selectedIndex=0;
			}
			for(var i=0;i < _oneGameTypeVo.gameMenuOneGameVoArr.length;i++){
				this.___menuOneGameArr[i].update(_oneGameTypeVo.gameMenuOneGameVoArr[i]);
			}
		}

		__proto.open=function(){
			this.__oneGameTypeVo.openBol=!this.__oneGameTypeVo.openBol;
			this.sendNotification("Open_Close_Game_Menu_Type_Cmd",[this.__oneGameTypeVo.baseGame,this.__oneGameTypeVo.openBol]);
		}

		return NumberGamesGameMenuOneGameType;
	})(BaseGButton)


	//class game.numberGame.v.menu.playType.NumberGamesOnePlayType extends robotLegs.sprite.BaseGButton
	var NumberGamesOnePlayType=(function(_super){
		function NumberGamesOnePlayType(){
			this.numberGamesOnePlayTypeVo=null;
			this.playTypeController=null;
			this.playTypeTxt=null;
			this.checkClickGraph=null;
			this.__onePlayTypeBtnArr=[];
			NumberGamesOnePlayType.__super.call(this);
		}

		__class(NumberGamesOnePlayType,'game.numberGame.v.menu.playType.NumberGamesOnePlayType',_super);
		var __proto=NumberGamesOnePlayType.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.playTypeController=this.getController("playTypeController");
			this.playTypeTxt=this.getChild("playTypeTxt");
			this.checkClickGraph=this.getChild("checkClickGraph");
			for(var i=0;i < 20;i++){
				this.__onePlayTypeBtnArr.push(this.getChild("comp$NumberGamesOnePlayTypeBtn$"+i));
			}
			this.checkClickGraph.onClick(this,this.openOrClose);
		}

		__proto.update=function(_numberGamesOnePlayTypeVo){
			this.numberGamesOnePlayTypeVo=_numberGamesOnePlayTypeVo;
			this.playTypeTxt.text=this.numberGamesOnePlayTypeVo.playTypeName;
			if(this.numberGamesOnePlayTypeVo.offBol){
				this.playTypeController.selectedIndex=0;
				this.numberGamesOnePlayTypeVo.offBol=false;
			}
			if(this.numberGamesOnePlayTypeVo.chooseBol){
				this.numberGamesOnePlayTypeVo.chooseBol=false;
				this.clickPlayType();
			}
		}

		/**
		*展开列表
		*
		*/
		__proto.clickPlayType=function(){
			this.playTypeController.selectedIndex=this.numberGamesOnePlayTypeVo.onePlayTypeBtnVoArr.length;
			for(var i=0;i < this.numberGamesOnePlayTypeVo.onePlayTypeBtnVoArr.length;i++){
				this.__onePlayTypeBtnArr[i].update(this.numberGamesOnePlayTypeVo.onePlayTypeBtnVoArr[i]);
			}
		}

		/**
		*打开或关闭
		*
		*/
		__proto.openOrClose=function(){
			this.sendNotification("Off_Play_Type_Menu_Cmd");
			if(this.playTypeController.selectedIndex > 0){
				this.playTypeController.selectedIndex=0;
			}
			else{
				this.numberGamesOnePlayTypeVo.chooseBol=true;
				this.playTypeController.selectedIndex=this.numberGamesOnePlayTypeVo.onePlayTypeBtnVoArr.length;
			}
			this.sendNotification("Render_Play_Type_Menu_List_Cmd");
		}

		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var playTypeBtn=obj;
			playTypeBtn.update(this.numberGamesOnePlayTypeVo.onePlayTypeBtnVoArr[index]);
		}

		return NumberGamesOnePlayType;
	})(BaseGButton)


	//class game.numberGame.v.menu.playType.NumberGamesOnePlayTypeBtn extends robotLegs.sprite.BaseGButton
	var NumberGamesOnePlayTypeBtn=(function(_super){
		function NumberGamesOnePlayTypeBtn(){
			this.onePlayTypeBtnVo=null;
			this.typeNameTxt=null;
			this.chooseController=null;
			NumberGamesOnePlayTypeBtn.__super.call(this);
		}

		__class(NumberGamesOnePlayTypeBtn,'game.numberGame.v.menu.playType.NumberGamesOnePlayTypeBtn',_super);
		var __proto=NumberGamesOnePlayTypeBtn.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.typeNameTxt=this.getChild("typeNameTxt");
			this.chooseController=this.getController("chooseController");
			this.onClick(this,this.chooseSecoundPlayType);
		}

		__proto.update=function(_onePlayTypeBtnVo){
			this.onePlayTypeBtnVo=_onePlayTypeBtnVo;
			this.typeNameTxt.text=_onePlayTypeBtnVo.playTypeName;
			if(this.onePlayTypeBtnVo.chooseBol){
				this.onePlayTypeBtnVo.chooseBol=false;
				this.chooseController.selectedIndex=1;
			}
			else{
				this.chooseController.selectedIndex=0;
			}
		}

		/**
		*选择玩法
		*
		*/
		__proto.chooseSecoundPlayType=function(){
			this.sendNotification("Choose_One_Play_Type_Cmd",[this.onePlayTypeBtnVo.firstTypeName,this.onePlayTypeBtnVo.checkId]);
		}

		return NumberGamesOnePlayTypeBtn;
	})(BaseGButton)


	//class game.numberGame.v.number.boxType.NumberGamesSelectBoxNumber extends robotLegs.sprite.BaseGButton
	var NumberGamesSelectBoxNumber=(function(_super){
		function NumberGamesSelectBoxNumber(){
			this.boxNumberVo=null;
			this.titleTxt=null;
			NumberGamesSelectBoxNumber.__super.call(this);
		}

		__class(NumberGamesSelectBoxNumber,'game.numberGame.v.number.boxType.NumberGamesSelectBoxNumber',_super);
		var __proto=NumberGamesSelectBoxNumber.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.titleTxt=this.getChild("titleTxt");
			this.onClick(this,this.clickThisNumber);
		}

		__proto.update=function(_boxNumberVo){
			this.boxNumberVo=_boxNumberVo;
			this.selected=this.boxNumberVo.chooseBol;
			this.titleTxt.text=this.boxNumberVo.value;
		}

		/**
		*点击数字
		*
		*/
		__proto.clickThisNumber=function(){
			this.boxNumberVo.chooseBol=!this.boxNumberVo.chooseBol;
			if(this.boxNumberVo.chooseBol)
				this.displayObject.event("Reset_Others_Event",[this.boxNumberVo.value]);
			this.sendNotification("Choose_One_Number_Cmd",[this.boxNumberVo.value]);
		}

		return NumberGamesSelectBoxNumber;
	})(BaseGButton)


	//class game.numberGame.v.number.boxType.NumberGamesSelectBoxNumbers extends robotLegs.sprite.BaseGButton
	var NumberGamesSelectBoxNumbers=(function(_super){
		function NumberGamesSelectBoxNumbers(){
			this.lotteryNumbersVo=null;
			this.titleTxt=null;
			this.countController=null;
			this.comp$NumberGamesSelectBoxNumber$0=null;
			this.comp$NumberGamesSelectBoxNumber$1=null;
			this.comp$NumberGamesSelectBoxNumber$2=null;
			this.comp$NumberGamesSelectBoxNumber$3=null;
			this.comp$NumberGamesSelectBoxNumber$4=null;
			this.comp$NumberGamesSelectBoxNumber$5=null;
			this.comp$NumberGamesSelectBoxNumber$6=null;
			this.comp$NumberGamesSelectBoxNumber$7=null;
			this.comp$NumberGamesSelectBoxNumber$8=null;
			this.comp$NumberGamesSelectBoxNumber$9=null;
			this.comp$NumberGamesSelectBoxNumber$10=null;
			this.__lotteryNumberArr=[];
			NumberGamesSelectBoxNumbers.__super.call(this);
		}

		__class(NumberGamesSelectBoxNumbers,'game.numberGame.v.number.boxType.NumberGamesSelectBoxNumbers',_super);
		var __proto=NumberGamesSelectBoxNumbers.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.comp$NumberGamesSelectBoxNumber$0=this.getChild("comp$NumberGamesSelectBoxNumber$0");
			this.comp$NumberGamesSelectBoxNumber$1=this.getChild("comp$NumberGamesSelectBoxNumber$1");
			this.comp$NumberGamesSelectBoxNumber$2=this.getChild("comp$NumberGamesSelectBoxNumber$2");
			this.comp$NumberGamesSelectBoxNumber$3=this.getChild("comp$NumberGamesSelectBoxNumber$3");
			this.comp$NumberGamesSelectBoxNumber$4=this.getChild("comp$NumberGamesSelectBoxNumber$4");
			this.comp$NumberGamesSelectBoxNumber$5=this.getChild("comp$NumberGamesSelectBoxNumber$5");
			this.comp$NumberGamesSelectBoxNumber$6=this.getChild("comp$NumberGamesSelectBoxNumber$6");
			this.comp$NumberGamesSelectBoxNumber$7=this.getChild("comp$NumberGamesSelectBoxNumber$7");
			this.comp$NumberGamesSelectBoxNumber$8=this.getChild("comp$NumberGamesSelectBoxNumber$8");
			this.comp$NumberGamesSelectBoxNumber$9=this.getChild("comp$NumberGamesSelectBoxNumber$9");
			this.comp$NumberGamesSelectBoxNumber$10=this.getChild("comp$NumberGamesSelectBoxNumber$10");
			for(var i=0;i < 11;i++){
				(this["comp$NumberGamesSelectBoxNumber$"+i]).displayObject.on("Reset_Others_Event",this,this.resetOthers);
			}
			this.titleTxt=this.getChild("titleTxt");
			this.countController=this.getController("countController");
		}

		__proto.resetOthers=function(_info){
			if(!this.lotteryNumbersVo.singleBol)
				return;
			for(var i=0;i < this.lotteryNumbersVo.lotteryNumbersVoArr.length;i++){
				this.__lotteryNumberArr.push(this["comp$NumberGamesSelectBoxNumber$"+i]);
				this.lotteryNumbersVo.lotteryNumbersVoArr[i].chooseBol=false;
				if(this.lotteryNumbersVo.lotteryNumbersVoArr[i].value==_info){
					this.lotteryNumbersVo.lotteryNumbersVoArr[i].chooseBol=true;
				}
				this.__lotteryNumberArr[i].update(this.lotteryNumbersVo.lotteryNumbersVoArr[i]);
			}
		}

		/**
		*绘制
		*
		*/
		__proto.render=function(_lotteryNumbersVo){
			this.lotteryNumbersVo=_lotteryNumbersVo;
			this.titleTxt.text=this.lotteryNumbersVo.title;
			this.countController.selectedIndex=this.lotteryNumbersVo.lotteryNumbersVoArr.length;
			this.__lotteryNumberArr.length=0;
			for(var i=0;i < this.lotteryNumbersVo.lotteryNumbersVoArr.length;i++){
				this.__lotteryNumberArr.push(this["comp$NumberGamesSelectBoxNumber$"+i]);
				this.lotteryNumbersVo.lotteryNumbersVoArr[i].chooseBol=false;
				this.__lotteryNumberArr[i].update(this.lotteryNumbersVo.lotteryNumbersVoArr[i]);
			}
		}

		return NumberGamesSelectBoxNumbers;
	})(BaseGButton)


	//class game.numberGame.v.number.danTuo.NumberGamesOneDanTuo extends robotLegs.sprite.BaseGButton
	var NumberGamesOneDanTuo=(function(_super){
		function NumberGamesOneDanTuo(){
			this.numberGamesDanTuoVo=null;
			this.danMa$LotteryNumber2$0=null;
			this.danMa$LotteryNumber2$1=null;
			this.danMa$LotteryNumber2$2=null;
			this.danMa$LotteryNumber2$3=null;
			this.danMa$LotteryNumber2$4=null;
			this.danMa$LotteryNumber2$5=null;
			this.danMa$LotteryNumber2$6=null;
			this.danMa$LotteryNumber2$7=null;
			this.danMa$LotteryNumber2$8=null;
			this.danMa$LotteryNumber2$9=null;
			this.danMa$LotteryNumber2$10=null;
			this.danMa$LotteryNumber2$11=null;
			this.danMa$LotteryNumber2$12=null;
			this.danMa$LotteryNumber2$13=null;
			this.danMa$LotteryNumber2$14=null;
			this.danMa$LotteryNumber2$15=null;
			this.danMa$LotteryNumber2$16=null;
			this.danMa$LotteryNumber2$17=null;
			this.danMa$LotteryNumber2$18=null;
			this.danMa$LotteryNumber2$19=null;
			this.tuoMa$LotteryNumber2$0=null;
			this.tuoMa$LotteryNumber2$1=null;
			this.tuoMa$LotteryNumber2$2=null;
			this.tuoMa$LotteryNumber2$3=null;
			this.tuoMa$LotteryNumber2$4=null;
			this.tuoMa$LotteryNumber2$5=null;
			this.tuoMa$LotteryNumber2$6=null;
			this.tuoMa$LotteryNumber2$7=null;
			this.tuoMa$LotteryNumber2$8=null;
			this.tuoMa$LotteryNumber2$9=null;
			this.tuoMa$LotteryNumber2$10=null;
			this.tuoMa$LotteryNumber2$11=null;
			this.tuoMa$LotteryNumber2$12=null;
			this.tuoMa$LotteryNumber2$13=null;
			this.tuoMa$LotteryNumber2$14=null;
			this.tuoMa$LotteryNumber2$15=null;
			this.tuoMa$LotteryNumber2$16=null;
			this.tuoMa$LotteryNumber2$17=null;
			this.tuoMa$LotteryNumber2$18=null;
			this.tuoMa$LotteryNumber2$19=null;
			this.bigBtn=null;
			this.smallBtn=null;
			this.singleBtn=null;
			this.doubleBtn=null;
			this.allBtn=null;
			this.clearBtn=null;
			this.numberController=null;
			this.countController=null;
			this.__danMaLotteryNumber2Arr=[];
			this.__tuoMaLotteryNumber2Arr=[];
			NumberGamesOneDanTuo.__super.call(this);
		}

		__class(NumberGamesOneDanTuo,'game.numberGame.v.number.danTuo.NumberGamesOneDanTuo',_super);
		var __proto=NumberGamesOneDanTuo.prototype;
		__proto.init=function(_numberGamesDanTuoVo){
			this.numberGamesDanTuoVo=_numberGamesDanTuoVo;
			this.bigBtn=this.getChild("bigBtn");
			this.smallBtn=this.getChild("smallBtn");
			this.singleBtn=this.getChild("singleBtn");
			this.doubleBtn=this.getChild("doubleBtn");
			this.allBtn=this.getChild("allBtn");
			this.clearBtn=this.getChild("clearBtn");
			for(var i=0;i < 20;i++){
				this.__danMaLotteryNumber2Arr.push(this.getChild("danMa$LotteryNumber2$"+i));
				this.__tuoMaLotteryNumber2Arr.push(this.getChild("tuoMa$LotteryNumber2$"+i));
				this.__danMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.danMaNumberVoArr[i]);
				this.__tuoMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.tuoMaNumberVoArr[i]);
			}
			this.bigBtn.onClick(this,this.chooseNumbers,[1]);
			this.smallBtn.onClick(this,this.chooseNumbers,[2]);
			this.singleBtn.onClick(this,this.chooseNumbers,[3]);
			this.doubleBtn.onClick(this,this.chooseNumbers,[4]);
			this.allBtn.onClick(this,this.chooseNumbers,[5]);
			this.clearBtn.onClick(this,this.chooseNumbers,[6]);
			this.numberController=this.getController("numberController");
			this.countController=this.getController("countController");
		}

		/**
		*自动选择数字
		*
		*/
		__proto.chooseNumbers=function(_index){
			switch(_index){
				case 1:
					this.chooseBig();
					break ;
				case 2:
					this.chooseSmall();
					break ;
				case 3:
					this.chooseSingleDouble(1);
					break ;
				case 4:
					this.chooseSingleDouble(0);
					break ;
				case 5:
					this.chooseAll();
					break ;
				case 6:
					this.clearAll();
					this.numberController.selectedIndex=0;
					break ;
				}
			this.sendNotification("Choose_One_Number_Cmd");
		}

		/**
		*选择大
		*
		*/
		__proto.chooseBig=function(){
			var maxCount=11;
			if(this.countController.selectedIndex==2){
				maxCount=20;
			}
			if(this.countController.selectedIndex==1){
				maxCount=6
			};
			var half=Math.floor(maxCount / 2);
			for(var i=0;i < this.__tuoMaLotteryNumber2Arr.length;i++){
				if(i < half || this.numberGamesDanTuoVo.danMaNumberVoArr[i].chooseBol){
					this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=false;
				}
				else{
					this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=true;
				}
				this.__tuoMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.tuoMaNumberVoArr[i]);
			}
		}

		/**
		*选择小
		*
		*/
		__proto.chooseSmall=function(){
			var maxCount=11;
			if(this.countController.selectedIndex==2){
				maxCount=20;
			}
			if(this.countController.selectedIndex==1){
				maxCount=6
			};
			var half=Math.floor(maxCount / 2);
			for(var i=0;i < this.__tuoMaLotteryNumber2Arr.length;i++){
				if(i >=half || this.numberGamesDanTuoVo.danMaNumberVoArr[i].chooseBol){
					this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=false;
				}
				else{
					this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=true;
				}
				this.__tuoMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.tuoMaNumberVoArr[i]);
			}
		}

		/**
		*选择单
		*
		*/
		__proto.chooseSingleDouble=function(_value){
			var maxCount=11;
			if(this.countController.selectedIndex==2){
				maxCount=20;
			}
			if(this.countController.selectedIndex==1){
				maxCount=6
			}
			for(var i=0;i < maxCount;i++){
				if(this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].value % 2 !=_value || this.numberGamesDanTuoVo.danMaNumberVoArr[i].chooseBol){
					this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=false;
				}
				else{
					this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=true;
				}
				this.__tuoMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.tuoMaNumberVoArr[i]);
			}
		}

		/**
		*选择所有
		*
		*/
		__proto.chooseAll=function(){
			var maxCount=11;
			if(this.countController.selectedIndex==2){
				maxCount=20;
			}
			if(this.countController.selectedIndex==1){
				maxCount=6
			}
			for(var i=0;i < maxCount;i++){
				if(this.numberGamesDanTuoVo.danMaNumberVoArr[i].chooseBol){
					this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=false;
				}
				else{
					this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=true;
				}
				this.__tuoMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.tuoMaNumberVoArr[i]);
			}
		}

		/**
		*清除所有
		*
		*/
		__proto.clearAll=function(){
			for(var i=0;i < this.__tuoMaLotteryNumber2Arr.length;i++){
				this.numberGamesDanTuoVo.tuoMaNumberVoArr[i].chooseBol=false;
				this.__tuoMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.tuoMaNumberVoArr[i]);
			}
		}

		/**
		*更新所有的数字
		*
		*/
		__proto.updateAllNumbers=function(){
			for(var i=0;i < this.__tuoMaLotteryNumber2Arr.length;i++){
				this.countController.selectedIndex=this.numberGamesDanTuoVo.countIndex;
				if(this.__tuoMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.tuoMaNumberVoArr[i])){
					this.numberController.selectedIndex=0;
				}
				this.__danMaLotteryNumber2Arr[i].setSelectNumber(this.numberGamesDanTuoVo.danMaNumberVoArr[i]);
			}
		}

		/**
		*重置控制按钮
		*
		*/
		__proto.resetControlBtn=function(){
			this.numberController.selectedIndex=0;
		}

		return NumberGamesOneDanTuo;
	})(BaseGButton)


	//class game.numberGame.v.number.hk6h.Hk6hNumber extends robotLegs.sprite.BaseGButton
	var Hk6hNumber=(function(_super){
		function Hk6hNumber(){
			this.__lotteryNumberVo=null;
			Hk6hNumber.__super.call(this);
		}

		__class(Hk6hNumber,'game.numberGame.v.number.hk6h.Hk6hNumber',_super);
		var __proto=Hk6hNumber.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.onClick(this,this.clickThisNumber);
		}

		__proto.update=function(_lotteryNumberVo){
			this.__lotteryNumberVo=_lotteryNumberVo;
			if(this.getChild("title"))
				this.__lotteryNumberVo.value=Number((this.getChild("title")).text);
			this.selected=_lotteryNumberVo.chooseBol;
		}

		/**
		*点击数字
		*
		*/
		__proto.clickThisNumber=function(){
			this.__lotteryNumberVo.chooseBol=!this.__lotteryNumberVo.chooseBol;
			Events.dispatch("Reset_Ctrl_Btn_Event",this.displayObject);
			this.sendNotification("Choose_One_Number_Cmd");
		}

		return Hk6hNumber;
	})(BaseGButton)


	//class game.numberGame.v.number.hk6h.Hk6hSelectNumbers extends robotLegs.sprite.BaseGButton
	var Hk6hSelectNumbers=(function(_super){
		function Hk6hSelectNumbers(){
			this.__numberGamesZuXuanHeZhiNumbersVo=null;
			this.weiTxt=null;
			this.__hk6hNumberArr=[];
			Hk6hSelectNumbers.__super.call(this);
		}

		__class(Hk6hSelectNumbers,'game.numberGame.v.number.hk6h.Hk6hSelectNumbers',_super);
		var __proto=Hk6hSelectNumbers.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.weiTxt=this.getChild("weiTxt");
			for(var i=0;i < 49;i++){
				if(!this.getChild("comp$Hk6hNumber$"+i)){
					break ;
				}
				this.__hk6hNumberArr.push(this.getChild("comp$Hk6hNumber$"+i));
			}
		}

		__proto.render=function(_numberGamesZuXuanHeZhiNumbersVo){
			this.__numberGamesZuXuanHeZhiNumbersVo=_numberGamesZuXuanHeZhiNumbersVo;
			this.weiTxt.text=this.__numberGamesZuXuanHeZhiNumbersVo.title;
			for(var i=0;i < this.__hk6hNumberArr.length;i++){
				this.__hk6hNumberArr[i].update(this.__numberGamesZuXuanHeZhiNumbersVo.zuXuanHeZhiVoArr[i]);
			}
		}

		return Hk6hSelectNumbers;
	})(BaseGButton)


	//class game.numberGame.v.number.kl8rx.NumberGamesKL8RXNumber extends robotLegs.sprite.BaseGButton
	var NumberGamesKL8RXNumber=(function(_super){
		function NumberGamesKL8RXNumber(){
			this.__chooseBol=false;
			this.number=0;
			NumberGamesKL8RXNumber.__super.call(this);
		}

		__class(NumberGamesKL8RXNumber,'game.numberGame.v.number.kl8rx.NumberGamesKL8RXNumber',_super);
		var __proto=NumberGamesKL8RXNumber.prototype;
		__getset(0,__proto,'chooseBol',function(){
			return this.__chooseBol;
			},function(_chooseBol){
			this.__chooseBol=_chooseBol;
			if(this.__chooseBol){
				this.getController("button").selectedIndex=1;
			}
			else{
				this.getController("button").selectedIndex=0;
			}
		});

		return NumberGamesKL8RXNumber;
	})(BaseGButton)


	//class game.numberGame.v.number.kl8rx.NumberGamesKL8RXNumbers extends robotLegs.sprite.BaseGButton
	var NumberGamesKL8RXNumbers=(function(_super){
		function NumberGamesKL8RXNumbers(){
			this.__chooseValueArr=null;
			this.__maxCount=0;
			this.bController=null;
			this.clearBtn=null;
			this.bigArr=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40];
			this.smallArr=[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80];
			this.singleArr=[1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,57,59,61,63,65,67,69,71,73,75,77,79];
			this.doubleArr=[2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54];
			this.__numberArr=[];
			NumberGamesKL8RXNumbers.__super.call(this);
		}

		__class(NumberGamesKL8RXNumbers,'game.numberGame.v.number.kl8rx.NumberGamesKL8RXNumbers',_super);
		var __proto=NumberGamesKL8RXNumbers.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			for(var i=0;i < 80;i++){
				this.__numberArr.push(this.getChild("number_"+i));
				this.__numberArr[i].onClick(this,this.chooseNumber,[this.__numberArr[i]]);
				var number=i+1;
				this.__numberArr[i].number=number < 10 ? "0"+String(number):String(number);
			}
			this.clearBtn=this.getChild("clearBtn");
			this.clearBtn.onClick(this,this.clear);
			this.bController=this.getController("bController");
			this.bController.on("fui_state_changed",this,this.clickBtn);
		}

		/**
		*更新
		*
		*/
		__proto.update=function(_chooseValueArr,_maxCount){
			this.__chooseValueArr=_chooseValueArr;
			this.__maxCount=_maxCount;
			if(this.__chooseValueArr.length > 0)
				this.clear();
		}

		/**
		*点击按钮
		*
		*/
		__proto.clickBtn=function(){
			if(this.bController.selectedIndex==0)
				return;
			this._$4_reset();
			var numberArr=[];
			switch(this.bController.selectedIndex){
				case 1:{
						for(var i=41;i <=80;i++){
							numberArr.push(i);
						}
						break ;
					}
				case 2:{
						for(i=1;i <=40;i++){
							numberArr.push(i);
						}
						break ;
					}
				case 3:{
						for(i=1;i <=80;i++){
							if(i % 2==1){
								numberArr.push(i);
							}
						}
						break ;
					}
				case 4:{
						for(i=1;i <=80;i++){
							if(i % 2==0){
								numberArr.push(i);
							}
						}
						break ;
					}
				case 5:{
						numberArr=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79];
						break ;
					}
				case 6:{
						numberArr=[4,6,8,9,10,12,14,15,16,18,20,21,22,24,25,26,27,28,30,32,33,34,35,36,38,39,40,42,44,45,46,48,49,50,51,52,54,55,56,57,58,60,62,63,64,65,66,68,69,70,72,74,75,76,77,78,80];
						break ;
					}
				case 7:{
						for(i=1;i <=80;i++){
							numberArr.push(i);
						}
						break ;
					}
				};
			var maxCount=this.__maxCount;
			while(maxCount > 0){
				if(numberArr.length==0)
					break ;
				var randIndex=Math.floor(Math.random()*numberArr.length);
				var number=String(numberArr[randIndex]);
				if(number.length==1){
					number="0"+number;
				}
				this.__chooseValueArr.push(number);
				this.__numberArr[numberArr[randIndex]-1].chooseBol=true;
				numberArr.splice(randIndex,1);
				maxCount--;
			}
			this.sendNotification("Choose_One_Number_Cmd");
		}

		/**
		*清
		*
		*/
		__proto.clear=function(){
			this.bController.selectedIndex=0;
			this._$4_reset();
		}

		/**
		*重置
		*
		*/
		__proto._$4_reset=function(){
			this.__chooseValueArr.length=0;
			for(var i=0;i < this.__numberArr.length;i++){
				this.__numberArr[i].chooseBol=false;
			}
			this.sendNotification("Choose_One_Number_Cmd");
		}

		/**
		*选择号码
		*
		*/
		__proto.chooseNumber=function(_number){
			this.bController.selectedIndex=0;
			if(_number.chooseBol){
				_number.chooseBol=false;
				this.__chooseValueArr.splice(this.__chooseValueArr.indexOf(_number.number),1);
			}
			else{
				if(this.__chooseValueArr.length >=this.__maxCount){
					this.showAlert("对不起，当前玩法最多选择8个号码");
					return;
				}
				_number.chooseBol=true;
				this.__chooseValueArr.push(_number.number);
			}
			this.sendNotification("Choose_One_Number_Cmd");
		}

		return NumberGamesKL8RXNumbers;
	})(BaseGButton)


	//class game.numberGame.v.number.numbersType.LotteryNumber extends robotLegs.sprite.BaseGButton
	var LotteryNumber=(function(_super){
		function LotteryNumber(){
			this.lotteryNumberVo=null;
			this.numberController=null;
			this.skinController=null;
			LotteryNumber.__super.call(this);
		}

		__class(LotteryNumber,'game.numberGame.v.number.numbersType.LotteryNumber',_super);
		var __proto=LotteryNumber.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.numberController=this.getController("numberController");
			this.skinController=this.getController("skinController");
			this.onClick(this,this.clickThisNumber);
		}

		/**
		*设置是否选择了数字
		*
		*/
		__proto.setSelectNumber=function(_lotteryNumberVo){
			this.lotteryNumberVo=_lotteryNumberVo;
			this.selected=this.lotteryNumberVo.chooseBol;
			this.numberController.selectedIndex=Number(this.lotteryNumberVo.value);
			if(this.skinController)
				this.skinController.selectedIndex=this.lotteryNumberVo.skinIndex;
		}

		/**
		*点击数字
		*
		*/
		__proto.clickThisNumber=function(){
			if(!this.lotteryNumberVo)
				return;
			this.lotteryNumberVo.chooseBol=!this.lotteryNumberVo.chooseBol;
			Events.dispatch("Reset_Ctrl_Btn_Event",this.displayObject);
			this.sendNotification("Choose_One_Number_Cmd",[this.numberController.selectedIndex,this.lotteryNumberVo]);
		}

		return LotteryNumber;
	})(BaseGButton)


	//class game.numberGame.v.number.numbersType.LotteryNumbers extends robotLegs.sprite.BaseGButton
	var LotteryNumbers=(function(_super){
		function LotteryNumbers(){
			this.lotteryNumbersVo=null;
			this.weiTxt=null;
			this.comp$LotteryNumber$0=null;
			this.comp$LotteryNumber$1=null;
			this.comp$LotteryNumber$2=null;
			this.comp$LotteryNumber$3=null;
			this.comp$LotteryNumber$4=null;
			this.comp$LotteryNumber$5=null;
			this.comp$LotteryNumber$6=null;
			this.comp$LotteryNumber$7=null;
			this.comp$LotteryNumber$8=null;
			this.comp$LotteryNumber$9=null;
			this.comp$LotteryNumber$10=null;
			this.comp$LotteryNumber$11=null;
			this.comp$LotteryNumber$12=null;
			this.comp$LotteryNumber$13=null;
			this.comp$LotteryNumber$14=null;
			this.comp$LotteryNumber$15=null;
			this.comp$LotteryNumber$16=null;
			this.comp$LotteryNumber$17=null;
			this.comp$LotteryNumber$18=null;
			this.comp$LotteryNumber$19=null;
			this.comp$LotteryNumber$20=null;
			this.comp$LotteryNumber$21=null;
			this.comp$LotteryNumber$22=null;
			this.comp$LotteryNumber$23=null;
			this.comp$LotteryNumber$24=null;
			this.comp$LotteryNumber$25=null;
			this.comp$LotteryNumber$26=null;
			this.comp$LotteryNumber$27=null;
			this.bigBtn=null;
			this.smallBtn=null;
			this.singleBtn=null;
			this.doubleBtn=null;
			this.allBtn=null;
			this.clearBtn=null;
			this.countController=null;
			this.numberController=null;
			this.lotteryNumberArr=[];
			LotteryNumbers.__super.call(this);
		}

		__class(LotteryNumbers,'game.numberGame.v.number.numbersType.LotteryNumbers',_super);
		var __proto=LotteryNumbers.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.weiTxt=this.getChild("weiTxt");
			this.comp$LotteryNumber$0=this.getChild("comp$LotteryNumber$0");
			this.comp$LotteryNumber$1=this.getChild("comp$LotteryNumber$1");
			this.comp$LotteryNumber$2=this.getChild("comp$LotteryNumber$2");
			this.comp$LotteryNumber$3=this.getChild("comp$LotteryNumber$3");
			this.comp$LotteryNumber$4=this.getChild("comp$LotteryNumber$4");
			this.comp$LotteryNumber$5=this.getChild("comp$LotteryNumber$5");
			this.comp$LotteryNumber$6=this.getChild("comp$LotteryNumber$6");
			this.comp$LotteryNumber$7=this.getChild("comp$LotteryNumber$7");
			this.comp$LotteryNumber$8=this.getChild("comp$LotteryNumber$8");
			this.comp$LotteryNumber$9=this.getChild("comp$LotteryNumber$9");
			this.comp$LotteryNumber$10=this.getChild("comp$LotteryNumber$10");
			this.comp$LotteryNumber$11=this.getChild("comp$LotteryNumber$11");
			this.comp$LotteryNumber$12=this.getChild("comp$LotteryNumber$12");
			this.comp$LotteryNumber$13=this.getChild("comp$LotteryNumber$13");
			this.comp$LotteryNumber$14=this.getChild("comp$LotteryNumber$14");
			this.comp$LotteryNumber$15=this.getChild("comp$LotteryNumber$15");
			this.comp$LotteryNumber$16=this.getChild("comp$LotteryNumber$16");
			this.comp$LotteryNumber$17=this.getChild("comp$LotteryNumber$17");
			this.comp$LotteryNumber$18=this.getChild("comp$LotteryNumber$18");
			this.comp$LotteryNumber$19=this.getChild("comp$LotteryNumber$19");
			this.comp$LotteryNumber$20=this.getChild("comp$LotteryNumber$20");
			this.comp$LotteryNumber$21=this.getChild("comp$LotteryNumber$21");
			this.comp$LotteryNumber$22=this.getChild("comp$LotteryNumber$22");
			this.comp$LotteryNumber$23=this.getChild("comp$LotteryNumber$23");
			this.comp$LotteryNumber$24=this.getChild("comp$LotteryNumber$24");
			this.comp$LotteryNumber$25=this.getChild("comp$LotteryNumber$25");
			this.comp$LotteryNumber$26=this.getChild("comp$LotteryNumber$26");
			this.comp$LotteryNumber$27=this.getChild("comp$LotteryNumber$27");
			this.countController=this.getController("countController");
			this.numberController=this.getController("numberController");
			this.bigBtn=this.getChild("bigBtn");
			this.smallBtn=this.getChild("smallBtn");
			this.singleBtn=this.getChild("singleBtn");
			this.doubleBtn=this.getChild("doubleBtn");
			this.allBtn=this.getChild("allBtn");
			this.clearBtn=this.getChild("clearBtn");
			this.bigBtn.onClick(this,this.chooseNumbers,[1]);
			this.smallBtn.onClick(this,this.chooseNumbers,[2]);
			this.singleBtn.onClick(this,this.chooseNumbers,[3]);
			this.doubleBtn.onClick(this,this.chooseNumbers,[4]);
			this.allBtn.onClick(this,this.chooseNumbers,[5]);
			this.clearBtn.onClick(this,this.chooseNumbers,[6]);
		}

		/**
		*绘制
		*
		*/
		__proto.render=function(_lotteryNumbersVo){
			this.lotteryNumbersVo=_lotteryNumbersVo;
			this.weiTxt.text=this.lotteryNumbersVo.wei;
			if(this.lotteryNumbersVo.resetBol){
				this.numberController.selectedIndex=0;
				this.lotteryNumbersVo.resetBol=false;
			}
			this.countController.selectedPage=String(this.lotteryNumbersVo.numberCount);
			this.lotteryNumberArr.length=0;
			for(var i=0;i < this.lotteryNumbersVo.numberCount;i++){
				this.lotteryNumberArr.push(this["comp$LotteryNumber$"+i]);
				this.lotteryNumbersVo.numberVoArr[i].chooseBol=false;
				this.lotteryNumberArr[i].setSelectNumber(this.lotteryNumbersVo.numberVoArr[i]);
				this.lotteryNumberArr[i].displayObject.on("Reset_Ctrl_Btn_Event",this,this.resetCtrlBtn);
			}
		}

		/**
		*点击某个号码，充值操作按钮
		*
		*/
		__proto.resetCtrlBtn=function(){
			this.numberController.selectedIndex=0;
		}

		/**
		*自动选择数字
		*
		*/
		__proto.chooseNumbers=function(_index){
			this.render(this.lotteryNumbersVo);
			switch(_index){
				case 1:
					this.chooseBig();
					break ;
				case 2:
					this.chooseSmall();
					break ;
				case 3:
					this.chooseSingleDouble(1);
					break ;
				case 4:
					this.chooseSingleDouble(0);
					break ;
				case 5:
					this.chooseAll();
					break ;
				case 6:
					this.numberController.selectedIndex=0;
					break ;
				}
			this.sendNotification("Choose_One_Number_Cmd");
		}

		/**
		*选择大
		*
		*/
		__proto.chooseBig=function(){
			var half=Math.floor(this.lotteryNumberArr.length / 2);
			for(var i=0;i < this.lotteryNumberArr.length;i++){
				if(i < half){
					this.lotteryNumbersVo.numberVoArr[i].chooseBol=false;
				}
				else{
					this.lotteryNumbersVo.numberVoArr[i].chooseBol=true;
				}
				this.lotteryNumberArr[i].setSelectNumber(this.lotteryNumbersVo.numberVoArr[i]);
			}
		}

		/**
		*选择小
		*
		*/
		__proto.chooseSmall=function(){
			var half=Math.floor(this.lotteryNumberArr.length / 2);
			for(var i=0;i < this.lotteryNumberArr.length;i++){
				if(i >=half){
					this.lotteryNumbersVo.numberVoArr[i].chooseBol=false;
				}
				else{
					this.lotteryNumbersVo.numberVoArr[i].chooseBol=true;
				}
				this.lotteryNumberArr[i].setSelectNumber(this.lotteryNumbersVo.numberVoArr[i]);
			}
		}

		/**
		*选择单
		*
		*/
		__proto.chooseSingleDouble=function(_value){
			for(var i=0;i < this.lotteryNumberArr.length;i++){
				if(this.lotteryNumbersVo.numberVoArr[i].value % 2==_value){
					this.lotteryNumbersVo.numberVoArr[i].chooseBol=true;
				}
				else{
					this.lotteryNumbersVo.numberVoArr[i].chooseBol=false;
				}
				this.lotteryNumberArr[i].setSelectNumber(this.lotteryNumbersVo.numberVoArr[i]);
			}
		}

		/**
		*选择所有
		*
		*/
		__proto.chooseAll=function(){
			for(var i=0;i < this.lotteryNumberArr.length;i++){
				this.lotteryNumbersVo.numberVoArr[i].chooseBol=true;
				this.lotteryNumberArr[i].setSelectNumber(this.lotteryNumbersVo.numberVoArr[i]);
			}
		}

		return LotteryNumbers;
	})(BaseGButton)


	//class game.numberGame.v.number.pk10.dragonTiger.PK10OneDragonTiger extends robotLegs.sprite.BaseGButton
	var PK10OneDragonTiger=(function(_super){
		function PK10OneDragonTiger(){
			this.pK10OneDragonTigerVo=null;
			this.titleTxt1=null;
			this.titleTxt2=null;
			this.titleTxt3=null;
			this.choseController=null;
			PK10OneDragonTiger.__super.call(this);
		}

		__class(PK10OneDragonTiger,'game.numberGame.v.number.pk10.dragonTiger.PK10OneDragonTiger',_super);
		var __proto=PK10OneDragonTiger.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.choseController=this.getController("choseController");
			this.titleTxt1=this.getChild("titleTxt1");
			this.titleTxt2=this.getChild("titleTxt2");
			this.titleTxt3=this.getChild("titleTxt3");
			this.choseController.on("fui_state_changed",this,this.stateChanged);
		}

		/**
		*　更新
		*@param _pK10OneDragonTigerVo
		*
		*/
		__proto.update=function(_pK10OneDragonTigerVo){
			this.pK10OneDragonTigerVo=_pK10OneDragonTigerVo;
			var titleArr=this.pK10OneDragonTigerVo.title.split("VS");
			while(titleArr[0].indexOf(" ")>-1)
			titleArr[0]=String(titleArr[0]).replace(" ","");
			while(titleArr[1].indexOf(" ")>-1)
			titleArr[1]=String(titleArr[1]).replace(" ","");
			this.titleTxt1.text=titleArr[0];
			this.titleTxt3.text=titleArr[1];
			this.choseController.selectedIndex=0;
		}

		/**
		*选择一个
		*
		*/
		__proto.stateChanged=function(){
			this.pK10OneDragonTigerVo.value=this.choseController.selectedPage;
			this.sendNotification("Choose_One_Number_Cmd");
		}

		return PK10OneDragonTiger;
	})(BaseGButton)


	//class game.numberGame.v.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiNumbers extends robotLegs.sprite.BaseGButton
	var NumberGamesZuXuanHeZhiNumbers=(function(_super){
		function NumberGamesZuXuanHeZhiNumbers(){
			this.numberGamesZuXuanHeZhiNumbersVo=null;
			this.weiTxt=null;
			this.countController=null;
			this.__lotteryNumberArr=[];
			NumberGamesZuXuanHeZhiNumbers.__super.call(this);
		}

		__class(NumberGamesZuXuanHeZhiNumbers,'game.numberGame.v.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiNumbers',_super);
		var __proto=NumberGamesZuXuanHeZhiNumbers.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.weiTxt=this.getChild("weiTxt");
			this.countController=this.getController("countController");
			for(var i=0;i < 46;i++){
				this.__lotteryNumberArr.push(this.getChild("comp$LotteryNumber$"+i));
			}
		}

		/**
		*绘制
		*
		*/
		__proto.render=function(_zuXuanHeZhiNumbersVo){
			this.numberGamesZuXuanHeZhiNumbersVo=_zuXuanHeZhiNumbersVo;
			this.weiTxt.text=this.numberGamesZuXuanHeZhiNumbersVo.title;
			this.countController.selectedIndex=this.numberGamesZuXuanHeZhiNumbersVo.numberCount;
			for(var i=0;i < this.numberGamesZuXuanHeZhiNumbersVo.numberCount;i++){
				if(this.numberGamesZuXuanHeZhiNumbersVo.zuXuanHeZhiVoArr[i].danBol){
					this.numberGamesZuXuanHeZhiNumbersVo.zuXuanHeZhiVoArr[i].danBol=false;
				}
				else{
					this.numberGamesZuXuanHeZhiNumbersVo.zuXuanHeZhiVoArr[i].chooseBol=false;
				}
				this.__lotteryNumberArr[i].setSelectNumber(this.numberGamesZuXuanHeZhiNumbersVo.zuXuanHeZhiVoArr[i]);
			}
		}

		return NumberGamesZuXuanHeZhiNumbers;
	})(BaseGButton)


	//class game.numberGame.v.number.bs.NumberGamesSelectBSNumbers1 extends game.numberGame.v.number.bs.NumberGamesSelectBSNumbers
	var NumberGamesSelectBSNumbers1=(function(_super){
		function NumberGamesSelectBSNumbers1(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.comp$NumberGamesSelectBSNumber$0=null;
			this.comp$NumberGamesSelectBSNumber$1=null;
			this.comp$NumberGamesSelectBSNumber$2=null;
			this.comp$NumberGamesSelectBSNumber$3=null;
			this.comp$NumberGamesSelectBSNumber$4=null;
			this.comp$NumberGamesSelectBSNumber$5=null;
			this.comp$NumberGamesSelectBSNumber$6=null;
			this.comp$NumberGamesSelectBSNumber$7=null;
			this.comp$NumberGamesSelectBSNumber$8=null;
			this.comp$NumberGamesSelectBSNumber$9=null;
			this.comp$NumberGamesSelectBSNumber$10=null;
			this.comp$NumberGamesSelectBSNumber$11=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectBSNumbers1.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectBSNumbers1,'game.numberGame.v.number.bs.NumberGamesSelectBSNumbers1',_super);
		var __proto=NumberGamesSelectBSNumbers1.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.comp$NumberGamesSelectBSNumber$0.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[0]);
			this.comp$NumberGamesSelectBSNumber$1.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[1]);
			this.comp$NumberGamesSelectBSNumber$2.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[2]);
			this.comp$NumberGamesSelectBSNumber$3.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[3]);
			this.comp$NumberGamesSelectBSNumber$4.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[4]);
			this.comp$NumberGamesSelectBSNumber$5.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[5]);
			this.comp$NumberGamesSelectBSNumber$6.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[6]);
			this.comp$NumberGamesSelectBSNumber$7.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[7]);
			this.comp$NumberGamesSelectBSNumber$8.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[8]);
			this.comp$NumberGamesSelectBSNumber$9.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[9]);
			this.comp$NumberGamesSelectBSNumber$10.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[10]);
			this.comp$NumberGamesSelectBSNumber$11.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[11]);
		}

		return NumberGamesSelectBSNumbers1;
	})(NumberGamesSelectBSNumbers)


	//class game.numberGame.v.number.bs.NumberGamesSelectBSNumbers2 extends game.numberGame.v.number.bs.NumberGamesSelectBSNumbers
	var NumberGamesSelectBSNumbers2=(function(_super){
		function NumberGamesSelectBSNumbers2(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.comp$NumberGamesSelectBSNumber$0=null;
			this.comp$NumberGamesSelectBSNumber$1=null;
			this.comp$NumberGamesSelectBSNumber$2=null;
			this.comp$NumberGamesSelectBSNumber$3=null;
			this.comp$NumberGamesSelectBSNumber$4=null;
			this.comp$NumberGamesSelectBSNumber$5=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectBSNumbers2.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectBSNumbers2,'game.numberGame.v.number.bs.NumberGamesSelectBSNumbers2',_super);
		var __proto=NumberGamesSelectBSNumbers2.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.comp$NumberGamesSelectBSNumber$0.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[0]);
			this.comp$NumberGamesSelectBSNumber$1.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[1]);
			this.comp$NumberGamesSelectBSNumber$2.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[2]);
			this.comp$NumberGamesSelectBSNumber$3.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[3]);
			this.comp$NumberGamesSelectBSNumber$4.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[4]);
			this.comp$NumberGamesSelectBSNumber$5.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[5]);
		}

		return NumberGamesSelectBSNumbers2;
	})(NumberGamesSelectBSNumbers)


	//class game.numberGame.v.number.bs.NumberGamesSelectBSNumbers3 extends game.numberGame.v.number.bs.NumberGamesSelectBSNumbers
	var NumberGamesSelectBSNumbers3=(function(_super){
		function NumberGamesSelectBSNumbers3(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.comp$NumberGamesSelectBSNumber$0=null;
			this.comp$NumberGamesSelectBSNumber$1=null;
			this.comp$NumberGamesSelectBSNumber$2=null;
			this.comp$NumberGamesSelectBSNumber$3=null;
			this.comp$NumberGamesSelectBSNumber$4=null;
			this.comp$NumberGamesSelectBSNumber$5=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectBSNumbers3.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectBSNumbers3,'game.numberGame.v.number.bs.NumberGamesSelectBSNumbers3',_super);
		var __proto=NumberGamesSelectBSNumbers3.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.comp$NumberGamesSelectBSNumber$0.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[0]);
			this.comp$NumberGamesSelectBSNumber$1.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[1]);
			this.comp$NumberGamesSelectBSNumber$2.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[2]);
			this.comp$NumberGamesSelectBSNumber$3.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[3]);
			this.comp$NumberGamesSelectBSNumber$4.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[4]);
			this.comp$NumberGamesSelectBSNumber$5.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[5]);
		}

		return NumberGamesSelectBSNumbers3;
	})(NumberGamesSelectBSNumbers)


	//class game.numberGame.v.shoppingCart.ShoppingCartOneBet extends robotLegs.sprite.BaseGButton
	var ShoppingCartOneBet=(function(_super){
		function ShoppingCartOneBet(){
			this.nameTxt=null;
			this.timeTxt=null;
			this.playTypeLable=null;
			this.onePriceLabel=null;
			this.beiLabel=null;
			this.priceLabel=null;
			this.numberTxt=null;
			this.checkInfoBg=null;
			this.deleteBtn=null;
			this.betOneVo=null;
			ShoppingCartOneBet.__super.call(this);
		}

		__class(ShoppingCartOneBet,'game.numberGame.v.shoppingCart.ShoppingCartOneBet',_super);
		var __proto=ShoppingCartOneBet.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.nameTxt=this.getChild("nameTxt");
			this.timeTxt=this.getChild("timeTxt");
			this.numberTxt=this.getChild("numberTxt");
			this.playTypeLable=this.getChild("playTypeLable");
			this.onePriceLabel=this.getChild("onePriceLabel");
			this.beiLabel=this.getChild("beiLabel");
			this.priceLabel=this.getChild("priceLabel");
			this.deleteBtn=this.getChild("deleteBtn");
			this.checkInfoBg=this.getChild("checkInfoBg");
			this.deleteBtn.onClick(this,this.deleteBet);
			this.checkInfoBg.onClick(this,this.checkInfo);
		}

		__proto.update=function(_betOneVo){
			this.betOneVo=_betOneVo;
			this.nameTxt.text=_betOneVo.name;
			this.timeTxt.text="第"+_betOneVo.time+"期";
			this.playTypeLable.text=_betOneVo.playType;
			this.onePriceLabel.text=_betOneVo.onePrice.toString();
			this.beiLabel.text=_betOneVo.bei.toString()+"倍";
			this.priceLabel.text=_betOneVo.totalPrice.toFixed(3)+"元";
			this.numberTxt.text=_betOneVo.numbers.length > 35 ? _betOneVo.numbers.substr(0,32)+"..." :_betOneVo.numbers;
		}

		/**
		*删除
		*
		*/
		__proto.deleteBet=function(){
			this.sendNotification("Delete_Shopping_Cart_Cmd",this.betOneVo.id);
		}

		__proto.checkInfo=function(){
			this.sendNotification("OPEN_OR_CLOSE_SHOPPING_CART_INF_CMD",[1,this.betOneVo]);
		}

		return ShoppingCartOneBet;
	})(BaseGButton)


	//class game.numberGame.v.number.bs.NumberGamesSelectBSNumbers4 extends game.numberGame.v.number.bs.NumberGamesSelectBSNumbers
	var NumberGamesSelectBSNumbers4=(function(_super){
		function NumberGamesSelectBSNumbers4(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.comp$NumberGamesSelectBSNumber$0=null;
			this.comp$NumberGamesSelectBSNumber$1=null;
			this.comp$NumberGamesSelectBSNumber$2=null;
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectBSNumbers4.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectBSNumbers4,'game.numberGame.v.number.bs.NumberGamesSelectBSNumbers4',_super);
		var __proto=NumberGamesSelectBSNumbers4.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			this.comp$NumberGamesSelectBSNumber$0.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[0]);
			this.comp$NumberGamesSelectBSNumber$1.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[1]);
			this.comp$NumberGamesSelectBSNumber$2.bindViewVo(this.numberGamesSelectBSNumbersVo.numberGamesSelectBSNumberVoArr[2]);
		}

		return NumberGamesSelectBSNumbers4;
	})(NumberGamesSelectBSNumbers)


	//class game.numberGame.v.shuZiPan.bet.ShuZiPanBetWindowOneBet extends robotLegs.sprite.BaseGButton
	var ShuZiPanBetWindowOneBet=(function(_super){
		function ShuZiPanBetWindowOneBet(){
			this.oneBetVo=null;
			this.gameNameTxt=null;
			this.typeTxt=null;
			this.nameTxt=null;
			this.moneyTxt=null;
			ShuZiPanBetWindowOneBet.__super.call(this);
		}

		__class(ShuZiPanBetWindowOneBet,'game.numberGame.v.shuZiPan.bet.ShuZiPanBetWindowOneBet',_super);
		var __proto=ShuZiPanBetWindowOneBet.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.gameNameTxt=this.getChild("gameNameTxt");
			this.typeTxt=this.getChild("typeTxt");
			this.nameTxt=this.getChild("nameTxt");
			this.moneyTxt=this.getChild("moneyTxt");
		}

		__proto.update=function(_oneBetVo){
			this.oneBetVo=_oneBetVo;
			this.gameNameTxt.text=this.oneBetVo.gameName;
			this.typeTxt.text=this.oneBetVo.type;
			this.nameTxt.text=this.oneBetVo.number;
			this.moneyTxt.text="￥"+String(this.oneBetVo.money);
		}

		return ShuZiPanBetWindowOneBet;
	})(BaseGButton)


	//class game.numberGame.v.shuZiPan.menu.OneShuZiPanMenuBtn extends robotLegs.sprite.BaseGButton
	var OneShuZiPanMenuBtn=(function(_super){
		function OneShuZiPanMenuBtn(){
			this.oneShuZiPanMenuBtnVo=null;
			this.chooseController=null;
			OneShuZiPanMenuBtn.__super.call(this);
		}

		__class(OneShuZiPanMenuBtn,'game.numberGame.v.shuZiPan.menu.OneShuZiPanMenuBtn',_super);
		var __proto=OneShuZiPanMenuBtn.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.chooseController=this.getController("chooseController");
			this.onClick(this,this.chooseOneType);
		}

		__proto.update=function(_oneShuZiPanMenuBtnVo){
			this.oneShuZiPanMenuBtnVo=_oneShuZiPanMenuBtnVo;
			this.title=this.oneShuZiPanMenuBtnVo.name;
			if(this.oneShuZiPanMenuBtnVo.chooseBol){
				this.chooseController.selectedIndex=1;
			}
			else{
				this.chooseController.selectedIndex=0;
			}
		}

		/**
		*选了一种菜单类型
		*
		*/
		__proto.chooseOneType=function(){
			this.sendNotification("Choose_Shu_Zi_Pan_Type_Cmd",this.oneShuZiPanMenuBtnVo.type);
		}

		return OneShuZiPanMenuBtn;
	})(BaseGButton)


	//class game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType extends robotLegs.sprite.BaseGButton
	var BaseShuZiPanOneType=(function(_super){
		function BaseShuZiPanOneType(){
			this.typeNameTxt=null;
			this.numberController=null;
			this.__oneNumberArr=[];
			BaseShuZiPanOneType.__super.call(this);
		}

		__class(BaseShuZiPanOneType,'game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType',_super);
		var __proto=BaseShuZiPanOneType.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.typeNameTxt=this.getChild("typeNameTxt");
			this.numberController=this.getController("numberController");
			for(var i=0;i < 80;i++){
				var oneNumber=this.getChild("shuZiPanOneType_"+i);
				if(!oneNumber){
					break ;
				}
				this.__oneNumberArr.push(oneNumber);
			}
		}

		__proto.update=function(_oneTypeVo){
			this.typeNameTxt.text=_oneTypeVo.title;
			this.numberController.selectedIndex=_oneTypeVo.oneNumberVoArr.length;
			for(var i=0;i < _oneTypeVo.oneNumberVoArr.length;i++){
				this.__oneNumberArr[i].update(_oneTypeVo.oneNumberVoArr[i]);
			}
		}

		return BaseShuZiPanOneType;
	})(BaseGButton)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneNumber extends robotLegs.sprite.BaseGButton
	var ShuZiPanOneNumber=(function(_super){
		function ShuZiPanOneNumber(){
			this.oneNumberVo=null;
			this.nameTxt=null;
			this.valueTxt=null;
			this.chooseController=null;
			ShuZiPanOneNumber.__super.call(this);
		}

		__class(ShuZiPanOneNumber,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneNumber',_super);
		var __proto=ShuZiPanOneNumber.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.nameTxt=this.getChild("nameTxt");
			this.valueTxt=this.getChild("valueTxt");
			this.chooseController=this.getController("chooseController");
			this.onClick(this,this.chooseOneNumber);
		}

		/**
		*更新
		*@param _oneNumberVo
		*
		*/
		__proto.update=function(_oneNumberVo){
			this.oneNumberVo=_oneNumberVo;
			if(this.nameTxt)
				this.nameTxt.text=_oneNumberVo.name;
			this.valueTxt.text=String(_oneNumberVo.value);
			this.oneNumberVo.chooseIndex=this.oneNumberVo.chooseIndex==1 ? 1 :0;
			this.chooseController.selectedIndex=this.oneNumberVo.chooseIndex;
		}

		__proto.chooseOneNumber=function(){
			this.oneNumberVo.chooseIndex=this.oneNumberVo.chooseIndex==1 ? 0 :1;
			this.chooseController.selectedIndex=this.oneNumberVo.chooseIndex;
		}

		return ShuZiPanOneNumber;
	})(BaseGButton)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType extends robotLegs.sprite.BaseGButton
	var ShuZiPanOneType=(function(_super){
		function ShuZiPanOneType(){
			this.typeVo=null;
			this.oneType1=null;
			this.oneType2=null;
			this.oneType3=null;
			this.oneType4=null;
			this.oneType5=null;
			this.oneType6=null;
			this.oneType7=null;
			this.typeController=null;
			ShuZiPanOneType.__super.call(this);
		}

		__class(ShuZiPanOneType,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType',_super);
		var __proto=ShuZiPanOneType.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.oneType1=this.getChild("oneType1");
			this.oneType2=this.getChild("oneType2");
			this.oneType3=this.getChild("oneType3");
			this.oneType4=this.getChild("oneType4");
			this.oneType5=this.getChild("oneType5");
			this.oneType6=this.getChild("oneType6");
			this.oneType7=this.getChild("oneType7");
			this.typeController=this.getController("typeController");
		}

		__proto.update=function(_typeVo){
			this.typeVo=_typeVo;
			this.typeController.selectedIndex=_typeVo.type-1;
			switch(_typeVo.type){
				case 1:{
						this.oneType1.update(_typeVo);
						this.height=this.oneType1.height;
						this.width=this.oneType1.width;
						break ;
					}
				case 2:{
						this.oneType2.update(_typeVo);
						this.height=this.oneType2.height;
						this.width=this.oneType2.width;
						break ;
					}
				case 3:{
						this.oneType3.update(_typeVo);
						this.height=this.oneType3.height;
						this.width=this.oneType3.width;
						break ;
					}
				case 4:{
						this.oneType4.update(_typeVo);
						this.height=this.oneType4.height;
						this.width=this.oneType4.width;
						break ;
					}
				case 5:{
						this.oneType5.update(_typeVo);
						this.height=this.oneType5.height;
						this.width=this.oneType5.width;
						break ;
					}
				case 6:{
						this.oneType6.update(_typeVo);
						this.height=this.oneType6.height;
						this.width=this.oneType6.width;
						break ;
					}
				case 7:{
						this.oneType7.update(_typeVo);
						this.height=this.oneType7.height;
						this.width=this.oneType7.width;
						break ;
					}
				default :{
						break ;
					}
				}
		}

		return ShuZiPanOneType;
	})(BaseGButton)


	//class game.numberGame.v.number.hk6h.Hk6hSelectNumberType extends game.numberGame.v.number.zuXuanHeZhi.NumberGamesZuXuanHeZhiType
	var Hk6hSelectNumberType=(function(_super){
		function Hk6hSelectNumberType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			Hk6hSelectNumberType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(Hk6hSelectNumberType,'game.numberGame.v.number.hk6h.Hk6hSelectNumberType',_super);
		var __proto=Hk6hSelectNumberType.prototype;
		/**
		*绘制列表
		*
		*/
		__proto.renderListItem=function(index,obj){
			var oneLotteryNumbers=obj;
			oneLotteryNumbers.render(this.numberGamesZuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr[index]);
		}

		return Hk6hSelectNumberType;
	})(NumberGamesZuXuanHeZhiType)


	//class game.numberGame.v.number.input.SelectNumberInputRXType extends game.numberGame.v.number.input.SelectNumberInputType
	var SelectNumberInputRXType=(function(_super){
		function SelectNumberInputRXType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			SelectNumberInputRXType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(SelectNumberInputRXType,'game.numberGame.v.number.input.SelectNumberInputRXType',_super);
		return SelectNumberInputRXType;
	})(SelectNumberInputType)


	//class game.numberGame.v.number.k3.NumberGamesK32THDX extends game.numberGame.v.number.k3.NumberGamesK33THDX
	var NumberGamesK32THDX=(function(_super){
		function NumberGamesK32THDX(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			this.number_0=null;
			this.number_1=null;
			this.number_2=null;
			this.number_3=null;
			this.number_4=null;
			this.number_5=null;
			this.__numberArr=[];
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesK32THDX.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesK32THDX,'game.numberGame.v.number.k3.NumberGamesK32THDX',_super);
		var __proto=NumberGamesK32THDX.prototype;
		__proto.init=function(){
			_super.prototype.init.call(this);
			for(var i=0;i < 6;i++){
				this.__numberArr.push(this["number_"+i]);
				this.__numberArr[i]["state"]=i+1;
				this.__numberArr[i].on("fui_state_changed",this,this.stateChange);
			}
		}

		__proto.reset=function(){
			_super.prototype.reset.call(this);
			for(var i=0;i < this.__numberArr.length;i++){
				this.__numberArr[i].selected=false;
			}
		}

		__proto.stateChange=function(){
			this.jsk33thdxVo.chooseValueArr2.length=0;
			for(var i=0;i < 6;i++){
				if(this.__numberArr[i].selected)
					this.jsk33thdxVo.chooseValueArr2.push(this.__numberArr[i]["state"]);
			}
			_super.prototype.stateChange.call(this);
		}

		return NumberGamesK32THDX;
	})(NumberGamesK33THDX)


	//class game.numberGame.v.number.k3.NumberGamesK32THFX extends game.numberGame.v.number.k3.NumberGamesK33THDX
	var NumberGamesK32THFX=(function(_super){
		function NumberGamesK32THFX(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesK32THFX.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesK32THFX,'game.numberGame.v.number.k3.NumberGamesK32THFX',_super);
		return NumberGamesK32THFX;
	})(NumberGamesK33THDX)


	//class modules.loading.c.LoadingCommand extends core.BaseLoadingFileCommand
	var LoadingCommand=(function(_super){
		function LoadingCommand(){
			this.stageUIModel=null;
			this.playerInfoModel=null;
			LoadingCommand.__super.call(this);
		}

		__class(LoadingCommand,'modules.loading.c.LoadingCommand',_super);
		var __proto=LoadingCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Start_Cmd":
					this.start();
					break ;
				case "Load_Game_Config_Complete_Cmd":
					this.loadGameConfigComplete();
					break ;
				case "Load_Game_Config_Complete2_Cmd":
					this.loadGameConfigComplete2();
					break ;
				case "Load_Loading_File_Complete_Cmd":
					this.loadLoadingComplete();
					break ;
				case "LOAD_LOGIN_COMPLETE_Cmd":
					this.loadLoginComplete();
					break ;
				case "LOAD_HALL_COMPLETE_Cmd":
					this.loadHallComplete();
					break ;
				case "Close_Open_App_Page_Cmd":
					this.closeOpenAppPage();
					break ;
				}
		}

		/**
		*开始加载加载文件
		*
		*/
		__proto.start=function(){
			console.log("IintCommadn Start");
			Laya.stage.addChild(GRoot.inst.displayObject);
			var stage=GRoot.inst.displayObject;
			stage.addChild(this.stageUIModel.pageStage.displayObject);
			stage.addChild(this.stageUIModel.appStage.displayObject);
			stage.addChild(this.stageUIModel.pageWindowStage.displayObject);
			stage.addChild(this.stageUIModel.tipsStage.displayObject);
			var loadCommandVo=new LoadCommandVo();
			loadCommandVo.loadingType="Text_Type";
			loadCommandVo.textTemple="Loading...({0}%)";
			loadCommandVo.fileArr=[
			{url:GameUtil.Res_Config,type:"json" },
			{url:GameUtil.RES_API_URL_CONFIG,type:"json" }];
			this.sendNotification("Load_Game_Config_Complete_Cmd",loadCommandVo);
		}

		/**
		*读取游戏配置文件完毕
		*
		*/
		__proto.loadGameConfigComplete=function(){
			var gameConfig=this.resManager.getRes(GameUtil.RES_API_URL_CONFIG);
			this.resManager.version=gameConfig.version;
			if(UITypeConfig.WEB_VIEW_BOL){
				this.resManager.serverUrl=ResManager.appInfoObj["apiUrl"];
				GameUtil.GG_DOMAIN=ResManager.appInfoObj["apiUrl"];
				this.resManager.updateInfo=ResManager.appInfoObj["content"];
				this.resManager.displayUpdateInfoBol=ResManager.appInfoObj["displayUpdateInfoBol"];
			}
			else{
				var url=window.location.href;
				var testBol=url.indexOf("test")>-1 ? true :false;
				if(testBol){
					this.resManager.serverUrl=gameConfig.testServerUrl;
					GameUtil.GG_DOMAIN=gameConfig.testServerUrl;
				}
				else{
					this.resManager.serverUrl=gameConfig.serverUrl;
					GameUtil.GG_DOMAIN=gameConfig.serverUrl;
				}
			}
			GameUtil.app_key=gameConfig.appKey;
			GameUtil.app_secret=gameConfig.appSecret;
			var loadCommandVo=new LoadCommandVo();
			loadCommandVo.loadingType="Text_Type";
			loadCommandVo.textTemple="Loading...({0}%)";
			loadCommandVo.fileArr=[
			{url:GameUtil.getServerConfigVersionFile(),type:"json" }];
			this.sendNotification("Load_Game_Config_Complete2_Cmd",loadCommandVo);
		}

		__proto.loadGameConfigComplete2=function(){
			var configFileObj=this.resManager.getRes(GameUtil.getServerConfigVersionFile());
			if(configFileObj==null){
				console.log("服务器版本文件缺失!");
				return;
			};
			var configFileData=new ConfigFileData();
			configFileData.decode(configFileObj);
			DataMgr.get().configFileData=configFileData;
			console.log("configFileData:",configFileData);
			var loadCommandVo=new LoadCommandVo();
			loadCommandVo.loadingType="Text_Type";
			loadCommandVo.textTemple="Loading...({0}%)";
			loadCommandVo.fileArr=[
			{url:GameUtil.Res_Loading_Atlas,type:"image" },
			{url:GameUtil.Res_Loading_Data,type:"arraybuffer" },
			{url:GameUtil.Res_Alert_Atlas,type:"image" },
			{url:GameUtil.Res_Alert_Data,type:"arraybuffer" },
			{url:GameUtil.Res_Open_App_Page_Atlas,type:"image" },
			{url:GameUtil.Res_Open_App_Page_Data,type:"arraybuffer" },
			{url:GameUtil.Res_Config_Help,type:"json" }];
			if(LocalStorage.getItem("startApp")!="1"){
				loadCommandVo.fileArr.push({url:GameUtil.Res_Open_App_Page_Atlas,type:"image" });
				loadCommandVo.fileArr.push({url:GameUtil.Res_Open_App_Page_Data,type:"arraybuffer" });
			};
			var configFileVo=configFileData.getItem(ConfigFileData.File_errorCodeConfig);
			if(configFileVo !=null){
				console.log("加载错误码信息 url:",GameUtil.getServerConfigUrl(configFileVo.url));
				loadCommandVo.fileArr.push({url:GameUtil.getServerConfigUrl(configFileVo.url),type:configFileVo.type});
			}
			this.sendNotification("Load_Loading_File_Complete_Cmd",loadCommandVo);
		}

		/**
		*加载 Loading Alert 完成
		*/
		__proto.loadLoadingComplete=function(){
			var key="startApp_"+UITypeConfig.UI_TYPE;
			if(LocalStorage.getItem(key)!="1"){
				LocalStorage.setItem(key,"1");
				this.addPackage("OpenAppPage");
				this.viewClassMap.map(OpenAppPage,this.stageUIModel.openAppPageVo);
				this.gameUIBuilderBridge.openWindow("OpenAppPage",OpenAppPage);
			};
			var configObj;
			var dataMgr=DataMgr.get();
			var configFileVo=dataMgr.configFileData.getItem(ConfigFileData.File_errorCodeConfig);
			if(configFileVo !=null){
				configObj=Laya.loader.getRes(GameUtil.getServerConfigUrl(configFileVo.url));
				dataMgr.errorCodeData=new ErrorCodeData();
				dataMgr.errorCodeData.decode(configObj);
				this.publicModel.errorCodeData.decode(configObj);
			}
			GameUtil.hideLoading();
			this.addPackage(GameUtil.Res_Alert_Package);
			this.sendNotification("BUILD_DATALOADING_Cmd");
			this.sendNotification("Open_Game_Cmd",PlayerInfoModel.Panel_Hall);
		}

		/**
		*加载 登陆界面 完成
		*/
		__proto.loadLoginComplete=function(){
			this.sendNotification("Build_Login_Cmd");
		}

		/**
		*加载 大厅界面 完成
		*/
		__proto.loadHallComplete=function(){
			this.sendNotification("BUILD_HALL_Cmd");
		}

		/**
		*关闭开启页
		*
		*/
		__proto.closeOpenAppPage=function(){
			this.removePackage("OpenAppPage");
			this.viewClassMap.off(OpenAppPage);
			Laya.loader.clearRes(GameUtil.Res_Open_App_Page_Atlas);
			Laya.loader.clearRes(GameUtil.Res_Open_App_Page_Data);
			this.stageUIModel.openAppPageVo.status="Remove_Status";
		}

		LoadingCommand.START_CMD="Start_Cmd";
		LoadingCommand.LOAD_GAME_CONFIG_COMPLETE_CMD="Load_Game_Config_Complete_Cmd";
		LoadingCommand.LOAD_GAME_CONFIG_COMPLETE2_CMD="Load_Game_Config_Complete2_Cmd";
		LoadingCommand.GET_ERROR_CODE_ERROR_CMD="Get_Error_Code_Error_Cmd";
		LoadingCommand.LOAD_LOADING_FILE_COMPLETE_CMD="Load_Loading_File_Complete_Cmd";
		LoadingCommand.LOAD_LOGIN_COMPLETE_CMD="LOAD_LOGIN_COMPLETE_Cmd";
		LoadingCommand.LOAD_HALL_COMPLETE_CMD="LOAD_HALL_COMPLETE_Cmd";
		LoadingCommand.CLOSE_OPEN_APP_PAGE_CMD="Close_Open_App_Page_Cmd";
		return LoadingCommand;
	})(BaseLoadingFileCommand)


	//class game.numberGame.v.number.numbersType.NumberGamesSelectNumberRXType extends game.numberGame.v.number.numbersType.NumberGamesSelectNumberType
	var NumberGamesSelectNumberRXType=(function(_super){
		function NumberGamesSelectNumberRXType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectNumberRXType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectNumberRXType,'game.numberGame.v.number.numbersType.NumberGamesSelectNumberRXType',_super);
		return NumberGamesSelectNumberRXType;
	})(NumberGamesSelectNumberType)


	//class game.numberGame.v.number.pk10.PK10NumberGamesSelectNumberType extends game.numberGame.v.number.numbersType.NumberGamesSelectNumberType
	var PK10NumberGamesSelectNumberType=(function(_super){
		function PK10NumberGamesSelectNumberType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			PK10NumberGamesSelectNumberType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(PK10NumberGamesSelectNumberType,'game.numberGame.v.number.pk10.PK10NumberGamesSelectNumberType',_super);
		return PK10NumberGamesSelectNumberType;
	})(NumberGamesSelectNumberType)


	//class modules.registered.c.RegisteredCommand extends publics.c.BaseServerCommand
	var RegisteredCommand=(function(_super){
		function RegisteredCommand(){
			this.playerInfoModel=null;
			this.gameUIBuilderBridge=null;
			this.registerUIModel=null;
			RegisteredCommand.__super.call(this);
		}

		__class(RegisteredCommand,'modules.registered.c.RegisteredCommand',_super);
		var __proto=RegisteredCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Init_Register_Cmd":{
						this.initRegister();
						break ;
					}
				case "Registered_Test_Account_Cmd":{
						this.registeredTestAccount();
						break ;
					}
				case "Registered_Test_Account_Result_Cmd":{
						this.registeredTestAccountResult(_notificationVo.data);
						break ;
					}
				case "Open_Register_Window_Cmd":{
						this.openRegisterWindow();
						break ;
					}
				case "Registered_Account_Cmd":{
						this.registeredAccount();
						break ;
					}
				case "Registered_Account_Result_Cmd":{
						this.registeredAccountResult(_notificationVo.data);
						break ;
					}
				case "Open_Login_Window_Cmd":{
						this.openLogin();
						break ;
					}
				case "Save_Passsword_Cmd":{
						this.savePassword();
						break ;
					}
				case "Login_Cmd":{
						this.login(_notificationVo.data[0],_notificationVo.data[1]);
						break ;
					}
				case "Login_Suc_Cmd":{
						this.loginSuc(_notificationVo.data);
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*初始化注册登陆需要的
		*
		*/
		__proto.initRegister=function(){
			this.injector.map(RegisterUIModel);
			var registerUIModel=this.injector.getSingleton(RegisterUIModel);
			this.viewClassMap.map(Registered,registerUIModel.registeredVo);
			this.viewClassMap.map(Login,registerUIModel.loginVo);
		}

		/**
		*注册测试账号
		*
		*/
		__proto.registeredTestAccount=function(){
			this.showLoading();
			var data=new Object();
			data.timestamp=Math.floor(Laya.timer.currTimer/1000);
			data.app_key=GameUtil.app_key;
			var signatureKey=data.app_key+data.timestamp+GameUtil.app_secret;
			data.signature=GameUtil.getSignature(signatureKey);
			var url=GameUtil.getTestRegisterUrl();
			this.sendHttpRequest(url,"Registered_Test_Account_Result_Cmd","","json",data,false);
		}

		/**
		*注册成功
		*@param _resultObj
		*
		*/
		__proto.registeredTestAccountResult=function(_resultObj){
			this.hideLoading();
			this.playerInfoModel.playerInfoVo.decode(_resultObj);
			DataMgr.get().playerInfoData=this.playerInfoModel.playerInfoVo;
			this.playerInfoModel.localInfo.setUid(_resultObj["info"]["user_info"]["id"]);
			this.playerInfoModel.localInfo.testLoginAccount=_resultObj["info"]["user_info"]["user_account"];
			this.playerInfoModel.localInfo.testLoginPassword=_resultObj["info"]["user_info"]["user_password"];
			var signatureCode=GameUtil.app_key+":"+this.playerInfoModel.playerInfoVo.user_account+":"+this.playerInfoModel.playerInfoVo.token;
			var signatureCode64=Base64Tool.encodeStr2(signatureCode);
			console.log("signatureCode:",signatureCode," signatureCode64:",signatureCode64);
			GameUtil.headers=[GameUtil.http_header_key,signatureCode64];
			this.registerUIModel.loginVo.status="Remove_Status";
			this.loginComplete();
		}

		/**
		*打开注册窗口
		*
		*/
		__proto.openRegisterWindow=function(){
			this.addPackage("RegisteredAndLogin");
			this.gameUIBuilderBridge.openPage("RegisteredAndLogin",Registered);
		}

		/**
		*注册普通账号
		*
		*/
		__proto.registeredAccount=function(){
			this.showLoading();
			var url=GameUtil.getRegisterTry();
			var data=new Object();
			data.is_beta=0;
			data.user_account=this.registerUIModel.registeredVo.account;
			data.user_password=this.registerUIModel.registeredVo.password;
			data.rep_user_password=this.registerUIModel.registeredVo.password;
			data.promo_code=this.registerUIModel.registeredVo.tuiJianCode;
			console.log("registerPlay data:",data);
			this.sendHttpRequest(url,"Registered_Account_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		/**
		*注册普通账号完毕
		*@param _resultObj
		*
		*/
		__proto.registeredAccountResult=function(_resultObj){
			this.hideLoading();
			this.playerInfoModel.localInfo.loginAccount=this.registerUIModel.registeredVo.account;
			this.playerInfoModel.localInfo.loginPassword=this.registerUIModel.registeredVo.password;
			this.registerUIModel.loginVo.account=this.playerInfoModel.localInfo.loginAccount;
			this.registerUIModel.loginVo.password=this.playerInfoModel.localInfo.loginPassword;
			this.registerUIModel.loginVo.status="Update_And_Login_Status";
			this.registerUIModel.registeredVo.status="Remove_Status";
			this.registerUIModel.loginVo.rememberPassword="0";
			this.savePassword();
			this.login(this.registerUIModel.loginVo.account,this.registerUIModel.loginVo.password);
		}

		/**
		*打开登录
		*
		*/
		__proto.openLogin=function(){
			this.addPackage("RegisteredAndLogin");
			this.registerUIModel.loginVo.account=this.playerInfoModel.localInfo.loginAccount;
			this.registerUIModel.loginVo.password=this.playerInfoModel.localInfo.loginPassword;
			this.registerUIModel.loginVo.rememberPassword=this.playerInfoModel.localInfo.rememberPassword;
			this.registerUIModel.loginVo.loginAccountInfoObj=this.playerInfoModel.localInfo.loginAccountInfoObj;
			this.gameUIBuilderBridge.openPage("RegisteredAndLogin",Login);
		}

		/**
		*保存密码
		*
		*/
		__proto.savePassword=function(){
			this.playerInfoModel.localInfo.rememberPassword=this.registerUIModel.loginVo.rememberPassword;
		}

		/**
		*登陆
		*
		*/
		__proto.login=function(_account,_password){
			this.showLoading();
			var data=new Object();
			data.timestamp=Math.floor(Laya.timer.currTimer/1000);
			data.app_key=GameUtil.app_key;
			data.user_account=_account;
			data.user_password=_password;
			var signatureKey=data.app_key+data.user_account+data.timestamp+GameUtil.app_secret;
			data.signature=GameUtil.getSignature(signatureKey);
			var url=GameUtil.getLoginUrl();
			this.sendHttpRequest(url,"Login_Suc_Cmd","","json",data,false);
		}

		/**
		*登陆成功
		*@param _accountInfoObj
		*
		*/
		__proto.loginSuc=function(data){
			this.hideLoading();
			this.playerInfoModel.playerInfoVo.decode(data);
			DataMgr.get().playerInfoData=this.playerInfoModel.playerInfoVo;
			this.playerInfoModel.localInfo.setUid(this.playerInfoModel.playerInfoVo.user_id+"");
			this.playerInfoModel.localInfo.loginAccount=this.registerUIModel.loginVo.account;
			this.playerInfoModel.localInfo.loginPassword=this.registerUIModel.loginVo.password;
			var loginAccountInfoObj=this.playerInfoModel.localInfo.loginAccountInfoObj;
			if(!loginAccountInfoObj){
				loginAccountInfoObj=new Object();
			};
			var account=String(this.registerUIModel.loginVo.account).toLowerCase();
			if(this.registerUIModel.loginVo.rememberPassword=="1"){
				loginAccountInfoObj[account]=new Object();
				loginAccountInfoObj[account]=this.registerUIModel.loginVo.password;
			}
			else{
				delete loginAccountInfoObj[account];
			}
			this.playerInfoModel.localInfo.loginAccountInfoObj=loginAccountInfoObj;
			var signatureCode=GameUtil.app_key+":"+this.playerInfoModel.playerInfoVo.user_account+":"+this.playerInfoModel.playerInfoVo.token;
			var signatureCode64=Base64Tool.encodeStr2(signatureCode);
			console.log("signatureCode:",signatureCode," signatureCode64:",signatureCode64);
			GameUtil.headers=[GameUtil.http_header_key,signatureCode64];
			if(this.playerInfoModel.localInfo.loginAccount=="hill02"){
				console.log("登录:"+signatureCode64);
			}
			this.registerUIModel.loginVo.status="Remove_Status";
			this.loginComplete();
		}

		/**
		*登录完成
		*
		*/
		__proto.loginComplete=function(){
			console.log("登录成功");
			this.sendNotification("SET_VOICE_CMD",this.playerInfoModel.localInfo.closeVoice);
			this.sendNotification("LOGIN_SUCCESS_Cmd");
			this.delayRun("Init_Events_Cmd",2000);
		}

		RegisteredCommand.INIT_REGISTER_CMD="Init_Register_Cmd";
		RegisteredCommand.REGISTERED_TEST_ACCOUNT_CMD="Registered_Test_Account_Cmd";
		RegisteredCommand.REGISTERED_TEST_ACCOUNT_RESULT_CMD="Registered_Test_Account_Result_Cmd";
		RegisteredCommand.REGISTERED_ACCOUNT_CMD="Registered_Account_Cmd";
		RegisteredCommand.REGISTERED_ACCOUNT_RESULT_CMD="Registered_Account_Result_Cmd";
		RegisteredCommand.OPEN_REGISTER_WINDOW_CMD="Open_Register_Window_Cmd";
		RegisteredCommand.OPEN_LOGIN_WINDOW_CMD="Open_Login_Window_Cmd";
		RegisteredCommand.SAVE_PASSWORD_CMD="Save_Passsword_Cmd";
		RegisteredCommand.LOGIN_CMD="Login_Cmd";
		RegisteredCommand.LOGIN_SUC_CMD="Login_Suc_Cmd";
		return RegisteredCommand;
	})(BaseServerCommand)


	//class modules.hall.v.component.CommonGrid2Component extends robotLegs.sprite.BaseGButton
	var CommonGrid2Component=(function(_super){
		function CommonGrid2Component(){
			this.index=0;
			this.selectId=1;
			this.btnToRight=null;
			this.txtTitle=null;
			this.txtName=null;
			CommonGrid2Component.__super.call(this);
		}

		__class(CommonGrid2Component,'modules.hall.v.component.CommonGrid2Component',_super);
		var __proto=CommonGrid2Component.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("txtTitle");
			this.txtName=this.getChild("txtName");
			this.btnToRight=this.getChild("btnToRight");
			this.txtTitle.text=this.txtName.text="";
		}

		__proto.setTitle=function(t,w){
			(w===void 0)&& (w=130);
			this.txtTitle.text=t;
			this.txtTitle.width=w;
		}

		__proto.getTitle=function(){
			return this.txtTitle.text;
		}

		__proto.setName=function(t){
			this.txtName.text=t;
		}

		__proto.getName=function(){
			return this.txtName.text;
		}

		return CommonGrid2Component;
	})(BaseGButton)


	//class modules.hall.v.component.CommonGrid3Component extends robotLegs.sprite.BaseGButton
	var CommonGrid3Component=(function(_super){
		function CommonGrid3Component(){
			this.txtTitle=null;
			this.txtName=null;
			CommonGrid3Component.__super.call(this);
		}

		__class(CommonGrid3Component,'modules.hall.v.component.CommonGrid3Component',_super);
		var __proto=CommonGrid3Component.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("title");
			this.txtName=this.getChild("txtName");
			this.txtTitle.text=this.txtName.text="";
		}

		__proto.setTitle=function(t,w){
			(w===void 0)&& (w=130);
			this.txtTitle.width=w;
			this.txtTitle.text=t;
		}

		__proto.getTitle=function(){
			return this.txtTitle.text;
		}

		__proto.setNameWidth=function(w){
			(w===void 0)&& (w=300);
			this.txtName.width=470;
		}

		__proto.setName=function(t){
			this.txtName.text=t;
		}

		__proto.getName=function(){
			return this.txtName.text;
		}

		__proto.setPrompt=function(str){
			this.txtName.asTextInput.promptText=str;
		}

		__proto.setRestrict=function(str){
			this.txtName.asTextInput.restrict=str;
		}

		__proto.setMaxLen=function(len){
			this.txtName.asTextInput.maxLength=len;
		}

		return CommonGrid3Component;
	})(BaseGButton)


	//class modules.hall.v.component.CommonGrid4Component extends robotLegs.sprite.BaseGButton
	var CommonGrid4Component=(function(_super){
		function CommonGrid4Component(){
			this.txtTitle=null;
			this.btnSwitch=null;
			CommonGrid4Component.__super.call(this);
		}

		__class(CommonGrid4Component,'modules.hall.v.component.CommonGrid4Component',_super);
		var __proto=CommonGrid4Component.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("txtTitle");
			this.btnSwitch=this.getChild("btnSwitch");
			this.txtTitle.text="";
		}

		__proto.setTitle=function(t){
			this.txtTitle.text=t;
		}

		__proto.getTitle=function(){
			return this.txtTitle.text;
		}

		__proto.getSelected=function(){
			return this.btnSwitch.selected;
		}

		return CommonGrid4Component;
	})(BaseGButton)


	//class modules.hall.v.component.CommonGrid6Component extends robotLegs.sprite.BaseGButton
	var CommonGrid6Component=(function(_super){
		function CommonGrid6Component(){
			this.txtTitle=null;
			this.txtName=null;
			CommonGrid6Component.__super.call(this);
		}

		__class(CommonGrid6Component,'modules.hall.v.component.CommonGrid6Component',_super);
		var __proto=CommonGrid6Component.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("txtTitle");
			this.txtName=this.getChild("txtName");
			this.txtTitle.text=this.txtName.text="";
		}

		__proto.setTitle=function(t,w){
			(w===void 0)&& (w=130);
			this.txtTitle.width=w;
			this.txtTitle.text=t;
		}

		__proto.getTitle=function(){
			return this.txtTitle.text;
		}

		__proto.setName=function(t){
			this.txtName.text=t;
		}

		__proto.getName=function(){
			return this.txtName.text;
		}

		__proto.setNameWidth=function(w){
			(w===void 0)&& (w=300);
			this.txtName.width=470;
		}

		__proto.setPrompt=function(str){
			this.txtName.asTextInput.promptText=str;
		}

		__proto.setMaxLen=function(len){
			this.txtName.asTextInput.maxLength=len;
		}

		__proto.setRestrict=function(str){
			this.txtName.asTextInput.restrict=str;
		}

		return CommonGrid6Component;
	})(BaseGButton)


	//class modules.hall.v.component.CommonGrid7Component extends robotLegs.sprite.BaseGButton
	var CommonGrid7Component=(function(_super){
		function CommonGrid7Component(){
			this.txtTitle=null;
			this.txtName=null;
			CommonGrid7Component.__super.call(this);
		}

		__class(CommonGrid7Component,'modules.hall.v.component.CommonGrid7Component',_super);
		var __proto=CommonGrid7Component.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("title");
			this.txtName=this.getChild("txtName");
			this.txtTitle.text=this.txtName.text="";
		}

		__proto.setTitle=function(t,w){
			(w===void 0)&& (w=130);
			this.txtTitle.width=w;
			this.txtTitle.text=t;
		}

		__proto.getTitle=function(){
			return this.txtTitle.text;
		}

		__proto.setName=function(t){
			this.txtName.text=t;
		}

		__proto.getName=function(){
			return this.txtName.text;
		}

		return CommonGrid7Component;
	})(BaseGButton)


	//class modules.hall.v.component.CommonLst1TabLstItem extends robotLegs.sprite.BaseGButton
	var CommonLst1TabLstItem=(function(_super){
		function CommonLst1TabLstItem(){
			this.txt=null;
			CommonLst1TabLstItem.__super.call(this);
		}

		__class(CommonLst1TabLstItem,'modules.hall.v.component.CommonLst1TabLstItem',_super);
		var __proto=CommonLst1TabLstItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txt=this.getChild("txt");
			this.txt.text="";
		}

		__proto.setTxt=function(t){
			this.txt.text=t;
		}

		__proto.getTxt=function(){
			return this.txt.text;
		}

		return CommonLst1TabLstItem;
	})(BaseGButton)


	//class modules.hall.v.component.CommonPageItem extends robotLegs.sprite.BaseGButton
	var CommonPageItem=(function(_super){
		function CommonPageItem(){
			this.txtArr=null;
			this.bgController=null;
			CommonPageItem.__super.call(this);
			this.txtArr=[];
		}

		__class(CommonPageItem,'modules.hall.v.component.CommonPageItem',_super);
		var __proto=CommonPageItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.bgController=this.getController("bgController");
		}

		__proto.updateData=function(index,commonPageComponentVo){
			this.clearTxt();
			this.bgController.selectedIndex=index%2==0 ? 0 :1;
			var contentValues=commonPageComponentVo.contentValues[index];
			var i=0;
			var lines=1;
			for (i=0;i < contentValues.length;i++){
				var contentValue=contentValues[i];
				if(contentValue !=null){
					var curLines=contentValue.split("\n").length;
					lines=Math.max(curLines,lines);
				}
			};
			var _x=commonPageComponentVo.leftSpace;
			for (i=0;i < contentValues.length;i++){
				var txt=this.txtArr[i];
				if(txt==null){
					txt=new Label();
					this.txtArr.push(txt);
				}
				txt.fontSize=commonPageComponentVo.contentFontSize;
				txt.color=commonPageComponentVo.contentFontColor;
				txt.size(commonPageComponentVo.titleWidths[i],28);
				txt.overflow=Text.HIDDEN;
				txt.text=contentValues[i];
				txt.x=_x;
				txt.y=0;
				txt.align="center";
				txt.valign="middle";
				var _h=Math.max(lines*(commonPageComponentVo.contentFontSize),commonPageComponentVo.contentItemDefaultHeight);
				this.height=txt.height=_h+6;
				_x+=commonPageComponentVo.titleWidths[i];
				this.displayListContainer.addChild(txt);
			}
			this.width=_x+commonPageComponentVo.rightSpace;
		}

		__proto.clearTxt=function(){
			var i=0;
			var txt;
			for (i=0;i < this.txtArr.length;i++){
				txt=this.txtArr[i];
				txt.text="";
				this.displayListContainer.removeChild(txt);
			}
		}

		return CommonPageItem;
	})(BaseGButton)


	//class modules.hall.v.component.Grid01Button extends robotLegs.sprite.BaseGButton
	var Grid01Button=(function(_super){
		function Grid01Button(){
			this.txtTitle=null;
			this.txt2=null;
			Grid01Button.__super.call(this);
		}

		__class(Grid01Button,'modules.hall.v.component.Grid01Button',_super);
		var __proto=Grid01Button.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("title");
			this.txt2=this.getChild("txt2");
			this.txt2.text="";
		}

		__proto.setText=function(txt){
			this.txt2.text=txt;
		}

		__proto.setTextColor=function(v){
			this.txt2.color=v;
		}

		return Grid01Button;
	})(BaseGButton)


	//class modules.hall.v.component.Grid02Button extends robotLegs.sprite.BaseGButton
	var Grid02Button=(function(_super){
		function Grid02Button(){
			this.txtTitle=null;
			this.radioController=null;
			this.btn0=null;
			this.btn1=null;
			this.btn2=null;
			Grid02Button.__super.call(this);
		}

		__class(Grid02Button,'modules.hall.v.component.Grid02Button',_super);
		var __proto=Grid02Button.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("title");
			this.radioController=this.getController("radioController");
			this.btn0=this.getChild("btn0");
			this.btn1=this.getChild("btn1");
			this.btn2=this.getChild("btn2");
		}

		__proto.setText=function(txt,txt2,txt3){
			this.btn0.title=txt;
			this.btn1.title=txt2;
			this.btn2.title=txt3;
		}

		__getset(0,__proto,'selectIndex',function(){
			return this.radioController.selectedIndex;
			},function(i){
			this.radioController.selectedIndex=i;
		});

		return Grid02Button;
	})(BaseGButton)


	//class modules.hall.v.component.Grid03Button extends robotLegs.sprite.BaseGButton
	var Grid03Button=(function(_super){
		function Grid03Button(){
			this.txtTitle=null;
			this.btn0=null;
			this.btn1=null;
			this.btn2=null;
			Grid03Button.__super.call(this);
		}

		__class(Grid03Button,'modules.hall.v.component.Grid03Button',_super);
		var __proto=Grid03Button.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("title");
			this.btn0=this.getChild("btn0");
			this.btn1=this.getChild("btn1");
			this.btn2=this.getChild("btn2");
		}

		__proto.setText=function(txt,txt2,txt3){
			this.btn0.title=txt;
			this.btn1.title=txt2;
			this.btn2.title=txt3;
		}

		return Grid03Button;
	})(BaseGButton)


	//class modules.hall.v.component.Grid04Button extends robotLegs.sprite.BaseGButton
	var Grid04Button=(function(_super){
		function Grid04Button(){
			this.txtTitle=null;
			this.txtDesc=null;
			this.btnGo=null;
			Grid04Button.__super.call(this);
		}

		__class(Grid04Button,'modules.hall.v.component.Grid04Button',_super);
		var __proto=Grid04Button.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtTitle=this.getChild("title");
			this.txtDesc=this.getChild("txtDesc");
			this.btnGo=this.getChild("btnGo");
		}

		__proto.setDesc=function(txt){
			this.txtDesc.text=txt;
		}

		return Grid04Button;
	})(BaseGButton)


	//class modules.hall.v.component.Grid05Button extends robotLegs.sprite.BaseGButton
	var Grid05Button=(function(_super){
		function Grid05Button(){
			this.imgIcon=null;
			this.txtTitle=null;
			this.btnGo=null;
			this._index=0;
			Grid05Button.__super.call(this);
		}

		__class(Grid05Button,'modules.hall.v.component.Grid05Button',_super);
		var __proto=Grid05Button.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.imgIcon=this.getChild("imgIcon");
			this.txtTitle=this.getChild("title");
			this.btnGo=this.getChild("btnGo");
			this.txtTitle.text="";
		}

		__proto.updateData=function(data,index){
			this._index=index;
			this.imgIcon.url=GameUtil.Res_Mine_Path+data.icon;
			this.txtTitle.text=data.name;
		}

		__getset(0,__proto,'index',function(){
			return this._index;
		});

		return Grid05Button;
	})(BaseGButton)


	//class modules.hall.v.component.HallGameListItem extends robotLegs.sprite.BaseGButton
	var HallGameListItem=(function(_super){
		function HallGameListItem(){
			this.imgLoader=null;
			this.txtName=null;
			HallGameListItem.__super.call(this);
			console.log("HallGameListItem");
		}

		__class(HallGameListItem,'modules.hall.v.component.HallGameListItem',_super);
		var __proto=HallGameListItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.imgLoader=this.getChild("imgLoader");
			this.txtName=this.getChild("txtName");
			this.width=GRoot.inst.width / 2-1;
		}

		__proto.updateData=function(data){
			if(data !=null){
				this.imgLoader.url="ui://"+GameUtil.Res_Hall_Package+"/"+data.game_id;
				this.txtName.text=data.cht_name;
				this.txtName.visible=false;
			}
		}

		return HallGameListItem;
	})(BaseGButton)


	//class modules.hall.v.component.McBonusOverviewItem extends robotLegs.sprite.BaseGButton
	var McBonusOverviewItem=(function(_super){
		function McBonusOverviewItem(){
			this.txt_game_type_name=null;
			this.txt_percent=null;
			this.txt_name=null;
			this.txt_percent_bonus=null;
			this.txt_no_percent_bonus=null;
			this.bgController=null;
			McBonusOverviewItem.__super.call(this);
		}

		__class(McBonusOverviewItem,'modules.hall.v.component.McBonusOverviewItem',_super);
		var __proto=McBonusOverviewItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txt_game_type_name=this.getChild("txt_game_type_name");
			this.txt_percent=this.getChild("txt_percent");
			this.txt_name=this.getChild("txt_name");
			this.txt_percent_bonus=this.getChild("txt_percent_bonus");
			this.txt_no_percent_bonus=this.getChild("txt_no_percent_bonus");
			this.bgController=this.getController("bgController");
		}

		__proto.updateData=function(data,index){
			this.txt_game_type_name.text=data.game_type_name;
			this.txt_percent.text=data.percent+"%";
			var nameStr="-";
			var percent_bonusStr="";
			var no_percent_bonusStr="";
			var h=50;
			if(data.name.length==0){
				percent_bonusStr+=data.bonus[0].percent_bonus;
				no_percent_bonusStr+=data.bonus[0].no_percent_bonus;
				}else{
				for (var i=0;i < data.name.length;i++){
					if(i > 1)
						h+=30;
					if(i==0)
						nameStr="";
					else{
						nameStr+="\n";
						percent_bonusStr+="\n";
						no_percent_bonusStr+="\n";
					}
					nameStr+=data.name[i];
					percent_bonusStr+=data.bonus[i].percent_bonus;
					no_percent_bonusStr+=data.bonus[i].no_percent_bonus;
				}
			}
			this.height=h;
			this.txt_name.text=nameStr;
			this.txt_percent_bonus.text=percent_bonusStr;
			this.txt_no_percent_bonus.text=no_percent_bonusStr;
			this.bgController.selectedIndex=index%2;
		}

		return McBonusOverviewItem;
	})(BaseGButton)


	//class modules.hall.v.component.McChooseGameTypeItem extends robotLegs.sprite.BaseGButton
	var McChooseGameTypeItem=(function(_super){
		function McChooseGameTypeItem(){
			this.selectId=0;
			this.txtName=null;
			McChooseGameTypeItem.__super.call(this);
		}

		__class(McChooseGameTypeItem,'modules.hall.v.component.McChooseGameTypeItem',_super);
		var __proto=McChooseGameTypeItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtName=this.getChild("txt");
		}

		__proto.updateData=function(data){
			this.txtName.text=data.game_value;
		}

		__proto.setName=function(sN){
			this.txtName.text=sN;
		}

		__proto.setId=function(_id){
			this.selectId=_id;
		}

		return McChooseGameTypeItem;
	})(BaseGButton)


	//class modules.hall.v.component.MineCenterListItem extends robotLegs.sprite.BaseGButton
	var MineCenterListItem=(function(_super){
		function MineCenterListItem(){
			this.imgLoader=null;
			this.txtName=null;
			this.btnGo=null;
			MineCenterListItem.__super.call(this);
		}

		__class(MineCenterListItem,'modules.hall.v.component.MineCenterListItem',_super);
		var __proto=MineCenterListItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.imgLoader=this.getChild("img");
			this.txtName=this.getChild("txt");
			this.btnGo=this.getChild("btnGo");
		}

		__proto.updateData=function(data){
			this.imgLoader.url="ui://"+GameUtil.Res_Hall_Package+"/"+data.icon;
			this.txtName.text=data.title;
		}

		return MineCenterListItem;
	})(BaseGButton)


	//class modules.hall.v.component.MineManageListItem extends robotLegs.sprite.BaseGButton
	var MineManageListItem=(function(_super){
		function MineManageListItem(){
			this.imgLoader=null;
			this.txtName=null;
			this.txtDes=null;
			this.btnGo=null;
			this.colorController=null;
			MineManageListItem.__super.call(this);
		}

		__class(MineManageListItem,'modules.hall.v.component.MineManageListItem',_super);
		var __proto=MineManageListItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.imgLoader=this.getChild("img");
			this.txtName=this.getChild("txt");
			this.txtDes=this.getChild("txtDes");
			this.btnGo=this.getChild("btnGo");
			this.colorController=this.getController("colorController");
			this.initState();
		}

		__proto.initState=function(){
			this.btnGo.visible=false;
			this.txtDes.text="";
			this.colorController.selectedIndex=0;
		}

		__proto.updateData=function(data){
			this.initState();
			if(data.id==0){
				this.txtDes.color="#8b9198";
				this.txtDes.fontSize=22;
				this.txtDes.text=data.user_account;
				}else if(data.id==1){
				this.txtDes.color="#8b9198";
				this.txtDes.fontSize=24;
				this.txtDes.text=data.user_email;
				}else if(data.id==2){
				this.txtDes.color="#426ca4";
				this.txtDes.fontSize=26;
				this.txtDes.text=data.user_nickname;
				}else if(data.id==3){
				this.colorController.selectedIndex=data.color;
				}else if(data.id==4){
				this.btnGo.visible=true;
			}
			this.imgLoader.url="ui://"+GameUtil.Res_Hall_Package+"/"+data.icon;
			this.txtName.text=data.title;
		}

		return MineManageListItem;
	})(BaseGButton)


	//class modules.hall.v.component.PromptTextItme extends robotLegs.sprite.BaseGButton
	var PromptTextItme=(function(_super){
		function PromptTextItme(){
			this.txtTitle=null;
			this.txtName=null;
			PromptTextItme.__super.call(this);
		}

		__class(PromptTextItme,'modules.hall.v.component.PromptTextItme',_super);
		var __proto=PromptTextItme.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtName=this.getChild("txtName");
			this.txtName.text="";
			this.width=GRoot.inst.width;
		}

		__proto.setName=function(t){
			this.txtName.text=t;
		}

		return PromptTextItme;
	})(BaseGButton)


	//class modules.hall.v.component.ZoomPicker.ZoomPickerItem extends robotLegs.sprite.BaseGButton
	var ZoomPickerItem=(function(_super){
		function ZoomPickerItem(){
			this.txtName=null;
			ZoomPickerItem.__super.call(this);
		}

		__class(ZoomPickerItem,'modules.hall.v.component.ZoomPicker.ZoomPickerItem',_super);
		var __proto=ZoomPickerItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtName=this.getChild("n9");
			this.width=GRoot.inst.width-2;
			this.txtName.setPivot(0.5,0.5);
		}

		__proto.updateData=function(data){
			this.txtName.text=data;
		}

		__proto.setTextScale=function(x,y){
			this.txtName.setScale(x,y);
		}

		return ZoomPickerItem;
	})(BaseGButton)


	//class modules.hall.v.events.daily.OneDailyEvent extends robotLegs.sprite.BaseGButton
	var OneDailyEvent=(function(_super){
		function OneDailyEvent(){
			this.oneDailyEventVo=null;
			this.eventNameTxt=null;
			this.countTxt=null;
			this.activityTxt=null;
			this.goBtn=null;
			OneDailyEvent.__super.call(this);
		}

		__class(OneDailyEvent,'modules.hall.v.events.daily.OneDailyEvent',_super);
		var __proto=OneDailyEvent.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.eventNameTxt=this.getChild("eventNameTxt");
			this.countTxt=this.getChild("countTxt");
			this.activityTxt=this.getChild("activityTxt");
			this.goBtn=this.getChild("goBtn");
		}

		__proto.update=function(_oneDailyEventVo){
			this.oneDailyEventVo=_oneDailyEventVo;
			this.eventNameTxt.text=this.oneDailyEventVo.eventName;
			this.countTxt.text=BaseStaticFuncs.format("{0}/{1}",this.oneDailyEventVo.completeCount,this.oneDailyEventVo.totalCount);
			this.activityTxt.text=String(this.oneDailyEventVo.activity);
		}

		return OneDailyEvent;
	})(BaseGButton)


	//class modules.hall.v.events.hall.OneHallEvent extends robotLegs.sprite.BaseGButton
	var OneHallEvent=(function(_super){
		function OneHallEvent(){
			this.oneHallEventVo=null;
			this.banner=null;
			this.nameTxt=null;
			this.dateTxt=null;
			this.joinBtn=null;
			OneHallEvent.__super.call(this);
		}

		__class(OneHallEvent,'modules.hall.v.events.hall.OneHallEvent',_super);
		var __proto=OneHallEvent.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.banner=this.getChild("banner");
			this.nameTxt=this.getChild("nameTxt");
			this.dateTxt=this.getChild("dateTxt");
			this.joinBtn=this.getChild("joinBtn");
			this.joinBtn.onClick(this,this.openOneEvent);
		}

		__proto.update=function(_oneHallEventVo){
			this.oneHallEventVo=_oneHallEventVo;
			this.banner.url=this.oneHallEventVo.bannerUrl;
			this.nameTxt.text=_oneHallEventVo.name;
			this.dateTxt.text=_oneHallEventVo.date;
		}

		/**
		*打开一个活动
		*
		*/
		__proto.openOneEvent=function(){
			this.sendNotification("Open_Sign_Up_Event_Cmd",[this.oneHallEventVo.id,this.oneHallEventVo.bigBanner]);
		}

		return OneHallEvent;
	})(BaseGButton)


	//class modules.hall.v.events.sign.OneDaySign extends robotLegs.sprite.BaseGButton
	var OneDaySign=(function(_super){
		function OneDaySign(){
			this.oneDaySignVo=null;
			this.rewardController=null;
			this.dayTxt=null;
			this.betNeededTxt=null;
			this.bonusTxt=null;
			this.claimBtn=null;
			OneDaySign.__super.call(this);
		}

		__class(OneDaySign,'modules.hall.v.events.sign.OneDaySign',_super);
		var __proto=OneDaySign.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.rewardController=this.getController("rewardController");
			this.dayTxt=this.getChild("dayTxt");
			this.betNeededTxt=this.getChild("betNeededTxt");
			this.bonusTxt=this.getChild("bonusTxt");
			this.claimBtn=this.getChild("claimBtn");
			this.claimBtn.onClick(this,this.claim);
		}

		/**
		*更新
		*
		*/
		__proto.update=function(_oneDaySignVo){
			this.oneDaySignVo=_oneDaySignVo;
			this.rewardController.selectedPage=this.oneDaySignVo.dayStaus;
			this.betNeededTxt.text="投"+this.oneDaySignVo.betNeeded+"元";
			this.dayTxt.text="第"+this.oneDaySignVo.dayCount+"天";
			this.bonusTxt.text=this.oneDaySignVo.bonus+"元";
		}

		__proto.claim=function(){
			this.sendNotification("Claim_Sign_Event_Reward_Cmd",this.oneDaySignVo.id);
		}

		return OneDaySign;
	})(BaseGButton)


	//class modules.hall.v.fundmanage.FmQuestionItem extends robotLegs.sprite.BaseGButton
	var FmQuestionItem=(function(_super){
		function FmQuestionItem(){
			this.fmQuestionItem1=null;
			this.gList=null;
			this._questionItem=null;
			FmQuestionItem.__super.call(this);
		}

		__class(FmQuestionItem,'modules.hall.v.fundmanage.FmQuestionItem',_super);
		var __proto=FmQuestionItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.fmQuestionItem1=this.getChild("fmQuestionItem1");
			this.gList=this.getChild("gList");
			this.width=GRoot.inst.width;
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
		}

		__proto.updateData=function(questionItem){
			this._questionItem=questionItem;
			this.fmQuestionItem1.title=questionItem.title;
		}

		__proto.gListRenderer=function(index,gobj){
			var questionData=DataMgr.get().questionData;
			var items=questionData.getTitleSecondsById(this._questionItem.titleId);
			var item=gobj;
			item.title=items[index].title;
		}

		__proto.gListClick=function(item,evt){
			var index=this.gList.getChildIndex(item);
			var questionData=DataMgr.get().questionData;
			var items=questionData.getTitleSecondsById(this._questionItem.titleId);
			var content=questionData.getContentParentById(items[index].titleId);
			if(content !=null){
				DataMgr.get().questionId=content.parentId;
				this.sendNotification("OPEN_Panel_Cmd",new PanelData().setOpenData2(GameUtil.PANEL_FM_QUESTION_DETAIL,GameUtil.PANEL_ANI_FROM_RIGHT).setCloseData(GameUtil.PANEL_FM_QUESTION_CENTER,GameUtil.PANEL_ANI_TO_LEFT));
			}
		}

		__getset(0,__proto,'selected',_super.prototype._$get_selected,function(val){
			_super.prototype._$set_selected.call(this,val);
			if(val){
				var questionData=DataMgr.get().questionData;
				var items=questionData.getTitleSecondsById(this._questionItem.titleId);
				this.gList.numItems=items.length;
				this.gList.height=items.length *50;
				}else{
				this.gList.removeChildren();
				this.gList.height=0;
			}
			this.height=this.gList.y+this.gList.height;
		});

		return FmQuestionItem;
	})(BaseGButton)


	//class modules.hall.v.fundmanage.FmQuestionItem1 extends robotLegs.sprite.BaseGButton
	var FmQuestionItem1=(function(_super){
		function FmQuestionItem1(){
			FmQuestionItem1.__super.call(this);
		}

		__class(FmQuestionItem1,'modules.hall.v.fundmanage.FmQuestionItem1',_super);
		var __proto=FmQuestionItem1.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
		}

		__proto.updateData=function(title){
			this.title=title;
		}

		return FmQuestionItem1;
	})(BaseGButton)


	//class modules.hall.v.fundmanage.FmQuestionItem2 extends robotLegs.sprite.BaseGButton
	var FmQuestionItem2=(function(_super){
		function FmQuestionItem2(){
			FmQuestionItem2.__super.call(this);
		}

		__class(FmQuestionItem2,'modules.hall.v.fundmanage.FmQuestionItem2',_super);
		var __proto=FmQuestionItem2.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
		}

		__proto.updateData=function(title){
			title=title;
		}

		return FmQuestionItem2;
	})(BaseGButton)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeAItem extends robotLegs.sprite.BaseGButton
	var FmTopUpMoneyRechargeModeAItem=(function(_super){
		function FmTopUpMoneyRechargeModeAItem(){
			this.btn=null;
			this.img_loader=null;
			FmTopUpMoneyRechargeModeAItem.__super.call(this);
		}

		__class(FmTopUpMoneyRechargeModeAItem,'modules.hall.v.fundmanage.FmTopUpMoneyRechargeModeAItem',_super);
		var __proto=FmTopUpMoneyRechargeModeAItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.btn=this.getChild("btn");
			this.img_loader=this.getChild("img_loader");
		}

		__proto.updateData=function(name){
			this.img_loader.url=GameUtil.Res_TopUp_Path+"ic_"+name+".png";
		}

		__getset(0,__proto,'selected',_super.prototype._$get_selected,function(val){
			_super.prototype._$set_selected.call(this,val);
			this.btn.selected=val;
		});

		return FmTopUpMoneyRechargeModeAItem;
	})(BaseGButton)


	//class modules.hall.v.fundmanage.FmTopUpMoneyRechargePipeItem extends robotLegs.sprite.BaseGButton
	var FmTopUpMoneyRechargePipeItem=(function(_super){
		function FmTopUpMoneyRechargePipeItem(){
			this.btn=null;
			FmTopUpMoneyRechargePipeItem.__super.call(this);
		}

		__class(FmTopUpMoneyRechargePipeItem,'modules.hall.v.fundmanage.FmTopUpMoneyRechargePipeItem',_super);
		var __proto=FmTopUpMoneyRechargePipeItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.btn=this.getChild("btn");
			this.btn.title="";
		}

		__proto.updateData=function(txt){
			this.btn.title=txt;
		}

		__proto.select=function(_select){
			if(_select){
				this.btn.getController("button").selectedIndex=1;
			}
			else{
				this.btn.getController("button").selectedIndex=0;
			}
		}

		return FmTopUpMoneyRechargePipeItem;
	})(BaseGButton)


	//class modules.hall.v.fundmanage.FmTopUpRecordItem extends robotLegs.sprite.BaseGButton
	var FmTopUpRecordItem=(function(_super){
		function FmTopUpRecordItem(){
			this.txtNo=null;
			this.txtTime=null;
			this.txtMoney=null;
			this.txtPipe=null;
			this.txtBank=null;
			this.txtGameName=null;
			this.txtFinishTime=null;
			this.statusTxt=null;
			FmTopUpRecordItem.__super.call(this);
		}

		__class(FmTopUpRecordItem,'modules.hall.v.fundmanage.FmTopUpRecordItem',_super);
		var __proto=FmTopUpRecordItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtNo=this.getChild("txtNo");
			this.txtTime=this.getChild("txtTime");
			this.txtMoney=this.getChild("txtMoney");
			this.txtPipe=this.getChild("txtPipe");
			this.txtBank=this.getChild("txtBank");
			this.txtGameName=this.getChild("txtGameName");
			this.txtFinishTime=this.getChild("txtFinishTime");
			this.statusTxt=this.getChild("statusTxt");
		}

		__proto.updateData=function(data){
			this.txtNo.text=data.id;
			this.txtTime.text=data.create_time;
			this.txtMoney.text=data.finance_amount;
			if(data.finance_status==0){
				this.statusTxt.text="待审核";
			}
			else if(data.finance_status==1){
				this.statusTxt.text="通过";
			}
			else if(data.finance_status==2){
				this.statusTxt.text="撤回";
			}
			else if(data.finance_status==3){
				this.statusTxt.text="未完成充值";
			}
			else if(data.finance_status==4){
				this.statusTxt.text="失败";
			}
			else if(data.finance_status==5){
				this.statusTxt.text="等待加款";
			}
			else if(data.finance_status==6){
				this.statusTxt.text="产品加款失败";
			}
			this.txtPipe.text=data.recharge_type;
			this.txtBank.text=data.recharge_bank_name;
			this.txtGameName.text=data.product_id;
			this.txtFinishTime.text=data.complete_time;
		}

		return FmTopUpRecordItem;
	})(BaseGButton)


	//class modules.hall.v.fundmanage.FmTransferRecordItem extends robotLegs.sprite.BaseGButton
	var FmTransferRecordItem=(function(_super){
		function FmTransferRecordItem(){
			this.txtNo=null;
			this.txtTime=null;
			this.txtMoney=null;
			this.txtPipe=null;
			this.statusTxt=null;
			FmTransferRecordItem.__super.call(this);
		}

		__class(FmTransferRecordItem,'modules.hall.v.fundmanage.FmTransferRecordItem',_super);
		var __proto=FmTransferRecordItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtNo=this.getChild("txtNo");
			this.txtTime=this.getChild("txtTime");
			this.txtMoney=this.getChild("txtMoney");
			this.txtPipe=this.getChild("txtPipe");
			this.statusTxt=this.getChild("statusTxt");
		}

		__proto.updateData=function(data){
			this.txtNo.text=data.id;
			this.txtTime.text=data.create_time;
			this.txtMoney.text=data.transfer_amount_to;
			if(data.transfer_status==0){
				this.statusTxt.text="汇出审核中";
			}
			else if(data.transfer_status==1){
				this.statusTxt.text="汇入审核中";
			}
			else if(data.transfer_status==2){
				this.statusTxt.text="通过";
			}
			else if(data.transfer_status==3){
				this.statusTxt.text="撤回";
			}
			else if(data.transfer_status==4){
				this.statusTxt.text="汇出失败";
			}
			else if(data.transfer_status==5){
				this.statusTxt.text="汇入失败";
			}
			this.txtPipe.text=data.product_id_from+"->"+data.product_id_to;
		}

		return FmTransferRecordItem;
	})(BaseGButton)


	//class modules.hall.v.fundmanage.FmWithdrawRecordItem extends robotLegs.sprite.BaseGButton
	var FmWithdrawRecordItem=(function(_super){
		function FmWithdrawRecordItem(){
			this.txtNo=null;
			this.txtTime=null;
			this.txtMoney=null;
			this.txtPipe=null;
			this.txtFinishTime=null;
			this.statusTxt=null;
			FmWithdrawRecordItem.__super.call(this);
		}

		__class(FmWithdrawRecordItem,'modules.hall.v.fundmanage.FmWithdrawRecordItem',_super);
		var __proto=FmWithdrawRecordItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtNo=this.getChild("txtNo");
			this.txtTime=this.getChild("txtTime");
			this.txtMoney=this.getChild("txtMoney");
			this.txtPipe=this.getChild("txtPipe");
			this.txtFinishTime=this.getChild("txtFinishTime");
			this.statusTxt=this.getChild("statusTxt");
		}

		__proto.updateData=function(data){
			this.txtNo.text=data.id;
			this.txtTime.text=data.create_time;
			this.txtMoney.text=data.finance_amount;
			if(data.finance_status==0){
				this.statusTxt.text="待审核";
			}
			else if(data.finance_status==1){
				this.statusTxt.text="通过";
			}
			else if(data.finance_status==2){
				this.statusTxt.text="撤回";
			}
			this.txtPipe.text=data.product_id;
			this.txtFinishTime.text=data.complete_time;
		}

		return FmWithdrawRecordItem;
	})(BaseGButton)


	//class modules.hall.v.groupcenter.GroupNewAccountItem extends robotLegs.sprite.BaseGButton
	var GroupNewAccountItem=(function(_super){
		function GroupNewAccountItem(){
			this.txt0=null;
			this.txt1=null;
			this.btnGo=null;
			GroupNewAccountItem.__super.call(this);
		}

		__class(GroupNewAccountItem,'modules.hall.v.groupcenter.GroupNewAccountItem',_super);
		var __proto=GroupNewAccountItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txt0=this.getChild("txt0");
			this.txt1=this.getChild("txt1");
			this.btnGo=this.getChild("btnGo");
		}

		__proto.updateData=function(nName,nValue){
			this.txt0.text=nName;
			this.txt1.text=nValue;
		}

		return GroupNewAccountItem;
	})(BaseGButton)


	//class modules.hall.v.groupcenter.GroupVipDetailItem extends robotLegs.sprite.BaseGButton
	var GroupVipDetailItem=(function(_super){
		function GroupVipDetailItem(){
			this.txtName=null;
			this.txtValue=null;
			this.btnSave=null;
			this.txtMin=null;
			this.txtMax=null;
			this.slider1=null;
			this.txtRange=null;
			this._items=null;
			GroupVipDetailItem.__super.call(this);
		}

		__class(GroupVipDetailItem,'modules.hall.v.groupcenter.GroupVipDetailItem',_super);
		var __proto=GroupVipDetailItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtName=this.getChild("txtName");
			this.txtValue=this.getChild("txtValue");
			this.btnSave=this.getChild("btnSave");
			this.txtMin=this.getChild("txtMin");
			this.txtMax=this.getChild("txtMax");
			this.slider1=this.getChild("slider1");
			this.txtRange=this.getChild("txtRange");
			this.slider1.on("fui_state_changed",this,this.onSliderStateChanged);
			this.width=GRoot.inst.width;
		}

		__proto.updateData=function(nName,items){
			this._items=items;
			this.txtName.text=nName+"：";
			this.txtValue.text=items[0].value+"%";
			this.txtMin.text=items[0].value+"%";
			this.txtMax.text=items[items.length-1].value+"%";
			this.txtRange.text="可设范围（"+items[0].value+"% ~ "+items[items.length-1].value+"%）"+items[items.length-1].display;
			if(items.length==1){
				this.slider1.max=1;
				this.slider1.value=1;
				return;
			}
			this.slider1.max=items.length-1;
			this.slider1.value=0;
			this.slider1.getChild("grip").x=0;
		}

		__proto.onSliderStateChanged=function(){
			if(!this._items[this.slider1.value])
				return;
			this.txtValue.text=Number(this._items[this.slider1.value].value).toFixed(2)+"%";
		}

		__proto.getTxtValue=function(){
			if(!this._items[this.slider1.value])
				return "";
			return this._items[this.slider1.value].value;
		}

		__proto.getSliderValue=function(){
			return this.slider1.value;
		}

		return GroupVipDetailItem;
	})(BaseGButton)


	//class modules.hall.v.groupcenter.GroupVipItem extends robotLegs.sprite.BaseGButton
	var GroupVipItem=(function(_super){
		function GroupVipItem(){
			this.txt0=null;
			this.txt1=null;
			this.txt2=null;
			this.txt3=null;
			this.btnGo=null;
			GroupVipItem.__super.call(this);
		}

		__class(GroupVipItem,'modules.hall.v.groupcenter.GroupVipItem',_super);
		var __proto=GroupVipItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txt0=this.getChild("txt0");
			this.txt1=this.getChild("txt1");
			this.txt2=this.getChild("txt2");
			this.txt3=this.getChild("txt3");
			this.btnGo=this.getChild("btnGo");
		}

		__proto.updateData=function(data){
			this.txt0.text=data.user_account;
			this.txt1.text=data.user_balance;
			this.txt2.text=data.is_proxy ? "代理":"会员";
			this.txt3.text=data.really_user_percent+"%";
		}

		return GroupVipItem;
	})(BaseGButton)


	//class modules.hall.v.main.HallFavoriteListItem extends robotLegs.sprite.BaseGButton
	var HallFavoriteListItem=(function(_super){
		function HallFavoriteListItem(){
			this.imgLoader=null;
			this.txtName=null;
			this._gid=null;
			HallFavoriteListItem.__super.call(this);
		}

		__class(HallFavoriteListItem,'modules.hall.v.main.HallFavoriteListItem',_super);
		var __proto=HallFavoriteListItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.imgLoader=this.getChild("imgLoader");
			this.txtName=this.getChild("txtName");
		}

		__proto.setWidth=function(parentWidth){
			this.width=Math.floor(parentWidth/2);
		}

		__proto.updateData=function(gId){
			this._gid=gId;
			var lotteryGameTypeConfigData=DataMgr.get().lotteryGameTypeConfigData;
			var lotteryGameItem=lotteryGameTypeConfigData.getItem(gId);
			this.imgLoader.setSize(92,92);
			this.imgLoader.url=GameUtil.Res_Lottery_Path+"ic_"+lotteryGameItem.game_value+"@2x.png";
			this.txtName.text=lotteryGameItem.game_value;
		}

		__getset(0,__proto,'gid',function(){
			return this._gid;
		});

		return HallFavoriteListItem;
	})(BaseGButton)


	//class modules.hall.v.main.HallLotteryListItem extends robotLegs.sprite.BaseGButton
	var HallLotteryListItem=(function(_super){
		function HallLotteryListItem(){
			this.img_bg=null;
			this.img_icon=null;
			this.txtName=null;
			this.txtDes=null;
			this.gList=null;
			this._$4__id=null;
			this._data=null;
			this._index=0;
			this._isShow=false;
			this._height=0;
			this._isStop=false;
			this.__initHeight=NaN;
			HallLotteryListItem.__super.call(this);
		}

		__class(HallLotteryListItem,'modules.hall.v.main.HallLotteryListItem',_super);
		var __proto=HallLotteryListItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.img_bg=this.getChild("img_bg");
			this.img_icon=this.getChild("img_icon");
			this.txtName=this.getChild("txtName");
			this.txtDes=this.getChild("txtDes");
			this.gList=this.getChild("gList");
			this.__initHeight=this.height;
			this.gList.itemRenderer=Handler.create(this,this.gListRenderer,null,false);
			this.gList.on("fui_click_item",this,this.gListClick);
		}

		__proto.updateData=function(id,data,index){
			this._$4__id=id;
			this._data=data;
			this._index=index;
			this._$4__height=this.__initHeight;
			this.txtName.text=data.title;
			this.txtDes.text=data.openLine.length+"种彩种，幸运转不停";
			this.img_bg.url=GameUtil.Res_Halllottery_Path+(index%4)+"_bg.png";
			var iconName=data.title.replace("/","_");
			this.img_icon.url=GameUtil.Res_Halllottery_Path+"ic_"+iconName+".png";
		}

		__proto.showHideHandler=function(){
			if(this._isStop){
				this._isStop=false;
				return;
			}
			this._isShow=!this._isShow;
			if(this._isShow){
				this.gList.numItems=this._data.openLine.length;
				var lineCount=Math.floor(this.gList.width / (170+this.gList.columnGap));
				this.gList.height=Math.ceil(this._data.openLine.length / lineCount)*150;
				this.height=this._$4__height+this.gList.height;
			}
			else{
				this.gList.removeChildren();
				this.gList.height=0;
				this.height=this._$4__height;
			}
		}

		__proto.gListRenderer=function(index,obj){
			var gId=this._data.openLine[index].id;
			var item=obj;
			item.updateData(gId,0);
		}

		__proto.gListClick=function(obj,evt){
			this._isStop=true;
			var favoriteLotteryData=DataMgr.get().favoriteLotteryData;
			var item=obj;
			var favoriteLotteryItem=favoriteLotteryData.itemDic.get(this._$4__id);
			var index=favoriteLotteryItem.openLineDic.get(item.gId);
			var favoriteLotteryItem2=favoriteLotteryItem.openLine[index];
			if(!DataMgr.get().numberGamePlayConfigData.data[item.gId]){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd",favoriteLotteryItem2.name+" 暂未开放！");
				return;
			}
			if(!favoriteLotteryItem2.is_active){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd",favoriteLotteryItem2.name+" 暂未开放！");
				return;
			}
			this.sendNotification("INTO_GAME_Cmd",item.gId);
		}

		return HallLotteryListItem;
	})(BaseGButton)


	//class modules.hall.v.main.otherWebsite.OtherWebsiteOneItem extends robotLegs.sprite.BaseGButton
	var OtherWebsiteOneItem=(function(_super){
		function OtherWebsiteOneItem(){
			this.iconLoader=null;
			this.gameTypeItem=null;
			this.nameTxt=null;
			this.qiDaiController=null;
			OtherWebsiteOneItem.__super.call(this);
		}

		__class(OtherWebsiteOneItem,'modules.hall.v.main.otherWebsite.OtherWebsiteOneItem',_super);
		var __proto=OtherWebsiteOneItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.iconLoader=this.getChild("iconLoader");
			this.nameTxt=this.getChild("nameTxt");
			this.qiDaiController=this.getController("qiDaiController");
			this.onClick(this,this.openOtherWeb);
		}

		__proto.update=function(_gameTypeItem){
			this.gameTypeItem=_gameTypeItem;
			if(this.qiDaiController){
				if(_gameTypeItem.id==-1){
					this.qiDaiController.selectedIndex=1;
				}
			}
			this.iconLoader.url=GameUtil.Res_GameType_Path+"ic_"+_gameTypeItem.cn+".png";
			this.nameTxt.text=_gameTypeItem.cn;
		}

		__proto.openOtherWeb=function(){
			if(DataMgr.get().loginState()< DataMgr.LoginState_TryPlay){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","请先登陆！");
				return;
			}
			if(DataMgr.get().loginState()< DataMgr.LoginState_Account){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","试玩玩家没有对应的权限！");
				return;
			}
			if(this.gameTypeItem.id==-1){
				this.sendNotification("SHOW_PROMPT_TEXT_Cmd","敬请期待！");
				return;
			}
			this.sendNotification("GET_PLATFORM_ADDRESS_Cmd",this.gameTypeItem.en.toLocaleUpperCase());
		}

		return OtherWebsiteOneItem;
	})(BaseGButton)


	//class modules.hall.v.minecenter.McBetRecordItem extends robotLegs.sprite.BaseGButton
	var McBetRecordItem=(function(_super){
		function McBetRecordItem(){
			this.txtName=null;
			this.txtNum=null;
			this.txtMoney=null;
			this.txtState=null;
			this.txtPlayType=null;
			McBetRecordItem.__super.call(this);
		}

		__class(McBetRecordItem,'modules.hall.v.minecenter.McBetRecordItem',_super);
		var __proto=McBetRecordItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtName=this.getChild("txtName");
			this.txtNum=this.getChild("txtNum");
			this.txtMoney=this.getChild("txtMoney");
			this.txtState=this.getChild("txtState");
			this.txtPlayType=this.getChild("txtPlayType");
			this.txtPlayType.text=this.txtName.text=this.txtNum.text=this.txtMoney.text="";
			this.width=GRoot.inst.width;
		}

		__proto.updateData=function(data){
			var langConfigData=DataMgr.get().langConfigData;
			this.txtName.text=data.game_value;
			this.txtNum.text="第"+data.game_cycle_value+"期";
			this.txtPlayType.text=data.game_type_name;
			this.txtMoney.text=Number(data.bet_balance).toFixed(3);
			switch(data.order_status){
				case 7:
					this.txtState.color="#666666";
					break ;
				case 6:
					this.txtState.color="#FF0000";
					break ;
				default :
					this.txtState.color="#0099FF";
					break ;
				}
			this.txtState.text=langConfigData.lang_order_status.get(data.order_status);
		}

		return McBetRecordItem;
	})(BaseGButton)


	//class modules.hall.v.systemcenter.SysInboxItem extends robotLegs.sprite.BaseGButton
	var SysInboxItem=(function(_super){
		function SysInboxItem(){
			this.txtDate=null;
			this.txtTitle=null;
			this.txtContent=null;
			SysInboxItem.__super.call(this);
		}

		__class(SysInboxItem,'modules.hall.v.systemcenter.SysInboxItem',_super);
		var __proto=SysInboxItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.txtDate=this.getChild("txtDate");
			this.txtTitle=this.getChild("txtTitle");
			this.txtContent=this.getChild("txtContent");
			this.width=GRoot.inst.width-1;
		}

		__proto.updateData=function(ojb){}
		return SysInboxItem;
	})(BaseGButton)


	//class modules.hall.v.systemcenter.SysMyBankCardItem extends robotLegs.sprite.BaseGButton
	var SysMyBankCardItem=(function(_super){
		function SysMyBankCardItem(){
			this.img_bg=null;
			this.img_icon=null;
			this.txtBankName=null;
			this.txtAccountInfo=null;
			this.txtBankNo=null;
			SysMyBankCardItem.__super.call(this);
		}

		__class(SysMyBankCardItem,'modules.hall.v.systemcenter.SysMyBankCardItem',_super);
		var __proto=SysMyBankCardItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.img_bg=this.getChild("img_bg");
			this.img_icon=this.getChild("img_icon");
			this.txtBankName=this.getChild("txtBankName");
			this.txtAccountInfo=this.getChild("txtAccountInfo");
			this.txtBankNo=this.getChild("txtBankNo");
			this.txtBankName.text=this.txtAccountInfo.text=this.txtBankNo.text="";
		}

		__proto.updateData=function(ojb,index){
			this.img_bg.url=GameUtil.Res_Bank_Path+"ic_wallet_bg_"+index+".png";
			this.img_icon.url=GameUtil.Res_Bank_Path+"ic_"+ojb.bank_name+".png";
			this.txtBankName.text=ojb.bank_name;
			this.txtAccountInfo.text=ojb.user_account+" "+ojb.bank_name;
			this.txtBankNo.text=ojb.bank_account;
		}

		return SysMyBankCardItem;
	})(BaseGButton)


	//class modules.hall.v.systemcenter.SysSetFavoriteItem extends robotLegs.sprite.BaseGButton
	var SysSetFavoriteItem=(function(_super){
		function SysSetFavoriteItem(){
			this.imgLoader=null;
			this.txtName=null;
			this.btnAdd=null;
			this.btnRemove=null;
			this.btnController=null;
			this._gId=null;
			this._index=0;
			SysSetFavoriteItem.__super.call(this);
		}

		__class(SysSetFavoriteItem,'modules.hall.v.systemcenter.SysSetFavoriteItem',_super);
		var __proto=SysSetFavoriteItem.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.imgLoader=this.getChild("imgLoader");
			this.txtName=this.getChild("txtName");
			this.btnAdd=this.getChild("btnAdd");
			this.btnRemove=this.getChild("btnRemove");
			this.btnController=this.getController("btnController");
		}

		__proto.updateData=function(gId,showIndex){
			this._gId=gId;
			var lotteryGameTypeConfigData=DataMgr.get().lotteryGameTypeConfigData;
			var lotteryGameItem=lotteryGameTypeConfigData.getItem(gId);
			this.imgLoader.url=GameUtil.Res_Lottery_Path+"ic_"+lotteryGameItem.game_value+"@2x.png";
			this.txtName.text=lotteryGameItem.game_value;
			this.btnController.selectedIndex=showIndex;
		}

		__proto.hideButton=function(){
			this.btnController.selectedIndex=0;
		}

		__proto.hit=function(p){
			if(p.x > this.x && p.x < this.x+this.width && p.y > this.y && p.y < this.y+this.height)
				return true;
			return false;
		}

		__getset(0,__proto,'gId',function(){
			return this._gId;
		});

		__getset(0,__proto,'index',function(){
			return this._index;
			},function(value){
			this._index=value;
		});

		return SysSetFavoriteItem;
	})(BaseGButton)


	//class modules.hall.v.systemcenter.SysSetFavoritePannelGameTypeList extends robotLegs.sprite.BaseGButton
	var SysSetFavoritePannelGameTypeList=(function(_super){
		function SysSetFavoritePannelGameTypeList(){
			this.favoriteLotteryItem=null;
			this.playTypeTxt=null;
			this.bgBtn=null;
			this.playTypeController=null;
			this.sysSetFavoriteItemArr=[];
			SysSetFavoritePannelGameTypeList.__super.call(this);
		}

		__class(SysSetFavoritePannelGameTypeList,'modules.hall.v.systemcenter.SysSetFavoritePannelGameTypeList',_super);
		var __proto=SysSetFavoritePannelGameTypeList.prototype;
		__proto.constructFromXML=function(xml){
			fairygui.GButton.prototype.constructFromXML.call(this,xml);
			this.playTypeTxt=this.getChild("playTypeTxt");
			this.bgBtn=this.getChild("bgBtn");
			this.playTypeController=this.getController("playTypeController");
			for(var i=0;i < 32;i++){
				if(!this.getChild("comp$SysSetFavoriteItem$"+i))
					break ;
				this.sysSetFavoriteItemArr.push(this.getChild("comp$SysSetFavoriteItem$"+i));
				this.sysSetFavoriteItemArr[i].btnAdd.onClick(this,this.chooseFavorite,[i]);
			}
		}

		// bgBtn.onClick(this,openList);
		__proto.update=function(_favoriteLotteryItem){
			this.favoriteLotteryItem=_favoriteLotteryItem;
			this.playTypeTxt.text=_favoriteLotteryItem.title;
			var myFavorites=DataMgr.get().myFavorites;
			for(var i=0;i < _favoriteLotteryItem.openLine.length;i++){
				var gId=_favoriteLotteryItem.openLine[i].id;
				var showIndex=0;
				if(myFavorites.indexOf(gId)==-1)
					showIndex=1;
				this.sysSetFavoriteItemArr[i].updateData(gId,showIndex);
			}
			this.openList();
		}

		__proto.openList=function(){
			this.playTypeController.selectedIndex=this.favoriteLotteryItem.openLine.length;
		}

		// sendNotification(SystemCenterCommand.UPDATE_FAVORITE_PANEL_GAME_CMD);
		__proto.chooseFavorite=function(_index){
			var item=this.sysSetFavoriteItemArr[_index];
			var gId=item.gId;
			var myFavorites=DataMgr.get().myFavorites;
			if(myFavorites.indexOf(gId)==-1){
				if(myFavorites.length >=GameUtil.FAVORITE_GAME_MAX){
					this.sendNotification("SHOW_PROMPT_TEXT_Cmd","我的最爱列表最多设置"+GameUtil.FAVORITE_GAME_MAX+"个游戏！");
					return;
				}
				myFavorites.push(gId);
				item.hideButton();
				this.sendNotification("UPDATE_FAVORITE_LIST_Cmd");
			}
		}

		return SysSetFavoritePannelGameTypeList;
	})(BaseGButton)


	//class publics.c.ServerHttpRequestCommand extends robotLegs.command.HttpRequestCommand
	var ServerHttpRequestCommand=(function(_super){
		function ServerHttpRequestCommand(){
			this.publicModel=null;
			this.playerInfoModel=null;
			ServerHttpRequestCommand.__super.call(this);
		}

		__class(ServerHttpRequestCommand,'publics.c.ServerHttpRequestCommand',_super);
		var __proto=ServerHttpRequestCommand.prototype;
		__proto.execute=function(_notificationVo){
			_super.prototype.execute.call(this,_notificationVo);
			switch(_notificationVo.cmd){
				case "Refresh_Browser_Cmd":{
						this.refreshBrowser();
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*请求结果
		*@param e
		*
		*/
		__proto.onHttpRequestComplete=function(e){
			var _data=e;
			_data["__url__"]=this.__httpRequestVo.url;
			if(_data["status_code"] !=1){
				this.hideLoading();
				if(_data["status_code"]==104 || _data["status_code"]==144){
					this.showAlert(_data["status_msg"],"Refresh_Browser_Cmd");
					return;
				}
				if(this.publicModel.errorCodeData.getMsg(_data["status_code"]).length==0){
					this.showAlert(_data["status_msg"]);
					this.sendNotification(this.__httpRequestVo.errorBackCmd);
				}
				else{
					this.showAlert(this.publicModel.errorCodeData.getMsg(_data["status_code"]));{
						this.sendNotification(this.__httpRequestVo.errorBackCmd);
					}
				}
				return;
			}
			if(this.__httpRequestVo.completeBackCmd.length==0)
				return;
			this.sendNotification(this.__httpRequestVo.completeBackCmd,e);
			this.newClearMemory();
		}

		/**
		*刷新浏览器
		*
		*/
		__proto.refreshBrowser=function(){
			LocalStorage.setItem("Relogin","1");
			location.reload();
		}

		ServerHttpRequestCommand.REQUEST_CMD="Request_Cmd";
		ServerHttpRequestCommand.REFRESH_BROWSER_CMD="Refresh_Browser_Cmd";
		return ServerHttpRequestCommand;
	})(HttpRequestCommand)


	//class laya.display.Input extends laya.display.Text
	var Input=(function(_super){
		function Input(){
			this._focus=false;
			this._multiline=false;
			this._editable=true;
			this._restrictPattern=null;
			this._type="text";
			this._prompt='';
			this._promptColor="#A9A9A9";
			this._originColor="#000000";
			this._content='';
			Input.__super.call(this);
			this._maxChars=1E5;
			this._width=100;
			this._height=20;
			this.multiline=false;
			this.overflow=Text.SCROLL;
			this.on("mousedown",this,this._onMouseDown);
			this.on("undisplay",this,this._onUnDisplay);
		}

		__class(Input,'laya.display.Input',_super);
		var __proto=Input.prototype;
		/**
		*设置光标位置和选取字符。
		*@param startIndex 光标起始位置。
		*@param endIndex 光标结束位置。
		*/
		__proto.setSelection=function(startIndex,endIndex){
			this.focus=true;
			laya.display.Input.inputElement.selectionStart=startIndex;
			laya.display.Input.inputElement.selectionEnd=endIndex;
		}

		__proto._onUnDisplay=function(e){
			this.focus=false;
		}

		__proto._onMouseDown=function(e){
			this.focus=true;
		}

		/**
		*在输入期间，如果 Input 实例的位置改变，调用_syncInputTransform同步输入框的位置。
		*/
		__proto._syncInputTransform=function(){
			var inputElement=this.nativeInput;
			var transform=Utils.getTransformRelativeToWindow(this,this.padding[3],this.padding[0]);
			var inputWid=this._width-this.padding[1]-this.padding[3];
			var inputHei=this._height-this.padding[0]-this.padding[2];
			if (Render.isConchApp){
				inputElement.setScale(transform.scaleX,transform.scaleY);
				inputElement.setSize(inputWid,inputHei);
				inputElement.setPos(transform.x,transform.y);
				}else {
				Input.inputContainer.style.transform=Input.inputContainer.style.webkitTransform="scale("+transform.scaleX+","+transform.scaleY+") rotate("+(Laya.stage.canvasDegree)+"deg)";
				inputElement.style.width=inputWid+'px';
				inputElement.style.height=inputHei+'px';
				Input.inputContainer.style.left=transform.x+'px';
				Input.inputContainer.style.top=transform.y+'px';
			}
		}

		/**选中当前实例的所有文本。*/
		__proto.select=function(){
			this.nativeInput.select();
		}

		__proto._setInputMethod=function(){
			Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));
			Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));
			Input.inputElement=(this._multiline ? Input.area :Input.input);
			Input.inputContainer.appendChild(Input.inputElement);
			if (Text.RightToLeft){
				Input.inputElement.style.direction="rtl";
			}
		}

		__proto._focusIn=function(){
			laya.display.Input.isInputting=true;
			var input=this.nativeInput;
			this._focus=true;
			var cssStyle=input.style;
			cssStyle.whiteSpace=(this.wordWrap ? "pre-wrap" :"nowrap");
			this._setPromptColor();
			input.readOnly=!this._editable;
			if (Render.isConchApp){
				input.setType(this._type);
				input.setForbidEdit(!this._editable);
			}
			input.maxLength=this._maxChars;
			var padding=this.padding;
			input.type=this._type;
			input.value=this._content;
			input.placeholder=this._prompt;
			Laya.stage.off("keydown",this,this._onKeyDown);
			Laya.stage.on("keydown",this,this._onKeyDown);
			Laya.stage.focus=this;
			this.event("focus");
			if (Browser.onPC)input.focus();
			if(!Browser.onMiniGame){
				var temp=this._text;
				this._text=null;
			}
			this.typeset();
			input.setColor(this._originColor);
			input.setFontSize(this.fontSize);
			input.setFontFace(Browser.onIPhone ? (Text._fontFamilyMap[this.font] || this.font):this.font);
			if (Render.isConchApp){
				input.setMultiAble && input.setMultiAble(this._multiline);
			}
			cssStyle.lineHeight=(this.leading+this.fontSize)+"px";
			cssStyle.fontStyle=(this.italic ? "italic" :"normal");
			cssStyle.fontWeight=(this.bold ? "bold" :"normal");
			cssStyle.textAlign=this.align;
			cssStyle.padding="0 0";
			this._syncInputTransform();
			if (!Render.isConchApp && Browser.onPC)
				Laya.timer.frameLoop(1,this,this._syncInputTransform);
		}

		// 设置DOM输入框提示符颜色。
		__proto._setPromptColor=function(){
			Input.promptStyleDOM=Browser.getElementById("promptStyle");
			if (!Input.promptStyleDOM){
				Input.promptStyleDOM=Browser.createElement("style");
				Input.promptStyleDOM.setAttribute("id","promptStyle");
				Browser.document.head.appendChild(Input.promptStyleDOM);
			}
			Input.promptStyleDOM.innerText="input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {"+"color:"+this._promptColor+"}"+"input:-moz-placeholder, textarea:-moz-placeholder {"+"color:"+this._promptColor+"}"+"input::-moz-placeholder, textarea::-moz-placeholder {"+"color:"+this._promptColor+"}"+"input:-ms-input-placeholder, textarea:-ms-input-placeholder {"+"color:"+this._promptColor+"}";
		}

		/**@private */
		__proto._focusOut=function(){
			laya.display.Input.isInputting=false;
			this._focus=false;
			this._text=null;
			this._content=this.nativeInput.value;
			if (!this._content){
				_super.prototype._$set_text.call(this,this._prompt);
				_super.prototype._$set_color.call(this,this._promptColor);
				}else {
				_super.prototype._$set_text.call(this,this._content);
				_super.prototype._$set_color.call(this,this._originColor);
			}
			Laya.stage.off("keydown",this,this._onKeyDown);
			Laya.stage.focus=null;
			this.event("blur");
			if (Render.isConchApp)this.nativeInput.blur();
			Browser.onPC && Laya.timer.clear(this,this._syncInputTransform);
		}

		/**@private */
		__proto._onKeyDown=function(e){
			if (e.keyCode===13){
				if (Browser.onMobile && !this._multiline)
					this.focus=false;
				this.event("enter");
			}
		}

		__proto.changeText=function(text){
			this._content=text;
			if (this._focus){
				this.nativeInput.value=text || '';
				this.event("change");
			}else
			_super.prototype.changeText.call(this,text);
		}

		/**@inheritDoc */
		__getset(0,__proto,'color',_super.prototype._$get_color,function(value){
			if (this._focus)
				this.nativeInput.setColor(value);
			_super.prototype._$set_color.call(this,this._content?value:this._promptColor);
			this._originColor=value;
		});

		//[Deprecated]
		__getset(0,__proto,'inputElementYAdjuster',function(){
			console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。");
			return 0;
			},function(value){
			console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。");
		});

		/**表示是否是多行输入框。*/
		__getset(0,__proto,'multiline',function(){
			return this._multiline;
			},function(value){
			this._multiline=value;
			this.valign=value ? "top" :"middle";
		});

		/**
		*<p>字符数量限制，默认为10000。</p>
		*<p>设置字符数量限制时，小于等于0的值将会限制字符数量为10000。</p>
		*/
		__getset(0,__proto,'maxChars',function(){
			return this._maxChars;
			},function(value){
			if (value <=0)
				value=1E5;
			this._maxChars=value;
		});

		/**@inheritDoc */
		__getset(0,__proto,'text',function(){
			if (this._focus)
				return this.nativeInput.value;
			else
			return this._content || "";
			},function(value){
			_super.prototype._$set_color.call(this,this._originColor);
			value+='';
			if (this._focus){
				this.nativeInput.value=value || '';
				this.event("change");
				}else {
				if (!this._multiline)
					value=value.replace(/\r?\n/g,'');
				this._content=value;
				if (value)
					_super.prototype._$set_text.call(this,value);
				else {
					_super.prototype._$set_text.call(this,this._prompt);
					_super.prototype._$set_color.call(this,this.promptColor);
				}
			}
		});

		/**
		*获取对输入框的引用实例。
		*/
		__getset(0,__proto,'nativeInput',function(){
			return this._multiline ? Input.area :Input.input;
		});

		/**
		*设置输入提示符。
		*/
		__getset(0,__proto,'prompt',function(){
			return this._prompt;
			},function(value){
			if (!this._text && value)
				_super.prototype._$set_color.call(this,this._promptColor);
			this.promptColor=this._promptColor;
			if (this._text)
				_super.prototype._$set_text.call(this,(this._text==this._prompt)?value:this._text);
			else
			_super.prototype._$set_text.call(this,value);
			this._prompt=Text.langPacks && Text.langPacks[value] ? Text.langPacks[value] :value;
		});

		// 因此 调用focus接口是无法都在移动平台立刻弹出键盘的
		/**
		*表示焦点是否在此实例上。
		*/
		__getset(0,__proto,'focus',function(){
			return this._focus;
			},function(value){
			var input=this.nativeInput;
			if (this._focus!==value){
				if (value){
					if (input.target){
						input.target._focusOut();
						}else {
						this._setInputMethod();
					}
					input.target=this;
					this._focusIn();
					}else {
					input.target=null;
					this._focusOut();
					Browser.document.body.scrollTop=0;
					input.blur();
					if (Render.isConchApp){
						input.setPos(-10000,-10000);
					}else if (Input.inputContainer.contains(input))
					Input.inputContainer.removeChild(input);
				}
			}
		});

		/**限制输入的字符。*/
		__getset(0,__proto,'restrict',function(){
			if (this._restrictPattern){
				return this._restrictPattern.source;
			}
			return "";
			},function(pattern){
			if (pattern){
				pattern="[^"+pattern+"]";
				if (pattern.indexOf("^^")>-1)
					pattern=pattern.replace("^^","");
				this._restrictPattern=new RegExp(pattern,"g");
			}else
			this._restrictPattern=null;
		});

		/**
		*是否可编辑。
		*/
		__getset(0,__proto,'editable',function(){
			return this._editable;
			},function(value){
			this._editable=value;
			if (Render.isConchApp){
				Input.input.setForbidEdit(!value);
			}
		});

		/**
		*设置输入提示符颜色。
		*/
		__getset(0,__proto,'promptColor',function(){
			return this._promptColor;
			},function(value){
			this._promptColor=value;
			if (!this._content)_super.prototype._$set_color.call(this,value);
		});

		/**
		*<p>输入框类型为Input静态常量之一。</p>
		*<ul>
		*<li>TYPE_TEXT</li>
		*<li>TYPE_PASSWORD</li>
		*<li>TYPE_EMAIL</li>
		*<li>TYPE_URL</li>
		*<li>TYPE_NUMBER</li>
		*<li>TYPE_RANGE</li>
		*<li>TYPE_DATE</li>
		*<li>TYPE_MONTH</li>
		*<li>TYPE_WEEK</li>
		*<li>TYPE_TIME</li>
		*<li>TYPE_DATE_TIME</li>
		*<li>TYPE_DATE_TIME_LOCAL</li>
		*</ul>
		*<p>平台兼容性参见http://www.w3school.com.cn/html5/html_5_form_input_types.asp。</p>
		*/
		__getset(0,__proto,'type',function(){
			return this._type;
			},function(value){
			if (value=="password")
				this._getCSSStyle().password=true;
			else
			this._getCSSStyle().password=false;
			this._type=value;
			if (Render.isConchApp){
				this.nativeInput.setType(value);
			}
		});

		/**
		*<p>原生输入框 X 轴调整值，用来调整输入框坐标。</p>
		*<p>由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。</p>
		*@deprecated
		*/
		__getset(0,__proto,'inputElementXAdjuster',function(){
			console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。");
			return 0;
			},function(value){
			console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。");
		});

		//[Deprecated(replacement="Input.type")]
		__getset(0,__proto,'asPassword',function(){
			return this._getCSSStyle().password;
			},function(value){
			this._getCSSStyle().password=value;
			this._type="password";
			console.warn("deprecated: 使用type=\"password\"替代设置asPassword, asPassword将在下次重大更新时删去");
			this.isChanged=true;
		});

		Input.__init__=function(){
			Input._createInputElement();
			if (Browser.onMobile)
				Render.canvas.addEventListener(Input.IOS_IFRAME ?(Browser.onMiniGame ? "touchend" :"click"):"touchend",Input._popupInputMethod);
		}

		Input._popupInputMethod=function(e){
			if (!laya.display.Input.isInputting)return;
			var input=laya.display.Input.inputElement;
			input.focus();
		}

		Input._createInputElement=function(){
			Input._initInput(Input.area=Browser.createElement("textarea"));
			Input._initInput(Input.input=Browser.createElement("input"));
			Input.inputContainer=Browser.createElement("div");
			Input.inputContainer.style.position="absolute";
			Input.inputContainer.style.zIndex=1E5;
			Browser.container.appendChild(Input.inputContainer);
			Input.inputContainer.setPos=function (x,y){Input.inputContainer.style.left=x+'px';Input.inputContainer.style.top=y+'px';};
		}

		Input._initInput=function(input){
			var style=input.style;
			style.cssText="position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;";
			style.resize='none';
			style.backgroundColor='transparent';
			style.border='none';
			style.outline='none';
			style.zIndex=1;
			input.addEventListener('input',Input._processInputting);
			input.addEventListener('mousemove',Input._stopEvent);
			input.addEventListener('mousedown',Input._stopEvent);
			input.addEventListener('touchmove',Input._stopEvent);
			input.setFontFace=function (fontFace){input.style.fontFamily=fontFace;};
			if(!Render.isConchApp){
				input.setColor=function (color){input.style.color=color;};
				input.setFontSize=function (fontSize){input.style.fontSize=fontSize+'px';};
			}
		}

		Input._processInputting=function(e){
			var input=laya.display.Input.inputElement.target;
			if (!input)return;
			var value=laya.display.Input.inputElement.value;
			if (input._restrictPattern){
				value=value.replace(/\u2006|\x27/g,"");
				if (input._restrictPattern.test(value)){
					value=value.replace(input._restrictPattern,"");
					laya.display.Input.inputElement.value=value;
				}
			}
			input._text=value;
			input.event("input");
		}

		Input._stopEvent=function(e){
			if (e.type=='touchmove')
				e.preventDefault();
			e.stopPropagation && e.stopPropagation();
		}

		Input.TYPE_TEXT="text";
		Input.TYPE_PASSWORD="password";
		Input.TYPE_EMAIL="email";
		Input.TYPE_URL="url";
		Input.TYPE_NUMBER="number";
		Input.TYPE_RANGE="range";
		Input.TYPE_DATE="date";
		Input.TYPE_MONTH="month";
		Input.TYPE_WEEK="week";
		Input.TYPE_TIME="time";
		Input.TYPE_DATE_TIME="datetime";
		Input.TYPE_DATE_TIME_LOCAL="datetime-local";
		Input.TYPE_SEARCH="search";
		Input.input=null
		Input.area=null
		Input.inputElement=null
		Input.inputContainer=null
		Input.confirmButton=null
		Input.promptStyleDOM=null
		Input.inputHeight=45;
		Input.isInputting=false;
		Input.stageMatrix=null
		__static(Input,
		['IOS_IFRAME',function(){return this.IOS_IFRAME=(Browser.onIOS && Browser.window.top !=Browser.window.self);}
		]);
		return Input;
	})(Text)


	//class laya.ui.Image extends laya.ui.Component
	var Image=(function(_super){
		function Image(skin){
			this._bitmap=null;
			this._skin=null;
			this._group=null;
			Image.__super.call(this);
			this.skin=skin;
		}

		__class(Image,'laya.ui.Image',_super);
		var __proto=Image.prototype;
		/**@inheritDoc */
		__proto.destroy=function(destroyChild){
			(destroyChild===void 0)&& (destroyChild=true);
			_super.prototype.destroy.call(this,true);
			this._bitmap && this._bitmap.destroy();
			this._bitmap=null;
		}

		/**
		*销毁对象并释放加载的皮肤资源。
		*/
		__proto.dispose=function(){
			this.destroy(true);
			Laya.loader.clearRes(this._skin);
		}

		/**@inheritDoc */
		__proto.createChildren=function(){
			this.graphics=this._bitmap=new AutoBitmap();
			this._bitmap.autoCacheCmd=false;
		}

		/**
		*@private
		*设置皮肤资源。
		*/
		__proto.setSource=function(url,img){
			if (url===this._skin && img){
				this.source=img
				this.onCompResize();
			}
		}

		/**
		*@copy laya.ui.AutoBitmap#source
		*/
		__getset(0,__proto,'source',function(){
			return this._bitmap.source;
			},function(value){
			if (!this._bitmap)return;
			this._bitmap.source=value;
			this.event("loaded");
			this.repaint();
		});

		/**@inheritDoc */
		__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
			this._dataSource=value;
			if ((typeof value=='string'))this.skin=value;
			else _super.prototype._$set_dataSource.call(this,value);
		});

		/**@inheritDoc */
		__getset(0,__proto,'measureHeight',function(){
			return this._bitmap.height;
		});

		/**
		*<p>对象的皮肤地址，以字符串表示。</p>
		*<p>如果资源未加载，则先加载资源，加载完成后应用于此对象。</p>
		*<b>注意：</b>资源加载完成后，会自动缓存至资源库中。
		*/
		__getset(0,__proto,'skin',function(){
			return this._skin;
			},function(value){
			if (this._skin !=value){
				this._skin=value;
				if (value){
					var source=Loader.getRes(value);
					if (source){
						this.source=source;
						this.onCompResize();
					}else Laya.loader.load(this._skin,Handler.create(this,this.setSource,[this._skin]),null,"image",1,true,this._group);
					}else {
					this.source=null;
				}
			}
		});

		/**
		*资源分组。
		*/
		__getset(0,__proto,'group',function(){
			return this._group;
			},function(value){
			if (value && this._skin)Loader.setGroup(this._skin,value);
			this._group=value;
		});

		/**
		*<p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>
		*<p>数据格式："上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)"，以逗号分隔。
		*<ul><li>例如："4,4,4,4,1"。</li></ul></p>
		*@see laya.ui.AutoBitmap#sizeGrid
		*/
		__getset(0,__proto,'sizeGrid',function(){
			if (this._bitmap.sizeGrid)return this._bitmap.sizeGrid.join(",");
			return null;
			},function(value){
			this._bitmap.sizeGrid=UIUtils.fillArray(Styles.defaultSizeGrid,value,Number);
		});

		/**@inheritDoc */
		__getset(0,__proto,'measureWidth',function(){
			return this._bitmap.width;
		});

		/**@inheritDoc */
		__getset(0,__proto,'width',_super.prototype._$get_width,function(value){
			_super.prototype._$set_width.call(this,value);
			this._bitmap.width=value==0 ? 0.0000001 :value;
		});

		/**@inheritDoc */
		__getset(0,__proto,'height',_super.prototype._$get_height,function(value){
			_super.prototype._$set_height.call(this,value);
			this._bitmap.height=value==0 ? 0.0000001 :value;
		});

		return Image;
	})(Component)


	//class laya.ui.Label extends laya.ui.Component
	var Label=(function(_super){
		function Label(text){
			this._tf=null;
			Label.__super.call(this);
			(text===void 0)&& (text="");
			Font.defaultColor=Styles.labelColor;
			this.text=text;
		}

		__class(Label,'laya.ui.Label',_super);
		var __proto=Label.prototype;
		/**@inheritDoc */
		__proto.destroy=function(destroyChild){
			(destroyChild===void 0)&& (destroyChild=true);
			_super.prototype.destroy.call(this,destroyChild);
			this._tf=null;
		}

		/**@inheritDoc */
		__proto.createChildren=function(){
			this.addChild(this._tf=new Text());
		}

		/**@copy laya.display.Text#changeText()
		**/
		__proto.changeText=function(text){
			this._tf.changeText(text);
		}

		/**
		*<p>边距信息</p>
		*<p>"上边距，右边距，下边距 , 左边距（边距以像素为单位）"</p>
		*@see laya.display.Text.padding
		*/
		__getset(0,__proto,'padding',function(){
			return this._tf.padding.join(",");
			},function(value){
			this._tf.padding=UIUtils.fillArray(Styles.labelPadding,value,Number);
		});

		/**
		*@copy laya.display.Text#bold
		*/
		__getset(0,__proto,'bold',function(){
			return this._tf.bold;
			},function(value){
			this._tf.bold=value;
		});

		/**
		*@copy laya.display.Text#align
		*/
		__getset(0,__proto,'align',function(){
			return this._tf.align;
			},function(value){
			this._tf.align=value;
		});

		/**
		*当前文本内容字符串。
		*@see laya.display.Text.text
		*/
		__getset(0,__proto,'text',function(){
			return this._tf.text;
			},function(value){
			if (this._tf.text !=value){
				if(value)
					value=UIUtils.adptString(value+"");
				this._tf.text=value;
				this.event("change");
				if (!this._width || !this._height)this.onCompResize();
			}
		});

		/**
		*@copy laya.display.Text#italic
		*/
		__getset(0,__proto,'italic',function(){
			return this._tf.italic;
			},function(value){
			this._tf.italic=value;
		});

		/**
		*@copy laya.display.Text#wordWrap
		*/
		/**
		*@copy laya.display.Text#wordWrap
		*/
		__getset(0,__proto,'wordWrap',function(){
			return this._tf.wordWrap;
			},function(value){
			this._tf.wordWrap=value;
		});

		/**
		*@copy laya.display.Text#font
		*/
		__getset(0,__proto,'font',function(){
			return this._tf.font;
			},function(value){
			this._tf.font=value;
		});

		/**@inheritDoc */
		__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
			this._dataSource=value;
			if ((typeof value=='number')|| (typeof value=='string'))this.text=value+"";
			else _super.prototype._$set_dataSource.call(this,value);
		});

		/**
		*@copy laya.display.Text#color
		*/
		__getset(0,__proto,'color',function(){
			return this._tf.color;
			},function(value){
			this._tf.color=value;
		});

		/**
		*@copy laya.display.Text#valign
		*/
		__getset(0,__proto,'valign',function(){
			return this._tf.valign;
			},function(value){
			this._tf.valign=value;
		});

		/**
		*@copy laya.display.Text#leading
		*/
		__getset(0,__proto,'leading',function(){
			return this._tf.leading;
			},function(value){
			this._tf.leading=value;
		});

		/**
		*@copy laya.display.Text#fontSize
		*/
		__getset(0,__proto,'fontSize',function(){
			return this._tf.fontSize;
			},function(value){
			this._tf.fontSize=value;
		});

		/**
		*@copy laya.display.Text#bgColor
		*/
		__getset(0,__proto,'bgColor',function(){
			return this._tf.bgColor
			},function(value){
			this._tf.bgColor=value;
		});

		/**
		*@copy laya.display.Text#borderColor
		*/
		__getset(0,__proto,'borderColor',function(){
			return this._tf.borderColor
			},function(value){
			this._tf.borderColor=value;
		});

		/**
		*@copy laya.display.Text#stroke
		*/
		__getset(0,__proto,'stroke',function(){
			return this._tf.stroke;
			},function(value){
			this._tf.stroke=value;
		});

		/**
		*@copy laya.display.Text#strokeColor
		*/
		__getset(0,__proto,'strokeColor',function(){
			return this._tf.strokeColor;
			},function(value){
			this._tf.strokeColor=value;
		});

		/**
		*文本控件实体 <code>Text</code> 实例。
		*/
		__getset(0,__proto,'textField',function(){
			return this._tf;
		});

		/**
		*@inheritDoc
		*/
		__getset(0,__proto,'measureWidth',function(){
			return this._tf.width;
		});

		/**
		*@inheritDoc
		*/
		__getset(0,__proto,'measureHeight',function(){
			return this._tf.height;
		});

		/**
		*@inheritDoc
		*/
		/**
		*@inheritDoc
		*/
		__getset(0,__proto,'width',function(){
			if (this._width || this._tf.text)return _super.prototype._$get_width.call(this);
			return 0;
			},function(value){
			_super.prototype._$set_width.call(this,value);
			this._tf.width=value;
		});

		/**
		*@inheritDoc
		*/
		/**
		*@inheritDoc
		*/
		__getset(0,__proto,'height',function(){
			if (this._height || this._tf.text)return _super.prototype._$get_height.call(this);
			return 0;
			},function(value){
			_super.prototype._$set_height.call(this,value);
			this._tf.height=value;
		});

		/**
		*@copy laya.display.Text#overflow
		*/
		/**
		*@copy laya.display.Text#overflow
		*/
		__getset(0,__proto,'overflow',function(){
			return this._tf.overflow;
			},function(value){
			this._tf.overflow=value;
		});

		/**
		*@copy laya.display.Text#underline
		*/
		/**
		*@copy laya.display.Text#underline
		*/
		__getset(0,__proto,'underline',function(){
			return this._tf.underline;
			},function(value){
			this._tf.underline=value;
		});

		/**
		*@copy laya.display.Text#underlineColor
		*/
		/**
		*@copy laya.display.Text#underlineColor
		*/
		__getset(0,__proto,'underlineColor',function(){
			return this._tf.underlineColor;
			},function(value){
			this._tf.underlineColor=value;
		});

		return Label;
	})(Component)


	//class laya.html.dom.HTMLBrElement extends laya.html.dom.HTMLElement
	var HTMLBrElement=(function(_super){
		function HTMLBrElement(){
			HTMLBrElement.__super.call(this);
			this.style.lineElement=true;
			this.style.block=true;
		}

		__class(HTMLBrElement,'laya.html.dom.HTMLBrElement',_super);
		return HTMLBrElement;
	})(HTMLElement)


	//class laya.html.dom.HTMLDivElement extends laya.html.dom.HTMLElement
	var HTMLDivElement=(function(_super){
		function HTMLDivElement(){
			this.contextHeight=NaN;
			this.contextWidth=NaN;
			HTMLDivElement.__super.call(this);
			this.style.block=true;
			this.style.lineElement=true;
			this.style.width=200;
			this.style.height=200;
			HTMLStyleElement;
		}

		__class(HTMLDivElement,'laya.html.dom.HTMLDivElement',_super);
		var __proto=HTMLDivElement.prototype;
		/**
		*追加内容，解析并对显示对象排版
		*@param text
		*/
		__proto.appendHTML=function(text){
			HTMLParse.parse(this,text,this.URI);
			this.layout();
		}

		/**
		*@private
		*@param out
		*@return
		*/
		__proto._addChildsToLayout=function(out){
			var words=this._getWords();
			if (words==null && this._childs.length==0)return false;
			words && words.forEach(function(o){
				out.push(o);
			});
			var tFirstKey=true;
			for (var i=0,len=this._childs.length;i < len;i++){
				var o=this._childs[i];
				if (tFirstKey){
					tFirstKey=false;
					}else {
					out.push(null);
				}
				o._addToLayout(out)
			}
			return true;
		}

		/**
		*@private
		*@param out
		*/
		__proto._addToLayout=function(out){
			this.layout();
		}

		/**
		*@private
		*对显示内容进行排版
		*/
		__proto.layout=function(){
			if (!this.style)return;
			this.style._type |=0x200;
			var tArray=Layout.layout(this);
			if (tArray){
				if (!this._$P.mHtmlBounds)this._set$P("mHtmlBounds",new Rectangle());
				var tRectangle=this._$P.mHtmlBounds;
				tRectangle.x=tRectangle.y=0;
				tRectangle.width=this.contextWidth=tArray[0];
				tRectangle.height=this.contextHeight=tArray[1];
				this.setBounds(tRectangle);
			}
		}

		/**
		*获取对象的高
		*/
		__getset(0,__proto,'height',function(){
			if (this._height)return this._height;
			return this.contextHeight;
		},_super.prototype._$set_height);

		/**
		*设置标签内容
		*/
		__getset(0,__proto,'innerHTML',null,function(text){
			this.destroyChildren();
			this.appendHTML(text);
		});

		/**
		*获取对象的宽
		*/
		__getset(0,__proto,'width',function(){
			if (this._width)return this._width;
			return this.contextWidth;
			},function(value){
			var changed=false;
			if (value===0){
				changed=value !=this._width;
				}else{
				changed=value !=this.width;
			}
			_super.prototype._$set_width.call(this,value);
			if(changed)
				this.layout();
		});

		return HTMLDivElement;
	})(HTMLElement)


	//class laya.html.dom.HTMLDocument extends laya.html.dom.HTMLElement
	var HTMLDocument=(function(_super){
		function HTMLDocument(){
			this.all=new Array;
			this.styleSheets=CSSStyle.styleSheets;
			HTMLDocument.__super.call(this);
		}

		__class(HTMLDocument,'laya.html.dom.HTMLDocument',_super);
		var __proto=HTMLDocument.prototype;
		__proto.getElementById=function(id){
			return this.all[id];
		}

		__proto.setElementById=function(id,e){
			this.all[id]=e;
		}

		__static(HTMLDocument,
		['document',function(){return this.document=new HTMLDocument();}
		]);
		return HTMLDocument;
	})(HTMLElement)


	//class laya.html.dom.HTMLImageElement extends laya.html.dom.HTMLElement
	var HTMLImageElement=(function(_super){
		function HTMLImageElement(){
			this._tex=null;
			this._url=null;
			this._renderArgs=[];
			HTMLImageElement.__super.call(this);
			this.style.block=true;
		}

		__class(HTMLImageElement,'laya.html.dom.HTMLImageElement',_super);
		var __proto=HTMLImageElement.prototype;
		__proto._addToLayout=function(out){
			!this._style.absolute && out.push(this);
		}

		__proto.render=function(context,x,y){
			if (!this._tex || !this._tex.loaded || !this._tex.loaded || this._width < 1 || this._height < 1)return;
			Stat.spriteCount++;
			this._renderArgs[0]=this._tex;
			this._renderArgs[1]=this.x;
			this._renderArgs[2]=this.y;
			this._renderArgs[3]=this.width || this._tex.width;
			this._renderArgs[4]=this.height || this._tex.height;
			context.ctx.drawTexture2(x,y,this.style.translateX,this.style.translateY,this.transform,this.style.alpha,this.style.blendMode,this._renderArgs);
		}

		/**
		*@private
		*/
		__proto.layaoutCallNative=function(){
			var n=0;
			if (this._childs &&(n=this._childs.length)> 0){
				for (var i=0;i < n;i++){
					this._childs[i].layaoutCallNative && this._childs[i].layaoutCallNative();
				}
			}
		}

		__getset(0,__proto,'src',null,function(url){
			var _$this=this;
			url=this.formatURL(url);
			if (this._url==url)return;
			this._url=url;
			var tex=this._tex=Loader.getRes(url);
			if (!tex){
				this._tex=tex=new Texture();
				tex.load(url);
				Loader.cacheRes(url,tex);
			}
			function onloaded (){
				var style=_$this._style;
				var w=style.widthed(_$this)?-1:_$this._tex.width;
				var h=style.heighted(_$this)?-1:_$this._tex.height;
				if (!style.widthed(_$this)&& _$this._width !=_$this._tex.width){
					_$this.width=_$this._tex.width;
					_$this.parent && (_$this.parent)._layoutLater();
				}
				if (!style.heighted(_$this)&& _$this._height !=_$this._tex.height){
					_$this.height=_$this._tex.height;
					_$this.parent && (_$this.parent)._layoutLater();
				}
				if (Render.isConchApp){
					_$this._renderArgs[0]=_$this._tex;
					_$this._renderArgs[1]=_$this.x;
					_$this._renderArgs[2]=_$this.y;
					_$this._renderArgs[3]=_$this.width || _$this._tex.width;
					_$this._renderArgs[4]=_$this.height || _$this._tex.height;
					_$this.graphics.drawTexture(_$this._tex,0,0,_$this._renderArgs[3],_$this._renderArgs[4]);
				}
				_$this.repaint();
				_$this.parentRepaint();
			}
			tex.loaded?onloaded():tex.on("loaded",null,onloaded);
		});

		return HTMLImageElement;
	})(HTMLElement)


	//class laya.html.dom.HTMLStyleElement extends laya.html.dom.HTMLElement
	var HTMLStyleElement=(function(_super){
		function HTMLStyleElement(){
			HTMLStyleElement.__super.call(this);
			this.visible=false;
		}

		__class(HTMLStyleElement,'laya.html.dom.HTMLStyleElement',_super);
		var __proto=HTMLStyleElement.prototype;
		/**
		*解析样式
		*/
		__getset(0,__proto,'text',_super.prototype._$get_text,function(value){
			CSSStyle.parseCSS(value,null);
		});

		return HTMLStyleElement;
	})(HTMLElement)


	//class laya.webgl.shader.d2.Shader2X extends laya.webgl.shader.Shader
	var Shader2X=(function(_super){
		function Shader2X(vs,ps,saveName,nameMap){
			this._params2dQuick1=null;
			this._params2dQuick2=null;
			this._shaderValueWidth=NaN;
			this._shaderValueHeight=NaN;
			Shader2X.__super.call(this,vs,ps,saveName,nameMap);
		}

		__class(Shader2X,'laya.webgl.shader.d2.Shader2X',_super);
		var __proto=Shader2X.prototype;
		__proto.upload2dQuick1=function(shaderValue){
			this.upload(shaderValue,this._params2dQuick1 || this._make2dQuick1());
		}

		__proto._make2dQuick1=function(){
			if (!this._params2dQuick1){
				this.activeResource();
				this._params2dQuick1=[];
				var params=this._params,one;
				for (var i=0,n=params.length;i < n;i++){
					one=params[i];
					if (!Render.isFlash && (one.name==="size" || one.name==="position" || one.name==="texcoord"))continue ;
					this._params2dQuick1.push(one);
				}
			}
			return this._params2dQuick1;
		}

		__proto.disposeResource=function(){
			_super.prototype.disposeResource.call(this);
			this._params2dQuick1=null;
			this._params2dQuick2=null;
		}

		__proto.upload2dQuick2=function(shaderValue){
			this.upload(shaderValue,this._params2dQuick2 || this._make2dQuick2());
		}

		__proto._make2dQuick2=function(){
			if (!this._params2dQuick2){
				this.activeResource();
				this._params2dQuick2=[];
				var params=this._params,one;
				for (var i=0,n=params.length;i < n;i++){
					one=params[i];
					if (!Render.isFlash && (one.name==="size"))continue ;
					this._params2dQuick2.push(one);
				}
			}
			return this._params2dQuick2;
		}

		Shader2X.create=function(vs,ps,saveName,nameMap){
			return new Shader2X(vs,ps,saveName,nameMap);
		}

		return Shader2X;
	})(Shader)


	//class laya.resource.HTMLImage extends laya.resource.FileBitmap
	var HTMLImage=(function(_super){
		function HTMLImage(src,def){
			this._recreateLock=false;
			this._needReleaseAgain=false;
			this._enableMerageInAtlas=true;
			HTMLImage.__super.call(this);
			this._init_(src,def);
		}

		__class(HTMLImage,'laya.resource.HTMLImage',_super);
		var __proto=HTMLImage.prototype;
		__proto._init_=function(src,def){
			this._src=src;
			this._source=new Browser.window.Image();
			if (def){
				def.onload && (this.onload=def.onload);
				def.onerror && (this.onerror=def.onerror);
				def.onCreate && def.onCreate(this);
			}
			if (src.indexOf("data:image")!=0)this._source.crossOrigin="";
			(src)&& (this._source.src=src);
		}

		/**
		*@inheritDoc
		*/
		__proto.recreateResource=function(){
			var _$this=this;
			if (this._src==="")
				throw new Error("src no null！");
			this._needReleaseAgain=false;
			if (!this._source){
				this._recreateLock=true;
				var _this=this;
				this._source=new Browser.window.Image();
				this._source.crossOrigin="";
				this._source.onload=function (){
					if (_this._needReleaseAgain){
						_this._needReleaseAgain=false;
						_this._source.onload=null;
						_this._source=null;
						return;
					}
					_this._source.onload=null;
					_this.memorySize=_$this._w *_$this._h *4;
					_this._recreateLock=false;
					_this.completeCreate();
				};
				this._source.src=this._src;
				}else {
				if (this._recreateLock)
					return;
				this.memorySize=this._w *this._h *4;
				this._recreateLock=false;
				this.completeCreate();
			}
		}

		/**
		*@inheritDoc
		*/
		__proto.disposeResource=function(){
			if (this._recreateLock)
				this._needReleaseAgain=true;
			(this._source)&& (this._source=null,this.memorySize=0);
		}

		/***调整尺寸。*/
		__proto.onresize=function(){
			this._w=this._source.width;
			this._h=this._source.height;
		}

		/**
		*@inheritDoc
		*/
		__getset(0,__proto,'onload',null,function(value){
			var _$this=this;
			this._onload=value;
			this._source && (this._source.onload=this._onload !=null ? (function(){
				_$this.onresize();
				_$this._onload();
			}):null);
		});

		/**
		*@inheritDoc
		*/
		__getset(0,__proto,'onerror',null,function(value){
			var _$this=this;
			this._onerror=value;
			this._source && (this._source.onerror=this._onerror !=null ? (function(){
				_$this._onerror()
			}):null);
		});

		__getset(0,__proto,'enableMerageInAtlas',function(){
			return this._enableMerageInAtlas;
			},function(value){
			this._enableMerageInAtlas=value;
			if (Render.isConchApp){
				if (this._source)this._source.enableMerageInAtlas=value;
			}
		});

		HTMLImage.create=function(src,def){
			return new HTMLImage(src,def);
		}

		return HTMLImage;
	})(FileBitmap)


	//class laya.webgl.utils.IndexBuffer2D extends laya.webgl.utils.Buffer2D
	var IndexBuffer2D=(function(_super){
		function IndexBuffer2D(bufferUsage){
			this._uint8Array=null;
			this._uint16Array=null;
			(bufferUsage===void 0)&& (bufferUsage=0x88E4);
			IndexBuffer2D.__super.call(this);
			this._bufferUsage=bufferUsage;
			this._bufferType=0x8893;
			Render.isFlash || (this._buffer=new ArrayBuffer(8));
		}

		__class(IndexBuffer2D,'laya.webgl.utils.IndexBuffer2D',_super);
		var __proto=IndexBuffer2D.prototype;
		__proto._checkArrayUse=function(){
			this._uint8Array && (this._uint8Array=new Uint8Array(this._buffer));
			this._uint16Array && (this._uint16Array=new Uint16Array(this._buffer));
		}

		__proto.getUint8Array=function(){
			return this._uint8Array || (this._uint8Array=new Uint8Array(this._buffer));
		}

		__proto.getUint16Array=function(){
			return this._uint16Array || (this._uint16Array=new Uint16Array(this._buffer));
		}

		__proto.destory=function(){
			this._uint16Array=null;
			this._uint8Array=null;
			this._buffer=null;
		}

		IndexBuffer2D.QuadrangleIB=null
		IndexBuffer2D.create=function(bufferUsage){
			(bufferUsage===void 0)&& (bufferUsage=0x88E4);
			return new IndexBuffer2D(bufferUsage);
		}

		return IndexBuffer2D;
	})(Buffer2D)


	//class laya.webgl.utils.VertexBuffer2D extends laya.webgl.utils.Buffer2D
	var VertexBuffer2D=(function(_super){
		function VertexBuffer2D(vertexStride,bufferUsage){
			this._floatArray32=null;
			this._vertexStride=0;
			VertexBuffer2D.__super.call(this);
			this._vertexStride=vertexStride;
			this._bufferUsage=bufferUsage;
			this._bufferType=0x8892;
			Render.isFlash || (this._buffer=new ArrayBuffer(8));
			this.getFloat32Array();
		}

		__class(VertexBuffer2D,'laya.webgl.utils.VertexBuffer2D',_super);
		var __proto=VertexBuffer2D.prototype;
		__proto.getFloat32Array=function(){
			return this._floatArray32 || (this._floatArray32=new Float32Array(this._buffer));
		}

		__proto.bind=function(ibBuffer){
			(ibBuffer)&& (ibBuffer._bind());
			this._bind();
		}

		__proto.insertData=function(data,pos){
			var vbdata=this.getFloat32Array();
			vbdata.set(data,pos);
			this._upload=true;
		}

		__proto.bind_upload=function(ibBuffer){
			(ibBuffer._bind_upload())|| (ibBuffer._bind());
			(this._bind_upload())|| (this._bind());
		}

		__proto._checkArrayUse=function(){
			this._floatArray32 && (this._floatArray32=new Float32Array(this._buffer));
		}

		__proto.disposeResource=function(){
			_super.prototype.disposeResource.call(this);
			var enableAtributes=Buffer._enableAtributes;
			if (!Render.isConchWebGL){
				for (var i=0;i < 10;i++){
					WebGL.mainContext.disableVertexAttribArray(i);
					enableAtributes[i]=null;
				}
			}
		}

		//}
		__proto.destory=function(){
			this._byteLength=0;
			this._upload=true;
			this._buffer=null;
			this._floatArray32=null;
		}

		__getset(0,__proto,'vertexStride',function(){
			return this._vertexStride;
		});

		VertexBuffer2D.create=function(vertexStride,bufferUsage){
			(bufferUsage===void 0)&& (bufferUsage=0x88E8);
			return new VertexBuffer2D(vertexStride,bufferUsage);
		}

		return VertexBuffer2D;
	})(Buffer2D)


	//class game.numberGame.c.NumberGamesBetCommand extends game.numberGame.c.NumberGamesBaseCommand
	var NumberGamesBetCommand=(function(_super){
		function NumberGamesBetCommand(){
			this.playerInfoModel=null;
			NumberGamesBetCommand.__super.call(this);
		}

		__class(NumberGamesBetCommand,'game.numberGame.c.NumberGamesBetCommand',_super);
		var __proto=NumberGamesBetCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Display_Number_Key_Cmd":{
						this.displayNumberKey(_notificationVo.data,false);
						break ;
					}
				case "Delete_Number_Cmd":{
						this.deleteNumber();
						break ;
					}
				case "Input_Numbers_Cmd":{
						this.inputNumbers(_notificationVo.data);
						break ;
					}
				case "Reset_Bet_Info_Cmd":{
						this.resetBetInfo();
						break ;
					}
				case "Open_Close_Number_Games_Bet_Windows_Cmd":{
						this.openOrCloseBetWindow();
						break ;
					}
				case "Bet_Number_Games_Cmd":{
						this.betNumberGames(_notificationVo.data);
						break ;
					}
				case "Open_Or_Close_Number_Games_Bet_Result_Window_Cmd":{
						this.openOrCloseBetResultWindow(_notificationVo.data);
						break ;
					}
				case "Open_Zhui_Hao_Cmd":{
						this.openZhuiHao();
						break ;
					}
				case "Got_Zhui_Hao_Time_List_Cmd":{
						this.gotZhuiHaoTimeList(_notificationVo.data);
						break ;
					}
				case "Choose_Zhui_Hao_Time_Cmd":{
						this.chooseZhuiHaoTime(_notificationVo.data);
						break ;
					}
				case "Choose_Time_Cmd":{
						this.chooseTime();
						break ;
					}
				case "Open_Zhui_Hao_Bet_Window_Cmd":{
						this.openZhuiHaoBetWindow();
						break ;
					}
				case "Close_Zhui_Hao_Bet_Window_Cmd":{
						this.closeZhuiHaoBetWindow();
						break ;
					}
				case "Open_Shopping_Cart_Cmd":{
						this.openShoppingCart();
						break ;
					}
				case "OPEN_OR_CLOSE_SHOPPING_CART_INF_CMD":{
						this.openOrCloseShoppingCartInfo(_notificationVo.data);
						break ;
					}
				case "Add_Bet_To_Shopping_Cart_Cmd":{
						this.addBetToShoppingCart(_notificationVo.data);
						break ;
					}
				case "Update_Shopping_Cart_Count_Cmd":{
						this.updateShoppingCartCount();
						break ;
					}
				case "Shopping_Bet_Cmd":{
						this.shoppingBet();
						break ;
					}
				case "Close_Shopping_Cart_Cmd":{
						this.closeShoppingCart();
						break ;
					}
				case "Clear_All_Bet_Cmd":{
						this.clearAllBet();
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*显示数字键盘
		*
		*/
		__proto.displayNumberKey=function(_displayIndex,_zhuiHaoBol){
			this.numberGamesUIModel.numberGamesVo.numberKeyVo.displayIndex=_displayIndex;
			this.numberGamesUIModel.numberGamesVo.status="Display_Hide_Bet_Number_Key_Status";
			if(!_zhuiHaoBol && this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.chooseId==0){
				if(_displayIndex==0){
					this.sendNotification("Display_Iframe_Cmd");
				}
			}
			if(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.chooseId > 0){
				if(_displayIndex==1 && this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei=="1"){
					this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei="";
				}
				else if(_displayIndex==0 && Number(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei)==0){
					this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei="1";
				}
				this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.status="Input_Numbers_Status";
			}
			else{
				if(_displayIndex==1 && this.numberGamesUIModel.numberGamesVo.betVo.inputBei=="1"){
					this.numberGamesUIModel.numberGamesVo.betVo.inputBei="";
					this.numberGamesUIModel.numberGamesVo.betVo.status="Input_Numbers_Status";
				}
				else if(_displayIndex==0 && Number(this.numberGamesUIModel.numberGamesVo.betVo.inputBei)==0){
					this.numberGamesUIModel.numberGamesVo.betVo.inputBei="1";
					this.numberGamesUIModel.numberGamesVo.betVo.status="Input_Numbers_Status";
				}
			}
		}

		/**
		*输入数字
		*@param _numbers
		*
		*/
		__proto.inputNumbers=function(_numbers){
			if(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.chooseId > 0){
				this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei+=_numbers;
				this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.status="Input_Numbers_Status";
			}
			else{
				this.numberGamesUIModel.numberGamesVo.betVo.inputBei+=_numbers;
				this.numberGamesUIModel.numberGamesVo.betVo.status="Input_Numbers_Status";
			}
		}

		/**
		*删除数字
		*
		*/
		__proto.deleteNumber=function(){
			if(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.chooseId > 0){
				if(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei.length > 0){
					if(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei.length==1){
						this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei.substr(0,this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei.length-2);
					}
					else{
						this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei.substr(0,this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei.length-1);
					}
					if(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei.length==0)
						this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei="";
					this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.status="Input_Numbers_Status";
				}
			}
			else{
				if(this.numberGamesUIModel.numberGamesVo.betVo.inputBei.length > 0){
					if(this.numberGamesUIModel.numberGamesVo.betVo.inputBei.length==1){
						this.numberGamesUIModel.numberGamesVo.betVo.inputBei=this.numberGamesUIModel.numberGamesVo.betVo.inputBei.substr(0,this.numberGamesUIModel.numberGamesVo.betVo.inputBei.length-2);
					}
					else{
						this.numberGamesUIModel.numberGamesVo.betVo.inputBei=this.numberGamesUIModel.numberGamesVo.betVo.inputBei.substr(0,this.numberGamesUIModel.numberGamesVo.betVo.inputBei.length-1);
					}
					if(this.numberGamesUIModel.numberGamesVo.betVo.inputBei.length==0)
						this.numberGamesUIModel.numberGamesVo.betVo.inputBei="";
					this.numberGamesUIModel.numberGamesVo.betVo.status="Input_Numbers_Status";
				}
			}
		}

		/**
		*重置下注信息
		*
		*/
		__proto.resetBetInfo=function(){
			var originalBonusArr=this.numberGamesPlayerModel.currentGameInfoVo.originalBonusArr;
			var originalBonus="";
			var noPercentBonus="";
			var percentBonus="";
			if(originalBonusArr){
				for(var i=0;i < originalBonusArr.length;i++){
					if(originalBonusArr[i]["game_type_id"]==this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId){
						var bonusArr=originalBonusArr[i]["bonus"][0]["original_bonus"].split(",");
						for(var ii=0;ii < bonusArr.length;ii++){
							originalBonus+=bonusArr[ii];
						};
						var noPercentBonusArr=originalBonusArr[i]["bonus"][0]["no_percent_bonus"].split(",");
						for(ii=0;ii < noPercentBonusArr.length;ii++){
							noPercentBonus+=noPercentBonusArr[ii];
						};
						var percentBonusArr=originalBonusArr[i]["bonus"][0]["percent_bonus"].split(",");
						for(ii=0;ii < percentBonusArr.length;ii++){
							percentBonus+=percentBonusArr[ii];
						}
						break ;
					}
				}
				this.numberGamesUIModel.numberGamesVo.betVo.originalBonus=Number(originalBonus);
				this.numberGamesUIModel.numberGamesVo.betVo.noPercentBonus=Number(noPercentBonus);
				this.numberGamesUIModel.numberGamesVo.betVo.percentBonus=Number(percentBonus);
			}
			if(!this.numberGamesUIModel.numberGamesVo.betVo.chooseMoneyArr)
				return;
			this.numberGamesUIModel.numberGamesVo.betVo.inputBei="1";
			this.numberGamesUIModel.numberGamesVo.betVo.bei=1;
			this.numberGamesUIModel.numberGamesVo.betVo.count=0;
			this.numberGamesUIModel.numberGamesVo.betVo.totalPrice="0";
			this.numberGamesUIModel.numberGamesVo.betVo.status="Update_Bet_Money_Status";
			this.numberGamesUIModel.numberGamesVo.betVo.status="Update_Bet_Info_Status";
		}

		/**
		*打开或关闭下注窗口
		*
		*/
		__proto.openOrCloseBetWindow=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			if(this.numberGamesUIModel.numberGamesVo.betVo.count==0){
				this.showAlert("号码选择不完整，请重新选择！");
				return;
			}
			if(this.numberGamesUIModel.numberGamesVo.resultVo.endTime <=0){
				if(this.numberGamesUIModel.numberGamesVo.betVo.notMiaoMiaoStatus==0){
					this.showAlert("即将开奖，不能下注。");
					return;
				}
			}
			if(this.playerInfoModel.playerInfoVo.user_balance < Number(this.numberGamesUIModel.numberGamesVo.betVo.totalPrice)){
				this.showAlert("余额不足。");
				return;
			}
			if(!betWindowVo.openAlreadyBol){
				betWindowVo.betWindowMainVo.name=this.numberGamesPlayerModel.currentGameInfoVo.name;
				if(this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName.indexOf("-")==-1){
					betWindowVo.betWindowMainVo.playType=this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName+"_"+this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playTypeName;
				}
				else{
					betWindowVo.betWindowMainVo.playType=this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName;
				}
				betWindowVo.betWindowMainVo.bei=BaseStaticFuncs.format("{0}({1})",this.numberGamesUIModel.numberGamesVo.betVo.bei,this.numberGamesUIModel.numberGamesVo.betVo.price);
				betWindowVo.betWindowMainVo.totalPrice="￥"+this.numberGamesUIModel.numberGamesVo.betVo.totalPrice;
				this.sendNotification("Confirm_Number_Games_Bet_Cmd");
				this.sendNotification("Hide_Iframe_Cmd");
				this.mathPlayerTypeDisplay();
				betWindowVo.betWindowMainVo.status="Display_Loading_Status";
			}
			betWindowVo.status="Open_Or_Close_Status";
		}

		/**
		*计算玩法要现实的
		*
		*/
		__proto.mathPlayerTypeDisplay=function(){
			this.numberGamesUIModel.numberGamesVo.betWindowVo.betWindowMainVo.betValue="";
			switch(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType){
				case "digital":
				case "pk10Digital":{
						this.checkDigital2(this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType);
						break ;
					}
				case "digitalrx":{
						this.checkDigitalRx2();
						break ;
					}
				case "pk10DragonTiger":{
						this.checkPk10DragonTiger2();
						break ;
					}
				case "sp_digital":{
						this.checkSpDigital2();
						break ;
					}
				case "dragonTiger":{
						this.checkDragonTiger2();
						break ;
					}
				case "selectBox":{
						this.checkSelectBox2();
						break ;
					}
				case "zuXuanHeZhi":{
						this.zuXuanHeZhi2();
						break ;
					}
				case "danTuo":{
						this.danTuo2();
						break ;
					}
				case "hk6hDigital":{
						this.checkHk6hDiagital2();
						break ;
					}
				case "tmsx":{
						this.checkTmsx2();
						break ;
					}
				case "tmbs1":{
						this.tmbs2(0);
						break ;
					}
				case "tmbs2":{
						this.tmbs2(1);
						break ;
					}
				case "tmbs3":{
						this.tmbs2(2);
						break ;
					}
				case "tmbs4":{
						this.tmbs2(3);
						break ;
					}
				case "input":{
						this.input2();
						break ;
					}
				case "inputrx":{
						this.inputRx2();
						break ;
					}
				case "bjkl8rx":{
						this.bjkl8rx2();
						break ;
					}
				case "jsk33thdx":{
						this.jsk33thdx2();
						break ;
					}
				case "jsk32thfx":{
						this.jsk32thfx2();
						break ;
					}
				case "jsk32thdx":{
						this.jsk32thdx2();
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*一般选号
		*
		*/
		__proto.checkDigital2=function(_type){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var lotteryNumbersVoArr;
			if(_type=="pk10Digital"){
				lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pk10SelectNumberTypeVo.lotteryNumbersVoArr;
			}
			else{
				lotteryNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberTypeVo.lotteryNumbersVoArr;
			}
			for(var i=0;i < lotteryNumbersVoArr.length;i++){
				var numberVoArr=lotteryNumbersVoArr[i].numberVoArr;
				for(var ii=0;ii < numberVoArr.length;ii++){
					if(numberVoArr[ii].chooseBol){
						betWindowVo.betWindowMainVo.betValue+=numberVoArr[ii].value;
					}
				}
				if(i !=lotteryNumbersVoArr.length-1){
					betWindowVo.betWindowMainVo.betValue+=",";
				}
			}
		}

		__proto.checkDigitalRx2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var selectNumberRxTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectNumberRxTypeVo;
			betWindowVo.betWindowMainVo.betValue="("
			for(i=0;i < 5;i++){
				if(selectNumberRxTypeVo.weiArr[i]){
					switch(i){
						case 0:{
								betWindowVo.betWindowMainVo.betValue+="万";
								break ;
							}
						case 1:{
								betWindowVo.betWindowMainVo.betValue+="千";
								break ;
							}
						case 2:{
								betWindowVo.betWindowMainVo.betValue+="百";
								break ;
							}
						case 3:{
								betWindowVo.betWindowMainVo.betValue+="十";
								break ;
							}
						case 4:{
								betWindowVo.betWindowMainVo.betValue+="个";
								break ;
							}
						}
				}
			}
			betWindowVo.betWindowMainVo.betValue+=")";
			for(var i=0;i < selectNumberRxTypeVo.lotteryNumbersVoArr.length;i++){
				var numberVoArr=selectNumberRxTypeVo.lotteryNumbersVoArr[i].numberVoArr;
				for(var ii=0;ii < numberVoArr.length;ii++){
					if(numberVoArr[ii].chooseBol){
						betWindowVo.betWindowMainVo.betValue+=numberVoArr[ii].value;
					}
				}
				if(i !=selectNumberRxTypeVo.lotteryNumbersVoArr.length-1){
					betWindowVo.betWindowMainVo.betValue+=",";
				}
			}
		}

		/**
		*检测pk10龙虎
		*
		*/
		__proto.checkPk10DragonTiger2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var chooseValueArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.pK10DragonTigerVo.chooseValueArr;
			for(var i=0;i < chooseValueArr.length;i++){
				if(chooseValueArr[i].length==0){
					if(i !=chooseValueArr.length-1){
						betWindowVo.betWindowMainVo.betValue+=",";
					}
					continue ;
				}
				for(var ii=0;ii < chooseValueArr[i].length;ii++){
					var name;
					if(chooseValueArr[i][ii]=="dragon"){
						name="龙";
					}
					else if(chooseValueArr[i][ii]=="tiger"){
						name="虎";
					}
					betWindowVo.betWindowMainVo.betValue+=name;
					if(i !=chooseValueArr.length-1){
						betWindowVo.betWindowMainVo.betValue+=",";
					}
				}
			}
		}

		/**
		*特殊号
		*@return
		*
		*/
		__proto.checkSpDigital2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var chooseValueArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.specialNumberTypesVo.chooseValueArr[0];
			for(var i=0;i < chooseValueArr.length;i++){
				var name;
				if(chooseValueArr[i]=="three"){
					name="豹子";
				}
				else if(chooseValueArr[i]=="straight"){
					name="顺子";
				}
				else if(chooseValueArr[i]=="pair"){
					name="对子";
				}
				betWindowVo.betWindowMainVo.betValue+=name;
				if(i !=chooseValueArr.length-1){
					betWindowVo.betWindowMainVo.betValue+=",";
				}
			}
		}

		/**
		*检测龙虎
		*
		*/
		__proto.checkDragonTiger2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var chooseValueInfoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.dragonTigerTypesVo.chooseValueArr;
			var chooseValueArr=chooseValueInfoArr[0].concat(chooseValueInfoArr[1]);
			for(var i=0;i < chooseValueArr.length;i++){
				var name="";
				if(chooseValueArr[i]=="dragon"){
					name="龙";
				}
				else if(chooseValueArr[i]=="tiger"){
					name="虎";
				}
				else if(chooseValueArr[i]=="tie"){
					name="和";
				}
				else if(chooseValueArr[i]=="big"){
					name="大";
				}
				else if(chooseValueArr[i]=="small"){
					name="小";
				}
				else if(chooseValueArr[i]=="single"){
					name="单";
				}
				else if(chooseValueArr[i]=="double"){
					name="双";
				}
				betWindowVo.betWindowMainVo.betValue+=name;
				if(i !=chooseValueArr.length-1){
					betWindowVo.betWindowMainVo.betValue+=",";
				}
			}
		}

		/**
		*大小单双
		*
		*/
		__proto.checkSelectBox2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var boxNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.selectBoxTypeVo.boxNumbersVoArr;
			for(var i=0;i < boxNumbersVoArr.length;i++){
				for(var ii=0;ii < boxNumbersVoArr[i].lotteryNumbersVoArr.length;ii++){
					if(!boxNumbersVoArr[i].lotteryNumbersVoArr[ii].chooseBol)
						continue ;
					betWindowVo.betWindowMainVo.betValue+=boxNumbersVoArr[i].lotteryNumbersVoArr[ii].value;
				}
				if(i !=boxNumbersVoArr.length-1){
					betWindowVo.betWindowMainVo.betValue+=",";
				}
			}
		}

		/**
		*复选和值
		*
		*/
		__proto.zuXuanHeZhi2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var zuXuanHeZhiNumbersVoArr=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.zuXuanHeZhiTypeVo.zuXuanHeZhiNumbersVoArr;
			for(var i=0;i < zuXuanHeZhiNumbersVoArr.length;i++){
				for(var ii=0;ii < zuXuanHeZhiNumbersVoArr[i].zuXuanHeZhiVoArr.length;ii++){
					if(!zuXuanHeZhiNumbersVoArr[i].zuXuanHeZhiVoArr[ii].chooseBol)
						continue ;
					betWindowVo.betWindowMainVo.betValue+=" "+zuXuanHeZhiNumbersVoArr[i].zuXuanHeZhiVoArr[ii].value;
				}
				if(i !=zuXuanHeZhiNumbersVoArr.length-1){
					betWindowVo.betWindowMainVo.betValue+=",";
				}
			}
		}

		/**
		*胆拖
		*
		*/
		__proto.danTuo2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var danTuoVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.danTuoVo;
			var i=0;
			for(i=0;i < danTuoVo.danMaNumberVoArr.length;i++){
				if(!danTuoVo.danMaNumberVoArr[i].chooseBol)
					continue ;
				betWindowVo.betWindowMainVo.betValue+=" "+danTuoVo.danMaNumberVoArr[i].value;
			}
			betWindowVo.betWindowMainVo.betValue+=",";
			for(i=0;i < danTuoVo.tuoMaNumberVoArr.length;i++){
				if(!danTuoVo.tuoMaNumberVoArr[i].chooseBol)
					continue ;
				betWindowVo.betWindowMainVo.betValue+=" "+danTuoVo.tuoMaNumberVoArr[i].value;
			}
		}

		/**
		*香港六合选号
		*
		*/
		__proto.checkHk6hDiagital2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var hk6hSelectNumberTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hSelectNumberTypeVo;
			var i=0;
			for(i=0;i < hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr.length;i++){
				if(!hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].chooseBol)
					continue ;
				betWindowVo.betWindowMainVo.betValue+=" "+hk6hSelectNumberTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].value;
				if(betWindowVo.betWindowMainVo.betValue.length >=21){
					betWindowVo.betWindowMainVo.betValue+="..."
					break ;
				}
			}
		}

		/**
		*香港六合彩生肖
		*
		*/
		__proto.checkTmsx2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var hk6hTmsxTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.hk6hTmsxTypeVo;
			var i=0;
			for(i=0;i < hk6hTmsxTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr.length;i++){
				if(!hk6hTmsxTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].chooseBol)
					continue ;
				betWindowVo.betWindowMainVo.betValue+=" "+hk6hTmsxTypeVo.zuXuanHeZhiNumbersVoArr[0].zuXuanHeZhiVoArr[i].value;
			}
		}

		/**
		*波色
		*
		*/
		__proto.tmbs2=function(_index){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var bseNumbersVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.numberGamesSelectBSNumbersVoArr[_index];
			var i=0;
			for(i=0;i < bseNumbersVo.numberGamesSelectBSNumberVoArr.length;i++){
				if(!bseNumbersVo.numberGamesSelectBSNumberVoArr[i].chooseBol)
					continue ;
				betWindowVo.betWindowMainVo.betValue+=" "+bseNumbersVo.numberGamesSelectBSNumberVoArr[i].value;
			}
		}

		/**
		*输入
		*
		*/
		__proto.input2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var inputTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputTypeVo;
			for(var i=0;i < inputTypeVo.chooseValueArr.length;i++){
				for(var ii=0;ii < inputTypeVo.chooseValueArr[i].length;ii++){
					betWindowVo.betWindowMainVo.betValue+=inputTypeVo.chooseValueArr[i][ii];
				}
				if(i !=inputTypeVo.chooseValueArr.length-1){
					betWindowVo.betWindowMainVo.betValue+=",";
				}
			}
		}

		/**
		*输入任选
		*
		*/
		__proto.inputRx2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var inputTypeVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.inputRxTypeVo;
			betWindowVo.betWindowMainVo.betValue="("
			for(i=0;i < 5;i++){
				if(inputTypeVo.weiArr[i]){
					switch(i){
						case 0:{
								betWindowVo.betWindowMainVo.betValue+="万";
								break ;
							}
						case 1:{
								betWindowVo.betWindowMainVo.betValue+="千";
								break ;
							}
						case 2:{
								betWindowVo.betWindowMainVo.betValue+="百";
								break ;
							}
						case 3:{
								betWindowVo.betWindowMainVo.betValue+="十";
								break ;
							}
						case 4:{
								betWindowVo.betWindowMainVo.betValue+="个";
								break ;
							}
						}
				}
			}
			betWindowVo.betWindowMainVo.betValue+=")";
			for(var i=0;i < inputTypeVo.chooseValueArr.length;i++){
				for(var ii=0;ii < inputTypeVo.chooseValueArr[i].length;ii++){
					betWindowVo.betWindowMainVo.betValue+=inputTypeVo.chooseValueArr[i][ii];
				}
				if(i !=inputTypeVo.chooseValueArr.length-1){
					betWindowVo.betWindowMainVo.betValue+=",";
				}
			}
		}

		/**
		*任选
		*
		*/
		__proto.bjkl8rx2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var kL8RXVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.kL8RXVo;
			for(var i=0;i < kL8RXVo.chooseValueArr.length;i++){
				betWindowVo.betWindowMainVo.betValue+=" "+kL8RXVo.chooseValueArr[i];
			}
		}

		/**
		*江苏快3
		*
		*/
		__proto.jsk33thdx2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var jsk33thdxVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk33thdxVo;
			for(var i=0;i < jsk33thdxVo.chooseValueArr.length;i++){
				betWindowVo.betWindowMainVo.betValue+=BaseStaticFuncs.format("三同号({0}) ",jsk33thdxVo.chooseValueArr[i]);
			}
		}

		__proto.jsk32thfx2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var jsk32thfxVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thfxVo;
			for(var i=0;i < jsk32thfxVo.chooseValueArr.length;i++){
				betWindowVo.betWindowMainVo.betValue+=BaseStaticFuncs.format("二同号({0}) ",jsk32thfxVo.chooseValueArr[i]);
			}
		}

		__proto.jsk32thdx2=function(){
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.betWindowVo;
			var jsk32thfxVo=this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.jsk32thdxVo;
			for(var i=0;i < jsk32thfxVo.chooseValueArr.length;i++){
				betWindowVo.betWindowMainVo.betValue+=BaseStaticFuncs.format("二同号({0}) ",jsk32thfxVo.chooseValueArr[i]);
			}
			for(i=0;i < jsk32thfxVo.chooseValueArr2.length;i++){
				betWindowVo.betWindowMainVo.betValue+=BaseStaticFuncs.format("不同号({0}) ",jsk32thfxVo.chooseValueArr2[i]);
			}
		}

		/**
		*数字彩票下注
		*
		*/
		__proto.betNumberGames=function(_betValue){
			this.openOrCloseBetWindow();
		}

		/**
		*打开或关闭结果窗口
		*
		*/
		__proto.openOrCloseBetResultWindow=function(_openBol){
			this.numberGamesUIModel.numberGamesVo.betResultWindowVo.status="Open_Or_Close_Status";
			if(_openBol){
				this.sendNotification("Hide_Iframe_Cmd");
				this.numberGamesUIModel.numberGamesVo.betResultWindowVo.betResultWindowMainVo.status="Start_Open_Status";
			}
			else{
				this.sendNotification("Display_Iframe_Cmd");
			}
		}

		/**
		*打开追号
		*
		*/
		__proto.openZhuiHao=function(){
			if(this.numberGamesUIModel.numberGamesVo.betVo.count==0){
				this.showAlert("号码选择不完整，请重新选择！");
				return;
			}
			this.sendNotification("Hide_Iframe_Cmd");
			this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.gameName=this.numberGamesUIModel.numberGamesVo.gameMenuVo.gameName;
			this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.status="Loading_Status";
			this.sendNotification("LOTTERY_ADD_SEEK_ORDER_CONFIRM_CMD");
		}

		/**
		*获取到追号的期数列表
		*
		*/
		__proto.gotZhuiHaoTimeList=function(_resultObj){
			var zhuiHaoWindowVo=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo;
			zhuiHaoWindowVo.zhuiHaoOneVoArr.length=0;
			var timesInfoArr=_resultObj["cycle_list"];
			for(var i=0;i < timesInfoArr.length;i++){
				var zhuiHaoOneVo=new NumberGamesZhuiHaoOneVo();
				zhuiHaoOneVo.id=i+1;
				zhuiHaoOneVo.startTime=BaseStaticFuncs.mathDate(timesInfoArr[i].start_time);
				zhuiHaoOneVo.endTime=BaseStaticFuncs.mathDate(timesInfoArr[i].end_time);
				zhuiHaoOneVo.time=timesInfoArr[i].cycle_value;
				zhuiHaoOneVo.bei=0;
				zhuiHaoOneVo.money=this.numberGamesUIModel.numberGamesVo.betVo.price;
				zhuiHaoWindowVo.zhuiHaoOneVoArr.push(zhuiHaoOneVo);
			}
			zhuiHaoWindowVo.oneBeiTotalPrice=this.numberGamesUIModel.numberGamesVo.betVo.count *this.numberGamesUIModel.numberGamesVo.betVo.onePrice;
			zhuiHaoWindowVo.status="Update_Status";
		}

		/**
		*选择追号的期数
		*
		*/
		__proto.chooseZhuiHaoTime=function(_chooseId){
			for(var i=0;i < this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.zhuiHaoOneVoArr.length;i++){
				if(this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.zhuiHaoOneVoArr[i].id==_chooseId){
					this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.inputBei=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.zhuiHaoOneVoArr[i].bei;
					break ;
				}
			}
			this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.chooseId=_chooseId;
		}

		/**
		*选择期数
		*
		*/
		__proto.chooseTime=function(){
			this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.status="Choose_Time_Status";
			this.displayNumberKey(0,true);
		}

		/**
		*打开追号下注窗口
		*
		*/
		__proto.openZhuiHaoBetWindow=function(){
			var zhuiHaoWindowVo=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo;
			var betWindowVo=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.betWindowVo;
			betWindowVo.betMainVo.betOneVoArr.length=0;
			for(var i=0;i < zhuiHaoWindowVo.zhuiHaoOneVoArr.length;i++){
				if(zhuiHaoWindowVo.zhuiHaoOneVoArr[i].chooseBol){
					var betOneVo=new NumberGamesZhuiHaoBetOneVo();
					betOneVo.id=zhuiHaoWindowVo.zhuiHaoOneVoArr[i].id;
					betOneVo.bei=zhuiHaoWindowVo.zhuiHaoOneVoArr[i].bei;
					betOneVo.time=zhuiHaoWindowVo.zhuiHaoOneVoArr[i].time;
					betOneVo.numbers=JSON.stringify(this.mathBetInfo());
					betWindowVo.betMainVo.betOneVoArr.push(betOneVo);
				}
			}
			betWindowVo.betMainVo.totalPrice=zhuiHaoWindowVo.totalPrice;
			betWindowVo.betMainVo.status="Update_Status";
		}

		/**
		*关闭追号下注窗口
		*
		*/
		__proto.closeZhuiHaoBetWindow=function(){
			this.sendNotification("Hide_Iframe_Cmd");
			this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.status="Close_Bet_Window_Status";
		}

		/**
		*打开购物车
		*
		*/
		__proto.openShoppingCart=function(){
			this.sendNotification("Hide_Iframe_Cmd");
			var shoppingCartVo=this.numberGamesUIModel.numberGamesVo.shoppingCartVo;
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.leftMoney=this.playerInfoModel.playerInfoVo.user_balance;
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.totalTimes=0;
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.totalPrice=0;
			for(var i=0;i < shoppingCartVo.betOneVoArr.length;i++){
				this.numberGamesUIModel.numberGamesVo.shoppingCartVo.totalTimes+=Number(shoppingCartVo.betOneVoArr[i].bei);
				this.numberGamesUIModel.numberGamesVo.shoppingCartVo.totalPrice+=Number(shoppingCartVo.betOneVoArr[i].totalPrice);
			}
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.status="UPDATE_STATUS";
		}

		__proto.openOrCloseShoppingCartInfo=function(_infoArr){
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.displayOrHideInfo=_infoArr[0];
			if(_infoArr[0]==1){
				var betOneVo=_infoArr[1];
				var mcBetRecordDetailPanel2Vo=this.numberGamesUIModel.numberGamesVo.shoppingCartVo.mcBetRecordDetailPanel2Vo;
				mcBetRecordDetailPanel2Vo.bei=betOneVo.bei;
				mcBetRecordDetailPanel2Vo.id=betOneVo.id;
				mcBetRecordDetailPanel2Vo.name=betOneVo.name;
				mcBetRecordDetailPanel2Vo.numbers=betOneVo.numbers;
				mcBetRecordDetailPanel2Vo.onePrice=betOneVo.onePrice;
				mcBetRecordDetailPanel2Vo.playType=betOneVo.playType;
				mcBetRecordDetailPanel2Vo.time=betOneVo.time;
				mcBetRecordDetailPanel2Vo.totalPrice=betOneVo.totalPrice;
				mcBetRecordDetailPanel2Vo.status="UPDATE_STATUS";
			}
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.status="DISPLAY_OR_HIDE_INFO_STATUS";
		}

		/**
		*添加下注到购物车
		*
		*/
		__proto.addBetToShoppingCart=function(_betInfo){
			if(this.numberGamesUIModel.numberGamesVo.betVo.count==0){
				this.showAlert("需要选择完整的号码才能添加到购物车！");
				return;
			};
			var shoppingCartVo=this.numberGamesUIModel.numberGamesVo.shoppingCartVo;
			var betOneVo=new NumberGamesZhuiHaoBetOneVo();
			betOneVo.numbers=this.numberGamesUIModel.numberGamesVo.betWindowVo.betWindowMainVo.betValue;
			betOneVo.postData=this.mathData();
			betOneVo.bei=this.numberGamesUIModel.numberGamesVo.betVo.bei;
			betOneVo.onePrice=this.numberGamesUIModel.numberGamesVo.betVo.onePrice;
			betOneVo.totalPrice=betOneVo.bei *betOneVo.onePrice;
			betOneVo.name=this.numberGamesPlayerModel.currentGameInfoVo.name;
			betOneVo.time=this.numberGamesUIModel.numberGamesVo.resultVo.time;
			betOneVo.playType=this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName+"_"+this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playTypeName;
			shoppingCartVo.betOneVo=betOneVo;
			betOneVo.postData["id"]=this.playerInfoModel.playerInfoVo.user_id;
			this.sendNotification("Add_Shopping_Cart_Cmd");
			this.mathPlayerTypeDisplay();
		}

		__proto.updateShoppingCartCount=function(){
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.shoppingCartCount=this.numberGamesUIModel.numberGamesVo.shoppingCartVo.betOneVoArr.length;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.status="Update_Shopping_Cart_Count_Status";
		}

		/**
		*购物车立即下注
		*
		*/
		__proto.shoppingBet=function(){
			if(this.numberGamesUIModel.numberGamesVo.shoppingCartVo.betOneVoArr.length==0){
				this.showAlert("请选择号码");
				return;
			}
			this.sendNotification("Shopping_Cart_Number_Games_Confirm_Bet_Cmd");
		}

		/**
		*关闭购物车
		*
		*/
		__proto.closeShoppingCart=function(){
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.status="Close_Shopping_Cart_Status";
		}

		/**
		*清除所有的下注
		*
		*/
		__proto.clearAllBet=function(){
			this.sendNotification("Choose_One_Play_Type_Cmd",[this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName,
			this.numberGamesPlayerModel.currentSecoundPlayTypeVo.checkId]);
		}

		NumberGamesBetCommand.DISPLAY_NUMBER_KEY_CMD="Display_Number_Key_Cmd";
		NumberGamesBetCommand.INPUT_NUMBERS_CMD="Input_Numbers_Cmd";
		NumberGamesBetCommand.DELETE_NUMBER_CMD="Delete_Number_Cmd";
		NumberGamesBetCommand.RESET_BET_INFO_CMD="Reset_Bet_Info_Cmd";
		NumberGamesBetCommand.OPEN_OR_CLOSE_NUMBER_GAMES_BET_WINDOWS_CMD="Open_Close_Number_Games_Bet_Windows_Cmd";
		NumberGamesBetCommand.BET_NUMBER_GAMES_CMD="Bet_Number_Games_Cmd";
		NumberGamesBetCommand.OPEN_OR_CLOSE_NUMBER_GAMES_BET_RESULT_WINDOW_CMD="Open_Or_Close_Number_Games_Bet_Result_Window_Cmd";
		NumberGamesBetCommand.OPEN_ZHUI_HAO_CMD="Open_Zhui_Hao_Cmd";
		NumberGamesBetCommand.CHOOSE_ZHUI_HAO_TIME_CMD="Choose_Zhui_Hao_Time_Cmd";
		NumberGamesBetCommand.GOT_ZHUI_HAO_TIME_LIST_CMD="Got_Zhui_Hao_Time_List_Cmd";
		NumberGamesBetCommand.CHOOSE_TIME_CMD="Choose_Time_Cmd";
		NumberGamesBetCommand.OPEN_SHOPPING_CART_CMD="Open_Shopping_Cart_Cmd";
		NumberGamesBetCommand.OPEN_OR_CLOSE_SHOPPING_CART_INF_CMD="OPEN_OR_CLOSE_SHOPPING_CART_INF_CMD";
		NumberGamesBetCommand.ADD_BET_TO_SHOPPING_CART_CMD="Add_Bet_To_Shopping_Cart_Cmd";
		NumberGamesBetCommand.UPDATE_SHOPPING_CART_COUNT_CMD="Update_Shopping_Cart_Count_Cmd";
		NumberGamesBetCommand.SHOPPING_BET_CMD="Shopping_Bet_Cmd";
		NumberGamesBetCommand.CLOSE_SHOPPING_CART_CMD="Close_Shopping_Cart_Cmd";
		NumberGamesBetCommand.OPEN_ZHUI_HAO_BET_WINDOW_CMD="Open_Zhui_Hao_Bet_Window_Cmd";
		NumberGamesBetCommand.CLOSE_ZHUI_HAO_BET_WINDOW_CMD="Close_Zhui_Hao_Bet_Window_Cmd";
		NumberGamesBetCommand.CLEAR_ALL_BET_CMD="Clear_All_Bet_Cmd";
		return NumberGamesBetCommand;
	})(NumberGamesBaseCommand)


	//class game.numberGame.c.NumberGamesServerCommand extends game.numberGame.c.NumberGamesBaseCommand
	var NumberGamesServerCommand=(function(_super){
		function NumberGamesServerCommand(){
			this.resManager=null;
			this.playerInfoModel=null;
			this.publicModel=null;
			this.numberGamesConfigModel=null;
			this.hallUIModel=null;
			NumberGamesServerCommand.__super.call(this);
		}

		__class(NumberGamesServerCommand,'game.numberGame.c.NumberGamesServerCommand',_super);
		var __proto=NumberGamesServerCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Get_Number_Games_Info_Cmd":{
						this.getNumberGamesInfo();
						break ;
					}
				case "Got_Number_Games_Info_Cmd":{
						this.gotNumberGamesInfo(_notificationVo.data);
						break ;
					}
				case "Get_Number_Games_Bonus_Cmd":{
						this.getGameBonus();
						break ;
					}
				case "Got_Number_Games_Bonus_Cmd":{
						this.gotNumberGamesBonus(_notificationVo.data);
						break ;
					}
				case "Got_Game_Open_Or_Not_Cmd":{
						this.gotGameOpenOrNot(_notificationVo.data);
						break ;
					}
				case "Get_Number_Games_Static_Play_Type_Cmd":{
						this.getStaticPlayType();
						break ;
					}
				case "Got_Number_Games_Static_Play_Type_Cmd":{
						this.gotStaticPlayType(_notificationVo.data);
						break ;
					}
				case "Get_Number_Games_Play_Type_Cmd":{
						this.getNumberGamesPlayType();
						break ;
					}
				case "Got_Number_Games_Play_Type_Cmd":{
						this.gotNumberGamesPlayType(_notificationVo.data);
						break ;
					}
				case "Get_Number_Games_Current_Result_Cmd":{
						this.getCurrentResult();
						break ;
					}
				case "Got_Number_Games_Current_Result_Cmd":{
						this.gotCurrentResult(_notificationVo.data);
						break ;
					}
				case "Get_Number_Games_History_Cmd":{
						this.getHistroy();
						break ;
					}
				case "Got_Number_Games_History_Cmd":{
						this.gotHistory(_notificationVo.data);
						break ;
					}
				case "Got_Bet_Money_Info_Cmd":{
						this.gotBetMoneyInfo(_notificationVo.data);
						break ;
					}
				case "Confirm_Number_Games_Bet_Cmd":{
						this.confirmNumberGamesBet();
						break ;
					}
				case "Confirm_Number_Games_Bet_Result_Cmd":{
						this.confirmNumberGamesBetResult(_notificationVo.data);
						break ;
					}
				case "CLOSE_BET_WINDOW_Cmd":{
						this.closeBetWindow();
						break ;
					}
				case "Number_Games_Bet_Cmd":{
						this.bet();
						break ;
					}
				case "Number_Games_Bet_Result_Cmd":{
						this.betResult(_notificationVo.data);
						break ;
					}
				case "Get_Shopping_Cart_Cmd":{
						this.getShoppingCart();
						break ;
					}
				case "Get_Shopping_Cart_Result_Cmd":{
						this.getShoppingCartResult(_notificationVo.data);
						break ;
					}
				case "Add_Shopping_Cart_Cmd":{
						this.addShoppingCart();
						break ;
					}
				case "Add_Shopping_Cart_Result_Cmd":{
						this.addShoppingCardResult();
						break ;
					}
				case "Delete_Shopping_Cart_Cmd":{
						this.deleteShoppingCart(_notificationVo.data);
						break ;
					}
				case "Shopping_Cart_Number_Games_Confirm_Bet_Cmd":{
						this.shoppingCartConfirmBet();
						break ;
					}
				case "Shopping_Cart_Number_Games_Confirm_Bet_Result_Cmd":{
						this.shoppingCartConfirmBetResult(_notificationVo.data);
						break ;
					}
				case "Shopping_Cart_Number_Games_Bet_Result_Cmd":{
						this.shoppingCartBetResult();
						break ;
					}
				case "Get_Number_Games_Bet_Result_Cmd":{
						this.getBetHistory();
						break ;
					}
				case "Got_Number_Games_Bet_Result_Cmd":{
						this.gotBetHistory(_notificationVo.data);
						break ;
					}
				case "LOTTERY_ADD_SEEK_ORDER_CONFIRM_CMD":{
						this.lotteryAddSeekOrderConfirm();
						break ;
					}
				case "LOTTERY_ADD_SEEK_ORDER_CONFIRM_RESULT_CMD":{
						this.lotteryAddSeekOrderConfirmResult(_notificationVo.data);
						break ;
					}
				case "LOTTERY_ADD_SEEK_ORDER_CONFIRM_Error_CMD":{
						this.lotteryAddSeekOrderConfirmError();
						break ;
					}
				case "LOTTERY_ADD_SEEK_PLAN_ORDER_CMD":{
						this.lotteryAddSeekPlanOrder();
						break ;
					}
				case "LOTTERY_ADD_SEEK_PLAN_ORDER_RESULT_CMD":{
						this.lotteryAddSeekPlanOrderResult(_notificationVo.data);
						break ;
					}
				case "One_Minutes_Update_Balance_Cmd":{
						this.oneMinutesUpdateBalance();
						break ;
					}
				case "One_Minutes_Update_Balance_Result_Cmd":{
						this.oneMinutesUpdateBalanceResult(_notificationVo.data);
						break ;
					}
				case "Number_Games_Server_Error_Cmd":{
						this.showAlert("服务器报错");
						this.sendNotification("HIDE_Cmd");
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*获取游戏数据
		*
		*/
		__proto.getNumberGamesInfo=function(){
			this.sendNotification("SHOW_Cmd");
			if(this.numberGamesConfigModel.gamesInfoVoArr.length > 0){
				for(var i=0;i < this.numberGamesConfigModel.gamesInfoVoArr.length;i++){
					if(this.numberGamesConfigModel.gamesInfoVoArr[i].id==this.hallUIModel.gameId){
						this.numberGamesPlayerModel.currentGameInfoVo=this.numberGamesConfigModel.gamesInfoVoArr[i];
						break ;
					}
				}
				if(!this.numberGamesPlayerModel.currentGameInfoVo)
					this.numberGamesPlayerModel.currentGameInfoVo=this.numberGamesConfigModel.gamesInfoVoArr[0];
				this.onGetLotteryList();
				this.getNumberGamesPlayType();
			}
			else{
				this.gotNumberGamesInfo(DataMgr.get().lotteryGameTypeConfigData);
			}
			this.getShoppingCart();
		}

		/**
		*获取到游戏数据
		*
		*/
		__proto.gotNumberGamesInfo=function(_gameInfoObj){
			for(var i=0 in _gameInfoObj.items){
				var numberGamesGameInfoVo=new NumberGamesGameInfoVo();
				numberGamesGameInfoVo.id=_gameInfoObj.items[i].id;
				numberGamesGameInfoVo.name=_gameInfoObj.items[i].game_value;
				if(numberGamesGameInfoVo.name.indexOf("秒秒")>-1)
					continue ;
				if(_gameInfoObj.items[i].base_game=="gsklsf")
					_gameInfoObj.items[i].base_game="gdklsf";
				numberGamesGameInfoVo.baseGame=_gameInfoObj.items[i].base_game;
				if(numberGamesGameInfoVo.id==this.hallUIModel.gameId){
					this.numberGamesPlayerModel.currentGameInfoVo=numberGamesGameInfoVo;
				}
				this.numberGamesConfigModel.gamesInfoVoArr.push(numberGamesGameInfoVo);
			}
			if(!this.numberGamesPlayerModel.currentGameInfoVo)
				this.numberGamesPlayerModel.currentGameInfoVo=this.numberGamesConfigModel.gamesInfoVoArr[0];
			if(this.numberGamesPlayerModel.currentGameInfoVo==null){
				console.log("没有找到对应的游戏ID");
				return
			}
			console.log("获取相应的彩票数据：",this.numberGamesPlayerModel.currentGameInfoVo);
			this.sendNotification("Get_Number_Games_Static_Play_Type_Cmd");
		}

		/**
		*获取游戏的静态玩法
		*
		*/
		__proto.getStaticPlayType=function(){
			this.gotStaticPlayType(DataMgr.get().numberGamesConfigData.data);
		}

		/**
		*获取到游戏的静态玩方
		*
		*/
		__proto.gotStaticPlayType=function(_staticPlayType){
			this.numberGamesConfigModel.staticPlayType=_staticPlayType["info"];
			this.sendNotification("Get_Number_Games_Play_Type_Cmd");
		}

		/**
		*获取游戏玩法
		*
		*/
		__proto.getNumberGamesPlayType=function(){
			this.sendNotification("Open_Video_Cmd");
			var gameConfig=this.resManager.getRes("res/json/numberGamesInfo/NumberGamesInfo.json");
			var gameIndex=0;
			switch(this.numberGamesPlayerModel.currentGameInfoVo.baseGame){
				case "cqssc":
					gameIndex=0;
					break ;
				case "gd11x5":
					gameIndex=1;
					break ;
				case "fc3d":
					gameIndex=2;
					break ;
				case "bjpk10":
					gameIndex=3;
					break ;
				case "hk6":
					gameIndex=6;
					break ;
				case "bjkl8":
					gameIndex=4;
					break ;
				case "jsk3":
					gameIndex=5;
					break ;
				case "hk6"
					:gameIndex=6;
					break ;
				case "gdklsf":
					gameIndex=7;
					break ;
				case "gsklsf":
					gameIndex=8;
					break ;
				default :
					this.showAlert("尚未开放");
					return;
				}
			this.sendNotification("Change_Result_Type_Cmd");
			this.numberGamesConfigModel.zuXuanHeZhiPlayIdArr=gameConfig[gameIndex].gamePlayType.zuXuanHeZhiPlayIdArr;
			this.numberGamesConfigModel.digitalIdArr=gameConfig[gameIndex].gamePlayType.digitalIdArr;
			this.numberGamesConfigModel.pk10DigitalIdArr=gameConfig[gameIndex].gamePlayType.pk10DigitalIdArr;
			this.numberGamesConfigModel.pk10DragonTigerArr=gameConfig[gameIndex].gamePlayType.pk10DragonTigerArr;
			this.numberGamesConfigModel.hk6hDigitalIdArr=gameConfig[gameIndex].gamePlayType.hk6hDigitalIdArr;
			this.numberGamesConfigModel.tmsxIdArr=gameConfig[gameIndex].gamePlayType.tmsxIdArr;
			this.numberGamesConfigModel.tmbs1IdArr=gameConfig[gameIndex].gamePlayType.tmbs1IdArr;
			this.numberGamesConfigModel.tmbs2IdArr=gameConfig[gameIndex].gamePlayType.tmbs2IdArr;
			this.numberGamesConfigModel.tmbs3IdArr=gameConfig[gameIndex].gamePlayType.tmbs3IdArr;
			this.numberGamesConfigModel.tmbs4IdArr=gameConfig[gameIndex].gamePlayType.tmbs4IdArr;
			this.numberGamesConfigModel.inputIdArr=gameConfig[gameIndex].gamePlayType.inputIdArr;
			this.numberGamesConfigModel.inputRxIdArr=gameConfig[gameIndex].gamePlayType.inputRxIdArr;
			this.numberGamesConfigModel.bjkl8rx=gameConfig[gameIndex].gamePlayType.bjkl8rx;
			this.numberGamesConfigModel.jsk33thdx=gameConfig[gameIndex].gamePlayType.jsk33thdx;
			this.numberGamesConfigModel.jsk32thfx=gameConfig[gameIndex].gamePlayType.jsk32thfx;
			this.numberGamesConfigModel.jsk32thdx=gameConfig[gameIndex].gamePlayType.jsk32thdx;
			this.numberGamesConfigModel.baoDanPlayIdArr=gameConfig[gameIndex].gamePlayType.baoDanPlayIdArr;
			this.numberGamesConfigModel.renErZuXuanIdFuShiArr=gameConfig[gameIndex].gamePlayType.renErZuXuanIdFuShiArr;
			this.numberGamesConfigModel.renErZuXuanIdHeZhiArr=gameConfig[gameIndex].gamePlayType.renErZuXuanIdHeZhiArr;
			this.numberGamesConfigModel.selectBoxIdArr=gameConfig[gameIndex].gamePlayType.selectBoxIdArr;
			this.numberGamesConfigModel.danTuoIdArr=gameConfig[gameIndex].gamePlayType.danTuoIdArr;
			var _playTypeObj=this.numberGamesConfigModel.gamePlayTypeInfoObj[this.numberGamesPlayerModel.currentGameInfoVo.id];
			if(_playTypeObj){
				this.initFirtAndSecoundPlayType();
				this.updateMenuAndList();
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType;
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.status="Update_Play_Type_Status";
				this.numberGamesUIModel.numberGamesVo.betVo.chooseMoneyArr=this.numberGamesPlayerModel.currentGameInfoVo.chooseMoneyArr;
				this.updateBetUI();
				this.sendNotification("Reset_Bet_Info_Cmd");
				this.getCurrentResult();
				this.sendNotification("Get_Number_Games_Bonus_Cmd");
			}
			else{
				if(!this.numberGamesPlayerModel){
					return;
				}
				this.gotNumberGamesPlayType(DataMgr.get().numberGamePlayConfigData.data);
			}
			if(this.numberGamesPlayerModel.currentGameInfoVo.name.indexOf("秒秒")>-1){
				this.numberGamesUIModel.numberGamesVo.resultVo.notMiaoMiaoStatus=1;
				this.numberGamesUIModel.numberGamesVo.betVo.notMiaoMiaoStatus=1;
			}
			else{
				this.numberGamesUIModel.numberGamesVo.resultVo.notMiaoMiaoStatus=0;
				if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="hk6"){
					this.numberGamesUIModel.numberGamesVo.betVo.notMiaoMiaoStatus=1;
				}
				else{
					this.numberGamesUIModel.numberGamesVo.betVo.notMiaoMiaoStatus=0;
				}
			}
			this.numberGamesUIModel.numberGamesVo.resultVo.status="UPDATE_MIAO_MIAO_STATUS";
			this.numberGamesUIModel.numberGamesVo.betVo.status="UPDATE_MIAO_MIAO_STATUS";
		}

		/**
		*更新分厘,奖金返点
		*
		*/
		__proto.updateBetUI=function(){
			for(var ii in this.numberGamesUIModel.numberGamesVo.betVo.chooseMoneyArr){
				this.numberGamesUIModel.numberGamesVo.betVo.chooseMoneyIndex=ii;
				break ;
			};
			var data=DataMgr.get().betPercentTypeConfigData.data;
			this.numberGamesUIModel.numberGamesVo.betVo.jiangJinModeCount=data[Number(this.numberGamesPlayerModel.currentGameInfoVo.id)];
		}

		/**
		*获取奖金组数据
		*
		*/
		__proto.getGameBonus=function(){
			if(this.numberGamesPlayerModel.currentGameInfoVo.originalBonusArr){
				this.sendNotification("Reset_Bet_Info_Cmd");
				return;
			}
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_BONUS/"+this.numberGamesPlayerModel.currentGameInfoVo.id,"Got_Number_Games_Bonus_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*获取到奖金组数据
		*
		*/
		__proto.gotNumberGamesBonus=function(_resultObj){
			this.numberGamesPlayerModel.currentGameInfoVo.originalBonusArr=_resultObj["data"];
			this.sendNotification("Reset_Bet_Info_Cmd");
			this.onGetLotteryList();
		}

		/**获取彩票列表 */
		__proto.onGetLotteryList=function(){
			if(this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameActiveInfo)
				return;
			var url=this.resManager.serverUrl+"/LOTTERY_GAME/"
			this.sendHttpRequest(url,"Got_Game_Open_Or_Not_Cmd","","json",null,true,GameUtil.headers);
		}

		__proto.gotGameOpenOrNot=function(_data){
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameActiveInfo=new Object();
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.openShuZiBolObj=new Object();
			for(var i=0;i < _data["game_list"].length;i++){
				var gameInfo=_data["game_list"][i];
				this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.gameActiveInfo[gameInfo["id"]]=gameInfo["is_active"]=="0" ? false :true;
				this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.openShuZiBolObj[gameInfo["id"]]=gameInfo["sub_games_status"]["2"]==1 ? true :false;
			}
			if(this.numberGamesUIModel.numberGamesVo.gameMenuVo.gamesGameMenuVo.openShuZiBolObj[String(this.numberGamesPlayerModel.currentGameInfoVo.id)]){
				this.numberGamesUIModel.numberGamesVo.shuZiPanIndex=0;
			}
			else{
				this.numberGamesUIModel.numberGamesVo.shuZiPanIndex=2;
			}
			this.numberGamesUIModel.numberGamesVo.status="Update_Bet_Type_Status";
		}

		/**
		*游戏一级玩法
		*@param _playTypeObj
		*
		*/
		__proto.gotNumberGamesPlayType=function(_playTypeObj){
			_playTypeObj=_playTypeObj[this.numberGamesPlayerModel.currentGameInfoVo.id];
			if(!_playTypeObj){
				this.showAlert("未找到该彩种的相关配置","Start_Close_Number_Games_Cmd");
				this.hideLoading();
				return;
			}
			this.numberGamesConfigModel.gamePlayTypeInfoObj[this.numberGamesPlayerModel.currentGameInfoVo.id]=_playTypeObj;
			var currentGameInfoVo=this.numberGamesPlayerModel.currentGameInfoVo;
			for(var id=0 in _playTypeObj.game_type){
				var playTypeInfo;
				if(_playTypeObj.game_type[id].indexOf("_")>-1){
					playTypeInfo=_playTypeObj.game_type[id].split("_");
				}
				else{
					playTypeInfo=_playTypeObj.game_type[id].split("-");
				};
				var checkBol=true;
				var firstPlayTypeVo;
				for(var ii=0;ii < currentGameInfoVo.firstPlayTypeVoArr.length;ii++){
					if(currentGameInfoVo.firstPlayTypeVoArr[ii].playTypeName==playTypeInfo[0]){
						firstPlayTypeVo=currentGameInfoVo.firstPlayTypeVoArr[ii];
						checkBol=false;
						break ;
					}
				}
				if(checkBol){
					firstPlayTypeVo=new NumberGamesFirstPlayTypeVo();
					firstPlayTypeVo.playTypeName=playTypeInfo[0];
					firstPlayTypeVo.baseGame=currentGameInfoVo.baseGame;
					currentGameInfoVo.firstPlayTypeVoArr.push(firstPlayTypeVo);
				};
				var secoundPlayTypeVo=new NumberGamesSecoundPlayTypeVo();
				secoundPlayTypeVo.checkId=id;
				secoundPlayTypeVo.playTypeName=playTypeInfo[1] ? playTypeInfo[1] :playTypeInfo[0];
				secoundPlayTypeVo.baseGame=currentGameInfoVo.baseGame;
				this.get2ndPlayType(secoundPlayTypeVo);
				firstPlayTypeVo.secoundPlayTypeVoArr.push(secoundPlayTypeVo);
			}
			this.initFirtAndSecoundPlayType();
			this.updateMenuAndList();
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.playType=this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playType;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.chooseTypesVo.status="Update_Play_Type_Status";
			this.getBetMoneyInfo()
			this.sendNotification("Get_Number_Games_Bonus_Cmd");
		}

		/**
		*初始化玩法数据
		*
		*/
		__proto.initFirtAndSecoundPlayType=function(){
			var currentGameInfoVo=this.numberGamesPlayerModel.currentGameInfoVo;
			var playTypeObj=this.playerInfoModel.localInfo.getPlayTypeInfoObj();
			if(playTypeObj){
				var currentPlayTypeArr=playTypeObj[currentGameInfoVo.id];
				if(currentPlayTypeArr){
					this.numberGamesPlayerModel.currentFirstPlayTypeVo=currentGameInfoVo.firstPlayTypeVoArr[currentPlayTypeArr[0]];
					this.numberGamesPlayerModel.currentSecoundPlayTypeVo=this.numberGamesPlayerModel.currentFirstPlayTypeVo.secoundPlayTypeVoArr[currentPlayTypeArr[1]];
				}
				else{
					this.numberGamesPlayerModel.currentFirstPlayTypeVo=currentGameInfoVo.firstPlayTypeVoArr[0];
					this.numberGamesPlayerModel.currentSecoundPlayTypeVo=currentGameInfoVo.firstPlayTypeVoArr[0].secoundPlayTypeVoArr[0];
				}
			}
			else{
				this.numberGamesPlayerModel.currentFirstPlayTypeVo=currentGameInfoVo.firstPlayTypeVoArr[0];
				this.numberGamesPlayerModel.currentSecoundPlayTypeVo=currentGameInfoVo.firstPlayTypeVoArr[0].secoundPlayTypeVoArr[0];
			}
		}

		/**
		*获取游戏的下注金额
		*
		*/
		__proto.getBetMoneyInfo=function(){
			if(!this.numberGamesPlayerModel){
				return;
			}
			this.gotBetMoneyInfo(DataMgr.get().numberGameLotteryGameConfigData["data"]);
		}

		/**
		*获取到游戏的下注金额
		*
		*/
		__proto.gotBetMoneyInfo=function(_gameInfoObj){
			if(!this.numberGamesUIModel)
				return;
			_gameInfoObj=_gameInfoObj[this.numberGamesPlayerModel.currentGameInfoVo.id];
			this.numberGamesPlayerModel.currentGameInfoVo.chooseMoneyArr=_gameInfoObj["bet_mode_list"];
			this.numberGamesUIModel.numberGamesVo.betVo.chooseMoneyArr=_gameInfoObj["bet_mode_list"];
			this.updateBetUI();
			for(var i in this.numberGamesUIModel.numberGamesVo.betVo.chooseMoneyArr){
				this.numberGamesUIModel.numberGamesVo.betVo.chooseMoneyIndex=i;
				break ;
			}
			this.sendNotification("Reset_Bet_Info_Cmd");
			this.getCurrentResult();
		}

		__proto.updateMenuAndList=function(){
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.gameName=this.numberGamesPlayerModel.currentGameInfoVo.name;
			if(this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName==this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playTypeName){
				this.numberGamesUIModel.numberGamesVo.gameMenuVo.playTypeName=this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName;
			}
			else{
				this.numberGamesUIModel.numberGamesVo.gameMenuVo.playTypeName=this.numberGamesPlayerModel.currentFirstPlayTypeVo.playTypeName+"-"+this.numberGamesPlayerModel.currentSecoundPlayTypeVo.playTypeName;
			}
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.status="Update_Title_Status";
			this.sendNotification("Update_Number_Games_List_Cmd");
		}

		__proto.get2ndPlayType=function(_secoundPlayTypeVo){
			var playTypesInfo=this.numberGamesConfigModel.staticPlayType[String(_secoundPlayTypeVo.baseGame).toLocaleUpperCase()];
			var playTypeInfo=playTypesInfo[_secoundPlayTypeVo.checkId];
			if(!playTypeInfo){
				_secoundPlayTypeVo.openBol=false;
				console.log("静态配置缺少->",_secoundPlayTypeVo.playTypeName)
				return;
			}
			_secoundPlayTypeVo.help=playTypeInfo.help;
			_secoundPlayTypeVo.playType=playTypeInfo.type;
			if(_secoundPlayTypeVo.playType !="sp_btn_line" && _secoundPlayTypeVo.playType !="digital" && _secoundPlayTypeVo.playType !="sp_digital" &&
				_secoundPlayTypeVo.playType !="btn_multi_line" && _secoundPlayTypeVo.playType !="btn_line" &&
			_secoundPlayTypeVo.playType !="input" && _secoundPlayTypeVo.playType !="text"){
				_secoundPlayTypeVo.openBol=false;
				return;
			}
			_secoundPlayTypeVo.how=playTypeInfo.how;
			_secoundPlayTypeVo.sample=playTypeInfo.sample;
			_secoundPlayTypeVo.reward=playTypeInfo.reward;
			_secoundPlayTypeVo.setSort=playTypeInfo.setSort=="true" ? true :false;
			for(var i=1;i <=playTypeInfo.noBigIndex;i++){
				if(!playTypeInfo["title"+i])
					continue ;
				_secoundPlayTypeVo.oneListNameArr.push(playTypeInfo["title"+i]);
				_secoundPlayTypeVo.numberValueArr.push(playTypeInfo["no"+i].split("|"));
			}
			if(_secoundPlayTypeVo.oneListNameArr[0]=="冠军" && _secoundPlayTypeVo.oneListNameArr[1]=="冠军"){
				_secoundPlayTypeVo.oneListNameArr[1]="亚军";
			}
		}

		/**
		*获取当前的结果
		*
		*/
		__proto.getCurrentResult=function(){
			this.sendNotification("HIDE_Cmd");
			if(this.numberGamesPlayerModel.currentGameInfoVo.name.indexOf("秒秒")>-1){
				return;
			}
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_GAME_CYCLE/"+this.numberGamesPlayerModel.currentGameInfoVo.id,"Got_Number_Games_Current_Result_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*获取到当前的结果
		*
		*/
		__proto.gotCurrentResult=function(_resultObj){
			if(!this.numberGamesUIModel)
				return;
			if(_resultObj["status_code"] !=1){
				this.showAlert(this.publicModel.errorCodeData.getMsg[_resultObj["status_msg"]]);
				return;
			};
			var resultVo=this.numberGamesUIModel.numberGamesVo.resultVo;
			resultVo.gameCycleId=_resultObj["id"];
			var endTime=Math.floor(Laya.timer.currTimer / 1000)+_resultObj.count_down;
			resultVo.endTime=endTime;
			resultVo.time=_resultObj.cycle_index.split("_")[1];
			resultVo.status="Update_Current_Result_Status";
			this.getHistroy();
		}

		/**
		*获取历史记录
		*
		*/
		__proto.getHistroy=function(){
			if(!this.numberGamesPlayerModel){
				return;
			}
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_GAME_CYCLE_RESULT/"+this.numberGamesPlayerModel.currentGameInfoVo.id+"/10/","Got_Number_Games_History_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*获取到历史记录
		*
		*/
		__proto.gotHistory=function(_historyObj){
			var resultVo=this.numberGamesUIModel.numberGamesVo.resultVo;
			if(!_historyObj[0])
				return;
			if(Number(resultVo.time)-Number(_historyObj[0]["cycle_value"])==1){
				resultVo.lastTime=_historyObj[0]["cycle_value"];
				resultVo.resultNumberArr=_historyObj[0]["game_result"];
				resultVo.status="Update_History_Result_Status";
			}
			else{
				resultVo.lastTime=String(Number(resultVo.time)-1);
				resultVo.resultNumberArr.length=0;
				if(this.numberGamesPlayerModel.currentGameInfoVo.baseGame=="bjpk10"){
					for(var i=0;i < 10;i++){
						resultVo.resultNumberArr.push(0);
					}
				}
				else{
					resultVo.resultNumberArr.push("?");
					resultVo.resultNumberArr.push("?");
					resultVo.resultNumberArr.push("?");
					resultVo.resultNumberArr.push("?");
					resultVo.resultNumberArr.push("?");
					resultVo.resultNumberArr.push("?");
					resultVo.resultNumberArr.push("?");
					resultVo.status="Update_History_Result_Status";
				}
				this.delayRun("Get_Number_Games_History_Cmd",5000);
			}
			switch(this.numberGamesPlayerModel.currentGameInfoVo.baseGame){
				case "cqssc":
				case "gd11x5":{
						this.parseHistory(_historyObj,this.numberGamesUIModel.numberGamesVo.historyVo.cQSSCGameHistoryVo.oneHistoryVoArr);
						break ;
					}
				case "fc3d":{
						var oneHistoryVoArr=this.numberGamesUIModel.numberGamesVo.historyVo.fc3dGameHistoryVo.oneHistoryVoArr;
						this.parseHistory(_historyObj,oneHistoryVoArr);
						for(var ii=0;ii < oneHistoryVoArr.length;ii++){
							oneHistoryVoArr[ii].numberArr[3]=Number(oneHistoryVoArr[ii].numberArr[0])+Number(oneHistoryVoArr[ii].numberArr[1])+Number(oneHistoryVoArr[ii].numberArr[2]);
						}
						break ;
					}
				case "jsk3":{
						this.parseHistory(_historyObj,this.numberGamesUIModel.numberGamesVo.historyVo.jsk3GameHistoryVo.oneHistoryVoArr);
						break ;
					}
				case "bjpk10":{
						this.parseHistory(_historyObj,this.numberGamesUIModel.numberGamesVo.historyVo.bjpk10GameHistoryVo.oneHistoryVoArr);
						break ;
					}
				case "bjkl8":{
						this.parseHistory(_historyObj,this.numberGamesUIModel.numberGamesVo.historyVo.bjkl8GameHistoryVo.oneHistoryVoArr);
						break ;
					}
				case "hk6":{
						this.parseHistory(_historyObj,this.numberGamesUIModel.numberGamesVo.historyVo.hk6hGameHistoryVo.oneHistoryVoArr);
						break ;
					}
				case "gdklsf":{
						this.parseHistory(_historyObj,this.numberGamesUIModel.numberGamesVo.historyVo.klsfGameHistoryVo.oneHistoryVoArr);
						break ;
					}
				default :{
						break ;
					}
				}
		}

		/**
		*重庆时时彩历史纪录
		*
		*/
		__proto.parseHistory=function(_historyObj,_oneHistoryVoArr){
			_oneHistoryVoArr.length=0;
			for(var i=0;i < 10;i++){
				if(!_historyObj[String(i)])
					break ;
				var oneGameHistoryVo=new OneGameHistoryVo();
				oneGameHistoryVo.colorIndex=i % 2;
				oneGameHistoryVo.time=_historyObj[String(i)]["cycle_value"];
				oneGameHistoryVo.numberArr=_historyObj[String(i)]["game_result"];
				_oneHistoryVoArr.push(oneGameHistoryVo);
			}
		}

		/**
		*确定下注
		*
		*/
		__proto.confirmNumberGamesBet=function(){
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ADD_ORDER_COMFIRM/","Confirm_Number_Games_Bet_Result_Cmd","CLOSE_BET_WINDOW_Cmd","json",this.mathData(),false,GameUtil.headers);
		}

		/**
		*确定下注返回结果
		*
		*/
		__proto.confirmNumberGamesBetResult=function(_data){
			if(_data["status_code"]==1){
				this.numberGamesUIModel.numberGamesVo.betWindowVo.betWindowMainVo.help=BaseStaticFuncs.format("中奖率低于{0}%的单条最高派奖{1}元",
				this.playerInfoModel.playerInfoVo.pk_lottery_percent,this.playerInfoModel.playerInfoVo.pk_lottery);
				this.numberGamesUIModel.numberGamesVo.betWindowVo.betWindowMainVo.status="Update_Info_Status";
				this.playerInfoModel.playerInfoVo.betMoney=_data["total_bet_balance"];
			}
			else{
				if(!this.publicModel.errorCodeData.getMsg[_data["status_msg"]]){
					this.showAlert(this.publicModel.errorCodeData.getMsg[_data["status_msg"]]);
				}
				else{
					this.showAlert(this.publicModel.errorCodeData.getMsg[_data["status_msg"]]);
				}
				this.numberGamesUIModel.numberGamesVo.betWindowVo.status="Open_Or_Close_Status";
			}
		}

		/**
		*下注
		*
		*/
		__proto.bet=function(){
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ADD_ORDER/","Number_Games_Bet_Result_Cmd","CLOSE_BET_WINDOW_Cmd","json",this.mathData(),false,GameUtil.headers);
		}

		/**
		*下注结果
		*
		*/
		__proto.betResult=function(_data){
			this.sendNotification("Clear_All_Bet_Cmd");
			this.numberGamesUIModel.numberGamesVo.betWindowVo.status="Open_Or_Close_Status";
			if(_data["status_code"] !=1){
				if(!this.publicModel.errorCodeData.getMsg[_data["status_msg"]]){
					this.showAlert(_data["status_msg"]);
				}
				else{
					this.showAlert(this.publicModel.errorCodeData.getMsg[_data["status_msg"]]);
				}
			}
			else{
				this.playerInfoModel.playerInfoVo.user_balance-=this.playerInfoModel.playerInfoVo.betMoney;
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.balance=this.playerInfoModel.playerInfoVo.user_balance;
				this.numberGamesUIModel.numberGamesVo.selectNumberVo.status="Update_Balance_Status";
				DataMgr.get().addRecentGameList(this.numberGamesPlayerModel.currentGameInfoVo.id.toString());
				this.sendNotification("Open_Or_Close_Number_Games_Bet_Result_Window_Cmd",true);
			}
		}

		__proto.closeBetWindow=function(){
			this.numberGamesUIModel.numberGamesVo.betWindowVo.status="Open_Or_Close_Status";
		}

		/**
		*获取购物篮清单
		*
		*/
		__proto.getShoppingCart=function(){
			var data=new Object();
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ORDER_CART","Get_Shopping_Cart_Result_Cmd","","json",data,true,GameUtil.headers);
		}

		/**
		*获取购物篮清单的结果
		*
		*/
		__proto.getShoppingCartResult=function(_shoppingCartInfo){
			var shoppingCartVo=this.numberGamesUIModel.numberGamesVo.shoppingCartVo;
			shoppingCartVo.betOneVoArr.length=0;
			var betInfoArr=_shoppingCartInfo["cart_data_list"];
			for(var i=0;i < betInfoArr.length;i++){
				var betOneVo=new NumberGamesZhuiHaoBetOneVo();
				betOneVo.id=betInfoArr[i]["id"];
				betOneVo.name=betInfoArr[i]["game_value"];
				betOneVo.time=betInfoArr[i]["cycle_value"];
				betOneVo.playType=betInfoArr[i]["game_type_name"];
				betOneVo.bei=betInfoArr[i]["bet_multiple"];
				var totalPrice=betInfoArr[i]["bet_balance"];
				while(totalPrice.indexOf(",")>-1){
					totalPrice=totalPrice.replace(",","");
				}
				betOneVo.totalPrice=Number(totalPrice);
				betOneVo.numbers=betInfoArr[i]["bet_info"];
				betOneVo.onePrice=NumberGamesServerCommand.MONEY_CONFIG[betInfoArr[i]["bet_mode"]];
				shoppingCartVo.betOneVoArr.push(betOneVo);
			}
			this.sendNotification("Update_Shopping_Cart_Count_Cmd");
			if(this.numberGamesUIModel.numberGamesVo.shoppingCartVo.deleteBol){
				this.numberGamesUIModel.numberGamesVo.shoppingCartVo.deleteBol=false;
				shoppingCartVo.status="Delete_Status";
			}
		}

		//添加到购物篮
		__proto.addShoppingCart=function(){
			this.showLoading();
			var shoppingCartVo=this.numberGamesUIModel.numberGamesVo.shoppingCartVo;
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ORDER_CART/","Add_Shopping_Cart_Result_Cmd","","json",shoppingCartVo.betOneVo.postData,false,GameUtil.headers);
		}

		//添加到购物篮的结果
		__proto.addShoppingCardResult=function(){
			this.hideLoading();
			if(this.numberGamesUIModel.numberGamesVo.shoppingCartVo.deleteBol){
				this.showAlert("删除成功");
			}
			else{
				this.showAlert("已经添加到购物车");
			}
			this.sendNotification("Clear_All_Bet_Cmd");
			this.getShoppingCart();
		}

		__proto.deleteShoppingCart=function(_id){
			var id=_id ? _id :"all";
			var data=new Object();
			this.numberGamesUIModel.numberGamesVo.shoppingCartVo.deleteBol=true;
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ORDER_CART/"+this.playerInfoModel.playerInfoVo.user_id+"/"+id,"Add_Shopping_Cart_Result_Cmd","","json",data,false,GameUtil.headers,"",true);
		}

		/**
		*购物车下注
		*
		*/
		__proto.shoppingCartConfirmBet=function(){
			var data=new Object();
			data["id"]=this.playerInfoModel.playerInfoVo.user_id;
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ADD_ORDER_CONFIRM_CART/","Shopping_Cart_Number_Games_Confirm_Bet_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		/**
		*购物车下注结果
		*
		*/
		__proto.shoppingCartConfirmBetResult=function(_data){
			this.numberGamesUIModel.numberGamesVo.betWindowVo.betWindowMainVo.status="Update_Info_Status";
			this.playerInfoModel.playerInfoVo.betMoney=_data["total_bet_balance"];
			var data=new Object();
			data["id"]=this.playerInfoModel.playerInfoVo.user_id;
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ADD_ORDER_CART/","Shopping_Cart_Number_Games_Bet_Result_Cmd","","json",data,false,GameUtil.headers);
		}

		/**
		*购物车下注成功
		*
		*/
		__proto.shoppingCartBetResult=function(){
			this.showAlert("下注成功");
			this.playerInfoModel.playerInfoVo.user_balance-=this.playerInfoModel.playerInfoVo.betMoney;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.balance=this.playerInfoModel.playerInfoVo.user_balance;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.status="Update_Balance_Status";
			var shoppingCartVo=this.numberGamesUIModel.numberGamesVo.shoppingCartVo;
			shoppingCartVo.betOneVoArr.length=0;
			shoppingCartVo.status="UPDATE_STATUS";
			shoppingCartVo.status="Close_Shopping_Cart_Status";
			this.sendNotification("Update_Shopping_Cart_Count_Cmd");
			this.sendNotification("Hide_Iframe_Cmd");
		}

		/**
		*获取下注的历史纪录
		*
		*/
		__proto.getBetHistory=function(){
			var betHistoryMainVo=this.numberGamesUIModel.numberGamesVo.betHistoryVo.betHistoryMainVo;
			if(betHistoryMainVo.oneBetHistoryVoArr[betHistoryMainVo.currentIndex])
				return;
			if(betHistoryMainVo.currentIndex==9)
				this.sendNotification("SHOW_Cmd");
			var page=Math.floor(betHistoryMainVo.currentIndex / 10);
			if(betHistoryMainVo.getPageBolArr[page]){
				return;
			}
			betHistoryMainVo.getPageBolArr[page]=true;
			this.sendHttpRequest(BaseStaticFuncs.format("{0}/LOTTERY_ORDER/getOrderList?game_id={1}&=row{2}&current={3}",
			this.resManager.serverUrl,this.numberGamesPlayerModel.currentGameInfoVo.id,10,page),"Got_Number_Games_Bet_Result_Cmd","Number_Games_Server_Error_Cmd","json",null,true,GameUtil.headers);
		}

		/**
		*确认投注
		*
		*/
		__proto.lotteryAddSeekOrderConfirm=function(){
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ADD_SEEK_ORDER_CONFIRM/","LOTTERY_ADD_SEEK_ORDER_CONFIRM_RESULT_CMD","Number_Games_Server_Error_Cmd","json",this.mathData(true),false,GameUtil.headers);
		}

		/**
		*结果
		*@param _resultObj
		*
		*/
		__proto.lotteryAddSeekOrderConfirmResult=function(_resultObj){
			this.sendNotification("Got_Zhui_Hao_Time_List_Cmd",_resultObj);
		}

		/**
		*追号
		*
		*/
		__proto.lotteryAddSeekPlanOrder=function(){
			var arr=[];
			var zhuiHaoOneVoArr=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.zhuiHaoOneVoArr;
			for(var i=0;i < zhuiHaoOneVoArr.length;i++){
				if(zhuiHaoOneVoArr[i].chooseBol){
					var zhuiData=new Object();
					zhuiData["cycle_value"]=zhuiHaoOneVoArr[i].time;
					zhuiData["cycle_multiple"]=zhuiHaoOneVoArr[i].bei;
					arr.push(zhuiData);
				}
			};
			var data=new Object();
			data["order_data"]=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.orderData;
			data["seek_auto_stop"]=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.zhongJiangStopBol ? 1 :0;
			data["seek_cycle_list"]=arr;
			this.showLoading();
			this.sendNotification("Hide_Iframe_Cmd");
			this.sendHttpRequest(this.resManager.serverUrl+"/LOTTERY_ADD_SEEK_PLAN_ORDER/","LOTTERY_ADD_SEEK_PLAN_ORDER_RESULT_CMD","LOTTERY_ADD_SEEK_ORDER_CONFIRM_Error_CMD","json",data,false,GameUtil.headers);
		}

		/**
		*追号结果
		*
		*/
		__proto.lotteryAddSeekPlanOrderResult=function(_resultObj){
			this.playerInfoModel.playerInfoVo.user_balance-=this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.betWindowVo.betMainVo.totalPrice;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.balance=this.playerInfoModel.playerInfoVo.user_balance;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.status="Update_Balance_Status";
			this.showAlert("下注成功");
			this.hideLoading();
			this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.status="Close_Zhui_Hao_Status";
			this.sendNotification("Clear_All_Bet_Cmd");
		}

		__proto.lotteryAddSeekOrderConfirmError=function(){
			this.numberGamesUIModel.numberGamesVo.zhuiHaoWindowVo.status="Close_Zhui_Hao_Status";
		}

		/**
		*获取到下注的历史纪录
		*@param _betHistoryObj
		*
		*/
		__proto.gotBetHistory=function(_betHistoryObj){
			this.sendNotification("HIDE_Cmd");
			var historyArr=_betHistoryObj.order_list;
			if(historyArr.length==0){
				this.showAlert("没有下注记录.");
				var betHistoryMainVo=this.numberGamesUIModel.numberGamesVo.betHistoryVo.betHistoryMainVo;
				var page=Math.floor(betHistoryMainVo.currentIndex / 10);
				betHistoryMainVo.getPageBolArr[page]=false;
				return;
			}
			for(var i=0;i < historyArr.length;i++){
				var oneBetHistoryVo=new NumberGamesOneBetHistoryVo();
				if(historyArr[i].order_status=="等待开奖"){
					oneBetHistoryVo.winIndex=2;
				}
				else{
					oneBetHistoryVo.winIndex=historyArr[i].order_status=="已中奖" ? 1 :0;
				}
				oneBetHistoryVo.gameName=historyArr[i].game_value;
				oneBetHistoryVo.index=this.numberGamesUIModel.numberGamesVo.betHistoryVo.betHistoryMainVo.oneBetHistoryVoArr.length-1;
				oneBetHistoryVo.playType=historyArr[i].game_type_name;
				oneBetHistoryVo.betInfo=historyArr[i].bet_info;
				oneBetHistoryVo.betType=BaseStaticFuncs.format("{0}（{1}）",historyArr[i].bet_multiple,historyArr[i].bet_mode);
				oneBetHistoryVo.totalPrice=BaseStaticFunc.format("￥{0}元",historyArr[i].bet_balance);
				oneBetHistoryVo.number=historyArr[i].game_result ? historyArr[i].game_result :"未开奖";
				oneBetHistoryVo.lotteryTime=historyArr[i].game_cycle_value;
				oneBetHistoryVo.betId=historyArr[i].game_cycle_id;
				oneBetHistoryVo.betTime=String(historyArr[i].create_time).replace("<br>"," ");
				oneBetHistoryVo.rewards=historyArr[i].result_balance;
				this.numberGamesUIModel.numberGamesVo.betHistoryVo.betHistoryMainVo.oneBetHistoryVoArr.push(oneBetHistoryVo);
			}
			this.sendNotification("Display_Number_Games_Bet_History_Cmd");
		}

		/**
		*一分钟更新一次余额
		*
		*/
		__proto.oneMinutesUpdateBalance=function(){
			var url=GameUtil.getUserBalance(this.playerInfoModel.playerInfoVo.id,"1");
			console.log("onGetGameMoney url:",url);
			this.sendHttpRequest(url,"One_Minutes_Update_Balance_Result_Cmd","","json",null,true,GameUtil.headers);
		}

		/**
		*一分钟更新一次余额的结果
		*@param _data
		*
		*/
		__proto.oneMinutesUpdateBalanceResult=function(_data){
			var balance=_data["info"]["1"]["user_balance_display"];
			while(balance.indexOf(",")>-1){
				balance=balance.replace(",","");
			}
			this.playerInfoModel.playerInfoVo.user_balance=Number(balance);
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.balance=this.playerInfoModel.playerInfoVo.user_balance;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.status="Update_Balance_Status";
		}

		NumberGamesServerCommand.GET_NUMBER_GAMES_INFO_CMD="Get_Number_Games_Info_Cmd";
		NumberGamesServerCommand.GOT_NUMBER_GAMES_INFO_CMD="Got_Number_Games_Info_Cmd";
		NumberGamesServerCommand.GET_NUMBER_GAMES_BONUS_CMD="Get_Number_Games_Bonus_Cmd";
		NumberGamesServerCommand.GOT_NUMBER_GAMES_BONUS_CMD="Got_Number_Games_Bonus_Cmd";
		NumberGamesServerCommand.GOT_GAME_OPEN_OR_NOT_CMD="Got_Game_Open_Or_Not_Cmd";
		NumberGamesServerCommand.GET_NUMBER_GAMES_STATIC_PLAY_TYPE_CMD="Get_Number_Games_Static_Play_Type_Cmd";
		NumberGamesServerCommand.GOT_NUMBER_GAMES_STATIC_PLAY_TYPE_CMD="Got_Number_Games_Static_Play_Type_Cmd";
		NumberGamesServerCommand.GET_NUMBER_GAMES_PLAY_TYPE_CMD="Get_Number_Games_Play_Type_Cmd";
		NumberGamesServerCommand.GOT_NUMBER_GAMES_PLAY_TYPE_CMD="Got_Number_Games_Play_Type_Cmd";
		NumberGamesServerCommand.GET_NUMBER_GAMES_CURRENT_RESULT_CMD="Get_Number_Games_Current_Result_Cmd";
		NumberGamesServerCommand.GOT_NUMBER_GAMES_CURRENT_RESULT_CMD="Got_Number_Games_Current_Result_Cmd";
		NumberGamesServerCommand.GET_NUMBER_GAMES_HISTORY_CMD="Get_Number_Games_History_Cmd";
		NumberGamesServerCommand.GOT_NUMBER_GAMES_HISTORY_CMD="Got_Number_Games_History_Cmd";
		NumberGamesServerCommand.GOT_BET_MONEY_INFO_CMD="Got_Bet_Money_Info_Cmd";
		NumberGamesServerCommand.CONFIRM_NUMBER_GAMES_BET_CMD="Confirm_Number_Games_Bet_Cmd";
		NumberGamesServerCommand.CONFIRM_NUMBER_GAMES_BET_RESULT_CMD="Confirm_Number_Games_Bet_Result_Cmd";
		NumberGamesServerCommand.NUMBER_GAMES_BET_CMD="Number_Games_Bet_Cmd";
		NumberGamesServerCommand.NUMBER_GAMES_BET_RESULT_CMD="Number_Games_Bet_Result_Cmd";
		NumberGamesServerCommand.CLOSE_BET_WINDOW_CMD="CLOSE_BET_WINDOW_Cmd";
		NumberGamesServerCommand.GET_SHOPPING_CART_CMD="Get_Shopping_Cart_Cmd";
		NumberGamesServerCommand.GET_SHOPPING_CART_RESULT_CMD="Get_Shopping_Cart_Result_Cmd";
		NumberGamesServerCommand.ADD_SHOPPING_CART_CMD="Add_Shopping_Cart_Cmd";
		NumberGamesServerCommand.ADD_SHOPPING_CART_RESULT_CMD="Add_Shopping_Cart_Result_Cmd";
		NumberGamesServerCommand.DELETE_SHOPPING_CART_CMD="Delete_Shopping_Cart_Cmd";
		NumberGamesServerCommand.SHOPPING_CART_NUMBER_GAMES_CONFIRM_BET_CMD="Shopping_Cart_Number_Games_Confirm_Bet_Cmd";
		NumberGamesServerCommand.SHOPPING_CART_NUMBER_GAMES_CONFIRM_BET_RESULT_CMD="Shopping_Cart_Number_Games_Confirm_Bet_Result_Cmd";
		NumberGamesServerCommand.SHOPPING_CART_NUMBER_GAMES_BET_RESULT_CMD="Shopping_Cart_Number_Games_Bet_Result_Cmd";
		NumberGamesServerCommand.GET_NUMBER_GAMES_BET_HISTORY_CMD="Get_Number_Games_Bet_Result_Cmd";
		NumberGamesServerCommand.GOT_NUMBER_GAMES_BET_HISTORY_CMD="Got_Number_Games_Bet_Result_Cmd";
		NumberGamesServerCommand.LOTTERY_ADD_SEEK_ORDER_CONFIRM_CMD="LOTTERY_ADD_SEEK_ORDER_CONFIRM_CMD";
		NumberGamesServerCommand.LOTTERY_ADD_SEEK_ORDER_CONFIRM_RESULT_CMD="LOTTERY_ADD_SEEK_ORDER_CONFIRM_RESULT_CMD";
		NumberGamesServerCommand.LOTTERY_ADD_SEEK_ORDER_CONFIRM_ERROR_CMD="LOTTERY_ADD_SEEK_ORDER_CONFIRM_Error_CMD";
		NumberGamesServerCommand.LOTTERY_ADD_SEEK_PLAN_ORDER_CMD="LOTTERY_ADD_SEEK_PLAN_ORDER_CMD";
		NumberGamesServerCommand.LOTTERY_ADD_SEEK_PLAN_ORDER_RESULT_CMD="LOTTERY_ADD_SEEK_PLAN_ORDER_RESULT_CMD";
		NumberGamesServerCommand.ONE_MINUTES_UPDATE_BALANCE_CMD="One_Minutes_Update_Balance_Cmd";
		NumberGamesServerCommand.ONE_MINUTES_UPDATE_BALANCE_RESULT_CMD="One_Minutes_Update_Balance_Result_Cmd";
		NumberGamesServerCommand.NUMBER_GAMES_SERVER_ERROR_CMD="Number_Games_Server_Error_Cmd";
		__static(NumberGamesServerCommand,
		['MONEY_CONFIG',function(){return this.MONEY_CONFIG=[
			"2元",
			"2角",
			"2分",
			"2厘",
			"1元",
			"1角",
			"1分",
			"1厘"];}
		]);
		return NumberGamesServerCommand;
	})(NumberGamesBaseCommand)


	//class game.numberGame.c.NumberGamesShuZiPanCommand extends game.numberGame.c.NumberGamesBaseCommand
	var NumberGamesShuZiPanCommand=(function(_super){
		function NumberGamesShuZiPanCommand(){
			this.gameUIBuilderBridge=null;
			this.resManager=null;
			this.playerInfoModel=null;
			this.numberGamesConfigModel=null;
			NumberGamesShuZiPanCommand.__super.call(this);
		}

		__class(NumberGamesShuZiPanCommand,'game.numberGame.c.NumberGamesShuZiPanCommand',_super);
		var __proto=NumberGamesShuZiPanCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Change_Shu_Zi_Pan_Cmd":{
						this.changeShuZiPan(_notificationVo.data);
						break ;
					}
				case "Got_Shu_Zi_Pan_Info_Cmd":{
						this.gotShuZiPanInfo(_notificationVo.data);
						break ;
					}
				case "Got_Shu_Zi_Pan_Info_Error_Cmd":{
						this.showAlert(_notificationVo.data);
						break ;
					}
				case "Choose_Shu_Zi_Pan_Type_Cmd":{
						this.chooseType(_notificationVo.data);
						break ;
					}
				case "Clear_Shu_Zi_Pan_Bet_Cmd":{
						this.clearShuZiPanBet();
						break ;
					}
				case "Open_Shu_Zi_Pan_Bet_Window_Cmd":{
						this.openShuZiPanBetWindow();
						break ;
					}
				case "Close_Shu_Zi_Pan_Bet_Window_Cmd":{
						this.closeShuXiPanBetWindow();
						break ;
					}
				case "Change_Fan_Dian_Cmd":{
						this.changeFanDian();
						break ;
					}
				case "Shu_Zi_Pan_Bet_Cmd":{
						this.shuZiPanBet();
						break ;
					}
				case "Shu_Zi_Pan_Bet_Result_Cmd":{
						this.shuZiPanBetResult();
						break ;
					}
				}
		}

		/**
		*更改数字盘
		*
		*/
		__proto.changeShuZiPan=function(_shuZiPanIndex){
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.hideOrDisplayIndex=_shuZiPanIndex==1 ? 1 :0;
			this.numberGamesUIModel.numberGamesVo.gameMenuVo.status="Hide_Or_Display_Play_Type_Status";
			this.numberGamesUIModel.numberGamesVo.shuZiPanVo.betVo.fanDianMax=this.playerInfoModel.playerInfoVo.user_percent;
			if(_shuZiPanIndex==1){
				this.sendNotification("Clear_All_Bet_Cmd");
				var shuZiPanConfigVo=this.numberGamesConfigModel.shuZiPanConfigVo;
				if(shuZiPanConfigVo.shuZiPanOneGameConfigObj[this.numberGamesPlayerModel.currentGameInfoVo.id]){
					this.chooseType(0)
					return;
				}
				this.showLoading();
				var url=BaseStaticFuncs.format("{0}/LOTTERY_TWO_SIDE/{1}/{2}",this.resManager.serverUrl,this.playerInfoModel.playerInfoVo.user_id,this.numberGamesPlayerModel.currentGameInfoVo.id);
				this.sendHttpRequest(url,"Got_Shu_Zi_Pan_Info_Cmd","Got_Shu_Zi_Pan_Info_Error_Cmd","json",null,true,GameUtil.headers);
			}
		}

		/**
		*获取到数字盘的配置
		*@param _shuZiPanInfo
		*
		*/
		__proto.gotShuZiPanInfo=function(_shuZiPanInfo){
			this.numberGamesConfigModel.shuZiPanConfigVo.shuZiPanOneGameConfigObj[this.numberGamesPlayerModel.currentGameInfoVo.id]=_shuZiPanInfo;
			this.hideLoading();
			this.chooseType(0);
		}

		/**
		*选中一个数字盘类型
		*@param _type
		*
		*/
		__proto.chooseType=function(_type){
			var shuZiPanOneGameConfigObj=this.numberGamesConfigModel.shuZiPanConfigVo.shuZiPanOneGameConfigObj[this.numberGamesPlayerModel.currentGameInfoVo.id];
			var typeInfo=shuZiPanOneGameConfigObj["data"]["display_setting"][_type];
			var shuZiPanVo=this.numberGamesUIModel.numberGamesVo.shuZiPanVo;
			shuZiPanVo.currentMenuType=_type;
			shuZiPanVo.selectNumbersVo.oneTypeVoArr.length=0;
			shuZiPanVo.shuZiPanMenuVo.btnVoArr.length=0;
			var typeName;
			var menuArr=shuZiPanOneGameConfigObj["data"]["display_setting"];
			for(var i=0;i < menuArr.length;i++){
				var menuBtnVo=new OneShuZiPanMenuBtnVo();
				menuBtnVo.name=menuArr[i]["tab_name"];
				menuBtnVo.type=i;
				if(i==_type){
					menuBtnVo.chooseBol=true;
					typeName=menuBtnVo.name;
				}
				shuZiPanVo.shuZiPanMenuVo.btnVoArr.push(menuBtnVo);
			}
			for(i=0;i < typeInfo["tabs"].length;i++){
				var typeInfoObj=typeInfo["tabs"][i];
				var oneTypeVo=new ShuZiPanOneTypeVo();
				oneTypeVo.title=typeInfoObj["title"];
				oneTypeVo.index=i;
				var oneNumberInfoArr=typeInfoObj["game_types"];
				for(var iii=0;iii < oneNumberInfoArr.length;iii++){
					if(oneNumberInfoArr[iii]["is_active"] !="1"){
						continue ;
					};
					var oneNumberVo=new ShuZiPanOneNumberVo();
					oneNumberVo.gameName=this.numberGamesPlayerModel.currentGameInfoVo.name;
					oneNumberVo.typeName=oneTypeVo.title;
					oneNumberVo.name=oneNumberInfoArr[iii]["title"];
					oneNumberVo.betInfo=oneNumberInfoArr[iii]["default_bet_format"];
					oneNumberVo.game_type_id=oneNumberInfoArr[iii]["game_type"];
					if(shuZiPanVo.betVo.fanDianIndex==0){
						oneNumberVo.value=Number(oneNumberInfoArr[iii]["bonus"]["no_percent_bonus"] / 2).toString();
					}
					else{
						oneNumberVo.value=Number(oneNumberInfoArr[iii]["bonus"]["percent_bonus"] / 2).toString();
					};
					var valueArr=oneNumberVo.value.split(".");
					if(valueArr[1]){
						if(valueArr[1].length <=3){
							oneNumberVo.value=valueArr[0]+"."+valueArr[1];
						}
						else{
							oneNumberVo.value=valueArr[0]+"."+valueArr[1].substr(0,3);
						}
						while(oneNumberVo.value.substr(oneNumberVo.value.length-1,1)=="0"){
							oneNumberVo.value=oneNumberVo.value.substr(0,oneNumberVo.value.length-1);
							if(oneNumberVo.value.indexOf(".")==oneNumberVo.value.length-1){
								oneNumberVo.value=oneNumberVo.value.substr(0,oneNumberVo.value.length-1);
								break ;
							}
						}
					}
					oneTypeVo.oneNumberVoArr.push(oneNumberVo);
					}{
					oneTypeVo.type=NumberGamesShuZiPanCommand.typeObj[this.numberGamesPlayerModel.currentGameInfoVo.baseGame][oneTypeVo.title];
					if(!oneTypeVo.type){
						oneTypeVo.type=1;
					}
				}
				if(oneTypeVo.oneNumberVoArr.length > 0)
					shuZiPanVo.selectNumbersVo.oneTypeVoArr.push(oneTypeVo);
			}
			shuZiPanVo.shuZiPanMenuVo.status="Update_Status";
			shuZiPanVo.selectNumbersVo.status="Update_Status";
		}

		/**
		*清理数字盘下注
		*
		*/
		__proto.clearShuZiPanBet=function(){
			var shuZiPanVo=this.numberGamesUIModel.numberGamesVo.shuZiPanVo;
			shuZiPanVo.selectNumbersVo.oneTypeVoArr
			for(var i=0;i < shuZiPanVo.selectNumbersVo.oneTypeVoArr.length;i++){
				for(var ii=0;ii < shuZiPanVo.selectNumbersVo.oneTypeVoArr[i].oneNumberVoArr.length;ii++){
					var oneNumberVo=shuZiPanVo.selectNumbersVo.oneTypeVoArr[i].oneNumberVoArr[ii];
					oneNumberVo.chooseIndex=0;
				}
			}
			shuZiPanVo.selectNumbersVo.status="Update_Status";
		}

		/**
		*打开数字盘的窗口
		*
		*/
		__proto.openShuZiPanBetWindow=function(){
			var shuZiPanVo=this.numberGamesUIModel.numberGamesVo.shuZiPanVo;
			var betMainVo=shuZiPanVo.betWindowVo.betMainVo;
			betMainVo.oneBetVoArr.length=0;
			for(var i=0;i < shuZiPanVo.selectNumbersVo.oneTypeVoArr.length;i++){
				for(var ii=0;ii < shuZiPanVo.selectNumbersVo.oneTypeVoArr[i].oneNumberVoArr.length;ii++){
					var oneNumberVo=shuZiPanVo.selectNumbersVo.oneTypeVoArr[i].oneNumberVoArr[ii];
					if(oneNumberVo.chooseIndex==1){
						var oneBetVo=new ShuZiPanBetWindowOneBetVo();
						oneBetVo.gameName=oneNumberVo.gameName;
						oneBetVo.type=oneNumberVo.typeName;
						oneBetVo.number=oneNumberVo.name;
						oneBetVo.money=shuZiPanVo.betVo.betMoney;
						betMainVo.oneBetVoArr.push(oneBetVo);
					}
				}
			}
			if(betMainVo.oneBetVoArr.length==0){
				this.showAlert("还未选择号码");
				return;
			}
			this.sendNotification("Hide_Iframe_Cmd");
			betMainVo.totalPrice=betMainVo.oneBetVoArr.length *shuZiPanVo.betVo.betMoney;
			this.gameUIBuilderBridge.openWindow("Lottery",ShuZiPanBetWindow);
			betMainVo.status="Update_Status";
		}

		/**
		*关闭数字盘窗口
		*
		*/
		__proto.closeShuXiPanBetWindow=function(){
			this.sendNotification("Display_Iframe_Cmd");
			this.numberGamesUIModel.numberGamesVo.shuZiPanVo.betWindowVo.status="Remove_Status";
		}

		/**
		*更改返点的值
		*
		*/
		__proto.changeFanDian=function(){
			this.chooseType(this.numberGamesUIModel.numberGamesVo.shuZiPanVo.currentMenuType);
		}

		/**
		*数字盘下注
		*
		*/
		__proto.shuZiPanBet=function(){
			this.closeShuXiPanBetWindow();
			var shuZiPanVo=this.numberGamesUIModel.numberGamesVo.shuZiPanVo;
			var obj=new Object();
			obj["game_id"]=this.numberGamesPlayerModel.currentGameInfoVo.id;
			obj["bet_mode"]=4;
			obj["bet_percent_type"]=Number(shuZiPanVo.betVo.chooseFanDian)==0 ? 0 :1;
			obj["game_cycle_id"]=this.numberGamesUIModel.numberGamesVo.resultVo.gameCycleId;
			var betArr=[];
			obj["bet_list"]=betArr;
			for(var i=0;i < shuZiPanVo.selectNumbersVo.oneTypeVoArr.length;i++){
				for(var ii=0;ii < shuZiPanVo.selectNumbersVo.oneTypeVoArr[i].oneNumberVoArr.length;ii++){
					var oneNumberVo=shuZiPanVo.selectNumbersVo.oneTypeVoArr[i].oneNumberVoArr[ii];
					if(oneNumberVo.chooseIndex==1){
						var typeBetInfo=new Object();
						typeBetInfo["game_type_id"]=oneNumberVo.game_type_id;
						typeBetInfo["bet_multiple"]=shuZiPanVo.betVo.betMoney;
						typeBetInfo["bet_info"]=oneNumberVo.betInfo;
						betArr.push(typeBetInfo);
					}
				}
			};
			var url=BaseStaticFuncs.format("{0}/LOTTERY_ADD_MULTI_ORDERS/",this.resManager.serverUrl);
			this.sendHttpRequest(url,"Shu_Zi_Pan_Bet_Result_Cmd","","json",obj,false,GameUtil.headers);
		}

		__proto.shuZiPanBetResult=function(){
			var shuZiPanVo=this.numberGamesUIModel.numberGamesVo.shuZiPanVo;
			for(var i=0;i < shuZiPanVo.selectNumbersVo.oneTypeVoArr.length;i++){
				for(var ii=0;ii < shuZiPanVo.selectNumbersVo.oneTypeVoArr[i].oneNumberVoArr.length;ii++){
					var oneNumberVo=shuZiPanVo.selectNumbersVo.oneTypeVoArr[i].oneNumberVoArr[ii];
					if(oneNumberVo.chooseIndex==1)
						this.playerInfoModel.playerInfoVo.user_balance-=shuZiPanVo.betVo.betMoney;
				}
			}
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.balance=this.playerInfoModel.playerInfoVo.user_balance;
			this.numberGamesUIModel.numberGamesVo.selectNumberVo.status="Update_Balance_Status";
			this.showAlert("下注成功");
			DataMgr.get().addRecentGameList(this.numberGamesPlayerModel.currentGameInfoVo.id.toString());
			this.clearShuZiPanBet();
		}

		NumberGamesShuZiPanCommand.CHANGE_SHU_ZI_PAN_CMD="Change_Shu_Zi_Pan_Cmd";
		NumberGamesShuZiPanCommand.GOT_SHU_ZI_PAN_INFO_CMD="Got_Shu_Zi_Pan_Info_Cmd";
		NumberGamesShuZiPanCommand.GOT_SHU_ZI_PAN_INFO_ERROR_CMD="Got_Shu_Zi_Pan_Info_Error_Cmd";
		NumberGamesShuZiPanCommand.CHOOSE_SHU_ZI_PAN_TYPE_CMD="Choose_Shu_Zi_Pan_Type_Cmd";
		NumberGamesShuZiPanCommand.CLEAR_SHU_ZI_PAN_BET_CMD="Clear_Shu_Zi_Pan_Bet_Cmd";
		NumberGamesShuZiPanCommand.OPEN_SHU_ZI_PAN_BET_WINDOW_CMD="Open_Shu_Zi_Pan_Bet_Window_Cmd";
		NumberGamesShuZiPanCommand.CLOSE_SHU_ZI_PAN_BET_WINDOW_CMD="Close_Shu_Zi_Pan_Bet_Window_Cmd";
		NumberGamesShuZiPanCommand.CHANGE_FAN_DIAN_CMD="Change_Fan_Dian_Cmd";
		NumberGamesShuZiPanCommand.SHU_ZI_PAN_BET_CMD="Shu_Zi_Pan_Bet_Cmd";
		NumberGamesShuZiPanCommand.SHU_ZI_PAN_BET_RESULT_CMD="Shu_Zi_Pan_Bet_Result_Cmd";
		__static(NumberGamesShuZiPanCommand,
		['typeObj',function(){return this.typeObj={
				"cqssc":{
					"第一球":1,
					"第二球":1,
					"第三球":1,
					"第四球":1,
					"第五球":1,
					"总和-龙虎和":2,
					"前三":3,
					"中三":3,
					"后三":3,
					"万千 第一球 VS 第二球":5,
					"万百 第一球 VS 第三球":5,
					"万十 第一球 VS 第四球":5,
					"万个 第一球 VS 第五球":5,
					"千百 第二球 VS 第三球":5,
					"千十 第二球 VS 第四球":5,
					"千个 第二球 VS 第五球":5,
					"百十 第三球 VS 第四球":5,
					"百个 第三球 VS 第五球":5,
					"十个 第四球 VS 第五球":5
				},
				"gd11x5":{
					"总和":2,
					"第一球":2,
					"第二球":2,
					"第三球":2,
					"第四球":2,
					"第五球":2,
					"任一中一":2
				},
				"jsk3":{
					"三军、大小":6,
					"围骰、全骰":7,
					"点数":1,
					"长牌":1,
					"短牌":2
				},
				"bjkl8":{
					"总和":2,
					"上下盘":1,
					"奇偶盘":1,
					"正码":1
				},
				"fc3d":{
					"总和":3,
					"不定位":2,
					"百位":1,
					"十位":1,
					"个位":1
				},
				"bjpk10":{
					"冠亚合":1,
					"冠军":2,
					"亚军":2,
					"第三名":2,
					"第四名":2,
					"第五名":2,
					"第六名":2,
					"第七名":2,
					"第八名":2,
					"第九名":2,
					"第十名":2
				},
				"hk6":{
					"特码":1,
					"特码大小单双":2,
					"特码和值":2,
					"特码生肖":1,
					"特码波色":4,
					"半波":1,
					"半半波":1,
					"正码":1
				}
		};}

		]);
		return NumberGamesShuZiPanCommand;
	})(NumberGamesBaseCommand)


	//class modules.hall.c.EventsCommand extends game.numberGame.c.NumberGamesBaseCommand
	var EventsCommand=(function(_super){
		function EventsCommand(){
			this.playerInfoModel=null;
			EventsCommand.__super.call(this);
		}

		__class(EventsCommand,'modules.hall.c.EventsCommand',_super);
		var __proto=EventsCommand.prototype;
		__proto.execute=function(_notificationVo){
			switch(_notificationVo.cmd){
				case "Init_Events_Cmd":{
						this.initEvents();
						break ;
					}
				case "REMOVE_EVENTS_Cmd":{
						this.removeEvents();
						break ;
					}
				}
		}

		__proto.initEvents=function(){
			this.commandMap.mapAll(HallEventCommand);
			if(DataMgr.get().loginState()==DataMgr.LoginState_TryPlay){
				return;
			}
			this.injector.map(EventsUIModel);
			this.commandMap.mapAll(NewPlayerEventsCommand);
			this.commandMap.mapAll(DailyEventCommand);
			this.sendNotification("Init_Daily_Event_Cmd");
			this.sendNotification("Init_New_Player_Events_Cmd");
		}

		__proto.removeEvents=function(){
			this.injector.off(EventsUIModel);
			this.commandMap.offAll(NewPlayerEventsCommand);
			this.commandMap.offAll(DailyEventCommand);
			this.commandMap.offAll(HallEventCommand);
		}

		EventsCommand.INIT_EVENTS_CMD="Init_Events_Cmd";
		EventsCommand.REMOVE_EVENTS_CMD="REMOVE_EVENTS_Cmd";
		return EventsCommand;
	})(NumberGamesBaseCommand)


	//class game.numberGame.v.number.hk6h.NumberGamesSelectSXType extends game.numberGame.v.number.hk6h.Hk6hSelectNumberType
	var NumberGamesSelectSXType=(function(_super){
		function NumberGamesSelectSXType(_packageName,_mainView,_windowBol,_initWidth,_initHeight){
			(_windowBol===void 0)&& (_windowBol=false);
			(_initWidth===void 0)&& (_initWidth=0);
			(_initHeight===void 0)&& (_initHeight=0);
			NumberGamesSelectSXType.__super.call(this,_packageName,_mainView,_windowBol,_initWidth,_initHeight);
		}

		__class(NumberGamesSelectSXType,'game.numberGame.v.number.hk6h.NumberGamesSelectSXType',_super);
		return NumberGamesSelectSXType;
	})(Hk6hSelectNumberType)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType1 extends game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType
	var ShuZiPanOneType1=(function(_super){
		function ShuZiPanOneType1(){
			ShuZiPanOneType1.__super.call(this);
		}

		__class(ShuZiPanOneType1,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType1',_super);
		return ShuZiPanOneType1;
	})(BaseShuZiPanOneType)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType2 extends game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType
	var ShuZiPanOneType2=(function(_super){
		function ShuZiPanOneType2(){
			ShuZiPanOneType2.__super.call(this);
		}

		__class(ShuZiPanOneType2,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType2',_super);
		return ShuZiPanOneType2;
	})(BaseShuZiPanOneType)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType3 extends game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType
	var ShuZiPanOneType3=(function(_super){
		function ShuZiPanOneType3(){
			ShuZiPanOneType3.__super.call(this);
		}

		__class(ShuZiPanOneType3,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType3',_super);
		return ShuZiPanOneType3;
	})(BaseShuZiPanOneType)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType4 extends game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType
	var ShuZiPanOneType4=(function(_super){
		function ShuZiPanOneType4(){
			ShuZiPanOneType4.__super.call(this);
		}

		__class(ShuZiPanOneType4,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType4',_super);
		return ShuZiPanOneType4;
	})(BaseShuZiPanOneType)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType5 extends game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType
	var ShuZiPanOneType5=(function(_super){
		function ShuZiPanOneType5(){
			this.typeName2Txt=null;
			this.typeName3Txt=null;
			this.bgController=null;
			ShuZiPanOneType5.__super.call(this);
		}

		__class(ShuZiPanOneType5,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType5',_super);
		var __proto=ShuZiPanOneType5.prototype;
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this.typeName2Txt=this.getChild("typeName2Txt");
			this.typeName3Txt=this.getChild("typeName3Txt");
			this.bgController=this.getController("bgController");
		}

		__proto.update=function(_oneTypeVo){
			_super.prototype.update.call(this,_oneTypeVo);
			var titleArr=_oneTypeVo.title.split(" ");
			this.typeNameTxt.text=titleArr[0];
			this.typeName2Txt.text=titleArr[1];
			this.typeName3Txt.text=titleArr[3];
			this.bgController.selectedIndex=_oneTypeVo.index % 2;
		}

		return ShuZiPanOneType5;
	})(BaseShuZiPanOneType)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType6 extends game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType
	var ShuZiPanOneType6=(function(_super){
		function ShuZiPanOneType6(){
			ShuZiPanOneType6.__super.call(this);
		}

		__class(ShuZiPanOneType6,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType6',_super);
		return ShuZiPanOneType6;
	})(BaseShuZiPanOneType)


	//class game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType7 extends game.numberGame.v.shuZiPan.selectNumbers.BaseShuZiPanOneType
	var ShuZiPanOneType7=(function(_super){
		function ShuZiPanOneType7(){
			ShuZiPanOneType7.__super.call(this);
		}

		__class(ShuZiPanOneType7,'game.numberGame.v.shuZiPan.selectNumbers.ShuZiPanOneType7',_super);
		return ShuZiPanOneType7;
	})(BaseShuZiPanOneType)


	//class modules.hall.v.component.CommonGrid41Component extends modules.hall.v.component.CommonGrid4Component
	var CommonGrid41Component=(function(_super){
		function CommonGrid41Component(){
			this.txtTitle2=null;
			CommonGrid41Component.__super.call(this);
		}

		__class(CommonGrid41Component,'modules.hall.v.component.CommonGrid41Component',_super);
		var __proto=CommonGrid41Component.prototype;
		__proto.constructFromXML=function(xml){
			_super.prototype.constructFromXML.call(this,xml);
			this.txtTitle2=this.getChild("txtTitle2");
		}

		__proto.setTitle2=function(t){
			this.txtTitle2.text=t;
		}

		return CommonGrid41Component;
	})(CommonGrid4Component)


	//class laya.ui.TextInput extends laya.ui.Label
	var TextInput=(function(_super){
		function TextInput(text){
			this._bg=null;
			this._skin=null;
			TextInput.__super.call(this);
			(text===void 0)&& (text="");
			this.text=text;
			this.skin=this.skin;
		}

		__class(TextInput,'laya.ui.TextInput',_super);
		var __proto=TextInput.prototype;
		/**@inheritDoc */
		__proto.preinitialize=function(){
			this.mouseEnabled=true;
		}

		/**@inheritDoc */
		__proto.destroy=function(destroyChild){
			(destroyChild===void 0)&& (destroyChild=true);
			_super.prototype.destroy.call(this,destroyChild);
			this._bg && this._bg.destroy();
			this._bg=null;
		}

		/**@inheritDoc */
		__proto.createChildren=function(){
			this.addChild(this._tf=new Input());
			this._tf.padding=Styles.inputLabelPadding;
			this._tf.on("input",this,this._onInput);
			this._tf.on("enter",this,this._onEnter);
			this._tf.on("blur",this,this._onBlur);
			this._tf.on("focus",this,this._onFocus);
		}

		/**
		*@private
		*/
		__proto._onFocus=function(){
			this.event("focus",this);
		}

		/**
		*@private
		*/
		__proto._onBlur=function(){
			this.event("blur",this);
		}

		/**
		*@private
		*/
		__proto._onInput=function(){
			this.event("input",this);
		}

		/**
		*@private
		*/
		__proto._onEnter=function(){
			this.event("enter",this);
		}

		/**@inheritDoc */
		__proto.initialize=function(){
			this.width=128;
			this.height=22;
		}

		/**选中输入框内的文本。*/
		__proto.select=function(){
			(this._tf).select();
		}

		__proto.setSelection=function(startIndex,endIndex){
			(this._tf).setSelection(startIndex,endIndex);
		}

		/**
		*当前文本内容字符串。
		*@see laya.display.Text.text
		*/
		__getset(0,__proto,'text',_super.prototype._$get_text,function(value){
			if (this._tf.text !=value){
				value=value+"";
				this._tf.text=value;
				this.event("change");
			}
		});

		/**
		*表示此对象包含的文本背景 <code>AutoBitmap</code> 组件实例。
		*/
		__getset(0,__proto,'bg',function(){
			return this._bg;
			},function(value){
			this.graphics=this._bg=value;
		});

		/**
		*设置原生input输入框的y坐标偏移。
		*/
		__getset(0,__proto,'inputElementYAdjuster',function(){
			return (this._tf).inputElementYAdjuster;
			},function(value){
			(this._tf).inputElementYAdjuster=value;
		});

		/**
		*<p>指示当前是否是文本域。</p>
		*值为true表示当前是文本域，否则不是文本域。
		*/
		__getset(0,__proto,'multiline',function(){
			return (this._tf).multiline;
			},function(value){
			(this._tf).multiline=value;
		});

		/**
		*@copy laya.ui.Image#skin
		*/
		__getset(0,__proto,'skin',function(){
			return this._skin;
			},function(value){
			if (this._skin !=value){
				this._skin=value;
				this._bg || (this.graphics=this._bg=new AutoBitmap());
				this._bg.source=Loader.getRes(this._skin);
				this._width && (this._bg.width=this._width);
				this._height && (this._bg.height=this._height);
			}
		});

		/**
		*<p>当前实例的背景图（ <code>AutoBitmap</code> ）实例的有效缩放网格数据。</p>
		*<p>数据格式："上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)"，以逗号分隔。
		*<ul><li>例如："4,4,4,4,1"</li></ul></p>
		*@see laya.ui.AutoBitmap.sizeGrid
		*/
		__getset(0,__proto,'sizeGrid',function(){
			return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(","):null;
			},function(value){
			this._bg || (this.graphics=this._bg=new AutoBitmap());
			this._bg.sizeGrid=UIUtils.fillArray(Styles.defaultSizeGrid,value,Number);
		});

		/**
		*设置原生input输入框的x坐标偏移。
		*/
		__getset(0,__proto,'inputElementXAdjuster',function(){
			return (this._tf).inputElementXAdjuster;
			},function(value){
			(this._tf).inputElementXAdjuster=value;
		});

		/**@inheritDoc */
		__getset(0,__proto,'width',_super.prototype._$get_width,function(value){
			_super.prototype._$set_width.call(this,value);
			this._bg && (this._bg.width=value);
		});

		/**@inheritDoc */
		__getset(0,__proto,'height',_super.prototype._$get_height,function(value){
			_super.prototype._$set_height.call(this,value);
			this._bg && (this._bg.height=value);
		});

		/**
		*设置可编辑状态。
		*/
		__getset(0,__proto,'editable',function(){
			return (this._tf).editable;
			},function(value){
			(this._tf).editable=value;
		});

		/**限制输入的字符。*/
		__getset(0,__proto,'restrict',function(){
			return (this._tf).restrict;
			},function(pattern){
			(this._tf).restrict=pattern;
		});

		/**
		*@copy laya.display.Input#prompt
		*/
		__getset(0,__proto,'prompt',function(){
			return (this._tf).prompt;
			},function(value){
			(this._tf).prompt=value;
		});

		/**
		*@copy laya.display.Input#promptColor
		*/
		__getset(0,__proto,'promptColor',function(){
			return (this._tf).promptColor;
			},function(value){
			(this._tf).promptColor=value;
		});

		/**
		*@copy laya.display.Input#maxChars
		*/
		__getset(0,__proto,'maxChars',function(){
			return (this._tf).maxChars;
			},function(value){
			(this._tf).maxChars=value;
		});

		/**
		*@copy laya.display.Input#focus
		*/
		__getset(0,__proto,'focus',function(){
			return (this._tf).focus;
			},function(value){
			(this._tf).focus=value;
		});

		/**
		*@copy laya.display.Input#type
		*/
		__getset(0,__proto,'type',function(){
			return (this._tf).type;
			},function(value){
			(this._tf).type=value;
		});

		/**
		*@copy laya.display.Input#asPassword
		*/
		__getset(0,__proto,'asPassword',function(){
			return (this._tf).asPassword;
			},function(value){
			(this._tf).asPassword=value;
		});

		return TextInput;
	})(Label)


	//class laya.webgl.resource.WebGLImage extends laya.resource.HTMLImage
	var WebGLImage=(function(_super){
		function WebGLImage(data,def,format,mipmap){
			this._format=0;
			this._mipmap=false;
			this._allowMerageInAtlas=false;
			this._enableMerageInAtlas=false;
			this.repeat=false;
			this._image=null;
			this.minFifter=0;
			this.magFifter=0;
			(format===void 0)&& (format=0x1908);
			(mipmap===void 0)&& (mipmap=true);
			WebGLImage.__super.call(this,data,def);
			this._format=format;
			this._mipmap=mipmap;
			this.repeat=false;
			this.minFifter=-1;
			this.magFifter=-1;
			if ((typeof data=='string')){
				this._url=data;
				this._src=data;
				this._image=new Browser.window.Image();
				if (def){
					def.onload && (this.onload=def.onload);
					def.onerror && (this.onerror=def.onerror);
					def.onCreate && def.onCreate(this);
				}
				this._image.crossOrigin=(data && (data.indexOf("data:")==0))? null :"";
				(data)&& (this._image.src=data);
				}else if ((data instanceof ArrayBuffer)){
				this._src=def;
				this._url=this._src;
				var readData=new Byte(data);
				var magicNumber=readData.readUTFBytes(4);
				var version=readData.readUTFBytes(2);
				var dataType=readData.getInt16();
				readData.endian="bigEndian";
				this._w=readData.getInt16();
				this._h=readData.getInt16();
				var originalWidth=readData.getInt16();
				var originalHeight=readData.getInt16();
				this._image=new Uint8Array(data,readData.pos);
				this._format=WebGL.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL;
				(AtlasResourceManager.enabled)&& (this._w < AtlasResourceManager.atlasLimitWidth && this._h < AtlasResourceManager.atlasLimitHeight)? this._allowMerageInAtlas=true :this._allowMerageInAtlas=false;
				}else {
				this._src=def;
				this._url=this._src;
				this._image=data["source"] || data;
				this.onresize();
			}
			this._$5__enableMerageInAtlas=true;
		}

		__class(WebGLImage,'laya.webgl.resource.WebGLImage',_super);
		var __proto=WebGLImage.prototype;
		Laya.imps(__proto,{"laya.webgl.resource.IMergeAtlasBitmap":true})
		__proto._init_=function(src,def){}
		__proto._createWebGlTexture=function(){
			if (!this._image){
				throw "create GLTextur err:no data:"+this._image;
			};
			var gl=WebGL.mainContext;
			var glTex=this._source=gl.createTexture();
			var preTarget=WebGLContext.curBindTexTarget;
			var preTexture=WebGLContext.curBindTexValue;
			WebGLContext.bindTexture(gl,0x0DE1,glTex);
			if (Render.isConchWebGL){
				switch (this._format){
					case 0x1908:
						gl.texImage2DEx(true,0x0DE1,0,this._format,0x1908,0x1401,this._image);
						break ;
					case WebGL.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
						gl.compressedTexImage2D(0x0DE1,0,this._format,this._w,this._h,0,this._image);
						break ;
					}
			}
			else {
				gl.pixelStorei(0x9241,true);
				switch (this._format){
					case 0x1908:
						gl.texImage2D(0x0DE1,0,this._format,0x1908,0x1401,this._image);
						break ;
					case WebGL.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
						gl.compressedTexImage2D(0x0DE1,0,this._format,this._w,this._h,0,this._image);
						break ;
					}
				gl.pixelStorei(0x9241,false);
			};
			var minFifter=this.minFifter;
			var magFifter=this.magFifter;
			var repeat=this.repeat ? 0x2901 :0x812F;
			var isPot=Arith.isPOT(this._w,this._h);
			if (isPot){
				if (this.mipmap)
					(minFifter!==-1)|| (minFifter=0x2703);
				else
				(minFifter!==-1)|| (minFifter=0x2601);
				(magFifter!==-1)|| (magFifter=0x2601);
				gl.texParameteri(0x0DE1,0x2801,minFifter);
				gl.texParameteri(0x0DE1,0x2800,magFifter);
				gl.texParameteri(0x0DE1,0x2802,repeat);
				gl.texParameteri(0x0DE1,0x2803,repeat);
				this.mipmap && gl.generateMipmap(0x0DE1);
				}else {
				(minFifter!==-1)|| (minFifter=0x2601);
				(magFifter!==-1)|| (magFifter=0x2601);
				gl.texParameteri(0x0DE1,0x2801,minFifter);
				gl.texParameteri(0x0DE1,0x2800,magFifter);
				gl.texParameteri(0x0DE1,0x2802,0x812F);
				gl.texParameteri(0x0DE1,0x2803,0x812F);
			}
			(preTarget && preTexture)&& (WebGLContext.bindTexture(gl,preTarget,preTexture));
			this._image.onload=null;
			this._image=null;
			if (isPot && this.mipmap)
				this.memorySize=this._w *this._h *4 *(1+1 / 3);
			else
			this.memorySize=this._w *this._h *4;
			this._recreateLock=false;
		}

		/***重新创建资源，如果异步创建中被强制释放再创建，则需等待释放完成后再重新加载创建。*/
		__proto.recreateResource=function(){
			var _$this=this;
			if (this._src==null || this._src==="")
				return;
			this._needReleaseAgain=false;
			if (!this._image){
				this._recreateLock=true;
				var _this=this;
				this._image=new Browser.window.Image();
				this._image.crossOrigin=this._src.indexOf("data:")==0 ? null :"";
				this._image.onload=function (){
					if (_this._needReleaseAgain){
						_this._needReleaseAgain=false;
						_this._image.onload=null;
						_this._image=null;
						return;
					}
					(!(_this._allowMerageInAtlas && _this._enableMerageInAtlas))? (_this._createWebGlTexture()):(_$this.memorySize=0,_$this._recreateLock=false);
					_this.completeCreate();
				};
				this._image.src=this._src;
				}else {
				if (this._recreateLock){
					return;
				}
				(!(this._allowMerageInAtlas && this._$5__enableMerageInAtlas))? (this._createWebGlTexture()):(this.memorySize=0,this._recreateLock=false);
				this.completeCreate();
			}
		}

		/***销毁资源*/
		__proto.disposeResource=function(){
			if (this._recreateLock){
				this._needReleaseAgain=true;
			}
			if (this._source){
				WebGL.mainContext.deleteTexture(this._source);
				this._source=null;
				this._image=null;
				this.memorySize=0;
			}
		}

		/***调整尺寸*/
		__proto.onresize=function(){
			this._w=this._image.width;
			this._h=this._image.height;
			(AtlasResourceManager.enabled)&& (this._w < AtlasResourceManager.atlasLimitWidth && this._h < AtlasResourceManager.atlasLimitHeight)? this._allowMerageInAtlas=true :this._allowMerageInAtlas=false;
		}

		__proto.clearAtlasSource=function(){
			this._image=null;
		}

		/**
		*获取纹理格式。
		*/
		__getset(0,__proto,'format',function(){
			return this._format;
		});

		/**
		*是否创建私有Source,通常禁止修改
		*@param value 是否创建
		*/
		/**
		*是否创建私有Source
		*@return 是否创建
		*/
		__getset(0,__proto,'enableMerageInAtlas',function(){
			return this._$5__enableMerageInAtlas;
			},function(value){
			this._$5__enableMerageInAtlas=value;
		});

		/**
		*获取是否具有mipmap。
		*/
		__getset(0,__proto,'mipmap',function(){
			return this._mipmap;
		});

		/**
		*是否创建私有Source
		*@return 是否创建
		*/
		__getset(0,__proto,'allowMerageInAtlas',function(){
			return this._allowMerageInAtlas;
		});

		__getset(0,__proto,'atlasSource',function(){
			return this._image;
		});

		/***
		*设置onload函数
		*@param value onload函数
		*/
		__getset(0,__proto,'onload',null,function(value){
			var _$this=this;
			this._onload=value;
			this._image && (this._image.onload=this._onload !=null ? (function(){
				_$this.onresize();
				_$this._onload();
			}):null);
		});

		/***
		*设置onerror函数
		*@param value onerror函数
		*/
		__getset(0,__proto,'onerror',null,function(value){
			var _$this=this;
			this._onerror=value;
			this._image && (this._image.onerror=this._onerror !=null ? (function(){
				_$this._onerror()
			}):null);
		});

		return WebGLImage;
	})(HTMLImage)


	Laya.__init([GearColor,DrawText,UIPackage,LocalStorage,RelationItem,GearLook,LoaderManager,Browser,Transition,Timer,GList,ShaderCompile,WebGLContext2D,EventDispatcher,Render,AtlasGrid,GBasicTextField,ScrollPane,GearAnimation,GearSize]);
	new Main();

})(window,document,Laya);
